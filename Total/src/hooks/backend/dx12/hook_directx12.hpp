#pragma once

#include <d3d12.h>
#include <dxgi1_4.h>

#pragma comment(lib, "d3d12.lib")
#pragma comment(lib, "dxgi.lib")

namespace DX12 {
    inline D3D12_CPU_DESCRIPTOR_HANDLE  KEY_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  KEY_GPU;
    inline ID3D12Resource*              KEY_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  BOTTLE_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  BOTTLE_GPU;
    inline ID3D12Resource*              BOTTLE_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  BRICK_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  BRICK_GPU;
    inline ID3D12Resource*              BRICK_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  ANTIDOTE_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  ANTIDOTE_GPU;
    inline ID3D12Resource*              ANTIDOTE_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  SKILLCHARGE_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  SKILLCHARGE_GPU;
    inline ID3D12Resource*              SKILLCHARGE_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  BATTERY_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  BATTERY_GPU;
    inline ID3D12Resource*              BATTERY_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  SMALL_BATTERY_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  SMALL_BATTERY_GPU;
    inline ID3D12Resource*              SMALL_BATTERY_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  SMALL_HEAL_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  SMALL_HEAL_GPU;
    inline ID3D12Resource*              SMALL_HEAL_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  HEAL_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  HEAL_GPU;
    inline ID3D12Resource*              HEAL_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  BANDAGE_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  BANDAGE_GPU;
    inline ID3D12Resource*              BANDAGE_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  HEART_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  HEART_GPU;
    inline ID3D12Resource*              HEART_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  ADRENALINE_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  ADRENALINE_GPU;
    inline ID3D12Resource*              ADRENALINE_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  TICKET_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  TICKET_GPU;
    inline ID3D12Resource*              TICKET_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  CANISTER_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  CANISTER_GPU;
    inline ID3D12Resource*              CANISTER_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  ACID_BOTTLE_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  ACID_BOTTLE_GPU;
    inline ID3D12Resource*              ACID_BOTTLE_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  ACID_BUCKET_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  ACID_BUCKET_GPU;
    inline ID3D12Resource*              ACID_BUCKET_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  DIAPO_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  DIAPO_GPU;
    inline ID3D12Resource*              DIAPO_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  KIDS_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  KIDS_GPU;
    inline ID3D12Resource*              KIDS_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  MATERIAL_OBJECT_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  MATERIAL_OBJECT_GPU;
    inline ID3D12Resource*              MATERIAL_OBJECT_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  ENEMY_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  ENEMY_GPU;
    inline ID3D12Resource*              ENEMY_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  VALVE_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  VALVE_GPU;
    inline ID3D12Resource*              VALVE_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  DOCUMENT_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  DOCUMENT_GPU;
    inline ID3D12Resource*              DOCUMENT_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  EVIDENCE_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  EVIDENCE_GPU;
    inline ID3D12Resource*              EVIDENCE_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  OBJECTIVE_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  OBJECTIVE_GPU;
    inline ID3D12Resource*              OBJECTIVE_TEX = NULL;

    inline D3D12_CPU_DESCRIPTOR_HANDLE  LOCKPICK_CPU;
    inline D3D12_GPU_DESCRIPTOR_HANDLE  LOCKPICK_GPU;
    inline ID3D12Resource*              LOCKPICK_TEX = NULL;
    
    

	void Hook(HWND hwnd);
	void Unhook( );
}
