#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SPMinusDocumentMinusSurface_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Base_OpenSpaceContainer_BP_classes.hpp"
#include "OPP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SP-Document-Surface_BP.SP-Document-Surface_BP_C
// 0x00A0 (0x0460 - 0x03C0)
class ASPMinusDocumentMinusSurface_BP_C final : public ABase_OpenSpaceContainer_BP_C
{
public:
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_SPMinusDocumentMinusSurface_BP_C;   // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          RadioReachBoxClearanceRight;                       // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RadioReachBoxClearanceForward;                     // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RadioReachBoxClearanceLeft;                        // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    RadioIcon;                                         // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      LeftPawnCapsuleClearance;                          // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      ForwardPawnCapsuleClearance;                       // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      RightPawnCapsuleClearance;                         // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* RadioBoxClearanceLeft;                             // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* RadioBoxClearanceForward;                          // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* RadioBoxClearanceRight;                            // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PingCollision;                                     // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            InteractionStaticMesh_0;                           // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_428[0x8];                                      // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BaseTransform_0;                                   // 0x0430(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	void RefreshRadioIconVisibility();
	void TestPawnClearanceFromBox(TArray<class UPrimitiveComponent*>& Clearances, bool* bClear);
	void BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature(bool bClearancePassed);
	void BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature(bool bClearancePassed);
	void BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature(bool bClearancePassed);
	void OnEditorPostLoad();
	void ExecuteUbergraph_SPMinusDocumentMinusSurface_BP(int32 EntryPoint);

	bool ShouldPingFollowActor(bool* OutShouldFollow) const;
	bool GetPingItemName(class FText* OutName) const;
	bool GetPingEnabled(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, bool* OutIsEnabled) const;
	bool GetPlayerPingData(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FPlayerPingData* OutData) const;
	bool GetPlayerPingWorldLocation(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FVector* OutLocation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SP-Document-Surface_BP_C">();
	}
	static class ASPMinusDocumentMinusSurface_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASPMinusDocumentMinusSurface_BP_C>();
	}
};
static_assert(alignof(ASPMinusDocumentMinusSurface_BP_C) == 0x000010, "Wrong alignment on ASPMinusDocumentMinusSurface_BP_C");
static_assert(sizeof(ASPMinusDocumentMinusSurface_BP_C) == 0x000460, "Wrong size on ASPMinusDocumentMinusSurface_BP_C");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, UberGraphFrame_SPMinusDocumentMinusSurface_BP_C) == 0x0003B8, "Member 'ASPMinusDocumentMinusSurface_BP_C::UberGraphFrame_SPMinusDocumentMinusSurface_BP_C' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, RadioReachBoxClearanceRight) == 0x0003C0, "Member 'ASPMinusDocumentMinusSurface_BP_C::RadioReachBoxClearanceRight' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, RadioReachBoxClearanceForward) == 0x0003C8, "Member 'ASPMinusDocumentMinusSurface_BP_C::RadioReachBoxClearanceForward' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, RadioReachBoxClearanceLeft) == 0x0003D0, "Member 'ASPMinusDocumentMinusSurface_BP_C::RadioReachBoxClearanceLeft' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, RadioIcon) == 0x0003D8, "Member 'ASPMinusDocumentMinusSurface_BP_C::RadioIcon' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, LeftPawnCapsuleClearance) == 0x0003E0, "Member 'ASPMinusDocumentMinusSurface_BP_C::LeftPawnCapsuleClearance' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, ForwardPawnCapsuleClearance) == 0x0003E8, "Member 'ASPMinusDocumentMinusSurface_BP_C::ForwardPawnCapsuleClearance' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, RightPawnCapsuleClearance) == 0x0003F0, "Member 'ASPMinusDocumentMinusSurface_BP_C::RightPawnCapsuleClearance' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, RadioBoxClearanceLeft) == 0x0003F8, "Member 'ASPMinusDocumentMinusSurface_BP_C::RadioBoxClearanceLeft' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, RadioBoxClearanceForward) == 0x000400, "Member 'ASPMinusDocumentMinusSurface_BP_C::RadioBoxClearanceForward' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, RadioBoxClearanceRight) == 0x000408, "Member 'ASPMinusDocumentMinusSurface_BP_C::RadioBoxClearanceRight' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, PingCollision) == 0x000410, "Member 'ASPMinusDocumentMinusSurface_BP_C::PingCollision' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, StaticMesh) == 0x000418, "Member 'ASPMinusDocumentMinusSurface_BP_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, InteractionStaticMesh_0) == 0x000420, "Member 'ASPMinusDocumentMinusSurface_BP_C::InteractionStaticMesh_0' has a wrong offset!");
static_assert(offsetof(ASPMinusDocumentMinusSurface_BP_C, BaseTransform_0) == 0x000430, "Member 'ASPMinusDocumentMinusSurface_BP_C::BaseTransform_0' has a wrong offset!");

}

