#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EndScreen_Player_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass EndScreen_Player_AnimBP.EndScreen_Player_AnimBP_C
// 0x0BD0 (0x0E90 - 0x02C0)
class UEndScreen_Player_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0398(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x03C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0440(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0470(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x04F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0570(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_3;                    // 0x05F0(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0698(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x06C8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0748(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x07C8(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x0848(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x08F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0920(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x09A0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0A20(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x0AA0(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0B48(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0B78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0BF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0C78(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0CF8(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0DA0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0DD0(0x00B0)()
	int32                                         Tq;                                                // 0x0E80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0E84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bTrialFailed;                                      // 0x0E85(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E86[0x2];                                      // 0x0E86(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartOffset;                                       // 0x0E88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintBeginPlay();
	void ExecuteUbergraph_EndScreen_Player_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EndScreen_Player_AnimBP_C">();
	}
	static class UEndScreen_Player_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEndScreen_Player_AnimBP_C>();
	}
};
static_assert(alignof(UEndScreen_Player_AnimBP_C) == 0x000010, "Wrong alignment on UEndScreen_Player_AnimBP_C");
static_assert(sizeof(UEndScreen_Player_AnimBP_C) == 0x000E90, "Wrong size on UEndScreen_Player_AnimBP_C");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UEndScreen_Player_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0002F8, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000320, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000348, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000370, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000398, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_12) == 0x0003C0, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_StateResult_4) == 0x000440, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x000470, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x0004F0, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x000570, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_BlendListByInt_3) == 0x0005F0, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_BlendListByInt_3' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_StateResult_3) == 0x000698, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x0006C8, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000748, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0007C8, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_BlendListByInt_2) == 0x000848, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_StateResult_2) == 0x0008F0, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000920, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0009A0, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000A20, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_BlendListByInt_1) == 0x000AA0, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000B48, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000B78, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000BF8, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x000C78, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_BlendListByInt) == 0x000CF8, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_StateResult) == 0x000DA0, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, AnimGraphNode_StateMachine) == 0x000DD0, "Member 'UEndScreen_Player_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, Tq) == 0x000E80, "Member 'UEndScreen_Player_AnimBP_C::Tq' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, IsActive) == 0x000E84, "Member 'UEndScreen_Player_AnimBP_C::IsActive' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, bTrialFailed) == 0x000E85, "Member 'UEndScreen_Player_AnimBP_C::bTrialFailed' has a wrong offset!");
static_assert(offsetof(UEndScreen_Player_AnimBP_C, StartOffset) == 0x000E88, "Member 'UEndScreen_Player_AnimBP_C::StartOffset' has a wrong offset!");

}

