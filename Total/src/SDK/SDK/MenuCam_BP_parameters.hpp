#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuCam_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MenuCam_BP.MenuCam_BP_C.InitPageMaterial
// 0x0060 (0x0060 - 0x0000)
struct MenuCam_BP_C_InitPageMaterial final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCam_BP_C_InitPageMaterial) == 0x000008, "Wrong alignment on MenuCam_BP_C_InitPageMaterial");
static_assert(sizeof(MenuCam_BP_C_InitPageMaterial) == 0x000060, "Wrong size on MenuCam_BP_C_InitPageMaterial");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, PageIndex) == 0x000000, "Member 'MenuCam_BP_C_InitPageMaterial::PageIndex' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, CallFunc_Array_Get_Item) == 0x000008, "Member 'MenuCam_BP_C_InitPageMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'MenuCam_BP_C_InitPageMaterial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'MenuCam_BP_C_InitPageMaterial::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, CallFunc_GetRenderTarget_ReturnValue) == 0x000028, "Member 'MenuCam_BP_C_InitPageMaterial::CallFunc_GetRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'MenuCam_BP_C_InitPageMaterial::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'MenuCam_BP_C_InitPageMaterial::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'MenuCam_BP_C_InitPageMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'MenuCam_BP_C_InitPageMaterial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_InitPageMaterial, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'MenuCam_BP_C_InitPageMaterial::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.StopCycleSound
// 0x0020 (0x0020 - 0x0000)
struct MenuCam_BP_C_StopCycleSound final
{
public:
	class ARBPlayer*                              CallFunc_GetLocalPawn_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetCurrentInteractibleActor_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASASChair_BP_C*                         K2Node_DynamicCast_AsSAS_Chair_BP;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MenuCam_BP_C_StopCycleSound) == 0x000008, "Wrong alignment on MenuCam_BP_C_StopCycleSound");
static_assert(sizeof(MenuCam_BP_C_StopCycleSound) == 0x000020, "Wrong size on MenuCam_BP_C_StopCycleSound");
static_assert(offsetof(MenuCam_BP_C_StopCycleSound, CallFunc_GetLocalPawn_ReturnValue) == 0x000000, "Member 'MenuCam_BP_C_StopCycleSound::CallFunc_GetLocalPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_StopCycleSound, CallFunc_BP_GetCurrentInteractibleActor_ReturnValue) == 0x000008, "Member 'MenuCam_BP_C_StopCycleSound::CallFunc_BP_GetCurrentInteractibleActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_StopCycleSound, K2Node_DynamicCast_AsSAS_Chair_BP) == 0x000010, "Member 'MenuCam_BP_C_StopCycleSound::K2Node_DynamicCast_AsSAS_Chair_BP' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_StopCycleSound, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MenuCam_BP_C_StopCycleSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.PlayCycleSound
// 0x0028 (0x0028 - 0x0000)
struct MenuCam_BP_C_PlayCycleSound final
{
public:
	class ARBPlayer*                              CallFunc_GetLocalPawn_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BP_GetCurrentInteractibleActor_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASASChair_BP_C*                         K2Node_DynamicCast_AsSAS_Chair_BP;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PlayLoopingSoundOnActor_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCam_BP_C_PlayCycleSound) == 0x000008, "Wrong alignment on MenuCam_BP_C_PlayCycleSound");
static_assert(sizeof(MenuCam_BP_C_PlayCycleSound) == 0x000028, "Wrong size on MenuCam_BP_C_PlayCycleSound");
static_assert(offsetof(MenuCam_BP_C_PlayCycleSound, CallFunc_GetLocalPawn_ReturnValue) == 0x000000, "Member 'MenuCam_BP_C_PlayCycleSound::CallFunc_GetLocalPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_PlayCycleSound, CallFunc_BP_GetCurrentInteractibleActor_ReturnValue) == 0x000008, "Member 'MenuCam_BP_C_PlayCycleSound::CallFunc_BP_GetCurrentInteractibleActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_PlayCycleSound, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MenuCam_BP_C_PlayCycleSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_PlayCycleSound, K2Node_DynamicCast_AsSAS_Chair_BP) == 0x000018, "Member 'MenuCam_BP_C_PlayCycleSound::K2Node_DynamicCast_AsSAS_Chair_BP' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_PlayCycleSound, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MenuCam_BP_C_PlayCycleSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_PlayCycleSound, CallFunc_PlayLoopingSoundOnActor_ReturnValue) == 0x000024, "Member 'MenuCam_BP_C_PlayCycleSound::CallFunc_PlayLoopingSoundOnActor_ReturnValue' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.SetTickEnabled
// 0x0001 (0x0001 - 0x0000)
struct MenuCam_BP_C_SetTickEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MenuCam_BP_C_SetTickEnabled) == 0x000001, "Wrong alignment on MenuCam_BP_C_SetTickEnabled");
static_assert(sizeof(MenuCam_BP_C_SetTickEnabled) == 0x000001, "Wrong size on MenuCam_BP_C_SetTickEnabled");
static_assert(offsetof(MenuCam_BP_C_SetTickEnabled, bEnabled) == 0x000000, "Member 'MenuCam_BP_C_SetTickEnabled::bEnabled' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.Clean
// 0x0020 (0x0020 - 0x0000)
struct MenuCam_BP_C_Clean final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MenuCam_BP_C_Clean) == 0x000008, "Wrong alignment on MenuCam_BP_C_Clean");
static_assert(sizeof(MenuCam_BP_C_Clean) == 0x000020, "Wrong size on MenuCam_BP_C_Clean");
static_assert(offsetof(MenuCam_BP_C_Clean, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MenuCam_BP_C_Clean::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Clean, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MenuCam_BP_C_Clean::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Clean, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MenuCam_BP_C_Clean::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Clean, CallFunc_Array_Get_Item) == 0x000010, "Member 'MenuCam_BP_C_Clean::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Clean, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'MenuCam_BP_C_Clean::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Clean, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'MenuCam_BP_C_Clean::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Clean, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'MenuCam_BP_C_Clean::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.UpdateMaterialWithRenderTarget
// 0x0040 (0x0040 - 0x0000)
struct MenuCam_BP_C_UpdateMaterialWithRenderTarget final
{
public:
	int32                                         PageId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MenuCam_BP_C_UpdateMaterialWithRenderTarget) == 0x000008, "Wrong alignment on MenuCam_BP_C_UpdateMaterialWithRenderTarget");
static_assert(sizeof(MenuCam_BP_C_UpdateMaterialWithRenderTarget) == 0x000040, "Wrong size on MenuCam_BP_C_UpdateMaterialWithRenderTarget");
static_assert(offsetof(MenuCam_BP_C_UpdateMaterialWithRenderTarget, PageId) == 0x000000, "Member 'MenuCam_BP_C_UpdateMaterialWithRenderTarget::PageId' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateMaterialWithRenderTarget, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'MenuCam_BP_C_UpdateMaterialWithRenderTarget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateMaterialWithRenderTarget, CallFunc_Array_Get_Item) == 0x000008, "Member 'MenuCam_BP_C_UpdateMaterialWithRenderTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateMaterialWithRenderTarget, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'MenuCam_BP_C_UpdateMaterialWithRenderTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateMaterialWithRenderTarget, CallFunc_GetMaterial_ReturnValue) == 0x000018, "Member 'MenuCam_BP_C_UpdateMaterialWithRenderTarget::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateMaterialWithRenderTarget, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000020, "Member 'MenuCam_BP_C_UpdateMaterialWithRenderTarget::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateMaterialWithRenderTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'MenuCam_BP_C_UpdateMaterialWithRenderTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateMaterialWithRenderTarget, CallFunc_GetRenderTarget_ReturnValue) == 0x000030, "Member 'MenuCam_BP_C_UpdateMaterialWithRenderTarget::CallFunc_GetRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateMaterialWithRenderTarget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'MenuCam_BP_C_UpdateMaterialWithRenderTarget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.UpdateScene
// 0x0130 (0x0130 - 0x0000)
struct MenuCam_BP_C_UpdateScene final
{
public:
	float                                         FovTarget;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FovAnim_;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FovAdd;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               InRot;                                             // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Base2;                                             // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InVec;                                             // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MenuCam_BP_C_UpdateScene) == 0x000004, "Wrong alignment on MenuCam_BP_C_UpdateScene");
static_assert(sizeof(MenuCam_BP_C_UpdateScene) == 0x000130, "Wrong size on MenuCam_BP_C_UpdateScene");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, FovTarget) == 0x000000, "Member 'MenuCam_BP_C_UpdateScene::FovTarget' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, FovAnim_) == 0x000004, "Member 'MenuCam_BP_C_UpdateScene::FovAnim_' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, FovAdd) == 0x000008, "Member 'MenuCam_BP_C_UpdateScene::FovAdd' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, InRot) == 0x00000C, "Member 'MenuCam_BP_C_UpdateScene::InRot' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, Base2) == 0x000018, "Member 'MenuCam_BP_C_UpdateScene::Base2' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, InVec) == 0x000024, "Member 'MenuCam_BP_C_UpdateScene::InVec' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakVector_X) == 0x000030, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakVector_Y) == 0x000034, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakVector_Z) == 0x000038, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakRotator_Roll) == 0x00003C, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakRotator_Pitch) == 0x000040, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakRotator_Yaw) == 0x000044, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000058, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakRotator_Roll_1) == 0x000064, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakRotator_Pitch_1) == 0x000068, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakRotator_Yaw_1) == 0x00006C, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakVector_X_1) == 0x000070, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakVector_Y_1) == 0x000074, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Lerp_ReturnValue) == 0x00007C, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Lerp_ReturnValue_1) == 0x000080, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Add_FloatFloat_ReturnValue) == 0x000084, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000088, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Lerp_ReturnValue_2) == 0x00008C, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000090, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Lerp_ReturnValue_3) == 0x000094, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000A4, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UpdateScene, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000A8, "Member 'MenuCam_BP_C_UpdateScene::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.CyclePage
// 0x0028 (0x0028 - 0x0000)
struct MenuCam_BP_C_CyclePage final
{
public:
	bool                                          CycleRight;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCam_BP_C_CyclePage) == 0x000004, "Wrong alignment on MenuCam_BP_C_CyclePage");
static_assert(sizeof(MenuCam_BP_C_CyclePage) == 0x000028, "Wrong size on MenuCam_BP_C_CyclePage");
static_assert(offsetof(MenuCam_BP_C_CyclePage, CycleRight) == 0x000000, "Member 'MenuCam_BP_C_CyclePage::CycleRight' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, Temp_bool_Variable) == 0x000001, "Member 'MenuCam_BP_C_CyclePage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, Temp_bool_Variable_1) == 0x000002, "Member 'MenuCam_BP_C_CyclePage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, Temp_int_Variable) == 0x000004, "Member 'MenuCam_BP_C_CyclePage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MenuCam_BP_C_CyclePage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'MenuCam_BP_C_CyclePage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, CallFunc_Percent_IntInt_ReturnValue) == 0x000010, "Member 'MenuCam_BP_C_CyclePage::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000014, "Member 'MenuCam_BP_C_CyclePage::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'MenuCam_BP_C_CyclePage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'MenuCam_BP_C_CyclePage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001D, "Member 'MenuCam_BP_C_CyclePage::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, K2Node_Select_Default) == 0x000020, "Member 'MenuCam_BP_C_CyclePage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_CyclePage, K2Node_Select_Default_1) == 0x000024, "Member 'MenuCam_BP_C_CyclePage::K2Node_Select_Default_1' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.Init
// 0x00E0 (0x00E0 - 0x0000)
struct MenuCam_BP_C_Init final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidgetComponent*>               K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Array_Get_Item_2;                         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MenuCam_BP_C_Init) == 0x000008, "Wrong alignment on MenuCam_BP_C_Init");
static_assert(sizeof(MenuCam_BP_C_Init) == 0x0000E0, "Wrong size on MenuCam_BP_C_Init");
static_assert(offsetof(MenuCam_BP_C_Init, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MenuCam_BP_C_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, CallFunc_Array_Get_Item) == 0x000008, "Member 'MenuCam_BP_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'MenuCam_BP_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'MenuCam_BP_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, K2Node_MakeArray_Array) == 0x000018, "Member 'MenuCam_BP_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, K2Node_MakeArray_Array_1) == 0x000028, "Member 'MenuCam_BP_C_Init::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, CallFunc_MakeLiteralInt_ReturnValue) == 0x000038, "Member 'MenuCam_BP_C_Init::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'MenuCam_BP_C_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'MenuCam_BP_C_Init::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'MenuCam_BP_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'MenuCam_BP_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, CallFunc_Array_Get_Item_2) == 0x00004C, "Member 'MenuCam_BP_C_Init::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_Init, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000058, "Member 'MenuCam_BP_C_Init::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.ApplyMaterialToUsedPages
// 0x0014 (0x0014 - 0x0000)
struct MenuCam_BP_C_ApplyMaterialToUsedPages final
{
public:
	int32                                         PagesUsed;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MenuCam_BP_C_ApplyMaterialToUsedPages) == 0x000004, "Wrong alignment on MenuCam_BP_C_ApplyMaterialToUsedPages");
static_assert(sizeof(MenuCam_BP_C_ApplyMaterialToUsedPages) == 0x000014, "Wrong size on MenuCam_BP_C_ApplyMaterialToUsedPages");
static_assert(offsetof(MenuCam_BP_C_ApplyMaterialToUsedPages, PagesUsed) == 0x000000, "Member 'MenuCam_BP_C_ApplyMaterialToUsedPages::PagesUsed' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ApplyMaterialToUsedPages, Temp_int_Variable) == 0x000004, "Member 'MenuCam_BP_C_ApplyMaterialToUsedPages::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ApplyMaterialToUsedPages, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MenuCam_BP_C_ApplyMaterialToUsedPages::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ApplyMaterialToUsedPages, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'MenuCam_BP_C_ApplyMaterialToUsedPages::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ApplyMaterialToUsedPages, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'MenuCam_BP_C_ApplyMaterialToUsedPages::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.UserConstructionScript
// 0x0124 (0x0124 - 0x0000)
struct MenuCam_BP_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Array_Get_Item_1;                         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MenuCam_BP_C_UserConstructionScript) == 0x000004, "Wrong alignment on MenuCam_BP_C_UserConstructionScript");
static_assert(sizeof(MenuCam_BP_C_UserConstructionScript) == 0x000124, "Wrong size on MenuCam_BP_C_UserConstructionScript");
static_assert(offsetof(MenuCam_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000000, "Member 'MenuCam_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UserConstructionScript, CallFunc_MakeLiteralInt_ReturnValue) == 0x000088, "Member 'MenuCam_BP_C_UserConstructionScript::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x00008C, "Member 'MenuCam_BP_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'MenuCam_BP_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x00009C, "Member 'MenuCam_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.BlendCameraPosition
// 0x0010 (0x0010 - 0x0000)
struct MenuCam_BP_C_BlendCameraPosition final
{
public:
	struct FRotator                               TargetRotation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TargetFOV;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCam_BP_C_BlendCameraPosition) == 0x000004, "Wrong alignment on MenuCam_BP_C_BlendCameraPosition");
static_assert(sizeof(MenuCam_BP_C_BlendCameraPosition) == 0x000010, "Wrong size on MenuCam_BP_C_BlendCameraPosition");
static_assert(offsetof(MenuCam_BP_C_BlendCameraPosition, TargetRotation) == 0x000000, "Member 'MenuCam_BP_C_BlendCameraPosition::TargetRotation' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_BlendCameraPosition, TargetFOV) == 0x00000C, "Member 'MenuCam_BP_C_BlendCameraPosition::TargetFOV' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.SelectMenu
// 0x0004 (0x0004 - 0x0000)
struct MenuCam_BP_C_SelectMenu final
{
public:
	int32                                         MenuID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCam_BP_C_SelectMenu) == 0x000004, "Wrong alignment on MenuCam_BP_C_SelectMenu");
static_assert(sizeof(MenuCam_BP_C_SelectMenu) == 0x000004, "Wrong size on MenuCam_BP_C_SelectMenu");
static_assert(offsetof(MenuCam_BP_C_SelectMenu, MenuID) == 0x000000, "Member 'MenuCam_BP_C_SelectMenu::MenuID' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct MenuCam_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MenuCam_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on MenuCam_BP_C_ReceiveTick");
static_assert(sizeof(MenuCam_BP_C_ReceiveTick) == 0x000004, "Wrong size on MenuCam_BP_C_ReceiveTick");
static_assert(offsetof(MenuCam_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'MenuCam_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function MenuCam_BP.MenuCam_BP_C.ExecuteUbergraph_MenuCam_BP
// 0x00D0 (0x00D0 - 0x0000)
struct MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_TargetRotation;                 // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_TargetFOV;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MenuID;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Array_Get_Item;                           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default;                             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP) == 0x000010, "Wrong alignment on MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP");
static_assert(sizeof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP) == 0x0000D0, "Wrong size on MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, EntryPoint) == 0x000000, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, Temp_bool_Variable) == 0x000004, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, Temp_struct_Variable) == 0x000008, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, Temp_bool_Variable_1) == 0x000014, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, Temp_float_Variable) == 0x000018, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, K2Node_CustomEvent_TargetRotation) == 0x00001C, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::K2Node_CustomEvent_TargetRotation' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, K2Node_CustomEvent_TargetFOV) == 0x000028, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::K2Node_CustomEvent_TargetFOV' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, K2Node_CustomEvent_MenuID) == 0x00002C, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::K2Node_CustomEvent_MenuID' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Array_Get_Item) == 0x000030, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00003C, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, K2Node_Select_Default) == 0x000044, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000050, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, K2Node_Select_Default_1) == 0x000054, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000058, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00005C, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000060, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000064, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, K2Node_MakeStruct_Vector4) == 0x000070, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, K2Node_Event_DeltaSeconds) == 0x000080, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000084, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_BreakRotator_Roll) == 0x000094, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_BreakRotator_Pitch) == 0x000098, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_BreakRotator_Yaw) == 0x00009C, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Abs_ReturnValue) == 0x0000A0, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Abs_ReturnValue_1) == 0x0000A4, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Abs_ReturnValue_2) == 0x0000A8, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Abs_ReturnValue_3) == 0x0000AC, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x0000B0, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000B8, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000BC, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000C0, "Member 'MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

}

