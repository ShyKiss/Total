#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Entity_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Entity_AnimBP.Entity_AnimBP_C
// 0x1350 (0x1610 - 0x02C0)
class UEntity_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x02F8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x03C0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0468(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0490(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x04B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x04E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0508(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0530(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0558(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0580(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x05A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x05D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x05F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0620(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0648(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0670(0x0028)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x0698(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0740(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x07C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0840(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0870(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0918(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0998(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0A18(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0A48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0A70(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0A98(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0B18(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0B48(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0BC8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0BF8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0C78(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0CA8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0CD0(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0D90(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0E10(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0E40(0x00B0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0EF0(0x00A8)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x0F98(0x01D8)(ContainsInstancedReference)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1170(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x12C8(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1420(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x14E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1508(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1530(0x00A8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x15D8(0x0028)()
	bool                                          IsGlitching;                                       // 0x1600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHeadShaking;                                     // 0x1601(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1602[0x2];                                     // 0x1602(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GlitchLevel;                                       // 0x1604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPhasingA;                                        // 0x1608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPhasingB;                                        // 0x1609(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMoving;                                          // 0x160A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEnteringExit;                                    // 0x160B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         RandomPhase;                                       // 0x160C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_ApplyAdditive_65E28B9044AB01BA60A05EAF9494BDA7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_1865B7DC4317B36B35DE2DA88FF498E2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_4DD986F54736F8D61004D1A52DE4F000();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_EFCB191E4EFA9F77C63E288385F31445();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_EED2D09945FAE7FF3ACB2BAC204C8F58();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_4B2245BD40ACDF83F87B1F949832F80A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_DED5D204406AB6F4C31446ACDDC55A3C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_A57359F741841381978873B382250DFD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_F5B65F034A4E4EF023ABC48892BB222F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_BD4440FF439D6691C4CED0AB1D7D349A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Entity_AnimBP_AnimGraphNode_TransitionResult_C644890B437F8FDD53793EBCF701445D();
	void AnimNotify_glitch();
	void AnimNotify_phasing();
	void PhaseA();
	void PhaseB();
	void AnimNotify_ResetRandomPhase();
	void BlueprintBeginPlay();
	void ExecuteUbergraph_Entity_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Entity_AnimBP_C">();
	}
	static class UEntity_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEntity_AnimBP_C>();
	}
};
static_assert(alignof(UEntity_AnimBP_C) == 0x000010, "Wrong alignment on UEntity_AnimBP_C");
static_assert(sizeof(UEntity_AnimBP_C) == 0x001610, "Wrong size on UEntity_AnimBP_C");
static_assert(offsetof(UEntity_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UEntity_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UEntity_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x0002F8, "Member 'UEntity_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x0003C0, "Member 'UEntity_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x000440, "Member 'UEntity_AnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_15) == 0x000468, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_14) == 0x000490, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x0004B8, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x0004E0, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x000508, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000530, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000558, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000580, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x0005A8, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x0005D0, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0005F8, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000620, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000648, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000670, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_BlendListByInt_1) == 0x000698, "Member 'UEntity_AnimBP_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000740, "Member 'UEntity_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0007C0, "Member 'UEntity_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_StateResult_5) == 0x000840, "Member 'UEntity_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_BlendListByInt) == 0x000870, "Member 'UEntity_AnimBP_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000918, "Member 'UEntity_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000998, "Member 'UEntity_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_StateResult_4) == 0x000A18, "Member 'UEntity_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000A48, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000A70, "Member 'UEntity_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000A98, "Member 'UEntity_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_StateResult_3) == 0x000B18, "Member 'UEntity_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000B48, "Member 'UEntity_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000BC8, "Member 'UEntity_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000BF8, "Member 'UEntity_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000C78, "Member 'UEntity_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x000CA8, "Member 'UEntity_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000CD0, "Member 'UEntity_AnimBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x000D90, "Member 'UEntity_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_StateResult) == 0x000E10, "Member 'UEntity_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_StateMachine) == 0x000E40, "Member 'UEntity_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000EF0, "Member 'UEntity_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_CopyPoseFromMesh) == 0x000F98, "Member 'UEntity_AnimBP_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x001170, "Member 'UEntity_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x0012C8, "Member 'UEntity_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x001420, "Member 'UEntity_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x0014E0, "Member 'UEntity_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001508, "Member 'UEntity_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x001530, "Member 'UEntity_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x0015D8, "Member 'UEntity_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, IsGlitching) == 0x001600, "Member 'UEntity_AnimBP_C::IsGlitching' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, IsHeadShaking) == 0x001601, "Member 'UEntity_AnimBP_C::IsHeadShaking' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, GlitchLevel) == 0x001604, "Member 'UEntity_AnimBP_C::GlitchLevel' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, IsPhasingA) == 0x001608, "Member 'UEntity_AnimBP_C::IsPhasingA' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, IsPhasingB) == 0x001609, "Member 'UEntity_AnimBP_C::IsPhasingB' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, IsMoving) == 0x00160A, "Member 'UEntity_AnimBP_C::IsMoving' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, IsEnteringExit) == 0x00160B, "Member 'UEntity_AnimBP_C::IsEnteringExit' has a wrong offset!");
static_assert(offsetof(UEntity_AnimBP_C, RandomPhase) == 0x00160C, "Member 'UEntity_AnimBP_C::RandomPhase' has a wrong offset!");

}

