#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CeilingLampMinus04

#include "Basic.hpp"

#include "RBLight_BP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CeilingLamp-04.CeilingLamp-04_C
// 0x0030 (0x07A0 - 0x0770)
class ACeilingLampMinus04_C final : public ARBLight_BP_C
{
public:
	class URBSpotLightComponent*                  RBSpotLightBulb_Static;                            // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLightBulb_Movable;                           // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLightBulb4_Dual;                              // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLightBulb3_Dual;                              // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLightBulb2_Dual;                              // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLightBulb1_Dual;                              // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CeilingLamp-04_C">();
	}
	static class ACeilingLampMinus04_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACeilingLampMinus04_C>();
	}
};
static_assert(alignof(ACeilingLampMinus04_C) == 0x000010, "Wrong alignment on ACeilingLampMinus04_C");
static_assert(sizeof(ACeilingLampMinus04_C) == 0x0007A0, "Wrong size on ACeilingLampMinus04_C");
static_assert(offsetof(ACeilingLampMinus04_C, RBSpotLightBulb_Static) == 0x000770, "Member 'ACeilingLampMinus04_C::RBSpotLightBulb_Static' has a wrong offset!");
static_assert(offsetof(ACeilingLampMinus04_C, RBSpotLightBulb_Movable) == 0x000778, "Member 'ACeilingLampMinus04_C::RBSpotLightBulb_Movable' has a wrong offset!");
static_assert(offsetof(ACeilingLampMinus04_C, PointLightBulb4_Dual) == 0x000780, "Member 'ACeilingLampMinus04_C::PointLightBulb4_Dual' has a wrong offset!");
static_assert(offsetof(ACeilingLampMinus04_C, PointLightBulb3_Dual) == 0x000788, "Member 'ACeilingLampMinus04_C::PointLightBulb3_Dual' has a wrong offset!");
static_assert(offsetof(ACeilingLampMinus04_C, PointLightBulb2_Dual) == 0x000790, "Member 'ACeilingLampMinus04_C::PointLightBulb2_Dual' has a wrong offset!");
static_assert(offsetof(ACeilingLampMinus04_C, PointLightBulb1_Dual) == 0x000798, "Member 'ACeilingLampMinus04_C::PointLightBulb1_Dual' has a wrong offset!");

}

