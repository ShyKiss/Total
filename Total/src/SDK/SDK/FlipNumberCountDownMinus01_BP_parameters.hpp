#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlipNumberCountDownMinus01_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.ExecuteUbergraph_FlipNumberCountDown-01_BP
// 0x051C (0x051C - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_7;                // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0118(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x01A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_3;  // 0x0228(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         K2Node_CustomEvent_Number_1;                       // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Number;                         // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Next_Number_IntOut;                       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_findIntDistance_Distance;                 // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_findIntDistance_Distance_1;               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_4;  // 0x02D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_5;  // 0x0358(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_6;  // 0x03E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_7;  // 0x0468(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Next_Number_IntOut_1;                     // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Next_Number_IntOut_2;                     // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_findIntDistance_Distance_2;               // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Next_Number_IntOut_3;                     // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP) == 0x00051C, "Wrong size on FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, EntryPoint) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Lerp_ReturnValue_1) == 0x00000C, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MakeRotator_ReturnValue_1) == 0x00001C, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Lerp_ReturnValue_2) == 0x000028, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Lerp_ReturnValue_3) == 0x00002C, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MakeRotator_ReturnValue_2) == 0x000030, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MakeRotator_ReturnValue_3) == 0x00003C, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Lerp_ReturnValue_4) == 0x00004C, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Lerp_ReturnValue_5) == 0x000050, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MakeRotator_ReturnValue_4) == 0x000054, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MakeRotator_ReturnValue_5) == 0x000060, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Lerp_ReturnValue_6) == 0x00006C, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MakeRotator_ReturnValue_6) == 0x000074, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Lerp_ReturnValue_7) == 0x000080, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_MakeRotator_ReturnValue_7) == 0x000084, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_MakeRotator_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000090, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000118, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x0001A0, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_3) == 0x000228, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, K2Node_CustomEvent_Number_1) == 0x0002B0, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::K2Node_CustomEvent_Number_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, K2Node_CustomEvent_Number) == 0x0002B4, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::K2Node_CustomEvent_Number' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Next_Number_IntOut) == 0x0002B8, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Next_Number_IntOut' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_findIntDistance_Distance) == 0x0002BC, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_findIntDistance_Distance' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0002C0, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_BooleanAND_ReturnValue) == 0x0002C1, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_findIntDistance_Distance_1) == 0x0002C4, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_findIntDistance_Distance_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Abs_Int_ReturnValue) == 0x0002C8, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002CC, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_4) == 0x0002D0, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_5) == 0x000358, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_5' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_6) == 0x0003E0, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_6' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_7) == 0x000468, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_7' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Next_Number_IntOut_1) == 0x0004F0, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Next_Number_IntOut_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Next_Number_IntOut_2) == 0x0004F4, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Next_Number_IntOut_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_findIntDistance_Distance_2) == 0x0004F8, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_findIntDistance_Distance_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_BooleanOR_ReturnValue) == 0x0004FC, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Next_Number_IntOut_3) == 0x000500, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Next_Number_IntOut_3' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Multiply_IntInt_ReturnValue) == 0x000504, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000508, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00050C, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000510, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_FCeil_ReturnValue) == 0x000514, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000518, "Member 'FlipNumberCountDownMinus01_BP_C_ExecuteUbergraph_FlipNumberCountDownMinus01_BP::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.xsetNumber
// 0x0004 (0x0004 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_XsetNumber final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_XsetNumber) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_XsetNumber");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_XsetNumber) == 0x000004, "Wrong size on FlipNumberCountDownMinus01_BP_C_XsetNumber");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_XsetNumber, Number) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_XsetNumber::Number' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.resetAll
// 0x0004 (0x0004 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_ResetAll final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_ResetAll) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_ResetAll");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_ResetAll) == 0x000004, "Wrong size on FlipNumberCountDownMinus01_BP_C_ResetAll");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetAll, Number) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_ResetAll::Number' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.FlipToInt
// 0x0008 (0x0008 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_FlipToInt final
{
public:
	int32                                         Int;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExtraLoops_0;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_FlipToInt) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_FlipToInt");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_FlipToInt) == 0x000008, "Wrong size on FlipNumberCountDownMinus01_BP_C_FlipToInt");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FlipToInt, Int) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_FlipToInt::Int' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FlipToInt, ExtraLoops_0) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_FlipToInt::ExtraLoops_0' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.SetNewInt
// 0x000C (0x000C - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_SetNewInt final
{
public:
	int32                                         NewDigit;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_SetNewInt) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_SetNewInt");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_SetNewInt) == 0x00000C, "Wrong size on FlipNumberCountDownMinus01_BP_C_SetNewInt");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SetNewInt, NewDigit) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_SetNewInt::NewDigit' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SetNewInt, CallFunc_Max_ReturnValue) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_SetNewInt::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SetNewInt, CallFunc_Min_ReturnValue) == 0x000008, "Member 'FlipNumberCountDownMinus01_BP_C_SetNewInt::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.ResetFlapPositionAndMaterials
// 0x0254 (0x0254 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials final
{
public:
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x0144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_3;  // 0x01CC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials) == 0x000254, "Wrong size on FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials, CallFunc_MakeRotator_ReturnValue) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials, CallFunc_MakeRotator_ReturnValue_1) == 0x00000C, "Member 'FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials, CallFunc_MakeRotator_ReturnValue_2) == 0x000018, "Member 'FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials, CallFunc_MakeRotator_ReturnValue_3) == 0x000024, "Member 'FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000034, "Member 'FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000BC, "Member 'FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x000144, "Member 'FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials, CallFunc_K2_SetRelativeRotation_SweepHitResult_3) == 0x0001CC, "Member 'FlipNumberCountDownMinus01_BP_C_ResetFlapPositionAndMaterials::CallFunc_K2_SetRelativeRotation_SweepHitResult_3' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.SwapStaticmeshOrder
// 0x0020 (0x0020 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder final
{
public:
	class UPrimitiveComponent*                    _FlipBehindTop;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    _FlipBottom;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    _FlipBehindBottom;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    _FlipTop;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder) == 0x000008, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder) == 0x000020, "Wrong size on FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder, _FlipBehindTop) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder::_FlipBehindTop' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder, _FlipBottom) == 0x000008, "Member 'FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder::_FlipBottom' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder, _FlipBehindBottom) == 0x000010, "Member 'FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder::_FlipBehindBottom' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder, _FlipTop) == 0x000018, "Member 'FlipNumberCountDownMinus01_BP_C_SwapStaticmeshOrder::_FlipTop' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.Set Next Number on Mesh
// 0x0018 (0x0018 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh final
{
public:
	int32                                         CurrentNumber;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Next_Number_IntOut;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Next_Number_IntOut_1;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh) == 0x000018, "Wrong size on FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh, CurrentNumber) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh::CurrentNumber' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh, CallFunc_Next_Number_IntOut) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh::CallFunc_Next_Number_IntOut' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh, CallFunc_Next_Number_IntOut_1) == 0x000008, "Member 'FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh::CallFunc_Next_Number_IntOut_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000010, "Member 'FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000014, "Member 'FlipNumberCountDownMinus01_BP_C_Set_Next_Number_on_Mesh::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.Next Number
// 0x0038 (0x0038 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_Next_Number final
{
public:
	int32                                         Int;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IntOut;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_Next_Number) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_Next_Number");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_Next_Number) == 0x000038, "Wrong size on FlipNumberCountDownMinus01_BP_C_Next_Number");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, Int) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::Int' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, IntOut) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::IntOut' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, Temp_bool_Variable) == 0x000008, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, Temp_int_Variable) == 0x00000C, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, Temp_int_Variable_1) == 0x000010, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, K2Node_Select_Default) == 0x000018, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000028, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, CallFunc_FMod_Remainder) == 0x00002C, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, CallFunc_FMod_ReturnValue) == 0x000030, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_Next_Number, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'FlipNumberCountDownMinus01_BP_C_Next_Number::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.findIntDistance
// 0x0038 (0x0038 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_FindIntDistance final
{
public:
	int32                                         Current_Int;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Target_Int;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Distance_0;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_FindIntDistance) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_FindIntDistance");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_FindIntDistance) == 0x000038, "Wrong size on FlipNumberCountDownMinus01_BP_C_FindIntDistance");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, Current_Int) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::Current_Int' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, Target_Int) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::Target_Int' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, Distance_0) == 0x000008, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::Distance_0' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000018, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_Less_IntInt_ReturnValue_1) == 0x00001D, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_SelectInt_ReturnValue) == 0x000020, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_SelectInt_ReturnValue_1) == 0x00002C, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_SelectInt_ReturnValue_2) == 0x000030, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FindIntDistance, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'FlipNumberCountDownMinus01_BP_C_FindIntDistance::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.FlipIncrement
// 0x0004 (0x0004 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_FlipIncrement final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_FlipIncrement) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_FlipIncrement");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_FlipIncrement) == 0x000004, "Wrong size on FlipNumberCountDownMinus01_BP_C_FlipIncrement");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FlipIncrement, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_FlipIncrement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.FlipDecrement
// 0x0004 (0x0004 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_FlipDecrement final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_FlipDecrement) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_FlipDecrement");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_FlipDecrement) == 0x000004, "Wrong size on FlipNumberCountDownMinus01_BP_C_FlipDecrement");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_FlipDecrement, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_FlipDecrement::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.CheckValidity
// 0x0007 (0x0007 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_CheckValidity final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_CheckValidity) == 0x000001, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_CheckValidity");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_CheckValidity) == 0x000007, "Wrong size on FlipNumberCountDownMinus01_BP_C_CheckValidity");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_CheckValidity, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_CheckValidity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_CheckValidity, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'FlipNumberCountDownMinus01_BP_C_CheckValidity::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_CheckValidity, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'FlipNumberCountDownMinus01_BP_C_CheckValidity::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_CheckValidity, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'FlipNumberCountDownMinus01_BP_C_CheckValidity::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_CheckValidity, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_CheckValidity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_CheckValidity, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'FlipNumberCountDownMinus01_BP_C_CheckValidity::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_CheckValidity, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'FlipNumberCountDownMinus01_BP_C_CheckValidity::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.StartInfiniteFlip
// 0x0008 (0x0008 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_StartInfiniteFlip final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_StartInfiniteFlip) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_StartInfiniteFlip");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_StartInfiniteFlip) == 0x000008, "Wrong size on FlipNumberCountDownMinus01_BP_C_StartInfiniteFlip");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_StartInfiniteFlip, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_StartInfiniteFlip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_StartInfiniteFlip, CallFunc_Percent_IntInt_ReturnValue) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_StartInfiniteFlip::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.SetPlayRate
// 0x000C (0x000C - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_SetPlayRate final
{
public:
	float                                         NewPlayRate;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_SetPlayRate) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_SetPlayRate");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_SetPlayRate) == 0x00000C, "Wrong size on FlipNumberCountDownMinus01_BP_C_SetPlayRate");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SetPlayRate, NewPlayRate) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_SetPlayRate::NewPlayRate' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SetPlayRate, CallFunc_FMin_ReturnValue) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_SetPlayRate::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SetPlayRate, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'FlipNumberCountDownMinus01_BP_C_SetPlayRate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SetPlayRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'FlipNumberCountDownMinus01_BP_C_SetPlayRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SetPlayRate, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'FlipNumberCountDownMinus01_BP_C_SetPlayRate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.OnFlipTimelineFinished
// 0x0014 (0x0014 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished final
{
public:
	int32                                         CurrentInt_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished) == 0x000014, "Wrong size on FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished, CurrentInt_0) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished::CurrentInt_0' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished, Temp_int_Variable) == 0x000004, "Member 'FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'FlipNumberCountDownMinus01_BP_C_OnFlipTimelineFinished::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FlipNumberCountDown-01_BP.FlipNumberCountDown-01_BP_C.SetDitherFade
// 0x0004 (0x0004 - 0x0000)
struct FlipNumberCountDownMinus01_BP_C_SetDitherFade final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlipNumberCountDownMinus01_BP_C_SetDitherFade) == 0x000004, "Wrong alignment on FlipNumberCountDownMinus01_BP_C_SetDitherFade");
static_assert(sizeof(FlipNumberCountDownMinus01_BP_C_SetDitherFade) == 0x000004, "Wrong size on FlipNumberCountDownMinus01_BP_C_SetDitherFade");
static_assert(offsetof(FlipNumberCountDownMinus01_BP_C_SetDitherFade, Value) == 0x000000, "Member 'FlipNumberCountDownMinus01_BP_C_SetDitherFade::Value' has a wrong offset!");

}

