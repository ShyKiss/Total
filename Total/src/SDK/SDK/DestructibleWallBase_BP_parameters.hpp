#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DestructibleWallBase_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.BreakAllPlanks
// 0x001C (0x001C - 0x0000)
struct DestructibleWallBase_BP_C_BreakAllPlanks final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumBones_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_BreakAllPlanks) == 0x000004, "Wrong alignment on DestructibleWallBase_BP_C_BreakAllPlanks");
static_assert(sizeof(DestructibleWallBase_BP_C_BreakAllPlanks) == 0x00001C, "Wrong size on DestructibleWallBase_BP_C_BreakAllPlanks");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakAllPlanks, Temp_int_Variable) == 0x000000, "Member 'DestructibleWallBase_BP_C_BreakAllPlanks::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakAllPlanks, CallFunc_GetNumBones_ReturnValue) == 0x000004, "Member 'DestructibleWallBase_BP_C_BreakAllPlanks::CallFunc_GetNumBones_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakAllPlanks, CallFunc_GetBoneName_ReturnValue) == 0x000008, "Member 'DestructibleWallBase_BP_C_BreakAllPlanks::CallFunc_GetBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakAllPlanks, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'DestructibleWallBase_BP_C_BreakAllPlanks::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakAllPlanks, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'DestructibleWallBase_BP_C_BreakAllPlanks::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakAllPlanks, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000015, "Member 'DestructibleWallBase_BP_C_BreakAllPlanks::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakAllPlanks, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'DestructibleWallBase_BP_C_BreakAllPlanks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.BreakPlanks
// 0x0030 (0x0030 - 0x0000)
struct DestructibleWallBase_BP_C_BreakPlanks final
{
public:
	TArray<class FName>                           BoneNames;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_BreakPlanks) == 0x000008, "Wrong alignment on DestructibleWallBase_BP_C_BreakPlanks");
static_assert(sizeof(DestructibleWallBase_BP_C_BreakPlanks) == 0x000030, "Wrong size on DestructibleWallBase_BP_C_BreakPlanks");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlanks, BoneNames) == 0x000000, "Member 'DestructibleWallBase_BP_C_BreakPlanks::BoneNames' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlanks, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'DestructibleWallBase_BP_C_BreakPlanks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlanks, Temp_int_Array_Index_Variable) == 0x000014, "Member 'DestructibleWallBase_BP_C_BreakPlanks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlanks, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'DestructibleWallBase_BP_C_BreakPlanks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlanks, CallFunc_Array_Get_Item) == 0x00001C, "Member 'DestructibleWallBase_BP_C_BreakPlanks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlanks, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'DestructibleWallBase_BP_C_BreakPlanks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlanks, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'DestructibleWallBase_BP_C_BreakPlanks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.BreakPlank
// 0x0048 (0x0048 - 0x0000)
struct DestructibleWallBase_BP_C_BreakPlank final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_BreakPlank) == 0x000004, "Wrong alignment on DestructibleWallBase_BP_C_BreakPlank");
static_assert(sizeof(DestructibleWallBase_BP_C_BreakPlank) == 0x000048, "Wrong size on DestructibleWallBase_BP_C_BreakPlank");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlank, BoneName) == 0x000000, "Member 'DestructibleWallBase_BP_C_BreakPlank::BoneName' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlank, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'DestructibleWallBase_BP_C_BreakPlank::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlank, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00000C, "Member 'DestructibleWallBase_BP_C_BreakPlank::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlank, CallFunc_Normal_ReturnValue) == 0x000010, "Member 'DestructibleWallBase_BP_C_BreakPlank::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlank, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'DestructibleWallBase_BP_C_BreakPlank::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlank, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000028, "Member 'DestructibleWallBase_BP_C_BreakPlank::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlank, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x00002C, "Member 'DestructibleWallBase_BP_C_BreakPlank::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlank, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'DestructibleWallBase_BP_C_BreakPlank::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BreakPlank, CallFunc_RotateAngleAxis_ReturnValue) == 0x00003C, "Member 'DestructibleWallBase_BP_C_BreakPlank::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.SecondHit
// 0x000C (0x000C - 0x0000)
struct DestructibleWallBase_BP_C_SecondHit final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_SecondHit) == 0x000004, "Wrong alignment on DestructibleWallBase_BP_C_SecondHit");
static_assert(sizeof(DestructibleWallBase_BP_C_SecondHit) == 0x00000C, "Wrong size on DestructibleWallBase_BP_C_SecondHit");
static_assert(offsetof(DestructibleWallBase_BP_C_SecondHit, Vector) == 0x000000, "Member 'DestructibleWallBase_BP_C_SecondHit::Vector' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.ThirdHit
// 0x000C (0x000C - 0x0000)
struct DestructibleWallBase_BP_C_ThirdHit final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_ThirdHit) == 0x000004, "Wrong alignment on DestructibleWallBase_BP_C_ThirdHit");
static_assert(sizeof(DestructibleWallBase_BP_C_ThirdHit) == 0x00000C, "Wrong size on DestructibleWallBase_BP_C_ThirdHit");
static_assert(offsetof(DestructibleWallBase_BP_C_ThirdHit, Vector) == 0x000000, "Member 'DestructibleWallBase_BP_C_ThirdHit::Vector' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.FourthHit
// 0x000C (0x000C - 0x0000)
struct DestructibleWallBase_BP_C_FourthHit final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_FourthHit) == 0x000004, "Wrong alignment on DestructibleWallBase_BP_C_FourthHit");
static_assert(sizeof(DestructibleWallBase_BP_C_FourthHit) == 0x00000C, "Wrong size on DestructibleWallBase_BP_C_FourthHit");
static_assert(offsetof(DestructibleWallBase_BP_C_FourthHit, Vector) == 0x000000, "Member 'DestructibleWallBase_BP_C_FourthHit::Vector' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature final
{
public:
	class URBDamageableComponent*                 DamageableComponent_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDestroyed;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature) == 0x000008, "Wrong alignment on DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature");
static_assert(sizeof(DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature) == 0x000010, "Wrong size on DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature");
static_assert(offsetof(DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature, DamageableComponent_0) == 0x000000, "Member 'DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature::DamageableComponent_0' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature, IsDestroyed) == 0x000008, "Member 'DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature::IsDestroyed' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.Event_OnBreakObject
// 0x0008 (0x0008 - 0x0000)
struct DestructibleWallBase_BP_C_Event_OnBreakObject final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_Event_OnBreakObject) == 0x000008, "Wrong alignment on DestructibleWallBase_BP_C_Event_OnBreakObject");
static_assert(sizeof(DestructibleWallBase_BP_C_Event_OnBreakObject) == 0x000008, "Wrong size on DestructibleWallBase_BP_C_Event_OnBreakObject");
static_assert(offsetof(DestructibleWallBase_BP_C_Event_OnBreakObject, SourceActor) == 0x000000, "Member 'DestructibleWallBase_BP_C_Event_OnBreakObject::SourceActor' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.plankHit
// 0x0030 (0x0030 - 0x0000)
struct DestructibleWallBase_BP_C_PlankHit final
{
public:
	TArray<class FName>                           PlankToMove;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           PlanksToBreak;                                     // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                A;                                                 // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_PlankHit) == 0x000008, "Wrong alignment on DestructibleWallBase_BP_C_PlankHit");
static_assert(sizeof(DestructibleWallBase_BP_C_PlankHit) == 0x000030, "Wrong size on DestructibleWallBase_BP_C_PlankHit");
static_assert(offsetof(DestructibleWallBase_BP_C_PlankHit, PlankToMove) == 0x000000, "Member 'DestructibleWallBase_BP_C_PlankHit::PlankToMove' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_PlankHit, PlanksToBreak) == 0x000010, "Member 'DestructibleWallBase_BP_C_PlankHit::PlanksToBreak' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_PlankHit, A) == 0x000020, "Member 'DestructibleWallBase_BP_C_PlankHit::A' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.FirsHit
// 0x000C (0x000C - 0x0000)
struct DestructibleWallBase_BP_C_FirsHit final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_FirsHit) == 0x000004, "Wrong alignment on DestructibleWallBase_BP_C_FirsHit");
static_assert(sizeof(DestructibleWallBase_BP_C_FirsHit) == 0x00000C, "Wrong size on DestructibleWallBase_BP_C_FirsHit");
static_assert(offsetof(DestructibleWallBase_BP_C_FirsHit, Vector) == 0x000000, "Member 'DestructibleWallBase_BP_C_FirsHit::Vector' has a wrong offset!");

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.ExecuteUbergraph_DestructibleWallBase_BP
// 0x01E0 (0x01E0 - 0x0000)
struct DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Vector_3;                       // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Vector_2;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Vector_1;                       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBDamageableComponent*                 K2Node_ComponentBoundEvent_DamageableComponent;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_isDestroyed;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetDurabilityRatio_ReturnValue;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDestroyed_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_sourceActor;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetDurabilityRatio_ReturnValue_1;      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_CustomEvent_PlankToMove;                    // 0x0090(0x0010)(ConstParm, ReferenceParm)
	TArray<class FName>                           K2Node_CustomEvent_PlanksToBreak;                  // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                K2Node_CustomEvent_A;                              // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0124(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_CustomEvent_Vector;                         // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue;              // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP) == 0x000008, "Wrong alignment on DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP");
static_assert(sizeof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP) == 0x0001E0, "Wrong size on DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, EntryPoint) == 0x000000, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_CustomEvent_Vector_3) == 0x000004, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_CustomEvent_Vector_3' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BreakVector_X) == 0x000010, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BreakVector_Y) == 0x000014, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BreakVector_Z) == 0x000018, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_CustomEvent_Vector_2) == 0x00001C, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_CustomEvent_Vector_2' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_CustomEvent_Vector_1) == 0x000030, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_CustomEvent_Vector_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, Temp_byte_Variable) == 0x00003C, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, Temp_int_Array_Index_Variable) == 0x000040, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_ComponentBoundEvent_DamageableComponent) == 0x000050, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_ComponentBoundEvent_DamageableComponent' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_ComponentBoundEvent_isDestroyed) == 0x000058, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_ComponentBoundEvent_isDestroyed' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BP_GetDurabilityRatio_ReturnValue) == 0x00005C, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BP_GetDurabilityRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_IsDestroyed_ReturnValue) == 0x000060, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_IsDestroyed_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Less_FloatFloat_ReturnValue) == 0x000061, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_SelectFloat_ReturnValue) == 0x000064, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_Event_sourceActor) == 0x000068, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_Event_sourceActor' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BP_GetDurabilityRatio_ReturnValue_1) == 0x000070, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BP_GetDurabilityRatio_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000075, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000076, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x000077, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000084, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000085, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BooleanAND_ReturnValue) == 0x000086, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BooleanAND_ReturnValue_1) == 0x000087, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000088, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000089, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BooleanAND_ReturnValue_2) == 0x00008A, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BooleanAND_ReturnValue_3) == 0x00008B, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_CustomEvent_PlankToMove) == 0x000090, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_CustomEvent_PlankToMove' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_CustomEvent_PlanksToBreak) == 0x0000A0, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_CustomEvent_PlanksToBreak' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_CustomEvent_A) == 0x0000B0, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_CustomEvent_A' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Normal_ReturnValue) == 0x0000BC, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Array_Get_Item_1) == 0x0000D4, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, Temp_int_Loop_Counter_Variable_1) == 0x0000E4, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000EC, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000F0, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000F4, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0000F8, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000FC, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, Temp_byte_Variable_1) == 0x000108, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, Temp_bool_Variable) == 0x000109, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Lerp_ReturnValue) == 0x00010C, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_Select_Default) == 0x000110, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_Lerp_ReturnValue_1) == 0x000114, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_MakeVector_ReturnValue) == 0x000118, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000124, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, K2Node_CustomEvent_Vector) == 0x0001AC, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::K2Node_CustomEvent_Vector' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_GetBoneLocation_ReturnValue) == 0x0001B8, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_GetBoneLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BreakVector_X_1) == 0x0001C4, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BreakVector_Y_1) == 0x0001C8, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_BreakVector_Z_1) == 0x0001CC, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP, CallFunc_MakeVector_ReturnValue_1) == 0x0001D0, "Member 'DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

}

