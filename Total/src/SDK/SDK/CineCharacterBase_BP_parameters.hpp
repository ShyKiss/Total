#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CineCharacterBase_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CineCharacterBase_BP.CineCharacterBase_BP_C.ExecuteUbergraph_CineCharacterBase_BP
// 0x0010 (0x0010 - 0x0000)
struct CineCharacterBase_BP_C_ExecuteUbergraph_CineCharacterBase_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBTrialAsyncData*                      K2Node_CustomEvent_asyncData;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineCharacterBase_BP_C_ExecuteUbergraph_CineCharacterBase_BP) == 0x000008, "Wrong alignment on CineCharacterBase_BP_C_ExecuteUbergraph_CineCharacterBase_BP");
static_assert(sizeof(CineCharacterBase_BP_C_ExecuteUbergraph_CineCharacterBase_BP) == 0x000010, "Wrong size on CineCharacterBase_BP_C_ExecuteUbergraph_CineCharacterBase_BP");
static_assert(offsetof(CineCharacterBase_BP_C_ExecuteUbergraph_CineCharacterBase_BP, EntryPoint) == 0x000000, "Member 'CineCharacterBase_BP_C_ExecuteUbergraph_CineCharacterBase_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(CineCharacterBase_BP_C_ExecuteUbergraph_CineCharacterBase_BP, K2Node_CustomEvent_asyncData) == 0x000008, "Member 'CineCharacterBase_BP_C_ExecuteUbergraph_CineCharacterBase_BP::K2Node_CustomEvent_asyncData' has a wrong offset!");

// Function CineCharacterBase_BP.CineCharacterBase_BP_C.OnAsyncDataLoaded_Event_0
// 0x0008 (0x0008 - 0x0000)
struct CineCharacterBase_BP_C_OnAsyncDataLoaded_Event_0 final
{
public:
	class URBTrialAsyncData*                      AsyncData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineCharacterBase_BP_C_OnAsyncDataLoaded_Event_0) == 0x000008, "Wrong alignment on CineCharacterBase_BP_C_OnAsyncDataLoaded_Event_0");
static_assert(sizeof(CineCharacterBase_BP_C_OnAsyncDataLoaded_Event_0) == 0x000008, "Wrong size on CineCharacterBase_BP_C_OnAsyncDataLoaded_Event_0");
static_assert(offsetof(CineCharacterBase_BP_C_OnAsyncDataLoaded_Event_0, AsyncData) == 0x000000, "Member 'CineCharacterBase_BP_C_OnAsyncDataLoaded_Event_0::AsyncData' has a wrong offset!");

// Function CineCharacterBase_BP.CineCharacterBase_BP_C.Play
// 0x0008 (0x0008 - 0x0000)
struct CineCharacterBase_BP_C_Play final
{
public:
	class UAnimationAsset*                        NewAnimToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineCharacterBase_BP_C_Play) == 0x000008, "Wrong alignment on CineCharacterBase_BP_C_Play");
static_assert(sizeof(CineCharacterBase_BP_C_Play) == 0x000008, "Wrong size on CineCharacterBase_BP_C_Play");
static_assert(offsetof(CineCharacterBase_BP_C_Play, NewAnimToPlay) == 0x000000, "Member 'CineCharacterBase_BP_C_Play::NewAnimToPlay' has a wrong offset!");

// Function CineCharacterBase_BP.CineCharacterBase_BP_C.PreviewSequence
// 0x0018 (0x0018 - 0x0000)
struct CineCharacterBase_BP_C_PreviewSequence final
{
public:
	struct FSingleAnimationPlayData               K2Node_MakeStruct_SingleAnimationPlayData;         // 0x0000(0x0018)(NoDestructor)
};
static_assert(alignof(CineCharacterBase_BP_C_PreviewSequence) == 0x000008, "Wrong alignment on CineCharacterBase_BP_C_PreviewSequence");
static_assert(sizeof(CineCharacterBase_BP_C_PreviewSequence) == 0x000018, "Wrong size on CineCharacterBase_BP_C_PreviewSequence");
static_assert(offsetof(CineCharacterBase_BP_C_PreviewSequence, K2Node_MakeStruct_SingleAnimationPlayData) == 0x000000, "Member 'CineCharacterBase_BP_C_PreviewSequence::K2Node_MakeStruct_SingleAnimationPlayData' has a wrong offset!");

// Function CineCharacterBase_BP.CineCharacterBase_BP_C.SetPreviewSequenceData
// 0x0010 (0x0010 - 0x0000)
struct CineCharacterBase_BP_C_SetPreviewSequenceData final
{
public:
	class UAnimSequence*                          Anim_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_0;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineCharacterBase_BP_C_SetPreviewSequenceData) == 0x000008, "Wrong alignment on CineCharacterBase_BP_C_SetPreviewSequenceData");
static_assert(sizeof(CineCharacterBase_BP_C_SetPreviewSequenceData) == 0x000010, "Wrong size on CineCharacterBase_BP_C_SetPreviewSequenceData");
static_assert(offsetof(CineCharacterBase_BP_C_SetPreviewSequenceData, Anim_0) == 0x000000, "Member 'CineCharacterBase_BP_C_SetPreviewSequenceData::Anim_0' has a wrong offset!");
static_assert(offsetof(CineCharacterBase_BP_C_SetPreviewSequenceData, Time_0) == 0x000008, "Member 'CineCharacterBase_BP_C_SetPreviewSequenceData::Time_0' has a wrong offset!");

// Function CineCharacterBase_BP.CineCharacterBase_BP_C.GetCineFaceAnimBP
// 0x0008 (0x0008 - 0x0000)
struct CineCharacterBase_BP_C_GetCineFaceAnimBP final
{
public:
	class UCineFace_AnimBP_C*                     CineFaceAnimBP;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineCharacterBase_BP_C_GetCineFaceAnimBP) == 0x000008, "Wrong alignment on CineCharacterBase_BP_C_GetCineFaceAnimBP");
static_assert(sizeof(CineCharacterBase_BP_C_GetCineFaceAnimBP) == 0x000008, "Wrong size on CineCharacterBase_BP_C_GetCineFaceAnimBP");
static_assert(offsetof(CineCharacterBase_BP_C_GetCineFaceAnimBP, CineFaceAnimBP) == 0x000000, "Member 'CineCharacterBase_BP_C_GetCineFaceAnimBP::CineFaceAnimBP' has a wrong offset!");

// Function CineCharacterBase_BP.CineCharacterBase_BP_C.GetPoseAsset
// 0x0008 (0x0008 - 0x0000)
struct CineCharacterBase_BP_C_GetPoseAsset final
{
public:
	class UPoseAsset*                             PoseAsset;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineCharacterBase_BP_C_GetPoseAsset) == 0x000008, "Wrong alignment on CineCharacterBase_BP_C_GetPoseAsset");
static_assert(sizeof(CineCharacterBase_BP_C_GetPoseAsset) == 0x000008, "Wrong size on CineCharacterBase_BP_C_GetPoseAsset");
static_assert(offsetof(CineCharacterBase_BP_C_GetPoseAsset, PoseAsset) == 0x000000, "Member 'CineCharacterBase_BP_C_GetPoseAsset::PoseAsset' has a wrong offset!");

// Function CineCharacterBase_BP.CineCharacterBase_BP_C.GetBodyAnimation
// 0x0010 (0x0010 - 0x0000)
struct CineCharacterBase_BP_C_GetBodyAnimation final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Anim_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineCharacterBase_BP_C_GetBodyAnimation) == 0x000008, "Wrong alignment on CineCharacterBase_BP_C_GetBodyAnimation");
static_assert(sizeof(CineCharacterBase_BP_C_GetBodyAnimation) == 0x000010, "Wrong size on CineCharacterBase_BP_C_GetBodyAnimation");
static_assert(offsetof(CineCharacterBase_BP_C_GetBodyAnimation, Mesh) == 0x000000, "Member 'CineCharacterBase_BP_C_GetBodyAnimation::Mesh' has a wrong offset!");
static_assert(offsetof(CineCharacterBase_BP_C_GetBodyAnimation, Anim_0) == 0x000008, "Member 'CineCharacterBase_BP_C_GetBodyAnimation::Anim_0' has a wrong offset!");

// Function CineCharacterBase_BP.CineCharacterBase_BP_C.GetFacialAnimation
// 0x0010 (0x0010 - 0x0000)
struct CineCharacterBase_BP_C_GetFacialAnimation final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Anim_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineCharacterBase_BP_C_GetFacialAnimation) == 0x000008, "Wrong alignment on CineCharacterBase_BP_C_GetFacialAnimation");
static_assert(sizeof(CineCharacterBase_BP_C_GetFacialAnimation) == 0x000010, "Wrong size on CineCharacterBase_BP_C_GetFacialAnimation");
static_assert(offsetof(CineCharacterBase_BP_C_GetFacialAnimation, Mesh) == 0x000000, "Member 'CineCharacterBase_BP_C_GetFacialAnimation::Mesh' has a wrong offset!");
static_assert(offsetof(CineCharacterBase_BP_C_GetFacialAnimation, Anim_0) == 0x000008, "Member 'CineCharacterBase_BP_C_GetFacialAnimation::Anim_0' has a wrong offset!");

}

