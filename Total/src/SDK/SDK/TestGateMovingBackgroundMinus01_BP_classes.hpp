#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TestGateMovingBackgroundMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TestGateMovingBackground-01_BP.TestGateMovingBackground-01_BP_C
// 0x0028 (0x0258 - 0x0230)
class ATestGateMovingBackgroundMinus01_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_C87626094C929E9D264322A29630CA3B; // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_TestGateMovingBackgroundMinus01_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TestGateMovingBackground-01_BP_C">();
	}
	static class ATestGateMovingBackgroundMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATestGateMovingBackgroundMinus01_BP_C>();
	}
};
static_assert(alignof(ATestGateMovingBackgroundMinus01_BP_C) == 0x000008, "Wrong alignment on ATestGateMovingBackgroundMinus01_BP_C");
static_assert(sizeof(ATestGateMovingBackgroundMinus01_BP_C) == 0x000258, "Wrong size on ATestGateMovingBackgroundMinus01_BP_C");
static_assert(offsetof(ATestGateMovingBackgroundMinus01_BP_C, UberGraphFrame) == 0x000230, "Member 'ATestGateMovingBackgroundMinus01_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATestGateMovingBackgroundMinus01_BP_C, Billboard) == 0x000238, "Member 'ATestGateMovingBackgroundMinus01_BP_C::Billboard' has a wrong offset!");
static_assert(offsetof(ATestGateMovingBackgroundMinus01_BP_C, DefaultSceneRoot) == 0x000240, "Member 'ATestGateMovingBackgroundMinus01_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATestGateMovingBackgroundMinus01_BP_C, Timeline_0__Direction_C87626094C929E9D264322A29630CA3B) == 0x000248, "Member 'ATestGateMovingBackgroundMinus01_BP_C::Timeline_0__Direction_C87626094C929E9D264322A29630CA3B' has a wrong offset!");
static_assert(offsetof(ATestGateMovingBackgroundMinus01_BP_C, Timeline_0) == 0x000250, "Member 'ATestGateMovingBackgroundMinus01_BP_C::Timeline_0' has a wrong offset!");

}

