#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RigButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "OPP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RigButton.RigButton_C.OnMouseButtonDown
// 0x02F0 (0x02F0 - 0x0000)
struct RigButton_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0160(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0180(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0238(0x00B8)()
};
static_assert(alignof(RigButton_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on RigButton_C_OnMouseButtonDown");
static_assert(sizeof(RigButton_C_OnMouseButtonDown) == 0x0002F0, "Wrong size on RigButton_C_OnMouseButtonDown");
static_assert(offsetof(RigButton_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'RigButton_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'RigButton_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'RigButton_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000160, "Member 'RigButton_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000178, "Member 'RigButton_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000180, "Member 'RigButton_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000238, "Member 'RigButton_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function RigButton.RigButton_C.SetIsNew
// 0x0008 (0x0008 - 0x0000)
struct RigButton_C_SetIsNew final
{
public:
	bool                                          InIsNew;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WasNew;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RigButton_C_SetIsNew) == 0x000001, "Wrong alignment on RigButton_C_SetIsNew");
static_assert(sizeof(RigButton_C_SetIsNew) == 0x000008, "Wrong size on RigButton_C_SetIsNew");
static_assert(offsetof(RigButton_C_SetIsNew, InIsNew) == 0x000000, "Member 'RigButton_C_SetIsNew::InIsNew' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetIsNew, WasNew) == 0x000001, "Member 'RigButton_C_SetIsNew::WasNew' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetIsNew, Temp_bool_Variable) == 0x000002, "Member 'RigButton_C_SetIsNew::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetIsNew, Temp_byte_Variable) == 0x000003, "Member 'RigButton_C_SetIsNew::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetIsNew, Temp_byte_Variable_1) == 0x000004, "Member 'RigButton_C_SetIsNew::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetIsNew, K2Node_Select_Default) == 0x000005, "Member 'RigButton_C_SetIsNew::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetIsNew, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'RigButton_C_SetIsNew::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetIsNew, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'RigButton_C_SetIsNew::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function RigButton.RigButton_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct RigButton_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(RigButton_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on RigButton_C_OnRemovedFromFocusPath");
static_assert(sizeof(RigButton_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on RigButton_C_OnRemovedFromFocusPath");
static_assert(offsetof(RigButton_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'RigButton_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function RigButton.RigButton_C.IsConsideredHovered
// 0x0001 (0x0001 - 0x0000)
struct RigButton_C_IsConsideredHovered final
{
public:
	bool                                          bConsideredHovered;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RigButton_C_IsConsideredHovered) == 0x000001, "Wrong alignment on RigButton_C_IsConsideredHovered");
static_assert(sizeof(RigButton_C_IsConsideredHovered) == 0x000001, "Wrong size on RigButton_C_IsConsideredHovered");
static_assert(offsetof(RigButton_C_IsConsideredHovered, bConsideredHovered) == 0x000000, "Member 'RigButton_C_IsConsideredHovered::bConsideredHovered' has a wrong offset!");

// Function RigButton.RigButton_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct RigButton_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(RigButton_C_OnFocusReceived) == 0x000008, "Wrong alignment on RigButton_C_OnFocusReceived");
static_assert(sizeof(RigButton_C_OnFocusReceived) == 0x0001B0, "Wrong size on RigButton_C_OnFocusReceived");
static_assert(offsetof(RigButton_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'RigButton_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'RigButton_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'RigButton_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'RigButton_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function RigButton.RigButton_C.SetFocused
// 0x0010 (0x0010 - 0x0000)
struct RigButton_C_SetFocused final
{
public:
	bool                                          bInFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RigButton_C_SetFocused) == 0x000008, "Wrong alignment on RigButton_C_SetFocused");
static_assert(sizeof(RigButton_C_SetFocused) == 0x000010, "Wrong size on RigButton_C_SetFocused");
static_assert(offsetof(RigButton_C_SetFocused, bInFocused) == 0x000000, "Member 'RigButton_C_SetFocused::bInFocused' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetFocused, bWasConsideredHovered) == 0x000001, "Member 'RigButton_C_SetFocused::bWasConsideredHovered' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetFocused, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000002, "Member 'RigButton_C_SetFocused::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'RigButton_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000004, "Member 'RigButton_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetFocused, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x000005, "Member 'RigButton_C_SetFocused::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetFocused, CallFunc_GetMenuManager_ReturnValue) == 0x000008, "Member 'RigButton_C_SetFocused::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");

// Function RigButton.RigButton_C.SetHovered
// 0x0010 (0x0010 - 0x0000)
struct RigButton_C_SetHovered final
{
public:
	bool                                          bInHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RigButton_C_SetHovered) == 0x000008, "Wrong alignment on RigButton_C_SetHovered");
static_assert(sizeof(RigButton_C_SetHovered) == 0x000010, "Wrong size on RigButton_C_SetHovered");
static_assert(offsetof(RigButton_C_SetHovered, bInHovered) == 0x000000, "Member 'RigButton_C_SetHovered::bInHovered' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetHovered, bWasConsideredHovered) == 0x000001, "Member 'RigButton_C_SetHovered::bWasConsideredHovered' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetHovered, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000002, "Member 'RigButton_C_SetHovered::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetHovered, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x000003, "Member 'RigButton_C_SetHovered::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'RigButton_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000005, "Member 'RigButton_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_SetHovered, CallFunc_GetMenuManager_ReturnValue) == 0x000008, "Member 'RigButton_C_SetHovered::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");

// Function RigButton.RigButton_C.Refresh
// 0x01D0 (0x01D0 - 0x0000)
struct RigButton_C_Refresh final
{
public:
	bool                                          bWasAcquired;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBPlayerLoadout                       CallFunc_GetMenuLoadout_ReturnValue;               // 0x0018(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveSkillUpgradeTier_ActiveSkillUpgradeTier; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuUpgradeItemInfo                   CallFunc_GetUpgradeItemInfo_ReturnValue;           // 0x0040(0x0190)()
};
static_assert(alignof(RigButton_C_Refresh) == 0x000008, "Wrong alignment on RigButton_C_Refresh");
static_assert(sizeof(RigButton_C_Refresh) == 0x0001D0, "Wrong size on RigButton_C_Refresh");
static_assert(offsetof(RigButton_C_Refresh, bWasAcquired) == 0x000000, "Member 'RigButton_C_Refresh::bWasAcquired' has a wrong offset!");
static_assert(offsetof(RigButton_C_Refresh, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'RigButton_C_Refresh::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Refresh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'RigButton_C_Refresh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Refresh, CallFunc_GetMenuLoadout_ReturnValue) == 0x000018, "Member 'RigButton_C_Refresh::CallFunc_GetMenuLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Refresh, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'RigButton_C_Refresh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Refresh, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'RigButton_C_Refresh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Refresh, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000032, "Member 'RigButton_C_Refresh::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Refresh, CallFunc_GetActiveSkillUpgradeTier_ActiveSkillUpgradeTier) == 0x000034, "Member 'RigButton_C_Refresh::CallFunc_GetActiveSkillUpgradeTier_ActiveSkillUpgradeTier' has a wrong offset!");
static_assert(offsetof(RigButton_C_Refresh, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000038, "Member 'RigButton_C_Refresh::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RigButton_C_Refresh, CallFunc_GetUpgradeItemInfo_ReturnValue) == 0x000040, "Member 'RigButton_C_Refresh::CallFunc_GetUpgradeItemInfo_ReturnValue' has a wrong offset!");

// Function RigButton.RigButton_C.Init
// 0x0340 (0x0340 - 0x0000)
struct RigButton_C_Init final
{
public:
	bool                                          bIsLoadout_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemId;                                            // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHeader_0;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECurrencyType                                 Temp_byte_Variable;                                // 0x000D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuUpgradeItemInfo                   CallFunc_GetUpgradeItemInfo_ReturnValue;           // 0x0010(0x0190)()
	int32                                         CallFunc_GetActiveSkillUpgradeTier_ActiveSkillUpgradeTier; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerProgressionData*               CallFunc_GetLocalPlayerProgressionData_ReturnValue; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBItemProgressionData                 CallFunc_GetItemProgressionData_ReturnValue;       // 0x01B0(0x0170)(ConstParm)
	struct FRBPlayerLoadout                       CallFunc_GetMenuLoadout_ReturnValue;               // 0x0320(0x0018)()
	int32                                         CallFunc_Map_Find_Value;                           // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RigButton_C_Init) == 0x000008, "Wrong alignment on RigButton_C_Init");
static_assert(sizeof(RigButton_C_Init) == 0x000340, "Wrong size on RigButton_C_Init");
static_assert(offsetof(RigButton_C_Init, bIsLoadout_0) == 0x000000, "Member 'RigButton_C_Init::bIsLoadout_0' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, ItemId) == 0x000004, "Member 'RigButton_C_Init::ItemId' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, bIsHeader_0) == 0x00000C, "Member 'RigButton_C_Init::bIsHeader_0' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, Temp_byte_Variable) == 0x00000D, "Member 'RigButton_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, CallFunc_GetUpgradeItemInfo_ReturnValue) == 0x000010, "Member 'RigButton_C_Init::CallFunc_GetUpgradeItemInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, CallFunc_GetActiveSkillUpgradeTier_ActiveSkillUpgradeTier) == 0x0001A0, "Member 'RigButton_C_Init::CallFunc_GetActiveSkillUpgradeTier_ActiveSkillUpgradeTier' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, CallFunc_GetLocalPlayerProgressionData_ReturnValue) == 0x0001A8, "Member 'RigButton_C_Init::CallFunc_GetLocalPlayerProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, CallFunc_GetItemProgressionData_ReturnValue) == 0x0001B0, "Member 'RigButton_C_Init::CallFunc_GetItemProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, CallFunc_GetMenuLoadout_ReturnValue) == 0x000320, "Member 'RigButton_C_Init::CallFunc_GetMenuLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, CallFunc_Map_Find_Value) == 0x000338, "Member 'RigButton_C_Init::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, CallFunc_Map_Find_ReturnValue) == 0x00033C, "Member 'RigButton_C_Init::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Init, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00033D, "Member 'RigButton_C_Init::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function RigButton.RigButton_C.Setup
// 0x02C8 (0x02C8 - 0x0000)
struct RigButton_C_Setup final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0060(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuUpgradeItemState                         Temp_byte_Variable_7;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasUpgradeRecentlyBought_ReturnValue;     // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00E8(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0108(0x0028)()
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x5];                                      // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_6;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_7;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0160(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01B0(0x0018)()
	class FText                                   K2Node_Select_Default_8;                           // 0x01C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01E0(0x0040)(HasGetValueTypeHash)
	class URBPlayerLoadoutConfig*                 CallFunc_GetPlayerLoadoutConfig_ReturnValue;       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0228(0x0010)(ReferenceParm)
	struct FActiveSkillCommonParams               CallFunc_GetActiveSkillCommonParams_ReturnValue;   // 0x0238(0x0078)(ConstParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02B0(0x0018)()
};
static_assert(alignof(RigButton_C_Setup) == 0x000008, "Wrong alignment on RigButton_C_Setup");
static_assert(sizeof(RigButton_C_Setup) == 0x0002C8, "Wrong size on RigButton_C_Setup");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable) == 0x000000, "Member 'RigButton_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_bool_Variable) == 0x000001, "Member 'RigButton_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'RigButton_C_Setup::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'RigButton_C_Setup::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_bool_Variable_1) == 0x000058, "Member 'RigButton_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_1) == 0x000059, "Member 'RigButton_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_2) == 0x00005A, "Member 'RigButton_C_Setup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_bool_Variable_2) == 0x00005B, "Member 'RigButton_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_text_Variable) == 0x000060, "Member 'RigButton_C_Setup::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_bool_Variable_3) == 0x000078, "Member 'RigButton_C_Setup::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_3) == 0x000079, "Member 'RigButton_C_Setup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_4) == 0x00007A, "Member 'RigButton_C_Setup::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_bool_Variable_4) == 0x00007B, "Member 'RigButton_C_Setup::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_5) == 0x00007C, "Member 'RigButton_C_Setup::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_6) == 0x00007D, "Member 'RigButton_C_Setup::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_bool_Variable_5) == 0x00007E, "Member 'RigButton_C_Setup::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_object_Variable) == 0x000080, "Member 'RigButton_C_Setup::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_7) == 0x000088, "Member 'RigButton_C_Setup::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_object_Variable_1) == 0x000090, "Member 'RigButton_C_Setup::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_object_Variable_2) == 0x000098, "Member 'RigButton_C_Setup::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_object_Variable_3) == 0x0000A0, "Member 'RigButton_C_Setup::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_object_Variable_4) == 0x0000A8, "Member 'RigButton_C_Setup::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_object_Variable_5) == 0x0000B0, "Member 'RigButton_C_Setup::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_object_Variable_6) == 0x0000B8, "Member 'RigButton_C_Setup::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_object_Variable_7) == 0x0000C0, "Member 'RigButton_C_Setup::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_object_Variable_8) == 0x0000C8, "Member 'RigButton_C_Setup::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_bool_Variable_6) == 0x0000D0, "Member 'RigButton_C_Setup::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_8) == 0x0000D1, "Member 'RigButton_C_Setup::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_9) == 0x0000D2, "Member 'RigButton_C_Setup::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x0000D8, "Member 'RigButton_C_Setup::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_byte_Variable_10) == 0x0000E0, "Member 'RigButton_C_Setup::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_WasUpgradeRecentlyBought_ReturnValue) == 0x0000E1, "Member 'RigButton_C_Setup::CallFunc_WasUpgradeRecentlyBought_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_BooleanAND_ReturnValue) == 0x0000E2, "Member 'RigButton_C_Setup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x0000E3, "Member 'RigButton_C_Setup::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x0000E4, "Member 'RigButton_C_Setup::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_Not_PreBool_ReturnValue) == 0x0000E5, "Member 'RigButton_C_Setup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, Temp_bool_Variable_7) == 0x0000E6, "Member 'RigButton_C_Setup::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_Conv_IntToText_ReturnValue) == 0x0000E8, "Member 'RigButton_C_Setup::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_BooleanAND_ReturnValue_1) == 0x000100, "Member 'RigButton_C_Setup::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_Not_PreBool_ReturnValue_1) == 0x000101, "Member 'RigButton_C_Setup::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_BooleanOR_ReturnValue) == 0x000102, "Member 'RigButton_C_Setup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_Not_PreBool_ReturnValue_2) == 0x000103, "Member 'RigButton_C_Setup::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_Select_Default) == 0x000108, "Member 'RigButton_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_BooleanAND_ReturnValue_2) == 0x000130, "Member 'RigButton_C_Setup::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_Select_Default_1) == 0x000131, "Member 'RigButton_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_BooleanOR_ReturnValue_1) == 0x000132, "Member 'RigButton_C_Setup::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_Map_Find_Value) == 0x000138, "Member 'RigButton_C_Setup::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_Map_Find_ReturnValue) == 0x000140, "Member 'RigButton_C_Setup::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000141, "Member 'RigButton_C_Setup::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_BooleanAND_ReturnValue_3) == 0x000142, "Member 'RigButton_C_Setup::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_BooleanOR_ReturnValue_2) == 0x000143, "Member 'RigButton_C_Setup::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_Select_Default_2) == 0x000144, "Member 'RigButton_C_Setup::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_Select_Default_3) == 0x000145, "Member 'RigButton_C_Setup::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_Not_PreBool_ReturnValue_3) == 0x000146, "Member 'RigButton_C_Setup::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_BooleanAND_ReturnValue_4) == 0x000147, "Member 'RigButton_C_Setup::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_BooleanOR_ReturnValue_3) == 0x000148, "Member 'RigButton_C_Setup::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_Select_Default_4) == 0x000149, "Member 'RigButton_C_Setup::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_Select_Default_5) == 0x00014A, "Member 'RigButton_C_Setup::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_Select_Default_6) == 0x000150, "Member 'RigButton_C_Setup::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_Select_Default_7) == 0x000158, "Member 'RigButton_C_Setup::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_MakeStruct_FormatArgumentData) == 0x000160, "Member 'RigButton_C_Setup::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_MakeArray_Array) == 0x0001A0, "Member 'RigButton_C_Setup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_Format_ReturnValue) == 0x0001B0, "Member 'RigButton_C_Setup::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_Select_Default_8) == 0x0001C8, "Member 'RigButton_C_Setup::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001E0, "Member 'RigButton_C_Setup::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_GetPlayerLoadoutConfig_ReturnValue) == 0x000220, "Member 'RigButton_C_Setup::CallFunc_GetPlayerLoadoutConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, K2Node_MakeArray_Array_1) == 0x000228, "Member 'RigButton_C_Setup::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_GetActiveSkillCommonParams_ReturnValue) == 0x000238, "Member 'RigButton_C_Setup::CallFunc_GetActiveSkillCommonParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_Setup, CallFunc_Format_ReturnValue_1) == 0x0002B0, "Member 'RigButton_C_Setup::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function RigButton.RigButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct RigButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RigButton_C_PreConstruct) == 0x000001, "Wrong alignment on RigButton_C_PreConstruct");
static_assert(sizeof(RigButton_C_PreConstruct) == 0x000001, "Wrong size on RigButton_C_PreConstruct");
static_assert(offsetof(RigButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'RigButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function RigButton.RigButton_C.ExecuteUbergraph_RigButton
// 0x0038 (0x0038 - 0x0000)
struct RigButton_C_ExecuteUbergraph_RigButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue_1;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RigButton_C_ExecuteUbergraph_RigButton) == 0x000008, "Wrong alignment on RigButton_C_ExecuteUbergraph_RigButton");
static_assert(sizeof(RigButton_C_ExecuteUbergraph_RigButton) == 0x000038, "Wrong size on RigButton_C_ExecuteUbergraph_RigButton");
static_assert(offsetof(RigButton_C_ExecuteUbergraph_RigButton, EntryPoint) == 0x000000, "Member 'RigButton_C_ExecuteUbergraph_RigButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(RigButton_C_ExecuteUbergraph_RigButton, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'RigButton_C_ExecuteUbergraph_RigButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(RigButton_C_ExecuteUbergraph_RigButton, CallFunc_GetMenuManager_ReturnValue) == 0x000018, "Member 'RigButton_C_ExecuteUbergraph_RigButton::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_ExecuteUbergraph_RigButton, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'RigButton_C_ExecuteUbergraph_RigButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_ExecuteUbergraph_RigButton, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'RigButton_C_ExecuteUbergraph_RigButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_ExecuteUbergraph_RigButton, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x000022, "Member 'RigButton_C_ExecuteUbergraph_RigButton::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(RigButton_C_ExecuteUbergraph_RigButton, CallFunc_GetMenuManager_ReturnValue_1) == 0x000028, "Member 'RigButton_C_ExecuteUbergraph_RigButton::CallFunc_GetMenuManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_ExecuteUbergraph_RigButton, CallFunc_BP_IsUsingGamepad_ReturnValue_1) == 0x000030, "Member 'RigButton_C_ExecuteUbergraph_RigButton::CallFunc_BP_IsUsingGamepad_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RigButton_C_ExecuteUbergraph_RigButton, K2Node_Event_IsDesignTime) == 0x000031, "Member 'RigButton_C_ExecuteUbergraph_RigButton::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function RigButton.RigButton_C.OnRightClicked__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct RigButton_C_OnRightClicked__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              ActiveSkillType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RigButton_C_OnRightClicked__DelegateSignature) == 0x000004, "Wrong alignment on RigButton_C_OnRightClicked__DelegateSignature");
static_assert(sizeof(RigButton_C_OnRightClicked__DelegateSignature) == 0x00000C, "Wrong size on RigButton_C_OnRightClicked__DelegateSignature");
static_assert(offsetof(RigButton_C_OnRightClicked__DelegateSignature, ItemId) == 0x000000, "Member 'RigButton_C_OnRightClicked__DelegateSignature::ItemId' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnRightClicked__DelegateSignature, ActiveSkillType) == 0x000008, "Member 'RigButton_C_OnRightClicked__DelegateSignature::ActiveSkillType' has a wrong offset!");

// Function RigButton.RigButton_C.OnReleased__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct RigButton_C_OnReleased__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              ActiveSkillType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RigButton_C_OnReleased__DelegateSignature) == 0x000004, "Wrong alignment on RigButton_C_OnReleased__DelegateSignature");
static_assert(sizeof(RigButton_C_OnReleased__DelegateSignature) == 0x00000C, "Wrong size on RigButton_C_OnReleased__DelegateSignature");
static_assert(offsetof(RigButton_C_OnReleased__DelegateSignature, ItemId) == 0x000000, "Member 'RigButton_C_OnReleased__DelegateSignature::ItemId' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnReleased__DelegateSignature, ActiveSkillType) == 0x000008, "Member 'RigButton_C_OnReleased__DelegateSignature::ActiveSkillType' has a wrong offset!");

// Function RigButton.RigButton_C.OnPressed__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct RigButton_C_OnPressed__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              ActiveSkillType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RigButton_C_OnPressed__DelegateSignature) == 0x000004, "Wrong alignment on RigButton_C_OnPressed__DelegateSignature");
static_assert(sizeof(RigButton_C_OnPressed__DelegateSignature) == 0x00000C, "Wrong size on RigButton_C_OnPressed__DelegateSignature");
static_assert(offsetof(RigButton_C_OnPressed__DelegateSignature, ItemId) == 0x000000, "Member 'RigButton_C_OnPressed__DelegateSignature::ItemId' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnPressed__DelegateSignature, ActiveSkillType) == 0x000008, "Member 'RigButton_C_OnPressed__DelegateSignature::ActiveSkillType' has a wrong offset!");

// Function RigButton.RigButton_C.OnClicked__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct RigButton_C_OnClicked__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              ActiveSkillType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RigButton_C_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on RigButton_C_OnClicked__DelegateSignature");
static_assert(sizeof(RigButton_C_OnClicked__DelegateSignature) == 0x00000C, "Wrong size on RigButton_C_OnClicked__DelegateSignature");
static_assert(offsetof(RigButton_C_OnClicked__DelegateSignature, ItemId) == 0x000000, "Member 'RigButton_C_OnClicked__DelegateSignature::ItemId' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnClicked__DelegateSignature, ActiveSkillType) == 0x000008, "Member 'RigButton_C_OnClicked__DelegateSignature::ActiveSkillType' has a wrong offset!");

// Function RigButton.RigButton_C.OnUnhovered__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct RigButton_C_OnUnhovered__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              ActiveSkillType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RigButton_C_OnUnhovered__DelegateSignature) == 0x000004, "Wrong alignment on RigButton_C_OnUnhovered__DelegateSignature");
static_assert(sizeof(RigButton_C_OnUnhovered__DelegateSignature) == 0x00000C, "Wrong size on RigButton_C_OnUnhovered__DelegateSignature");
static_assert(offsetof(RigButton_C_OnUnhovered__DelegateSignature, ItemId) == 0x000000, "Member 'RigButton_C_OnUnhovered__DelegateSignature::ItemId' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnUnhovered__DelegateSignature, ActiveSkillType) == 0x000008, "Member 'RigButton_C_OnUnhovered__DelegateSignature::ActiveSkillType' has a wrong offset!");

// Function RigButton.RigButton_C.OnHovered__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct RigButton_C_OnHovered__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              ActiveSkillType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RigButton_C_OnHovered__DelegateSignature) == 0x000004, "Wrong alignment on RigButton_C_OnHovered__DelegateSignature");
static_assert(sizeof(RigButton_C_OnHovered__DelegateSignature) == 0x00000C, "Wrong size on RigButton_C_OnHovered__DelegateSignature");
static_assert(offsetof(RigButton_C_OnHovered__DelegateSignature, ItemId) == 0x000000, "Member 'RigButton_C_OnHovered__DelegateSignature::ItemId' has a wrong offset!");
static_assert(offsetof(RigButton_C_OnHovered__DelegateSignature, ActiveSkillType) == 0x000008, "Member 'RigButton_C_OnHovered__DelegateSignature::ActiveSkillType' has a wrong offset!");

}

