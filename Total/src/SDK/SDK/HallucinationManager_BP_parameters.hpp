#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HallucinationManager_BP

#include "Basic.hpp"

#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function HallucinationManager_BP.HallucinationManager_BP_C.Event_HallucinationStarted
// 0x0050 (0x0050 - 0x0000)
struct HallucinationManager_BP_C_Event_HallucinationStarted final
{
public:
	struct FHallucinationData                     HalluData;                                         // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(HallucinationManager_BP_C_Event_HallucinationStarted) == 0x000008, "Wrong alignment on HallucinationManager_BP_C_Event_HallucinationStarted");
static_assert(sizeof(HallucinationManager_BP_C_Event_HallucinationStarted) == 0x000050, "Wrong size on HallucinationManager_BP_C_Event_HallucinationStarted");
static_assert(offsetof(HallucinationManager_BP_C_Event_HallucinationStarted, HalluData) == 0x000000, "Member 'HallucinationManager_BP_C_Event_HallucinationStarted::HalluData' has a wrong offset!");

// Function HallucinationManager_BP.HallucinationManager_BP_C.Event_HallucinationStopped
// 0x0050 (0x0050 - 0x0000)
struct HallucinationManager_BP_C_Event_HallucinationStopped final
{
public:
	struct FHallucinationData                     HalluData;                                         // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(HallucinationManager_BP_C_Event_HallucinationStopped) == 0x000008, "Wrong alignment on HallucinationManager_BP_C_Event_HallucinationStopped");
static_assert(sizeof(HallucinationManager_BP_C_Event_HallucinationStopped) == 0x000050, "Wrong size on HallucinationManager_BP_C_Event_HallucinationStopped");
static_assert(offsetof(HallucinationManager_BP_C_Event_HallucinationStopped, HalluData) == 0x000000, "Member 'HallucinationManager_BP_C_Event_HallucinationStopped::HalluData' has a wrong offset!");

// Function HallucinationManager_BP.HallucinationManager_BP_C.ExecuteUbergraph_HallucinationManager_BP
// 0x00A8 (0x00A8 - 0x0000)
struct HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHallucinationData                     K2Node_Event_halluData_1;                          // 0x0008(0x0050)(ConstParm, NoDestructor)
	struct FHallucinationData                     K2Node_Event_halluData;                            // 0x0058(0x0050)(ConstParm, NoDestructor)
};
static_assert(alignof(HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP) == 0x000008, "Wrong alignment on HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP");
static_assert(sizeof(HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP) == 0x0000A8, "Wrong size on HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP");
static_assert(offsetof(HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP, EntryPoint) == 0x000000, "Member 'HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP, K2Node_Event_halluData_1) == 0x000008, "Member 'HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP::K2Node_Event_halluData_1' has a wrong offset!");
static_assert(offsetof(HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP, K2Node_Event_halluData) == 0x000058, "Member 'HallucinationManager_BP_C_ExecuteUbergraph_HallucinationManager_BP::K2Node_Event_halluData' has a wrong offset!");

}

