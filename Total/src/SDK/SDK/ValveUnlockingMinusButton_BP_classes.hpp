#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValveUnlockingMinusButton_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Base_ButtonMinusCoop_Base_BP_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ValveUnlocking-Button_BP.ValveUnlocking-Button_BP_C
// 0x0050 (0x02F8 - 0x02A8)
class AValveUnlockingMinusButton_BP_C final : public ABase_ButtonMinusCoop_Base_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ValveUnlockingMinusButton_BP_C;     // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   CableConduitJunctionCornerBoxMinus01;              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DiodeMinus03;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DiodeMinus02;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DiodeMinus01;                                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DiodeMinus05;                                      // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DiodeMinus04;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           TimerDiodes;                                       // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         DiodeLightOnCount;                                 // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void TickTimer();
	void RefreshTimerDiodesVisual();
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__ValveUnlockingMinusButton_BP_OperatableComponent_K2Node_ComponentBoundEvent_0_OnCoopOperatableEvent__DelegateSignature(class URBCoopOperatableComponent* Component);
	void BndEvt__ValveUnlockingMinusButton_BP_OperatableComponent_K2Node_ComponentBoundEvent_1_OnEnabledChanged__DelegateSignature(class URBInteractionZoneComponent* Component);
	void ExecuteUbergraph_ValveUnlockingMinusButton_BP(int32 EntryPoint);

	void ShouldTick(bool* bShouldTick) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ValveUnlocking-Button_BP_C">();
	}
	static class AValveUnlockingMinusButton_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AValveUnlockingMinusButton_BP_C>();
	}
};
static_assert(alignof(AValveUnlockingMinusButton_BP_C) == 0x000008, "Wrong alignment on AValveUnlockingMinusButton_BP_C");
static_assert(sizeof(AValveUnlockingMinusButton_BP_C) == 0x0002F8, "Wrong size on AValveUnlockingMinusButton_BP_C");
static_assert(offsetof(AValveUnlockingMinusButton_BP_C, UberGraphFrame_ValveUnlockingMinusButton_BP_C) == 0x0002A8, "Member 'AValveUnlockingMinusButton_BP_C::UberGraphFrame_ValveUnlockingMinusButton_BP_C' has a wrong offset!");
static_assert(offsetof(AValveUnlockingMinusButton_BP_C, CableConduitJunctionCornerBoxMinus01) == 0x0002B0, "Member 'AValveUnlockingMinusButton_BP_C::CableConduitJunctionCornerBoxMinus01' has a wrong offset!");
static_assert(offsetof(AValveUnlockingMinusButton_BP_C, DiodeMinus03) == 0x0002B8, "Member 'AValveUnlockingMinusButton_BP_C::DiodeMinus03' has a wrong offset!");
static_assert(offsetof(AValveUnlockingMinusButton_BP_C, DiodeMinus02) == 0x0002C0, "Member 'AValveUnlockingMinusButton_BP_C::DiodeMinus02' has a wrong offset!");
static_assert(offsetof(AValveUnlockingMinusButton_BP_C, DiodeMinus01) == 0x0002C8, "Member 'AValveUnlockingMinusButton_BP_C::DiodeMinus01' has a wrong offset!");
static_assert(offsetof(AValveUnlockingMinusButton_BP_C, DiodeMinus05) == 0x0002D0, "Member 'AValveUnlockingMinusButton_BP_C::DiodeMinus05' has a wrong offset!");
static_assert(offsetof(AValveUnlockingMinusButton_BP_C, DiodeMinus04) == 0x0002D8, "Member 'AValveUnlockingMinusButton_BP_C::DiodeMinus04' has a wrong offset!");
static_assert(offsetof(AValveUnlockingMinusButton_BP_C, TimerDiodes) == 0x0002E0, "Member 'AValveUnlockingMinusButton_BP_C::TimerDiodes' has a wrong offset!");
static_assert(offsetof(AValveUnlockingMinusButton_BP_C, DiodeLightOnCount) == 0x0002F0, "Member 'AValveUnlockingMinusButton_BP_C::DiodeLightOnCount' has a wrong offset!");

}

