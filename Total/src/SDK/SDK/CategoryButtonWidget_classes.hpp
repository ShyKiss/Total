#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CategoryButtonWidget

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CategoryButtonWidget.CategoryButtonWidget_C
// 0x0218 (0x0478 - 0x0260)
class UCategoryButtonWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       buyAnimation;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundImage;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_596;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedIcon;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           HoverBackground;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HoverBackgroundImage;                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_163;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockIcon;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              LockScaleBox;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewNotification;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              NewScale;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ECategoryButtonState                          State;                                             // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Event_OnClicked;                                   // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTexture2D*                             SelectedTexture;                                   // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             LockedTexture;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             AvailableTexture;                                  // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             AcquiredTexture;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             HoverBackgroundTexture;                            // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanShowIcon;                                       // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            EquippedBrush;                                     // 0x0320(0x0088)(Edit, BlueprintVisible)
	struct FSlateColor                            BaseColor;                                         // 0x03A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsEquipped;                                        // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Event_OnHovered;                                   // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Event_OnUnhovered;                                 // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSlateColor                            EquippedColor;                                     // 0x03F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             Event_OnPressed;                                   // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Event_OnReleased;                                  // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   ItemId;                                            // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewItem;                                         // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewNotificationScale;                              // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_New_Items_in_Sub_Category;                     // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnableHoverAnimation;                             // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsHovered;                                        // 0x0452(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowToxicity;                                     // 0x0453(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Event_BuyAnimationEnded;                           // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Event_HasSeenItem;                                 // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Event_OnClicked__DelegateSignature();
	void Event_OnHovered__DelegateSignature();
	void Event_OnUnhovered__DelegateSignature();
	void Event_OnPressed__DelegateSignature();
	void Event_OnReleased__DelegateSignature();
	void Event_BuyAnimationEnded__DelegateSignature();
	void Event_HasSeenItem__DelegateSignature();
	void ExecuteUbergraph_CategoryButtonWidget(int32 EntryPoint);
	void BndEvt__Button_596_K2Node_ComponentBoundEvent_4_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__Button_596_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Button_596_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_596_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_596_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void OnBuyAnimationEnded();
	void SetSelected(bool IsSelected_0);
	void SetState(ECategoryButtonState State_0);
	void Set_Icon(class UTexture2D* Icon_0, bool MatchSize);
	void SetCanShowIcon(bool CanShowIcon_0);
	void SetBaseColor(const struct FSlateColor& Color);
	void Set_Upgrade_Item_State(EMenuUpgradeItemState UpgradeItemState);
	void SetIsEquipped(bool InIsEquipped);
	void SetIsNew(bool InIsNew, bool InHasNewItemsInSubCategory);
	void SetHovered(bool bInHovered);
	void SequenceEvent__ENTRYPOINTCategoryButtonWidget_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CategoryButtonWidget_C">();
	}
	static class UCategoryButtonWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCategoryButtonWidget_C>();
	}
};
static_assert(alignof(UCategoryButtonWidget_C) == 0x000008, "Wrong alignment on UCategoryButtonWidget_C");
static_assert(sizeof(UCategoryButtonWidget_C) == 0x000478, "Wrong size on UCategoryButtonWidget_C");
static_assert(offsetof(UCategoryButtonWidget_C, UberGraphFrame) == 0x000260, "Member 'UCategoryButtonWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, buyAnimation) == 0x000268, "Member 'UCategoryButtonWidget_C::buyAnimation' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Hover) == 0x000270, "Member 'UCategoryButtonWidget_C::Hover' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, BackgroundImage) == 0x000278, "Member 'UCategoryButtonWidget_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Button_596) == 0x000280, "Member 'UCategoryButtonWidget_C::Button_596' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, EquippedIcon) == 0x000288, "Member 'UCategoryButtonWidget_C::EquippedIcon' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, HoverBackground) == 0x000290, "Member 'UCategoryButtonWidget_C::HoverBackground' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, HoverBackgroundImage) == 0x000298, "Member 'UCategoryButtonWidget_C::HoverBackgroundImage' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Icon) == 0x0002A0, "Member 'UCategoryButtonWidget_C::Icon' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Image) == 0x0002A8, "Member 'UCategoryButtonWidget_C::Image' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Image_163) == 0x0002B0, "Member 'UCategoryButtonWidget_C::Image_163' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, LockIcon) == 0x0002B8, "Member 'UCategoryButtonWidget_C::LockIcon' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, LockScaleBox) == 0x0002C0, "Member 'UCategoryButtonWidget_C::LockScaleBox' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, NewNotification) == 0x0002C8, "Member 'UCategoryButtonWidget_C::NewNotification' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, NewScale) == 0x0002D0, "Member 'UCategoryButtonWidget_C::NewScale' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, State) == 0x0002D8, "Member 'UCategoryButtonWidget_C::State' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, IsSelected) == 0x0002D9, "Member 'UCategoryButtonWidget_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Event_OnClicked) == 0x0002E0, "Member 'UCategoryButtonWidget_C::Event_OnClicked' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, SelectedTexture) == 0x0002F0, "Member 'UCategoryButtonWidget_C::SelectedTexture' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, LockedTexture) == 0x0002F8, "Member 'UCategoryButtonWidget_C::LockedTexture' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, AvailableTexture) == 0x000300, "Member 'UCategoryButtonWidget_C::AvailableTexture' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, AcquiredTexture) == 0x000308, "Member 'UCategoryButtonWidget_C::AcquiredTexture' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, HoverBackgroundTexture) == 0x000310, "Member 'UCategoryButtonWidget_C::HoverBackgroundTexture' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, CanShowIcon) == 0x000318, "Member 'UCategoryButtonWidget_C::CanShowIcon' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, EquippedBrush) == 0x000320, "Member 'UCategoryButtonWidget_C::EquippedBrush' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, BaseColor) == 0x0003A8, "Member 'UCategoryButtonWidget_C::BaseColor' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, IsEquipped) == 0x0003D0, "Member 'UCategoryButtonWidget_C::IsEquipped' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Event_OnHovered) == 0x0003D8, "Member 'UCategoryButtonWidget_C::Event_OnHovered' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Event_OnUnhovered) == 0x0003E8, "Member 'UCategoryButtonWidget_C::Event_OnUnhovered' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, EquippedColor) == 0x0003F8, "Member 'UCategoryButtonWidget_C::EquippedColor' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Event_OnPressed) == 0x000420, "Member 'UCategoryButtonWidget_C::Event_OnPressed' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Event_OnReleased) == 0x000430, "Member 'UCategoryButtonWidget_C::Event_OnReleased' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, ItemId) == 0x000440, "Member 'UCategoryButtonWidget_C::ItemId' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, IsNewItem) == 0x000448, "Member 'UCategoryButtonWidget_C::IsNewItem' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, NewNotificationScale) == 0x00044C, "Member 'UCategoryButtonWidget_C::NewNotificationScale' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Has_New_Items_in_Sub_Category) == 0x000450, "Member 'UCategoryButtonWidget_C::Has_New_Items_in_Sub_Category' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, bEnableHoverAnimation) == 0x000451, "Member 'UCategoryButtonWidget_C::bEnableHoverAnimation' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, bIsHovered) == 0x000452, "Member 'UCategoryButtonWidget_C::bIsHovered' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, bShowToxicity) == 0x000453, "Member 'UCategoryButtonWidget_C::bShowToxicity' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Event_BuyAnimationEnded) == 0x000458, "Member 'UCategoryButtonWidget_C::Event_BuyAnimationEnded' has a wrong offset!");
static_assert(offsetof(UCategoryButtonWidget_C, Event_HasSeenItem) == 0x000468, "Member 'UCategoryButtonWidget_C::Event_HasSeenItem' has a wrong offset!");

}

