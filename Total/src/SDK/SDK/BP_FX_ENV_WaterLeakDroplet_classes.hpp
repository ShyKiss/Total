#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_ENV_WaterLeakDroplet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FX_ENV_WaterLeakDroplet.BP_FX_ENV_WaterLeakDroplet_C
// 0x0058 (0x0288 - 0x0230)
class ABP_FX_ENV_WaterLeakDroplet_C final : public ARBClientOnlyActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBSoundComponent*                      RBSound;                                           // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Droplet;                                           // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SplashColor;                                       // 0x0254(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                KillzoneOffset;                                    // 0x0264(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnZone;                                         // 0x0270(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplashSize;                                        // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SplashVeloScale;                                   // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaveSize;                                          // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_FX_ENV_WaterLeakDroplet(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FX_ENV_WaterLeakDroplet_C">();
	}
	static class ABP_FX_ENV_WaterLeakDroplet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FX_ENV_WaterLeakDroplet_C>();
	}
};
static_assert(alignof(ABP_FX_ENV_WaterLeakDroplet_C) == 0x000008, "Wrong alignment on ABP_FX_ENV_WaterLeakDroplet_C");
static_assert(sizeof(ABP_FX_ENV_WaterLeakDroplet_C) == 0x000288, "Wrong size on ABP_FX_ENV_WaterLeakDroplet_C");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, UberGraphFrame) == 0x000230, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, RBSound) == 0x000238, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::RBSound' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, Droplet) == 0x000240, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::Droplet' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, DefaultSceneRoot) == 0x000248, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, Rate) == 0x000250, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::Rate' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, SplashColor) == 0x000254, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::SplashColor' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, KillzoneOffset) == 0x000264, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::KillzoneOffset' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, SpawnZone) == 0x000270, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::SpawnZone' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, SplashSize) == 0x00027C, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::SplashSize' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, SplashVeloScale) == 0x000280, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::SplashVeloScale' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_WaterLeakDroplet_C, WaveSize) == 0x000284, "Member 'ABP_FX_ENV_WaterLeakDroplet_C::WaveSize' has a wrong offset!");

}

