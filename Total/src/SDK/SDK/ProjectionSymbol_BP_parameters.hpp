#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProjectionSymbol_BP

#include "Basic.hpp"

#include "ProjectionSymbolExclusionState_structs.hpp"
#include "OPP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetAssociatedInvestigationComponent
// 0x0008 (0x0008 - 0x0000)
struct ProjectionSymbol_BP_C_GetAssociatedInvestigationComponent final
{
public:
	class URBPlayerInvestigationZoneComponent*    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetAssociatedInvestigationComponent) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_GetAssociatedInvestigationComponent");
static_assert(sizeof(ProjectionSymbol_BP_C_GetAssociatedInvestigationComponent) == 0x000008, "Wrong size on ProjectionSymbol_BP_C_GetAssociatedInvestigationComponent");
static_assert(offsetof(ProjectionSymbol_BP_C_GetAssociatedInvestigationComponent, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetAssociatedInvestigationComponent::ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetClue
// 0x0008 (0x0008 - 0x0000)
struct ProjectionSymbol_BP_C_GetClue final
{
public:
	struct FClueData                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetClue) == 0x000004, "Wrong alignment on ProjectionSymbol_BP_C_GetClue");
static_assert(sizeof(ProjectionSymbol_BP_C_GetClue) == 0x000008, "Wrong size on ProjectionSymbol_BP_C_GetClue");
static_assert(offsetof(ProjectionSymbol_BP_C_GetClue, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetClue::ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.OnWorldPopulateFinishedTimeSliced
// 0x0001 (0x0001 - 0x0000)
struct ProjectionSymbol_BP_C_OnWorldPopulateFinishedTimeSliced final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_OnWorldPopulateFinishedTimeSliced) == 0x000001, "Wrong alignment on ProjectionSymbol_BP_C_OnWorldPopulateFinishedTimeSliced");
static_assert(sizeof(ProjectionSymbol_BP_C_OnWorldPopulateFinishedTimeSliced) == 0x000001, "Wrong size on ProjectionSymbol_BP_C_OnWorldPopulateFinishedTimeSliced");
static_assert(offsetof(ProjectionSymbol_BP_C_OnWorldPopulateFinishedTimeSliced, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_OnWorldPopulateFinishedTimeSliced::ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetStateName
// 0x0028 (0x0028 - 0x0000)
struct ProjectionSymbol_BP_C_GetStateName final
{
public:
	class FString                                 StateA;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StateB;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetStateName) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_GetStateName");
static_assert(sizeof(ProjectionSymbol_BP_C_GetStateName) == 0x000028, "Wrong size on ProjectionSymbol_BP_C_GetStateName");
static_assert(offsetof(ProjectionSymbol_BP_C_GetStateName, StateA) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetStateName::StateA' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetStateName, StateB) == 0x000010, "Member 'ProjectionSymbol_BP_C_GetStateName::StateB' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetStateName, ReturnValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_GetStateName::ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.HideAllExcludedActors
// 0x0070 (0x0070 - 0x0000)
struct ProjectionSymbol_BP_C_HideAllExcludedActors final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class AActor>>          CallFunc_GetFullExcludeList_FullExcludeList;       // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_HideAllExcludedActors) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_HideAllExcludedActors");
static_assert(sizeof(ProjectionSymbol_BP_C_HideAllExcludedActors) == 0x000070, "Wrong size on ProjectionSymbol_BP_C_HideAllExcludedActors");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, CallFunc_GetFullExcludeList_FullExcludeList) == 0x000010, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::CallFunc_GetFullExcludeList_FullExcludeList' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, CallFunc_Array_Get_Item) == 0x000028, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, K2Node_DynamicCast_AsActor) == 0x000060, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_HideAllExcludedActors, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ProjectionSymbol_BP_C_HideAllExcludedActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetFullExcludeList
// 0x0030 (0x0030 - 0x0000)
struct ProjectionSymbol_BP_C_GetFullExcludeList final
{
public:
	TArray<TSoftObjectPtr<class AActor>>          FullExcludeList;                                   // 0x0000(0x0010)(Parm, OutParm)
	TArray<TSoftObjectPtr<class AActor>>          LocalList;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<TSoftObjectPtr<class AActor>>          CallFunc_GatherAllLinkedInverseActors_ReturnValue; // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetFullExcludeList) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_GetFullExcludeList");
static_assert(sizeof(ProjectionSymbol_BP_C_GetFullExcludeList) == 0x000030, "Wrong size on ProjectionSymbol_BP_C_GetFullExcludeList");
static_assert(offsetof(ProjectionSymbol_BP_C_GetFullExcludeList, FullExcludeList) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetFullExcludeList::FullExcludeList' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetFullExcludeList, LocalList) == 0x000010, "Member 'ProjectionSymbol_BP_C_GetFullExcludeList::LocalList' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetFullExcludeList, CallFunc_GatherAllLinkedInverseActors_ReturnValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_GetFullExcludeList::CallFunc_GatherAllLinkedInverseActors_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.FindFov
// 0x0014 (0x0014 - 0x0000)
struct ProjectionSymbol_BP_C_FindFov final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAsin_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_FindFov) == 0x000004, "Wrong alignment on ProjectionSymbol_BP_C_FindFov");
static_assert(sizeof(ProjectionSymbol_BP_C_FindFov) == 0x000014, "Wrong size on ProjectionSymbol_BP_C_FindFov");
static_assert(offsetof(ProjectionSymbol_BP_C_FindFov, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_FindFov::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_FindFov, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'ProjectionSymbol_BP_C_FindFov::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_FindFov, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_FindFov::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_FindFov, CallFunc_DegAsin_ReturnValue) == 0x00000C, "Member 'ProjectionSymbol_BP_C_FindFov::CallFunc_DegAsin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_FindFov, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'ProjectionSymbol_BP_C_FindFov::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.FixUp
// 0x0001 (0x0001 - 0x0000)
struct ProjectionSymbol_BP_C_FixUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_FixUp) == 0x000001, "Wrong alignment on ProjectionSymbol_BP_C_FixUp");
static_assert(sizeof(ProjectionSymbol_BP_C_FixUp) == 0x000001, "Wrong size on ProjectionSymbol_BP_C_FixUp");
static_assert(offsetof(ProjectionSymbol_BP_C_FixUp, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_FixUp::ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.Set Gizmo
// 0x0150 (0x0150 - 0x0000)
struct ProjectionSymbol_BP_C_Set_Gizmo final
{
public:
	float                                         _PreviousDistance;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _PreviousActorPos;                                 // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _PreviousAnchor;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorLocalOffset_SweepHitResult;    // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IsPropertyWidgetSelected_outWidgetIndex;  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPropertyWidgetSelected_ReturnValue;     // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_Set_Gizmo) == 0x000010, "Wrong alignment on ProjectionSymbol_BP_C_Set_Gizmo");
static_assert(sizeof(ProjectionSymbol_BP_C_Set_Gizmo) == 0x000150, "Wrong size on ProjectionSymbol_BP_C_Set_Gizmo");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, _PreviousDistance) == 0x000000, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::_PreviousDistance' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, _PreviousActorPos) == 0x000004, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::_PreviousActorPos' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, _PreviousAnchor) == 0x000010, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::_PreviousAnchor' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_Vector_Distance_ReturnValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_MakeVector_ReturnValue_1) == 0x00002C, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_Vector_Distance_ReturnValue_1) == 0x000038, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_K2_AddActorLocalOffset_SweepHitResult) == 0x000040, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_K2_AddActorLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_GetTransform_ReturnValue) == 0x0000D0, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000100, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_InverseTransformRotation_ReturnValue) == 0x00010C, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000118, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000124, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_Add_VectorVector_ReturnValue) == 0x000130, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00013C, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_IsPropertyWidgetSelected_outWidgetIndex) == 0x000148, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_IsPropertyWidgetSelected_outWidgetIndex' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_Set_Gizmo, CallFunc_IsPropertyWidgetSelected_ReturnValue) == 0x00014C, "Member 'ProjectionSymbol_BP_C_Set_Gizmo::CallFunc_IsPropertyWidgetSelected_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.ClearDebugProjectFlags
// 0x0038 (0x0038 - 0x0000)
struct ProjectionSymbol_BP_C_ClearDebugProjectFlags final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AProjectionSymbol_BP_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProjectionSymbol_BP_C*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_ClearDebugProjectFlags) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_ClearDebugProjectFlags");
static_assert(sizeof(ProjectionSymbol_BP_C_ClearDebugProjectFlags) == 0x000038, "Wrong size on ProjectionSymbol_BP_C_ClearDebugProjectFlags");
static_assert(offsetof(ProjectionSymbol_BP_C_ClearDebugProjectFlags, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ProjectionSymbol_BP_C_ClearDebugProjectFlags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ClearDebugProjectFlags, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ProjectionSymbol_BP_C_ClearDebugProjectFlags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ClearDebugProjectFlags, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_ClearDebugProjectFlags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ClearDebugProjectFlags, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'ProjectionSymbol_BP_C_ClearDebugProjectFlags::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ClearDebugProjectFlags, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_ClearDebugProjectFlags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ClearDebugProjectFlags, CallFunc_Array_Get_Item) == 0x000028, "Member 'ProjectionSymbol_BP_C_ClearDebugProjectFlags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ClearDebugProjectFlags, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'ProjectionSymbol_BP_C_ClearDebugProjectFlags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.ResetEditorTexture
// 0x0020 (0x0020 - 0x0000)
struct ProjectionSymbol_BP_C_ResetEditorTexture final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_ResetEditorTexture) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_ResetEditorTexture");
static_assert(sizeof(ProjectionSymbol_BP_C_ResetEditorTexture) == 0x000020, "Wrong size on ProjectionSymbol_BP_C_ResetEditorTexture");
static_assert(offsetof(ProjectionSymbol_BP_C_ResetEditorTexture, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_ResetEditorTexture::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ResetEditorTexture, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_ResetEditorTexture::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ResetEditorTexture, K2Node_DynamicCast_AsTexture) == 0x000010, "Member 'ProjectionSymbol_BP_C_ResetEditorTexture::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ResetEditorTexture, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ProjectionSymbol_BP_C_ResetEditorTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.PreviousClue
// 0x0048 (0x0048 - 0x0000)
struct ProjectionSymbol_BP_C_PreviousClue final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture*>                       CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_PreviousClue) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_PreviousClue");
static_assert(sizeof(ProjectionSymbol_BP_C_PreviousClue) == 0x000048, "Wrong size on ProjectionSymbol_BP_C_PreviousClue");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, Index_0) == 0x000000, "Member 'ProjectionSymbol_BP_C_PreviousClue::Index_0' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, Temp_int_Variable) == 0x000004, "Member 'ProjectionSymbol_BP_C_PreviousClue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_PreviousClue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ProjectionSymbol_BP_C_PreviousClue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, CallFunc_Map_Values_Values) == 0x000010, "Member 'ProjectionSymbol_BP_C_PreviousClue::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_PreviousClue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, CallFunc_Array_Get_Item) == 0x000028, "Member 'ProjectionSymbol_BP_C_PreviousClue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'ProjectionSymbol_BP_C_PreviousClue::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'ProjectionSymbol_BP_C_PreviousClue::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'ProjectionSymbol_BP_C_PreviousClue::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PreviousClue, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'ProjectionSymbol_BP_C_PreviousClue::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.NextClue
// 0x0050 (0x0050 - 0x0000)
struct ProjectionSymbol_BP_C_NextClue final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture*>                       CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_NextClue) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_NextClue");
static_assert(sizeof(ProjectionSymbol_BP_C_NextClue) == 0x000050, "Wrong size on ProjectionSymbol_BP_C_NextClue");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, Index_0) == 0x000000, "Member 'ProjectionSymbol_BP_C_NextClue::Index_0' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, Temp_int_Variable) == 0x000004, "Member 'ProjectionSymbol_BP_C_NextClue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_Map_Values_Values) == 0x000018, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_Array_Get_Item) == 0x000030, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_NextClue, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'ProjectionSymbol_BP_C_NextClue::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.UpdateClueTexutre
// 0x0030 (0x0030 - 0x0000)
struct ProjectionSymbol_BP_C_UpdateClueTexutre final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture*>                       CallFunc_Map_Values_Values;                        // 0x0008(0x0010)(ReferenceParm)
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_UpdateClueTexutre) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_UpdateClueTexutre");
static_assert(sizeof(ProjectionSymbol_BP_C_UpdateClueTexutre) == 0x000030, "Wrong size on ProjectionSymbol_BP_C_UpdateClueTexutre");
static_assert(offsetof(ProjectionSymbol_BP_C_UpdateClueTexutre, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_UpdateClueTexutre::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UpdateClueTexutre, CallFunc_Map_Values_Values) == 0x000008, "Member 'ProjectionSymbol_BP_C_UpdateClueTexutre::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UpdateClueTexutre, CallFunc_Array_Get_Item) == 0x000018, "Member 'ProjectionSymbol_BP_C_UpdateClueTexutre::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UpdateClueTexutre, CallFunc_Map_Find_Value) == 0x000020, "Member 'ProjectionSymbol_BP_C_UpdateClueTexutre::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UpdateClueTexutre, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'ProjectionSymbol_BP_C_UpdateClueTexutre::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.SetMaterial
// 0x0048 (0x0048 - 0x0000)
struct ProjectionSymbol_BP_C_SetMaterial final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDecalDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_SetMaterial) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_SetMaterial");
static_assert(sizeof(ProjectionSymbol_BP_C_SetMaterial) == 0x000048, "Wrong size on ProjectionSymbol_BP_C_SetMaterial");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, Force) == 0x000000, "Member 'ProjectionSymbol_BP_C_SetMaterial::Force' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ProjectionSymbol_BP_C_SetMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, CallFunc_IsDedicatedServer_ReturnValue) == 0x000002, "Member 'ProjectionSymbol_BP_C_SetMaterial::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'ProjectionSymbol_BP_C_SetMaterial::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, CallFunc_BreakVector_X) == 0x000010, "Member 'ProjectionSymbol_BP_C_SetMaterial::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, CallFunc_BreakVector_Y) == 0x000014, "Member 'ProjectionSymbol_BP_C_SetMaterial::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, CallFunc_BreakVector_Z) == 0x000018, "Member 'ProjectionSymbol_BP_C_SetMaterial::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'ProjectionSymbol_BP_C_SetMaterial::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, CallFunc_MakeColor_ReturnValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_SetMaterial::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, K2Node_MakeStruct_LinearColor) == 0x000030, "Member 'ProjectionSymbol_BP_C_SetMaterial::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_SetMaterial, CallFunc_CreateDecalDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'ProjectionSymbol_BP_C_SetMaterial::CallFunc_CreateDecalDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.getDepthTexture
// 0x0108 (0x0108 - 0x0000)
struct ProjectionSymbol_BP_C_GetDepthTexture final
{
public:
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_GetAssetByObjectPath_ReturnValue;         // 0x0068(0x0060)(HasGetValueTypeHash)
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00E0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetDepthTexture) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_GetDepthTexture");
static_assert(sizeof(ProjectionSymbol_BP_C_GetDepthTexture) == 0x000108, "Wrong size on ProjectionSymbol_BP_C_GetDepthTexture");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_GetAssetRegistry_ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_GetSubstring_ReturnValue) == 0x000010, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000040, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000050, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_Conv_StringToName_ReturnValue) == 0x000060, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_GetAssetByObjectPath_ReturnValue) == 0x000068, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_GetAssetByObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_GetAsset_ReturnValue) == 0x0000C8, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, K2Node_DynamicCast_AsTexture_2D) == 0x0000D0, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDepthTexture, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000E0, "Member 'ProjectionSymbol_BP_C_GetDepthTexture::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.CaptureDepth
// 0x0090 (0x0090 - 0x0000)
struct ProjectionSymbol_BP_C_CaptureDepth final
{
public:
	TArray<TSoftObjectPtr<class AActor>>          CallFunc_GetFullExcludeList_FullExcludeList;       // 0x0000(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInEditor_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0xF];                                       // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACaptureTextureDepth_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_CaptureDepth) == 0x000010, "Wrong alignment on ProjectionSymbol_BP_C_CaptureDepth");
static_assert(sizeof(ProjectionSymbol_BP_C_CaptureDepth) == 0x000090, "Wrong size on ProjectionSymbol_BP_C_CaptureDepth");
static_assert(offsetof(ProjectionSymbol_BP_C_CaptureDepth, CallFunc_GetFullExcludeList_FullExcludeList) == 0x000000, "Member 'ProjectionSymbol_BP_C_CaptureDepth::CallFunc_GetFullExcludeList_FullExcludeList' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_CaptureDepth, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'ProjectionSymbol_BP_C_CaptureDepth::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_CaptureDepth, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'ProjectionSymbol_BP_C_CaptureDepth::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_CaptureDepth, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000028, "Member 'ProjectionSymbol_BP_C_CaptureDepth::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_CaptureDepth, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'ProjectionSymbol_BP_C_CaptureDepth::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_CaptureDepth, CallFunc_IsInEditor_ReturnValue) == 0x000040, "Member 'ProjectionSymbol_BP_C_CaptureDepth::CallFunc_IsInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_CaptureDepth, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'ProjectionSymbol_BP_C_CaptureDepth::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_CaptureDepth, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'ProjectionSymbol_BP_C_CaptureDepth::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_CaptureDepth, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'ProjectionSymbol_BP_C_CaptureDepth::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.UserConstructionScript
// 0x06D0 (0x06D0 - 0x0000)
struct ProjectionSymbol_BP_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBSettings_Anim*                       CallFunc_GetRBSettings_Anim_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInEditor_ReturnValue;                   // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInEditor_ReturnValue_1;                 // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_134[0xC];                                      // 0x0134(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x01A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0228(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CA[0x2];                                      // 0x02CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetProjectionOrigin_ReturnValue;          // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_2;                      // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0348(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_10;                // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_404[0xC];                                      // 0x0404(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0410(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x0440(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x04D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0534(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_11;                // 0x0540(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0550(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetProjectionForward_ReturnValue;         // 0x0580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_3; // 0x058C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0614(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0620(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_12;                // 0x0638(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0644(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ProjectionSymbol_BP_C_UserConstructionScript) == 0x000010, "Wrong alignment on ProjectionSymbol_BP_C_UserConstructionScript");
static_assert(sizeof(ProjectionSymbol_BP_C_UserConstructionScript) == 0x0006D0, "Wrong size on ProjectionSymbol_BP_C_UserConstructionScript");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_TransformLocation_ReturnValue) == 0x000044, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000060, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000070, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000080, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_GetRBSettings_Anim_ReturnValue) == 0x000088, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_GetRBSettings_Anim_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000090, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000094, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000098, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x0000A4, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x0000AC, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000B0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x0000B4, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_VLerp_ReturnValue) == 0x0000C0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000CC, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_IsInEditor_ReturnValue) == 0x0000CD, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_IsInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000D0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000D4, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000DC, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x0000E0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_VLerp_ReturnValue_1) == 0x0000EC, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x0000F8, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_FindLookAtRotation_ReturnValue) == 0x000104, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakRotator_Roll) == 0x000110, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakRotator_Pitch) == 0x000114, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakRotator_Yaw) == 0x000118, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_IsInEditor_ReturnValue_1) == 0x00011C, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_IsInEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000120, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000124, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000128, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x000140, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_1) == 0x000170, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0001A0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000228, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x0002B0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x0002B8, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0002C8, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x0002C9, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_3) == 0x0002CC, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002D8, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0002DC, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0002E0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_4) == 0x0002E4, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_5) == 0x0002F0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_GetProjectionOrigin_ReturnValue) == 0x0002FC, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_GetProjectionOrigin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_6) == 0x000308, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_7) == 0x000314, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Vector_Distance_ReturnValue) == 0x000320, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_8) == 0x000324, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_VLerp_ReturnValue_2) == 0x000330, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_VLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_9) == 0x00033C, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000348, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_10) == 0x0003D0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x0003DC, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakRotator_Roll_1) == 0x0003E8, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakRotator_Pitch_1) == 0x0003EC, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakRotator_Yaw_1) == 0x0003F0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue_1) == 0x0003F4, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_1) == 0x0003F8, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_2) == 0x000410, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x000440, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_GetRelativeTransform_ReturnValue) == 0x0004D0, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_3) == 0x000500, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x000504, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x000510, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x00051C, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakRotator_Roll_2) == 0x000528, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakRotator_Pitch_2) == 0x00052C, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakRotator_Yaw_2) == 0x000530, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_2) == 0x000534, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_11) == 0x000540, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_3) == 0x000550, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_GetProjectionForward_ReturnValue) == 0x000580, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_GetProjectionForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult_3) == 0x00058C, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000614, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000620, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x00062C, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000630, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000634, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_12) == 0x000638, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000644, "Member 'ProjectionSymbol_BP_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.OnLoaded_AB95D07B4D3F3F42212E9F9F4E4F3361
// 0x0008 (0x0008 - 0x0000)
struct ProjectionSymbol_BP_C_OnLoaded_AB95D07B4D3F3F42212E9F9F4E4F3361 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_OnLoaded_AB95D07B4D3F3F42212E9F9F4E4F3361) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_OnLoaded_AB95D07B4D3F3F42212E9F9F4E4F3361");
static_assert(sizeof(ProjectionSymbol_BP_C_OnLoaded_AB95D07B4D3F3F42212E9F9F4E4F3361) == 0x000008, "Wrong size on ProjectionSymbol_BP_C_OnLoaded_AB95D07B4D3F3F42212E9F9F4E4F3361");
static_assert(offsetof(ProjectionSymbol_BP_C_OnLoaded_AB95D07B4D3F3F42212E9F9F4E4F3361, Loaded) == 0x000000, "Member 'ProjectionSymbol_BP_C_OnLoaded_AB95D07B4D3F3F42212E9F9F4E4F3361::Loaded' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.PrepareState
// 0x0010 (0x0010 - 0x0000)
struct ProjectionSymbol_BP_C_PrepareState final
{
public:
	bool                                          bStateA;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 RandomOwner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_PrepareState) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_PrepareState");
static_assert(sizeof(ProjectionSymbol_BP_C_PrepareState) == 0x000010, "Wrong size on ProjectionSymbol_BP_C_PrepareState");
static_assert(offsetof(ProjectionSymbol_BP_C_PrepareState, bStateA) == 0x000000, "Member 'ProjectionSymbol_BP_C_PrepareState::bStateA' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_PrepareState, RandomOwner) == 0x000008, "Member 'ProjectionSymbol_BP_C_PrepareState::RandomOwner' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.SetShouldBeIgnoredForLots
// 0x0001 (0x0001 - 0x0000)
struct ProjectionSymbol_BP_C_SetShouldBeIgnoredForLots final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_SetShouldBeIgnoredForLots) == 0x000001, "Wrong alignment on ProjectionSymbol_BP_C_SetShouldBeIgnoredForLots");
static_assert(sizeof(ProjectionSymbol_BP_C_SetShouldBeIgnoredForLots) == 0x000001, "Wrong size on ProjectionSymbol_BP_C_SetShouldBeIgnoredForLots");
static_assert(offsetof(ProjectionSymbol_BP_C_SetShouldBeIgnoredForLots, bValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_SetShouldBeIgnoredForLots::bValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.SetClue
// 0x0008 (0x0008 - 0x0000)
struct ProjectionSymbol_BP_C_SetClue final
{
public:
	struct FClueData                              ClueData;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_SetClue) == 0x000004, "Wrong alignment on ProjectionSymbol_BP_C_SetClue");
static_assert(sizeof(ProjectionSymbol_BP_C_SetClue) == 0x000008, "Wrong size on ProjectionSymbol_BP_C_SetClue");
static_assert(offsetof(ProjectionSymbol_BP_C_SetClue, ClueData) == 0x000000, "Member 'ProjectionSymbol_BP_C_SetClue::ClueData' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct ProjectionSymbol_BP_C_SetState final
{
public:
	bool                                          bStateA;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_SetState) == 0x000001, "Wrong alignment on ProjectionSymbol_BP_C_SetState");
static_assert(sizeof(ProjectionSymbol_BP_C_SetState) == 0x000001, "Wrong size on ProjectionSymbol_BP_C_SetState");
static_assert(offsetof(ProjectionSymbol_BP_C_SetState, bStateA) == 0x000000, "Member 'ProjectionSymbol_BP_C_SetState::bStateA' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.PostDuplicated
// 0x0008 (0x0008 - 0x0000)
struct ProjectionSymbol_BP_C_PostDuplicated final
{
public:
	class AActor*                                 DuplicationParent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_PostDuplicated) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_PostDuplicated");
static_assert(sizeof(ProjectionSymbol_BP_C_PostDuplicated) == 0x000008, "Wrong size on ProjectionSymbol_BP_C_PostDuplicated");
static_assert(offsetof(ProjectionSymbol_BP_C_PostDuplicated, DuplicationParent) == 0x000000, "Member 'ProjectionSymbol_BP_C_PostDuplicated::DuplicationParent' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.ExecuteUbergraph_ProjectionSymbol_BP
// 0x0298 (0x0298 - 0x0000)
struct ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bStateA_1;                            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_randomOwner;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bValue;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClueData                              K2Node_Event_clueData;                             // 0x0024(0x0008)(ConstParm, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0058(0x0028)(HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBDoor*                                K2Node_DynamicCast_AsRB_Door;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ObjectToString_ReturnValue;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F0(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ObjectToString_ReturnValue_1;        // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bStateA;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0148(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0160(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsStateA_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsStateSet_ReturnValue;                // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_duplicationParent;                    // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProjectionSymbolExclusionState               K2Node_Select_Default;                             // 0x01E8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item_1;                         // 0x01F0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor_1;                      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBDoor*                                K2Node_DynamicCast_AsRB_Door_1;                    // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRBRandomizable>       CallFunc_SetShouldBeIgnoredForLots_self_CastInput; // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IRBRandomizable>       CallFunc_SetState_self_CastInput;                  // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRBRandomizable>       CallFunc_SetState_self_CastInput_1;                // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP");
static_assert(sizeof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP) == 0x000298, "Wrong size on ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, EntryPoint) == 0x000000, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, Temp_bool_Variable) == 0x000004, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_MakeLiteralByte_ReturnValue) == 0x000005, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_Event_bStateA_1) == 0x000014, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_Event_bStateA_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_Event_randomOwner) == 0x000018, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_Event_randomOwner' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_Event_bValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_Event_bValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_Event_clueData) == 0x000024, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_Event_clueData' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, Temp_object_Variable) == 0x000050, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Array_Get_Item) == 0x000058, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_AsTexture) == 0x000080, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000090, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_AsActor) == 0x0000A0, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_AsRB_Door) == 0x0000B0, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_AsRB_Door' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Conv_ObjectToString_ReturnValue) == 0x0000C0, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Conv_ObjectToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_MakeStruct_FormatArgumentData) == 0x0000F0, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Conv_ObjectToString_ReturnValue_1) == 0x000130, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Conv_ObjectToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_Event_bStateA) == 0x000140, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_Event_bStateA' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000148, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_MakeStruct_FormatArgumentData_1) == 0x000160, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_MakeArray_Array) == 0x0001A0, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Format_ReturnValue) == 0x0001B0, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Conv_TextToString_ReturnValue) == 0x0001C8, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_BP_IsStateA_ReturnValue) == 0x0001D8, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_BP_IsStateA_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_BP_IsStateSet_ReturnValue) == 0x0001D9, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_BP_IsStateSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001DA, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_Event_duplicationParent) == 0x0001E0, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_Event_duplicationParent' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_Select_Default) == 0x0001E8, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Array_Get_Item_1) == 0x0001F0, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Array_Length_ReturnValue_1) == 0x000218, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000220, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000228, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_AsActor_1) == 0x000230, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_bSuccess_3) == 0x000238, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_AsRB_Door_1) == 0x000240, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_AsRB_Door_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_DynamicCast_bSuccess_4) == 0x000248, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, K2Node_CustomEvent_Loaded) == 0x000250, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_SetShouldBeIgnoredForLots_self_CastInput) == 0x000258, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_SetShouldBeIgnoredForLots_self_CastInput' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_SetState_self_CastInput) == 0x000268, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_SetState_self_CastInput' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, Temp_int_Loop_Counter_Variable_1) == 0x000278, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_SetState_self_CastInput_1) == 0x000280, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_SetState_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x000290, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000294, "Member 'ProjectionSymbol_BP_C_ExecuteUbergraph_ProjectionSymbol_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.IsRandomStateSet
// 0x0001 (0x0001 - 0x0000)
struct ProjectionSymbol_BP_C_IsRandomStateSet final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_IsRandomStateSet) == 0x000001, "Wrong alignment on ProjectionSymbol_BP_C_IsRandomStateSet");
static_assert(sizeof(ProjectionSymbol_BP_C_IsRandomStateSet) == 0x000001, "Wrong size on ProjectionSymbol_BP_C_IsRandomStateSet");
static_assert(offsetof(ProjectionSymbol_BP_C_IsRandomStateSet, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_IsRandomStateSet::ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.IsStateA
// 0x0002 (0x0002 - 0x0000)
struct ProjectionSymbol_BP_C_IsStateA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsStateA_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_IsStateA) == 0x000001, "Wrong alignment on ProjectionSymbol_BP_C_IsStateA");
static_assert(sizeof(ProjectionSymbol_BP_C_IsStateA) == 0x000002, "Wrong size on ProjectionSymbol_BP_C_IsStateA");
static_assert(offsetof(ProjectionSymbol_BP_C_IsStateA, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_IsStateA::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsStateA, CallFunc_BP_IsStateA_ReturnValue) == 0x000001, "Member 'ProjectionSymbol_BP_C_IsStateA::CallFunc_BP_IsStateA_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.ShouldBeIgnoredForLots
// 0x0002 (0x0002 - 0x0000)
struct ProjectionSymbol_BP_C_ShouldBeIgnoredForLots final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_ShouldBeIgnoredForLots) == 0x000001, "Wrong alignment on ProjectionSymbol_BP_C_ShouldBeIgnoredForLots");
static_assert(sizeof(ProjectionSymbol_BP_C_ShouldBeIgnoredForLots) == 0x000002, "Wrong size on ProjectionSymbol_BP_C_ShouldBeIgnoredForLots");
static_assert(offsetof(ProjectionSymbol_BP_C_ShouldBeIgnoredForLots, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_ShouldBeIgnoredForLots::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_ShouldBeIgnoredForLots, CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue) == 0x000001, "Member 'ProjectionSymbol_BP_C_ShouldBeIgnoredForLots::CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetObjectiveTypeIndex
// 0x0008 (0x0008 - 0x0000)
struct ProjectionSymbol_BP_C_GetObjectiveTypeIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIntValue_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetObjectiveTypeIndex) == 0x000004, "Wrong alignment on ProjectionSymbol_BP_C_GetObjectiveTypeIndex");
static_assert(sizeof(ProjectionSymbol_BP_C_GetObjectiveTypeIndex) == 0x000008, "Wrong size on ProjectionSymbol_BP_C_GetObjectiveTypeIndex");
static_assert(offsetof(ProjectionSymbol_BP_C_GetObjectiveTypeIndex, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetObjectiveTypeIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetObjectiveTypeIndex, CallFunc_GetIntValue_ReturnValue) == 0x000004, "Member 'ProjectionSymbol_BP_C_GetObjectiveTypeIndex::CallFunc_GetIntValue_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetPerfectPlayerLocation
// 0x00A0 (0x00A0 - 0x0000)
struct ProjectionSymbol_BP_C_GetPerfectPlayerLocation final
{
public:
	class ARBPlayer*                              Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetProjectionOrigin_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSettings_Anim*                       CallFunc_GetRBSettings_Anim_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetProjectionForward_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_GetPerfectPlayerLocation");
static_assert(sizeof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation) == 0x0000A0, "Wrong size on ProjectionSymbol_BP_C_GetPerfectPlayerLocation");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, Player) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::Player' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000020, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_MakeVector_ReturnValue_2) == 0x00002C, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_GetProjectionOrigin_ReturnValue) == 0x000044, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_GetProjectionOrigin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_GetRBSettings_Anim_ReturnValue) == 0x000050, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_GetRBSettings_Anim_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_GetProjectionForward_ReturnValue) == 0x000058, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_GetProjectionForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_GetYawPitchFromVector_Yaw) == 0x000064, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_GetYawPitchFromVector_Pitch) == 0x000068, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_MakeVector_ReturnValue_3) == 0x00007C, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000088, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetPerfectPlayerLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000094, "Member 'ProjectionSymbol_BP_C_GetPerfectPlayerLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.IsDoorFullyClosed
// 0x0010 (0x0010 - 0x0000)
struct ProjectionSymbol_BP_C_IsDoorFullyClosed final
{
public:
	class ARBDoor*                                Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsClosed_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsReplaced_ReturnValue;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_IsDoorFullyClosed) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_IsDoorFullyClosed");
static_assert(sizeof(ProjectionSymbol_BP_C_IsDoorFullyClosed) == 0x000010, "Wrong size on ProjectionSymbol_BP_C_IsDoorFullyClosed");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyClosed, Door) == 0x000000, "Member 'ProjectionSymbol_BP_C_IsDoorFullyClosed::Door' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyClosed, ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_IsDoorFullyClosed::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyClosed, CallFunc_BP_IsClosed_ReturnValue) == 0x000009, "Member 'ProjectionSymbol_BP_C_IsDoorFullyClosed::CallFunc_BP_IsClosed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyClosed, CallFunc_BP_IsReplaced_ReturnValue) == 0x00000A, "Member 'ProjectionSymbol_BP_C_IsDoorFullyClosed::CallFunc_BP_IsReplaced_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyClosed, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'ProjectionSymbol_BP_C_IsDoorFullyClosed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyClosed, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'ProjectionSymbol_BP_C_IsDoorFullyClosed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.IsDoorFullyOpen
// 0x0010 (0x0010 - 0x0000)
struct ProjectionSymbol_BP_C_IsDoorFullyOpen final
{
public:
	class ARBDoor*                                Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsFullyOpen_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsReplaced_ReturnValue;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_IsDoorFullyOpen) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_IsDoorFullyOpen");
static_assert(sizeof(ProjectionSymbol_BP_C_IsDoorFullyOpen) == 0x000010, "Wrong size on ProjectionSymbol_BP_C_IsDoorFullyOpen");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyOpen, Door) == 0x000000, "Member 'ProjectionSymbol_BP_C_IsDoorFullyOpen::Door' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyOpen, ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_IsDoorFullyOpen::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyOpen, CallFunc_BP_IsFullyOpen_ReturnValue) == 0x000009, "Member 'ProjectionSymbol_BP_C_IsDoorFullyOpen::CallFunc_BP_IsFullyOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyOpen, CallFunc_BP_IsReplaced_ReturnValue) == 0x00000A, "Member 'ProjectionSymbol_BP_C_IsDoorFullyOpen::CallFunc_BP_IsReplaced_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDoorFullyOpen, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'ProjectionSymbol_BP_C_IsDoorFullyOpen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.DoorAllowDecoding
// 0x0018 (0x0018 - 0x0000)
struct ProjectionSymbol_BP_C_DoorAllowDecoding final
{
public:
	class ARBDoor*                                Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProjectionSymbolExclusionState               Condition;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDecodingAvailable;                                // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsFullyOpenInFront_ReturnValue;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDoorFullyClosed_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsFullyOpenInBack_ReturnValue;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDoorFullyClosed_ReturnValue_1;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDoorFullyOpen_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsFullyOpenInBack_ReturnValue_1;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsFullyOpenInFront_ReturnValue_1;      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsReplaced_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsClosed_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_DoorAllowDecoding) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_DoorAllowDecoding");
static_assert(sizeof(ProjectionSymbol_BP_C_DoorAllowDecoding) == 0x000018, "Wrong size on ProjectionSymbol_BP_C_DoorAllowDecoding");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, Door) == 0x000000, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::Door' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, Condition) == 0x000008, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::Condition' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, bDecodingAvailable) == 0x000009, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::bDecodingAvailable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_BP_IsFullyOpenInFront_ReturnValue) == 0x00000B, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_BP_IsFullyOpenInFront_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_IsDoorFullyClosed_ReturnValue) == 0x00000C, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_IsDoorFullyClosed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_BP_IsFullyOpenInBack_ReturnValue) == 0x00000E, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_BP_IsFullyOpenInBack_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_IsDoorFullyClosed_ReturnValue_1) == 0x00000F, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_IsDoorFullyClosed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_BooleanOR_ReturnValue_1) == 0x000010, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_IsDoorFullyOpen_ReturnValue) == 0x000011, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_IsDoorFullyOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_BP_IsFullyOpenInBack_ReturnValue_1) == 0x000012, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_BP_IsFullyOpenInBack_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_BP_IsFullyOpenInFront_ReturnValue_1) == 0x000013, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_BP_IsFullyOpenInFront_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_BP_IsReplaced_ReturnValue) == 0x000014, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_BP_IsReplaced_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_BP_IsClosed_ReturnValue) == 0x000015, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_BP_IsClosed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_Not_PreBool_ReturnValue) == 0x000016, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_DoorAllowDecoding, CallFunc_BooleanAND_ReturnValue) == 0x000017, "Member 'ProjectionSymbol_BP_C_DoorAllowDecoding::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.IsFullyDecodable
// 0x0038 (0x0038 - 0x0000)
struct ProjectionSymbol_BP_C_IsFullyDecodable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARBDoor*>                        CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBDoor*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EProjectionSymbolExclusionState               CallFunc_Map_Find_Value;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoorAllowDecoding_bDecodingAvailable;     // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_IsFullyDecodable) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_IsFullyDecodable");
static_assert(sizeof(ProjectionSymbol_BP_C_IsFullyDecodable) == 0x000038, "Wrong size on ProjectionSymbol_BP_C_IsFullyDecodable");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, CallFunc_Array_Get_Item) == 0x000028, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, CallFunc_Map_Find_Value) == 0x000031, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, CallFunc_Map_Find_ReturnValue) == 0x000032, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsFullyDecodable, CallFunc_DoorAllowDecoding_bDecodingAvailable) == 0x000033, "Member 'ProjectionSymbol_BP_C_IsFullyDecodable::CallFunc_DoorAllowDecoding_bDecodingAvailable' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.IsDecodableEnabled
// 0x0002 (0x0002 - 0x0000)
struct ProjectionSymbol_BP_C_IsDecodableEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDecodableEnabled_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectionSymbol_BP_C_IsDecodableEnabled) == 0x000001, "Wrong alignment on ProjectionSymbol_BP_C_IsDecodableEnabled");
static_assert(sizeof(ProjectionSymbol_BP_C_IsDecodableEnabled) == 0x000002, "Wrong size on ProjectionSymbol_BP_C_IsDecodableEnabled");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDecodableEnabled, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_IsDecodableEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_IsDecodableEnabled, CallFunc_IsDecodableEnabled_ReturnValue) == 0x000001, "Member 'ProjectionSymbol_BP_C_IsDecodableEnabled::CallFunc_IsDecodableEnabled_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetProjectionForward
// 0x0090 (0x0090 - 0x0000)
struct ProjectionSymbol_BP_C_GetProjectionForward final
{
public:
	struct FVector                                EyeLocation;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EyeForward;                                        // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetProjectionForward) == 0x000010, "Wrong alignment on ProjectionSymbol_BP_C_GetProjectionForward");
static_assert(sizeof(ProjectionSymbol_BP_C_GetProjectionForward) == 0x000090, "Wrong size on ProjectionSymbol_BP_C_GetProjectionForward");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionForward, EyeLocation) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetProjectionForward::EyeLocation' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionForward, EyeForward) == 0x00000C, "Member 'ProjectionSymbol_BP_C_GetProjectionForward::EyeForward' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionForward, ReturnValue) == 0x000018, "Member 'ProjectionSymbol_BP_C_GetProjectionForward::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionForward, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'ProjectionSymbol_BP_C_GetProjectionForward::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionForward, CallFunc_TransformLocation_ReturnValue) == 0x000060, "Member 'ProjectionSymbol_BP_C_GetProjectionForward::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionForward, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'ProjectionSymbol_BP_C_GetProjectionForward::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionForward, CallFunc_Normal_ReturnValue) == 0x000078, "Member 'ProjectionSymbol_BP_C_GetProjectionForward::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetProjectionOrigin
// 0x0080 (0x0080 - 0x0000)
struct ProjectionSymbol_BP_C_GetProjectionOrigin final
{
public:
	struct FVector                                EyeLocation;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EyeForward;                                        // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetProjectionOrigin) == 0x000010, "Wrong alignment on ProjectionSymbol_BP_C_GetProjectionOrigin");
static_assert(sizeof(ProjectionSymbol_BP_C_GetProjectionOrigin) == 0x000080, "Wrong size on ProjectionSymbol_BP_C_GetProjectionOrigin");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionOrigin, EyeLocation) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetProjectionOrigin::EyeLocation' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionOrigin, EyeForward) == 0x00000C, "Member 'ProjectionSymbol_BP_C_GetProjectionOrigin::EyeForward' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionOrigin, ReturnValue) == 0x000018, "Member 'ProjectionSymbol_BP_C_GetProjectionOrigin::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionOrigin, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'ProjectionSymbol_BP_C_GetProjectionOrigin::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionOrigin, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'ProjectionSymbol_BP_C_GetProjectionOrigin::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetProjectionOrigin, CallFunc_TransformLocation_ReturnValue) == 0x00006C, "Member 'ProjectionSymbol_BP_C_GetProjectionOrigin::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetCode
// 0x0008 (0x0008 - 0x0000)
struct ProjectionSymbol_BP_C_GetCode final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCode_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetCode) == 0x000004, "Wrong alignment on ProjectionSymbol_BP_C_GetCode");
static_assert(sizeof(ProjectionSymbol_BP_C_GetCode) == 0x000008, "Wrong size on ProjectionSymbol_BP_C_GetCode");
static_assert(offsetof(ProjectionSymbol_BP_C_GetCode, ReturnValue) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetCode::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetCode, CallFunc_GetCode_ReturnValue) == 0x000004, "Member 'ProjectionSymbol_BP_C_GetCode::CallFunc_GetCode_ReturnValue' has a wrong offset!");

// Function ProjectionSymbol_BP.ProjectionSymbol_BP_C.GetDecoderProximity
// 0x0010 (0x0010 - 0x0000)
struct ProjectionSymbol_BP_C_GetDecoderProximity final
{
public:
	const class ARBPawn*                          Pawn;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDecoderProximityType                         ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDecoderProximityType                         CallFunc_GetDecoderProximity_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectionSymbol_BP_C_GetDecoderProximity) == 0x000008, "Wrong alignment on ProjectionSymbol_BP_C_GetDecoderProximity");
static_assert(sizeof(ProjectionSymbol_BP_C_GetDecoderProximity) == 0x000010, "Wrong size on ProjectionSymbol_BP_C_GetDecoderProximity");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDecoderProximity, Pawn) == 0x000000, "Member 'ProjectionSymbol_BP_C_GetDecoderProximity::Pawn' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDecoderProximity, ReturnValue) == 0x000008, "Member 'ProjectionSymbol_BP_C_GetDecoderProximity::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectionSymbol_BP_C_GetDecoderProximity, CallFunc_GetDecoderProximity_ReturnValue) == 0x000009, "Member 'ProjectionSymbol_BP_C_GetDecoderProximity::CallFunc_GetDecoderProximity_ReturnValue' has a wrong offset!");

}

