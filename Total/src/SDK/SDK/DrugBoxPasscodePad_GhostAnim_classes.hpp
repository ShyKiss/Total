#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DrugBoxPasscodePad_GhostAnim

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass DrugBoxPasscodePad_GhostAnim.DrugBoxPasscodePad_GhostAnim_C
// 0x0AF0 (0x0DE0 - 0x02F0)
class UDrugBoxPasscodePad_GhostAnim_C final : public URBGhostAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02F8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0328(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0350(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0378(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x03A0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0420(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x04C8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0548(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0578(0x00A8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x0620(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0708(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x07F0(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0820(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0908(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0938(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0A20(0x00A8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0AC8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0BB0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0BE0(0x00B0)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x0C90(0x00F8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0D88(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0DA8(0x0020)()
	bool                                          IsCompleted;                                       // 0x0DC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPressed;                                         // 0x0DC9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DCA[0x2];                                      // 0x0DCA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Current_Button;                                    // 0x0DCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLeaving;                                         // 0x0DD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSuccess;                                         // 0x0DD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD2[0x2];                                      // 0x0DD2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InteractHeight;                                    // 0x0DD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Puzzle_Box_Anchor_Ref;                             // 0x0DD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	bool FinishGhost(EGhostFinishReason FinishReason, int32 GhostFinishCustomReason);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DrugBoxPasscodePad_GhostAnim_AnimGraphNode_BlendListByBool_BFF5DAC047C838D4EB1FB5A1E9EBC926();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DrugBoxPasscodePad_GhostAnim_AnimGraphNode_BlendListByBool_0EEFACF04ECE91FBDBC24D88539EFBC5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DrugBoxPasscodePad_GhostAnim_AnimGraphNode_BlendListByBool_B6E8713A40A2754124BAD9BBC333A873();
	void OnPressed(class URBPasscodePadComponent* Pad);
	void BP_InitializeGhost();
	void AnimNotify_Pressed();
	void AnimNotify_EntryDone();
	void AnimNotify_Finished();
	void ExecuteUbergraph_DrugBoxPasscodePad_GhostAnim(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DrugBoxPasscodePad_GhostAnim_C">();
	}
	static class UDrugBoxPasscodePad_GhostAnim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrugBoxPasscodePad_GhostAnim_C>();
	}
};
static_assert(alignof(UDrugBoxPasscodePad_GhostAnim_C) == 0x000010, "Wrong alignment on UDrugBoxPasscodePad_GhostAnim_C");
static_assert(sizeof(UDrugBoxPasscodePad_GhostAnim_C) == 0x000DE0, "Wrong size on UDrugBoxPasscodePad_GhostAnim_C");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, UberGraphFrame) == 0x0002F0, "Member 'UDrugBoxPasscodePad_GhostAnim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_Root) == 0x0002F8, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_TransitionResult_2) == 0x000328, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_TransitionResult_1) == 0x000350, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_TransitionResult) == 0x000378, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_SequencePlayer_1) == 0x0003A0, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_BlendListByBool_2) == 0x000420, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_SequencePlayer) == 0x0004C8, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_StateResult_3) == 0x000548, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_BlendListByBool_1) == 0x000578, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_BlendSpacePlayer_4) == 0x000620, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000708, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_StateResult_2) == 0x0007F0, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000820, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_StateResult_1) == 0x000908, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000938, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_BlendListByBool) == 0x000A20, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_BlendSpacePlayer) == 0x000AC8, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_StateResult) == 0x000BB0, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_StateMachine) == 0x000BE0, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_LegIK) == 0x000C90, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_LocalToComponentSpace) == 0x000D88, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, AnimGraphNode_ComponentToLocalSpace) == 0x000DA8, "Member 'UDrugBoxPasscodePad_GhostAnim_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, IsCompleted) == 0x000DC8, "Member 'UDrugBoxPasscodePad_GhostAnim_C::IsCompleted' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, IsPressed) == 0x000DC9, "Member 'UDrugBoxPasscodePad_GhostAnim_C::IsPressed' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, Current_Button) == 0x000DCC, "Member 'UDrugBoxPasscodePad_GhostAnim_C::Current_Button' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, IsLeaving) == 0x000DD0, "Member 'UDrugBoxPasscodePad_GhostAnim_C::IsLeaving' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, IsSuccess) == 0x000DD1, "Member 'UDrugBoxPasscodePad_GhostAnim_C::IsSuccess' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, InteractHeight) == 0x000DD4, "Member 'UDrugBoxPasscodePad_GhostAnim_C::InteractHeight' has a wrong offset!");
static_assert(offsetof(UDrugBoxPasscodePad_GhostAnim_C, Puzzle_Box_Anchor_Ref) == 0x000DD8, "Member 'UDrugBoxPasscodePad_GhostAnim_C::Puzzle_Box_Anchor_Ref' has a wrong offset!");

}

