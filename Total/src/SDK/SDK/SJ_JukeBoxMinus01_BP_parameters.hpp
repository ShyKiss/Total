#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SJ_JukeBoxMinus01_BP

#include "Basic.hpp"


namespace SDK::Params
{

// Function SJ_JukeBox-01_BP.SJ_JukeBox-01_BP_C.SetPreviewAssetsVisibility
// 0x0001 (0x0001 - 0x0000)
struct SJ_JukeBoxMinus01_BP_C_SetPreviewAssetsVisibility final
{
public:
	bool                                          Preview;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SJ_JukeBoxMinus01_BP_C_SetPreviewAssetsVisibility) == 0x000001, "Wrong alignment on SJ_JukeBoxMinus01_BP_C_SetPreviewAssetsVisibility");
static_assert(sizeof(SJ_JukeBoxMinus01_BP_C_SetPreviewAssetsVisibility) == 0x000001, "Wrong size on SJ_JukeBoxMinus01_BP_C_SetPreviewAssetsVisibility");
static_assert(offsetof(SJ_JukeBoxMinus01_BP_C_SetPreviewAssetsVisibility, Preview) == 0x000000, "Member 'SJ_JukeBoxMinus01_BP_C_SetPreviewAssetsVisibility::Preview' has a wrong offset!");

// Function SJ_JukeBox-01_BP.SJ_JukeBox-01_BP_C.ExecuteUbergraph_SJ_JukeBox-01_BP
// 0x0004 (0x0004 - 0x0000)
struct SJ_JukeBoxMinus01_BP_C_ExecuteUbergraph_SJ_JukeBoxMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SJ_JukeBoxMinus01_BP_C_ExecuteUbergraph_SJ_JukeBoxMinus01_BP) == 0x000004, "Wrong alignment on SJ_JukeBoxMinus01_BP_C_ExecuteUbergraph_SJ_JukeBoxMinus01_BP");
static_assert(sizeof(SJ_JukeBoxMinus01_BP_C_ExecuteUbergraph_SJ_JukeBoxMinus01_BP) == 0x000004, "Wrong size on SJ_JukeBoxMinus01_BP_C_ExecuteUbergraph_SJ_JukeBoxMinus01_BP");
static_assert(offsetof(SJ_JukeBoxMinus01_BP_C_ExecuteUbergraph_SJ_JukeBoxMinus01_BP, EntryPoint) == 0x000000, "Member 'SJ_JukeBoxMinus01_BP_C_ExecuteUbergraph_SJ_JukeBoxMinus01_BP::EntryPoint' has a wrong offset!");

}

