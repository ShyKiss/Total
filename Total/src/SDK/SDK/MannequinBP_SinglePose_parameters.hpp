#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MannequinBP_SinglePose

#include "Basic.hpp"


namespace SDK::Params
{

// Function MannequinBP_SinglePose.MannequinBP_SinglePose_C.FixUp
// 0x0001 (0x0001 - 0x0000)
struct MannequinBP_SinglePose_C_FixUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_SinglePose_C_FixUp) == 0x000001, "Wrong alignment on MannequinBP_SinglePose_C_FixUp");
static_assert(sizeof(MannequinBP_SinglePose_C_FixUp) == 0x000001, "Wrong size on MannequinBP_SinglePose_C_FixUp");
static_assert(offsetof(MannequinBP_SinglePose_C_FixUp, ReturnValue) == 0x000000, "Member 'MannequinBP_SinglePose_C_FixUp::ReturnValue' has a wrong offset!");

// Function MannequinBP_SinglePose.MannequinBP_SinglePose_C.DisableTick
// 0x0038 (0x0038 - 0x0000)
struct MannequinBP_SinglePose_C_DisableTick final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_SinglePose_C_DisableTick) == 0x000008, "Wrong alignment on MannequinBP_SinglePose_C_DisableTick");
static_assert(sizeof(MannequinBP_SinglePose_C_DisableTick) == 0x000038, "Wrong size on MannequinBP_SinglePose_C_DisableTick");
static_assert(offsetof(MannequinBP_SinglePose_C_DisableTick, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MannequinBP_SinglePose_C_DisableTick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_DisableTick, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MannequinBP_SinglePose_C_DisableTick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_DisableTick, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MannequinBP_SinglePose_C_DisableTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_DisableTick, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'MannequinBP_SinglePose_C_DisableTick::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_DisableTick, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'MannequinBP_SinglePose_C_DisableTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_DisableTick, CallFunc_Array_Get_Item) == 0x000028, "Member 'MannequinBP_SinglePose_C_DisableTick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_DisableTick, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'MannequinBP_SinglePose_C_DisableTick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MannequinBP_SinglePose.MannequinBP_SinglePose_C.SetForceBakeShadows
// 0x0048 (0x0048 - 0x0000)
struct MannequinBP_SinglePose_C_SetForceBakeShadows final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_SinglePose_C_SetForceBakeShadows) == 0x000008, "Wrong alignment on MannequinBP_SinglePose_C_SetForceBakeShadows");
static_assert(sizeof(MannequinBP_SinglePose_C_SetForceBakeShadows) == 0x000048, "Wrong size on MannequinBP_SinglePose_C_SetForceBakeShadows");
static_assert(offsetof(MannequinBP_SinglePose_C_SetForceBakeShadows, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MannequinBP_SinglePose_C_SetForceBakeShadows::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_SetForceBakeShadows, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MannequinBP_SinglePose_C_SetForceBakeShadows::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_SetForceBakeShadows, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MannequinBP_SinglePose_C_SetForceBakeShadows::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_SetForceBakeShadows, CallFunc_GetChildrenComponents_Children) == 0x000010, "Member 'MannequinBP_SinglePose_C_SetForceBakeShadows::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_SetForceBakeShadows, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'MannequinBP_SinglePose_C_SetForceBakeShadows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_SetForceBakeShadows, CallFunc_Array_Get_Item) == 0x000028, "Member 'MannequinBP_SinglePose_C_SetForceBakeShadows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_SetForceBakeShadows, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'MannequinBP_SinglePose_C_SetForceBakeShadows::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_SetForceBakeShadows, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000038, "Member 'MannequinBP_SinglePose_C_SetForceBakeShadows::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_SetForceBakeShadows, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MannequinBP_SinglePose_C_SetForceBakeShadows::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MannequinBP_SinglePose.MannequinBP_SinglePose_C.OnPostActorsPasted
// 0x0010 (0x0010 - 0x0000)
struct MannequinBP_SinglePose_C_OnPostActorsPasted final
{
public:
	TArray<class AActor*>                         PastedActors;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MannequinBP_SinglePose_C_OnPostActorsPasted) == 0x000008, "Wrong alignment on MannequinBP_SinglePose_C_OnPostActorsPasted");
static_assert(sizeof(MannequinBP_SinglePose_C_OnPostActorsPasted) == 0x000010, "Wrong size on MannequinBP_SinglePose_C_OnPostActorsPasted");
static_assert(offsetof(MannequinBP_SinglePose_C_OnPostActorsPasted, PastedActors) == 0x000000, "Member 'MannequinBP_SinglePose_C_OnPostActorsPasted::PastedActors' has a wrong offset!");

// Function MannequinBP_SinglePose.MannequinBP_SinglePose_C.PostDuplicated
// 0x0008 (0x0008 - 0x0000)
struct MannequinBP_SinglePose_C_PostDuplicated final
{
public:
	class AActor*                                 DuplicationParent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MannequinBP_SinglePose_C_PostDuplicated) == 0x000008, "Wrong alignment on MannequinBP_SinglePose_C_PostDuplicated");
static_assert(sizeof(MannequinBP_SinglePose_C_PostDuplicated) == 0x000008, "Wrong size on MannequinBP_SinglePose_C_PostDuplicated");
static_assert(offsetof(MannequinBP_SinglePose_C_PostDuplicated, DuplicationParent) == 0x000000, "Member 'MannequinBP_SinglePose_C_PostDuplicated::DuplicationParent' has a wrong offset!");

// Function MannequinBP_SinglePose.MannequinBP_SinglePose_C.PostEditChange
// 0x0008 (0x0008 - 0x0000)
struct MannequinBP_SinglePose_C_PostEditChange final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MannequinBP_SinglePose_C_PostEditChange) == 0x000004, "Wrong alignment on MannequinBP_SinglePose_C_PostEditChange");
static_assert(sizeof(MannequinBP_SinglePose_C_PostEditChange) == 0x000008, "Wrong size on MannequinBP_SinglePose_C_PostEditChange");
static_assert(offsetof(MannequinBP_SinglePose_C_PostEditChange, PropertyName) == 0x000000, "Member 'MannequinBP_SinglePose_C_PostEditChange::PropertyName' has a wrong offset!");

// Function MannequinBP_SinglePose.MannequinBP_SinglePose_C.PostEditMove
// 0x0001 (0x0001 - 0x0000)
struct MannequinBP_SinglePose_C_PostEditMove final
{
public:
	bool                                          bFinished;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_SinglePose_C_PostEditMove) == 0x000001, "Wrong alignment on MannequinBP_SinglePose_C_PostEditMove");
static_assert(sizeof(MannequinBP_SinglePose_C_PostEditMove) == 0x000001, "Wrong size on MannequinBP_SinglePose_C_PostEditMove");
static_assert(offsetof(MannequinBP_SinglePose_C_PostEditMove, bFinished) == 0x000000, "Member 'MannequinBP_SinglePose_C_PostEditMove::bFinished' has a wrong offset!");

// Function MannequinBP_SinglePose.MannequinBP_SinglePose_C.ExecuteUbergraph_MannequinBP_SinglePose
// 0x0030 (0x0030 - 0x0000)
struct MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_pastedActors;                         // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 K2Node_Event_duplicationParent;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_propertyName;                         // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFinished;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose) == 0x000008, "Wrong alignment on MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose");
static_assert(sizeof(MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose) == 0x000030, "Wrong size on MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose");
static_assert(offsetof(MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose, EntryPoint) == 0x000000, "Member 'MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose::EntryPoint' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose, K2Node_Event_pastedActors) == 0x000008, "Member 'MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose::K2Node_Event_pastedActors' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose, K2Node_Event_duplicationParent) == 0x000018, "Member 'MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose::K2Node_Event_duplicationParent' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose, K2Node_Event_propertyName) == 0x000020, "Member 'MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose::K2Node_Event_propertyName' has a wrong offset!");
static_assert(offsetof(MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose, K2Node_Event_bFinished) == 0x000028, "Member 'MannequinBP_SinglePose_C_ExecuteUbergraph_MannequinBP_SinglePose::K2Node_Event_bFinished' has a wrong offset!");

}

