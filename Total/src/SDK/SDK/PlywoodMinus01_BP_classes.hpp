#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlywoodMinus01_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MeshPopulate_Parent_classes.hpp"
#include "ModuleMeshDataMinus02_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Plywood-01_BP.Plywood-01_BP_C
// 0x0030 (0x0400 - 0x03D0)
class APlywoodMinus01_BP_C : public AMeshPopulate_Parent_C
{
public:
	TArray<struct FModuleMeshDataMinus02>         PlywoodMeshes2Sided;                               // 0x03D0(0x0010)(Edit, BlueprintVisible)
	TArray<struct FModuleMeshDataMinus02>         PlywoodMeshes1Sided;                               // 0x03E0(0x0010)(Edit, BlueprintVisible)
	bool                                          Use2sided;                                         // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseShadowMesh;                                     // 0x03F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlipMeshes;                                        // 0x03F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F3[0x1];                                      // 0x03F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x03F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Plywood-01_BP_C">();
	}
	static class APlywoodMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlywoodMinus01_BP_C>();
	}
};
static_assert(alignof(APlywoodMinus01_BP_C) == 0x000008, "Wrong alignment on APlywoodMinus01_BP_C");
static_assert(sizeof(APlywoodMinus01_BP_C) == 0x000400, "Wrong size on APlywoodMinus01_BP_C");
static_assert(offsetof(APlywoodMinus01_BP_C, PlywoodMeshes2Sided) == 0x0003D0, "Member 'APlywoodMinus01_BP_C::PlywoodMeshes2Sided' has a wrong offset!");
static_assert(offsetof(APlywoodMinus01_BP_C, PlywoodMeshes1Sided) == 0x0003E0, "Member 'APlywoodMinus01_BP_C::PlywoodMeshes1Sided' has a wrong offset!");
static_assert(offsetof(APlywoodMinus01_BP_C, Use2sided) == 0x0003F0, "Member 'APlywoodMinus01_BP_C::Use2sided' has a wrong offset!");
static_assert(offsetof(APlywoodMinus01_BP_C, UseShadowMesh) == 0x0003F1, "Member 'APlywoodMinus01_BP_C::UseShadowMesh' has a wrong offset!");
static_assert(offsetof(APlywoodMinus01_BP_C, FlipMeshes) == 0x0003F2, "Member 'APlywoodMinus01_BP_C::FlipMeshes' has a wrong offset!");
static_assert(offsetof(APlywoodMinus01_BP_C, Offset) == 0x0003F4, "Member 'APlywoodMinus01_BP_C::Offset' has a wrong offset!");

}

