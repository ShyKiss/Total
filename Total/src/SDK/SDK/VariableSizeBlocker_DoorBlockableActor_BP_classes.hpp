#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VariableSizeBlocker_DoorBlockableActor_BP

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "OPP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C
// 0x0058 (0x0688 - 0x0630)
class AVariableSizeBlocker_DoorBlockableActor_BP_C final : public ARBBreakableObstacle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBPingComponent*                       RBPing;                                            // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Collision;                                         // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ARBPawn*                                DoorBlockablePawn;                                 // 0x0648(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              DoorBlockablePlayer;                               // 0x0650(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 blockedActor;                                      // 0x0658(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Width;                                             // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightUp;                                          // 0x0664(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightDown;                                        // 0x0668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C[0x4];                                      // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADoorBlocker_SkillItem_BP_C*            DoorBlockerItem;                                   // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWaitingForBash;                                   // 0x0678(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_679[0x3];                                      // 0x0679(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequiredNPCBashCount;                              // 0x067C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAdversarialRole                              AdversarialRole;                                   // 0x0680(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemovedFromWorld;                                 // 0x0681(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP(int32 EntryPoint);
	void Event_OnResetStage();
	void BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature(class URBDamageableComponent* DamageableComponent_0, bool IsDestroyed);
	void OnBashCompleted(class ARBPawn* Pawn);
	void OnBashDoAction(class ARBPawn* Pawn);
	void OnBashStarting(class ARBPawn* Pawn);
	void AttachDoorBlockerSkillItem(class ARBDoorBlockerSkillItem* DoorBlocker);
	void SetBlockedActor(class AActor* blockedActor_0);
	void SetDoorBlockableOwner(class ARBPawn* Owner_0);
	void BndEvt__DoorBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableDestroyed__DelegateSignature(class URBDamageableComponent* DamageableComponent_0);
	void OnRemoveDoorBlockable();
	void OnPreDestroyed();
	void RemoveFromBlockedActor();
	void RemoveFromWorld();
	void OnRep_bRemovedFromWorld();
	bool AllowSlidingLockInteraction(const class ARBSlidingLock* SlidingLock);

	void GetModulatedBashDamage(class ARBPawn* basher, float* BashDamage) const;
	bool GetPlayerPingWorldLocation(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FVector* OutLocation) const;
	void GetNPCRequiredBashCount(int32* RequiredNPCBashCount_0) const;
	void IsBlockingDoorLockedWithBreakableSlidingLock(bool* Out) const;
	void ModulateBashDamage(const class ARBPawn* Pawn, float In_damage, float* Out_damage) const;
	class AActor* GetBlockedActor() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VariableSizeBlocker_DoorBlockableActor_BP_C">();
	}
	static class AVariableSizeBlocker_DoorBlockableActor_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVariableSizeBlocker_DoorBlockableActor_BP_C>();
	}
};
static_assert(alignof(AVariableSizeBlocker_DoorBlockableActor_BP_C) == 0x000008, "Wrong alignment on AVariableSizeBlocker_DoorBlockableActor_BP_C");
static_assert(sizeof(AVariableSizeBlocker_DoorBlockableActor_BP_C) == 0x000688, "Wrong size on AVariableSizeBlocker_DoorBlockableActor_BP_C");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, UberGraphFrame) == 0x000630, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, RBPing) == 0x000638, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::RBPing' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, Collision) == 0x000640, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::Collision' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, DoorBlockablePawn) == 0x000648, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::DoorBlockablePawn' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, DoorBlockablePlayer) == 0x000650, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::DoorBlockablePlayer' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, blockedActor) == 0x000658, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::blockedActor' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, Width) == 0x000660, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::Width' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, HeightUp) == 0x000664, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::HeightUp' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, HeightDown) == 0x000668, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::HeightDown' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, DoorBlockerItem) == 0x000670, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::DoorBlockerItem' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, bWaitingForBash) == 0x000678, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::bWaitingForBash' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, RequiredNPCBashCount) == 0x00067C, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::RequiredNPCBashCount' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, AdversarialRole) == 0x000680, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::AdversarialRole' has a wrong offset!");
static_assert(offsetof(AVariableSizeBlocker_DoorBlockableActor_BP_C, bRemovedFromWorld) == 0x000681, "Member 'AVariableSizeBlocker_DoorBlockableActor_BP_C::bRemovedFromWorld' has a wrong offset!");

}

