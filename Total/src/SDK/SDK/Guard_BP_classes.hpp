#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Guard_BP

#include "Basic.hpp"

#include "BackgroundCharacter_BP_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Guard_BP.Guard_BP_C
// 0x00B0 (0x0720 - 0x0670)
class AGuard_BP_C final : public ABackgroundCharacter_BP_C
{
public:
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_Guard_BP_C;                         // 0x0668(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Guard_Revolver;                                    // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       VoCollisionSphere;                                 // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 GuardHead;                                         // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMesh*>                  HeadOptions;                                       // 0x0688(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          CanPlayVO;                                         // 0x0698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPlayerOverlappingBox;                            // 0x0699(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69A[0x2];                                      // 0x069A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ExasperationLevel;                                 // 0x069C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAkAudioEvent*>                  ChosenProximityVoicelines;                         // 0x06A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAkAudioEvent*>                  ProximityVoicelinesMale01_01;                      // 0x06B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAkAudioEvent*>                  ProximityVoicelinesMale01_02;                      // 0x06C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAkAudioEvent*>                  ProximityVoicelinesMale01_03;                      // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAkAudioEvent*>                  ProximityVoicelinesMale02_01;                      // 0x06E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAkAudioEvent*>                  ProximityVoicelinesMale02_02;                      // 0x06F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAkAudioEvent*>                  ProximityVoicelinesMale02_03;                      // 0x0700(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsSilent;                                          // 0x0710(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	class UPoseAsset* GetFacePoseAsset();
	void BuildAppearance();
	void ChooseVoiceAndLine();
	void PlayProximityVO();
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void Event_OnResetStage();
	void BndEvt__Guard_BP_VoCollisionSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Guard_BP_VoCollisionSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_Guard_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Guard_BP_C">();
	}
	static class AGuard_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGuard_BP_C>();
	}
};
static_assert(alignof(AGuard_BP_C) == 0x000010, "Wrong alignment on AGuard_BP_C");
static_assert(sizeof(AGuard_BP_C) == 0x000720, "Wrong size on AGuard_BP_C");
static_assert(offsetof(AGuard_BP_C, UberGraphFrame_Guard_BP_C) == 0x000668, "Member 'AGuard_BP_C::UberGraphFrame_Guard_BP_C' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, Guard_Revolver) == 0x000670, "Member 'AGuard_BP_C::Guard_Revolver' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, VoCollisionSphere) == 0x000678, "Member 'AGuard_BP_C::VoCollisionSphere' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, GuardHead) == 0x000680, "Member 'AGuard_BP_C::GuardHead' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, HeadOptions) == 0x000688, "Member 'AGuard_BP_C::HeadOptions' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, CanPlayVO) == 0x000698, "Member 'AGuard_BP_C::CanPlayVO' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, IsPlayerOverlappingBox) == 0x000699, "Member 'AGuard_BP_C::IsPlayerOverlappingBox' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, ExasperationLevel) == 0x00069C, "Member 'AGuard_BP_C::ExasperationLevel' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, ChosenProximityVoicelines) == 0x0006A0, "Member 'AGuard_BP_C::ChosenProximityVoicelines' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, ProximityVoicelinesMale01_01) == 0x0006B0, "Member 'AGuard_BP_C::ProximityVoicelinesMale01_01' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, ProximityVoicelinesMale01_02) == 0x0006C0, "Member 'AGuard_BP_C::ProximityVoicelinesMale01_02' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, ProximityVoicelinesMale01_03) == 0x0006D0, "Member 'AGuard_BP_C::ProximityVoicelinesMale01_03' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, ProximityVoicelinesMale02_01) == 0x0006E0, "Member 'AGuard_BP_C::ProximityVoicelinesMale02_01' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, ProximityVoicelinesMale02_02) == 0x0006F0, "Member 'AGuard_BP_C::ProximityVoicelinesMale02_02' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, ProximityVoicelinesMale02_03) == 0x000700, "Member 'AGuard_BP_C::ProximityVoicelinesMale02_03' has a wrong offset!");
static_assert(offsetof(AGuard_BP_C, IsSilent) == 0x000710, "Member 'AGuard_BP_C::IsSilent' has a wrong offset!");

}

