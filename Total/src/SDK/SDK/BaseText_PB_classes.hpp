#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseText_PB

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "IconBox_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "TextBox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BaseText_PB.BaseText_PB_C
// 0x0170 (0x03A0 - 0x0230)
class ABaseText_PB_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MeshMinus01;                                       // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    Template;                                          // 0x0248(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FVector2D                              RenderTextureSize;                                 // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasRenderTarget2D*                  CanvasRender;                                      // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 KerningScale;                                      // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              BaseRenderTextureSize;                             // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentKenningScale;                               // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                Canvas;                                            // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTextBox>                       TextBox;                                           // 0x0298(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector2D>                      TextBoxSizeXY;                                     // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FIconBox>                       Icon;                                              // 0x02B8(0x0010)(Edit, BlueprintVisible)
	struct FVector2D                              ScreenSize;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScaleFactor;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScaleRatio;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndex;                                     // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMimic;                                           // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               NewMaterial;                                       // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseText_PB_C*                         ParentToMimic;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               PrintTexture;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PrintTexture_UVSize;                               // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PrintTexture_UVOffset;                             // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPixelFormat                                  PixelFormat;                                       // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABaseText_PB_C*>                 MimicItems;                                        // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABaseText_PB_C*>                 ItemToRemove;                                      // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<struct FIconBox>                       AllIcon;                                           // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTextBox>                       AllTextBox;                                        // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   TextureParameter;                                  // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TextureUVParameter;                                // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     TextBackgroundMaterial;                            // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KerningJustifyMax;                                 // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KerningJustifyMin;                                 // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFont*                                  _RenderFont;                                       // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _ScaleFont;                                        // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               IconMat;                                           // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     SelectedMaterial;                                  // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Find_Font_Scale(TArray<class FString>& String, class UFont* RenderFont, const struct FVector2D& Scale, float Kerning, const struct FVector2D& BoxSize, float* NewParam);
	void AddItemToMimic(const class ABaseText_PB_C*& ItemToFind);
	void Mimic(class UMaterialInterface* Material_0);
	void SetArray();
	void SetTexture(class UTexture* PrintTexture_0);
	void AdjustingTextLines(const class FString& Text, const struct FVector2D& BoxSize, class UCanvas* Canvas_0, class UFont* RenderFont, float Kerning, const struct FVector2D& ScaleFont, TArray<class FString>* NewParam1, float* _ScaleFont_0);
	void DrawPage(const class FString& RenderText, const struct FVector4& Borders, class UFont* RenderFont, const struct FVector2D& ScreenPosition, const struct FVector2D& Scale, const struct FLinearColor& RenderColor, const struct FLinearColor& ShadowColor, float Kerning, float LineSpace, const struct FVector2D& ShadowOffset, bool bCentreX, bool bCentreY, bool bOutlined, const struct FLinearColor& OutlineColor, const struct FVector2D& BoxSize);
	void UserConstructionScript();
	void CreateTextTexture();
	void ReceiveBeginPlay();
	void UpdateMimic();
	void RedrawText();
	void CreateDynamicMaterial();
	void DrawRenderTarget();
	void CustomEvent_0();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BaseText_PB(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BaseText_PB_C">();
	}
	static class ABaseText_PB_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseText_PB_C>();
	}
};
static_assert(alignof(ABaseText_PB_C) == 0x000008, "Wrong alignment on ABaseText_PB_C");
static_assert(sizeof(ABaseText_PB_C) == 0x0003A0, "Wrong size on ABaseText_PB_C");
static_assert(offsetof(ABaseText_PB_C, UberGraphFrame) == 0x000230, "Member 'ABaseText_PB_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, MeshMinus01) == 0x000238, "Member 'ABaseText_PB_C::MeshMinus01' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, Scene) == 0x000240, "Member 'ABaseText_PB_C::Scene' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, Template) == 0x000248, "Member 'ABaseText_PB_C::Template' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, RenderTextureSize) == 0x000258, "Member 'ABaseText_PB_C::RenderTextureSize' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, Material) == 0x000260, "Member 'ABaseText_PB_C::Material' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, CanvasRender) == 0x000268, "Member 'ABaseText_PB_C::CanvasRender' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, KerningScale) == 0x000270, "Member 'ABaseText_PB_C::KerningScale' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, BaseRenderTextureSize) == 0x000280, "Member 'ABaseText_PB_C::BaseRenderTextureSize' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, CurrentKenningScale) == 0x000288, "Member 'ABaseText_PB_C::CurrentKenningScale' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, Canvas) == 0x000290, "Member 'ABaseText_PB_C::Canvas' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, TextBox) == 0x000298, "Member 'ABaseText_PB_C::TextBox' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, TextBoxSizeXY) == 0x0002A8, "Member 'ABaseText_PB_C::TextBoxSizeXY' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, Icon) == 0x0002B8, "Member 'ABaseText_PB_C::Icon' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, ScreenSize) == 0x0002C8, "Member 'ABaseText_PB_C::ScreenSize' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, ScaleFactor) == 0x0002D0, "Member 'ABaseText_PB_C::ScaleFactor' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, ScaleRatio) == 0x0002D8, "Member 'ABaseText_PB_C::ScaleRatio' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, MaterialIndex) == 0x0002E0, "Member 'ABaseText_PB_C::MaterialIndex' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, IsMimic) == 0x0002E4, "Member 'ABaseText_PB_C::IsMimic' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, NewMaterial) == 0x0002E8, "Member 'ABaseText_PB_C::NewMaterial' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, ParentToMimic) == 0x0002F0, "Member 'ABaseText_PB_C::ParentToMimic' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, PrintTexture) == 0x0002F8, "Member 'ABaseText_PB_C::PrintTexture' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, PrintTexture_UVSize) == 0x000300, "Member 'ABaseText_PB_C::PrintTexture_UVSize' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, PrintTexture_UVOffset) == 0x000308, "Member 'ABaseText_PB_C::PrintTexture_UVOffset' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, PixelFormat) == 0x000310, "Member 'ABaseText_PB_C::PixelFormat' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, MimicItems) == 0x000318, "Member 'ABaseText_PB_C::MimicItems' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, ItemToRemove) == 0x000328, "Member 'ABaseText_PB_C::ItemToRemove' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, AllIcon) == 0x000338, "Member 'ABaseText_PB_C::AllIcon' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, AllTextBox) == 0x000348, "Member 'ABaseText_PB_C::AllTextBox' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, TextureParameter) == 0x000358, "Member 'ABaseText_PB_C::TextureParameter' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, TextureUVParameter) == 0x000360, "Member 'ABaseText_PB_C::TextureUVParameter' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, TextBackgroundMaterial) == 0x000368, "Member 'ABaseText_PB_C::TextBackgroundMaterial' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, KerningJustifyMax) == 0x000370, "Member 'ABaseText_PB_C::KerningJustifyMax' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, KerningJustifyMin) == 0x000374, "Member 'ABaseText_PB_C::KerningJustifyMin' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, _RenderFont) == 0x000378, "Member 'ABaseText_PB_C::_RenderFont' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, _ScaleFont) == 0x000380, "Member 'ABaseText_PB_C::_ScaleFont' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, IconMat) == 0x000388, "Member 'ABaseText_PB_C::IconMat' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, Count) == 0x000390, "Member 'ABaseText_PB_C::Count' has a wrong offset!");
static_assert(offsetof(ABaseText_PB_C, SelectedMaterial) == 0x000398, "Member 'ABaseText_PB_C::SelectedMaterial' has a wrong offset!");

}

