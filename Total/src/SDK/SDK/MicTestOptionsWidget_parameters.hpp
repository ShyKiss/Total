#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MicTestOptionsWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function MicTestOptionsWidget.MicTestOptionsWidget_C.ExecuteUbergraph_MicTestOptionsWidget
// 0x0148 (0x0148 - 0x0000)
struct MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERBMicrophoneTestState                        Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x008C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMicrophoneVolume_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorder*                                K2Node_DynamicCast_AsBorder;                       // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERBMicrophoneTestState                        CallFunc_GetMicrophoneTestState_ReturnValue;       // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0120(0x0018)()
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0138(0x0008)(NoDestructor)
	bool                                          K2Node_Event_forceUpdateSlider;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanBeDisplayed_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget) == 0x000008, "Wrong alignment on MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget");
static_assert(sizeof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget) == 0x000148, "Wrong size on MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, EntryPoint) == 0x000000, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_bool_Variable) == 0x000004, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_struct_Variable) == 0x000008, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_struct_Variable_1) == 0x000018, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_byte_Variable) == 0x000028, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_text_Variable) == 0x000030, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_text_Variable_1) == 0x000048, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_text_Variable_2) == 0x000060, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_bool_Variable_1) == 0x000078, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_byte_Variable_1) == 0x000079, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_byte_Variable_2) == 0x00007A, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000084, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, K2Node_Event_MyGeometry) == 0x00008C, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, K2Node_Event_InDeltaTime) == 0x0000C4, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_GetMicrophoneVolume_ReturnValue) == 0x0000C8, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_GetMicrophoneVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_GetAllChildren_ReturnValue) == 0x0000D0, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, K2Node_DynamicCast_AsBorder) == 0x0000F0, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::K2Node_DynamicCast_AsBorder' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000F9, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_Array_Length_ReturnValue_1) == 0x0000FC, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000100, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000104, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_Less_FloatFloat_ReturnValue) == 0x000108, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, K2Node_Select_Default) == 0x00010C, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_GetMicrophoneTestState_ReturnValue) == 0x00011C, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_GetMicrophoneTestState_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, K2Node_Select_Default_1) == 0x000120, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, K2Node_Event_InFocusEvent) == 0x000138, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, K2Node_Event_forceUpdateSlider) == 0x000140, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::K2Node_Event_forceUpdateSlider' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, CallFunc_CanBeDisplayed_ReturnValue) == 0x000141, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::CallFunc_CanBeDisplayed_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget, K2Node_Select_Default_2) == 0x000142, "Member 'MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget::K2Node_Select_Default_2' has a wrong offset!");

// Function MicTestOptionsWidget.MicTestOptionsWidget_C.RefreshValue
// 0x0001 (0x0001 - 0x0000)
struct MicTestOptionsWidget_C_RefreshValue final
{
public:
	bool                                          ForceUpdateSlider;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MicTestOptionsWidget_C_RefreshValue) == 0x000001, "Wrong alignment on MicTestOptionsWidget_C_RefreshValue");
static_assert(sizeof(MicTestOptionsWidget_C_RefreshValue) == 0x000001, "Wrong size on MicTestOptionsWidget_C_RefreshValue");
static_assert(offsetof(MicTestOptionsWidget_C_RefreshValue, ForceUpdateSlider) == 0x000000, "Member 'MicTestOptionsWidget_C_RefreshValue::ForceUpdateSlider' has a wrong offset!");

// Function MicTestOptionsWidget.MicTestOptionsWidget_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct MicTestOptionsWidget_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(MicTestOptionsWidget_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on MicTestOptionsWidget_C_OnRemovedFromFocusPath");
static_assert(sizeof(MicTestOptionsWidget_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on MicTestOptionsWidget_C_OnRemovedFromFocusPath");
static_assert(offsetof(MicTestOptionsWidget_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'MicTestOptionsWidget_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function MicTestOptionsWidget.MicTestOptionsWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct MicTestOptionsWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MicTestOptionsWidget_C_Tick) == 0x000004, "Wrong alignment on MicTestOptionsWidget_C_Tick");
static_assert(sizeof(MicTestOptionsWidget_C_Tick) == 0x00003C, "Wrong size on MicTestOptionsWidget_C_Tick");
static_assert(offsetof(MicTestOptionsWidget_C_Tick, MyGeometry) == 0x000000, "Member 'MicTestOptionsWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'MicTestOptionsWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function MicTestOptionsWidget.MicTestOptionsWidget_C.GetTestButtonText
// 0x0018 (0x0018 - 0x0000)
struct MicTestOptionsWidget_C_GetTestButtonText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(MicTestOptionsWidget_C_GetTestButtonText) == 0x000008, "Wrong alignment on MicTestOptionsWidget_C_GetTestButtonText");
static_assert(sizeof(MicTestOptionsWidget_C_GetTestButtonText) == 0x000018, "Wrong size on MicTestOptionsWidget_C_GetTestButtonText");
static_assert(offsetof(MicTestOptionsWidget_C_GetTestButtonText, ReturnValue) == 0x000000, "Member 'MicTestOptionsWidget_C_GetTestButtonText::ReturnValue' has a wrong offset!");

// Function MicTestOptionsWidget.MicTestOptionsWidget_C.OnFocusReceived
// 0x01D0 (0x01D0 - 0x0000)
struct MicTestOptionsWidget_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00F8(0x0018)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0118(0x00B8)()
};
static_assert(alignof(MicTestOptionsWidget_C_OnFocusReceived) == 0x000008, "Wrong alignment on MicTestOptionsWidget_C_OnFocusReceived");
static_assert(sizeof(MicTestOptionsWidget_C_OnFocusReceived) == 0x0001D0, "Wrong size on MicTestOptionsWidget_C_OnFocusReceived");
static_assert(offsetof(MicTestOptionsWidget_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'MicTestOptionsWidget_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'MicTestOptionsWidget_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'MicTestOptionsWidget_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_OnFocusReceived, CallFunc_MakeLiteralText_ReturnValue) == 0x0000F8, "Member 'MicTestOptionsWidget_C_OnFocusReceived::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_OnFocusReceived, CallFunc_MakeLiteralName_ReturnValue) == 0x000110, "Member 'MicTestOptionsWidget_C_OnFocusReceived::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MicTestOptionsWidget_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000118, "Member 'MicTestOptionsWidget_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

