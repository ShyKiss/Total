#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_Pressable_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Base_Pressable_BP.Base_Pressable_BP_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct Base_Pressable_BP_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_Pressable_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on Base_Pressable_BP_C_UserConstructionScript");
static_assert(sizeof(Base_Pressable_BP_C_UserConstructionScript) == 0x000008, "Wrong size on Base_Pressable_BP_C_UserConstructionScript");
static_assert(offsetof(Base_Pressable_BP_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'Base_Pressable_BP_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Base_Pressable_BP.Base_Pressable_BP_C.SetButton
// 0x0010 (0x0010 - 0x0000)
struct Base_Pressable_BP_C_SetButton final
{
public:
	struct FLinearColor                           ButtonColor_0;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_Pressable_BP_C_SetButton) == 0x000004, "Wrong alignment on Base_Pressable_BP_C_SetButton");
static_assert(sizeof(Base_Pressable_BP_C_SetButton) == 0x000010, "Wrong size on Base_Pressable_BP_C_SetButton");
static_assert(offsetof(Base_Pressable_BP_C_SetButton, ButtonColor_0) == 0x000000, "Member 'Base_Pressable_BP_C_SetButton::ButtonColor_0' has a wrong offset!");

// Function Base_Pressable_BP.Base_Pressable_BP_C.PushButton
// 0x0002 (0x0002 - 0x0000)
struct Base_Pressable_BP_C_PushButton final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SetColor;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_Pressable_BP_C_PushButton) == 0x000001, "Wrong alignment on Base_Pressable_BP_C_PushButton");
static_assert(sizeof(Base_Pressable_BP_C_PushButton) == 0x000002, "Wrong size on Base_Pressable_BP_C_PushButton");
static_assert(offsetof(Base_Pressable_BP_C_PushButton, Condition) == 0x000000, "Member 'Base_Pressable_BP_C_PushButton::Condition' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_PushButton, SetColor) == 0x000001, "Member 'Base_Pressable_BP_C_PushButton::SetColor' has a wrong offset!");

// Function Base_Pressable_BP.Base_Pressable_BP_C.SetColor
// 0x0001 (0x0001 - 0x0000)
struct Base_Pressable_BP_C_SetColor final
{
public:
	bool                                          Pushed;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_Pressable_BP_C_SetColor) == 0x000001, "Wrong alignment on Base_Pressable_BP_C_SetColor");
static_assert(sizeof(Base_Pressable_BP_C_SetColor) == 0x000001, "Wrong size on Base_Pressable_BP_C_SetColor");
static_assert(offsetof(Base_Pressable_BP_C_SetColor, Pushed) == 0x000000, "Member 'Base_Pressable_BP_C_SetColor::Pushed' has a wrong offset!");

// Function Base_Pressable_BP.Base_Pressable_BP_C.ExecuteUbergraph_Base_Pressable_BP
// 0x0158 (0x0158 - 0x0000)
struct Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_ButtonColor;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Condition;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_SetColor;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x00CC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Pushed;                         // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP) == 0x000004, "Wrong alignment on Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP");
static_assert(sizeof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP) == 0x000158, "Wrong size on Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, EntryPoint) == 0x000000, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, CallFunc_MakeVector_ReturnValue_1) == 0x000014, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, K2Node_CustomEvent_ButtonColor) == 0x000020, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::K2Node_CustomEvent_ButtonColor' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, CallFunc_BreakColor_R) == 0x000030, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, CallFunc_BreakColor_G) == 0x000034, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, CallFunc_BreakColor_B) == 0x000038, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, CallFunc_BreakColor_A) == 0x00003C, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, K2Node_CustomEvent_Condition) == 0x000040, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::K2Node_CustomEvent_Condition' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, K2Node_CustomEvent_SetColor) == 0x000041, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::K2Node_CustomEvent_SetColor' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000044, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0000CC, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP, K2Node_CustomEvent_Pushed) == 0x000154, "Member 'Base_Pressable_BP_C_ExecuteUbergraph_Base_Pressable_BP::K2Node_CustomEvent_Pushed' has a wrong offset!");

}

