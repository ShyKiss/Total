#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseOptionsEntry

#include "Basic.hpp"

#include "BaseOptionsEntry_classes.hpp"
#include "BaseOptionsEntry_parameters.hpp"


namespace SDK
{

// Function BaseOptionsEntry.BaseOptionsEntry_C.ExecuteUbergraph_BaseOptionsEntry
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBaseOptionsEntry_C::ExecuteUbergraph_BaseOptionsEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "ExecuteUbergraph_BaseOptionsEntry");

	Params::BaseOptionsEntry_C_ExecuteUbergraph_BaseOptionsEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.RefreshValue
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceUpdateSlider                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBaseOptionsEntry_C::RefreshValue(bool ForceUpdateSlider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "RefreshValue");

	Params::BaseOptionsEntry_C_RefreshValue Parms{};

	Parms.ForceUpdateSlider = ForceUpdateSlider;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.Event_UpdateSubButtonText
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewValue                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBaseOptionsEntry_C::Event_UpdateSubButtonText(const class FText& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "Event_UpdateSubButtonText");

	Params::BaseOptionsEntry_C_Event_UpdateSubButtonText Parms{};

	Parms.NewValue = std::move(NewValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.Event_RefreshEntry
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBaseOptionsEntry_C::Event_RefreshEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "Event_RefreshEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.Event_UpdateTitle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewTitle                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBaseOptionsEntry_C::Event_UpdateTitle(const class FText& NewTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "Event_UpdateTitle");

	Params::BaseOptionsEntry_C_Event_UpdateTitle Parms{};

	Parms.NewTitle = std::move(NewTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBaseOptionsEntry_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "PreConstruct");

	Params::BaseOptionsEntry_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.RefreshEntry
// (Public, BlueprintCallable, BlueprintEvent)

void UBaseOptionsEntry_C::RefreshEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "RefreshEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.ColorChangedEntries
// (Public, BlueprintCallable, BlueprintEvent)

void UBaseOptionsEntry_C::ColorChangedEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "ColorChangedEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.RefreshDisplay
// (Public, BlueprintCallable, BlueprintEvent)

void UBaseOptionsEntry_C::RefreshDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "RefreshDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.UpdateEnableStatus
// (Public, BlueprintCallable, BlueprintEvent)

void UBaseOptionsEntry_C::UpdateEnableStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "UpdateEnableStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.SetupCounter
// (Public, BlueprintCallable, BlueprintEvent)

void UBaseOptionsEntry_C::SetupCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "SetupCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.RefreshCounter
// (Public, BlueprintCallable, BlueprintEvent)

void UBaseOptionsEntry_C::RefreshCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "RefreshCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.TrySetupCounter
// (Public, BlueprintCallable, BlueprintEvent)

void UBaseOptionsEntry_C::TrySetupCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "TrySetupCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBaseOptionsEntry_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "OnKeyDown");

	Params::BaseOptionsEntry_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBaseOptionsEntry_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "OnKeyUp");

	Params::BaseOptionsEntry_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.OnAnalogValueChanged
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FAnalogInputEvent                InAnalogInputEvent                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBaseOptionsEntry_C::OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "OnAnalogValueChanged");

	Params::BaseOptionsEntry_C_OnAnalogValueChanged Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InAnalogInputEvent = std::move(InAnalogInputEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.GetArrowBtn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Left                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UArrowButton_C*                   ArrowButton                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBaseOptionsEntry_C::GetArrowBtn(bool Left, class UArrowButton_C** ArrowButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "GetArrowBtn");

	Params::BaseOptionsEntry_C_GetArrowBtn Parms{};

	Parms.Left = Left;

	UObject::ProcessEvent(Func, &Parms);

	if (ArrowButton != nullptr)
		*ArrowButton = Parms.ArrowButton;
}


// Function BaseOptionsEntry.BaseOptionsEntry_C.HandleSliderOnInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLeftPressed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   TimeBasedMultiplier                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBaseOptionsEntry_C::HandleSliderOnInput(bool bLeftPressed, int32 TimeBasedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseOptionsEntry_C", "HandleSliderOnInput");

	Params::BaseOptionsEntry_C_HandleSliderOnInput Parms{};

	Parms.bLeftPressed = bLeftPressed;
	Parms.TimeBasedMultiplier = TimeBasedMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}

}

