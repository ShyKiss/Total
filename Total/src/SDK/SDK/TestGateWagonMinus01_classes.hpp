#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TestGateWagonMinus01

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TestGateWagon-01.TestGateWagon-01_C
// 0x0AB8 (0x0D00 - 0x0248)
class ATestGateWagonMinus01_C final : public ARBLevelScriptActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Timeline_3_NewTrack_0_580011104A2C46422E17D6A01AC5CCE8; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_3__Direction_580011104A2C46422E17D6A01AC5CCE8; // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_3;                                        // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_NewTrack_0_5CAB98CE434DB76396D18E8742E82D91; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_2__Direction_5CAB98CE434DB76396D18E8742E82D91; // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_0_F21E72B847CEDA8674C169B55B36FCF8; // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_F21E72B847CEDA8674C169B55B36FCF8; // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakingCablesTimeline_NewTrack_0_003C118546332022DAB9B2BD9BB306DC; // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ShakingCablesTimeline__Direction_003C118546332022DAB9B2BD9BB306DC; // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ShakingCablesTimeline;                             // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_55C762554C82F09849B411A87CA70CD5; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_55C762554C82F09849B411A87CA70CD5; // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlickeringTimeline_NewTrack_0_231E7B494A9D13BACBBA1E8CEF7A386E; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FlickeringTimeline__Direction_231E7B494A9D13BACBBA1E8CEF7A386E; // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FlickeringTimeline;                                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StopTimeline_NewTrack_0_CC26ABF642D32909179CBABBB2A238EF; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            StopTimeline__Direction_CC26ABF642D32909179CBABBB2A238EF; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     StopTimeline;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartingStationInitialPos;                         // 0x02C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartingStationEndPos;                             // 0x02CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraShakeData                       EaseInCamShakeData;                                // 0x02D8(0x0098)(Edit, BlueprintVisible, NoDestructor)
	struct FCameraShakeData                       Shake_DataContinousCamShakeData;                   // 0x0370(0x0098)(Edit, BlueprintVisible, NoDestructor)
	struct FCameraShakeData                       Shake_DataBumpsCamShakeData;                       // 0x0408(0x0098)(Edit, BlueprintVisible, NoDestructor)
	struct FCameraShakeData                       EaseOutCamShakeData;                               // 0x04A0(0x0098)(Edit, BlueprintVisible, NoDestructor)
	bool                                          ShakeLoopsActive;                                  // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x3];                                      // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ArrivingStationInitialPos;                         // 0x053C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ArrivingStationEndPos;                             // 0x0548(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraShakeData                       DeAnchoringCamShakeData;                           // 0x0558(0x0098)(Edit, BlueprintVisible, NoDestructor)
	float                                         LightFlickeringIntensity;                          // 0x05F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASAS_TanglingCableMinus01_BP_C*> TanglingCables;                                    // 0x05F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	uint8                                         Pad_608[0x8];                                      // 0x0608(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   Settings;                                          // 0x0610(0x05B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ASASChair_BP_C*                         Chair;                                             // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTimeBeforeStoppingTrain;                        // 0x0BC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTrainTimeStamp;                               // 0x0BCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrugSequenceStarted;                               // 0x0BD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNarrativeScreenAnimationData          PleaseSitAnimationDAta;                            // 0x0BD8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          IsTutorialStage;                                   // 0x0BF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMovieSceneSequencePlayer*              Target;                                            // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                End_Play_Reason;                                   // 0x0C00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C01[0x3];                                      // 0x0C01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0C04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNarrativeScreenAnimationData          EndScreenLogo;                                     // 0x0C08(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class ARBSAS*                                 CurrentSAS;                                        // 0x0C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class APostProcessVolume>      DrugPost;                                          // 0x0C28(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   LightColor;                                        // 0x0C50(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UPostProcessComponent*                  NewPP;                                             // 0x0C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ATrainStationSignMinus01_BP_C*>  DestinationSigns;                                  // 0x0C68(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ARBLight_BP_C*>                  FluorescentArray;                                  // 0x0C78(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ASpotLight*>                     SpotLightArray;                                    // 0x0C88(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class AWagonMetalWindowMinus01_C>> WagonWindows;                                      // 0x0C98(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ACeilingFluorescentMinus05_C*           CeilingFluorescentMinus19_ExecuteUbergraph_TestGateWagonMinus01_RefProperty; // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATestGateMovingBackgroundMinus01_BP_C*  ArrivingStationAnchorMinus01_ExecuteUbergraph_TestGateWagonMinus01_RefProperty; // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACeilingFluorescentMinus05_C*           CeilingFluorescentMinus10_ExecuteUbergraph_TestGateWagonMinus01_RefProperty; // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATestGateMovingBackgroundMinus01_BP_C*  TestGateMovingBackgroundMinus01_BP_5_ExecuteUbergraph_TestGateWagonMinus01_RefProperty; // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASAS_TvChannel_BP_C*                    SAS_Default_TvChannel_BP_ExecuteUbergraph_TestGateWagonMinus01_RefProperty; // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitter*                               DrugSprayMinus01_PS_ExecuteUbergraph_TestGateWagonMinus01_RefProperty; // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitter*                               DrugSprayMinus02_PS_ExecuteUbergraph_TestGateWagonMinus01_RefProperty; // 0x0CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASasDoorMinus03_BP1_C*                  SasDoorExit_ExecuteUbergraph_TestGateWagonMinus01_RefProperty; // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASasDoorMinus03_BP1_C*                  SasDoorEntrance_ExecuteUbergraph_TestGateWagonMinus01_RefProperty; // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASAS_TvChannel_BP_C*                    SAS_Default_TvChannel_BP_EdGraph_2_RefProperty;    // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASAS_TvChannel_BP_C*                    SAS_Default_TvChannel_BP_EdGraph_6_RefProperty;    // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateSASDoorText(const class FText& Name_0, class ASasDoorMinus03_BP1_C* Door);
	void GetLight();
	void SetDestinationSignsText(const class FText& Text);
	void SetAllTVsWithInteractibleUI();
	void ForceAllTvUp(bool ForceUP);
	void CanPlayIntroAnim(bool* Value);
	void SetAllTVsON(bool IsOn);
	void PlayAnimationOnAllTVs(const struct FNarrativeScreenAnimationData& AnimData);
	void GetLocalPlayerChairPanel(class URBSASChairPanelComponent** Chair_0);
	void ForcePlayersOutOfChairs();
	void StopTimeline__FinishedFunc();
	void StopTimeline__UpdateFunc();
	void FlickeringTimeline__FinishedFunc();
	void FlickeringTimeline__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void ShakingCablesTimeline__FinishedFunc();
	void ShakingCablesTimeline__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_2__FinishedFunc();
	void Timeline_2__UpdateFunc();
	void Timeline_3__FinishedFunc();
	void Timeline_3__UpdateFunc();
	void bpiBlurEntity();
	void UpdateSASTexts();
	void StartTrain(bool ToLobby);
	void StopTrain();
	void ReceiveBeginPlay();
	void StartTrainNoDelay();
	void CameraShakeTrainRideContinuous();
	void StartFlickeringLights();
	void BrakingFlickeringLights();
	void SetCableShakeFadeIn();
	void SetCableShakeFadeOut();
	void MoveAwayFromLobby();
	void ArriveToLobby();
	void MoveAwayFromMission();
	void ArriveToMission();
	void EnableLight();
	void OnGamePhaseUpdated(EGamePhase GamePhase);
	void OnGameStageInfoChanged(const struct FRBGameStageInfo& GameStageInfo);
	void TryStopTrain();
	void StartIntroSequence();
	void ForceTvUp();
	void DisableLight();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Start_Narrative_Fail_Music();
	void OnIntroAnimationFinished();
	void StopDrugSpray();
	void StartDrugSpray();
	void PrintMovieDebug();
	void UpdateSAS();
	void OnCurrentSasChanged(const class ARBSAS* OldSAS, const class ARBSAS* CurrentSAS_0);
	void OnSASStateChangedCallback(ESASState State);
	void CloseLight();
	void OnTutorialIntroFinished();
	void ExecuteUbergraph_TestGateWagonMinus01(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TestGateWagon-01_C">();
	}
	static class ATestGateWagonMinus01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATestGateWagonMinus01_C>();
	}
};
static_assert(alignof(ATestGateWagonMinus01_C) == 0x000010, "Wrong alignment on ATestGateWagonMinus01_C");
static_assert(sizeof(ATestGateWagonMinus01_C) == 0x000D00, "Wrong size on ATestGateWagonMinus01_C");
static_assert(offsetof(ATestGateWagonMinus01_C, UberGraphFrame) == 0x000248, "Member 'ATestGateWagonMinus01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_3_NewTrack_0_580011104A2C46422E17D6A01AC5CCE8) == 0x000250, "Member 'ATestGateWagonMinus01_C::Timeline_3_NewTrack_0_580011104A2C46422E17D6A01AC5CCE8' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_3__Direction_580011104A2C46422E17D6A01AC5CCE8) == 0x000254, "Member 'ATestGateWagonMinus01_C::Timeline_3__Direction_580011104A2C46422E17D6A01AC5CCE8' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_3) == 0x000258, "Member 'ATestGateWagonMinus01_C::Timeline_3' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_2_NewTrack_0_5CAB98CE434DB76396D18E8742E82D91) == 0x000260, "Member 'ATestGateWagonMinus01_C::Timeline_2_NewTrack_0_5CAB98CE434DB76396D18E8742E82D91' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_2__Direction_5CAB98CE434DB76396D18E8742E82D91) == 0x000264, "Member 'ATestGateWagonMinus01_C::Timeline_2__Direction_5CAB98CE434DB76396D18E8742E82D91' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_2) == 0x000268, "Member 'ATestGateWagonMinus01_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_1_NewTrack_0_F21E72B847CEDA8674C169B55B36FCF8) == 0x000270, "Member 'ATestGateWagonMinus01_C::Timeline_1_NewTrack_0_F21E72B847CEDA8674C169B55B36FCF8' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_1__Direction_F21E72B847CEDA8674C169B55B36FCF8) == 0x000274, "Member 'ATestGateWagonMinus01_C::Timeline_1__Direction_F21E72B847CEDA8674C169B55B36FCF8' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_1) == 0x000278, "Member 'ATestGateWagonMinus01_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, ShakingCablesTimeline_NewTrack_0_003C118546332022DAB9B2BD9BB306DC) == 0x000280, "Member 'ATestGateWagonMinus01_C::ShakingCablesTimeline_NewTrack_0_003C118546332022DAB9B2BD9BB306DC' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, ShakingCablesTimeline__Direction_003C118546332022DAB9B2BD9BB306DC) == 0x000284, "Member 'ATestGateWagonMinus01_C::ShakingCablesTimeline__Direction_003C118546332022DAB9B2BD9BB306DC' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, ShakingCablesTimeline) == 0x000288, "Member 'ATestGateWagonMinus01_C::ShakingCablesTimeline' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_0_NewTrack_0_55C762554C82F09849B411A87CA70CD5) == 0x000290, "Member 'ATestGateWagonMinus01_C::Timeline_0_NewTrack_0_55C762554C82F09849B411A87CA70CD5' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_0__Direction_55C762554C82F09849B411A87CA70CD5) == 0x000294, "Member 'ATestGateWagonMinus01_C::Timeline_0__Direction_55C762554C82F09849B411A87CA70CD5' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Timeline_0) == 0x000298, "Member 'ATestGateWagonMinus01_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, FlickeringTimeline_NewTrack_0_231E7B494A9D13BACBBA1E8CEF7A386E) == 0x0002A0, "Member 'ATestGateWagonMinus01_C::FlickeringTimeline_NewTrack_0_231E7B494A9D13BACBBA1E8CEF7A386E' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, FlickeringTimeline__Direction_231E7B494A9D13BACBBA1E8CEF7A386E) == 0x0002A4, "Member 'ATestGateWagonMinus01_C::FlickeringTimeline__Direction_231E7B494A9D13BACBBA1E8CEF7A386E' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, FlickeringTimeline) == 0x0002A8, "Member 'ATestGateWagonMinus01_C::FlickeringTimeline' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, StopTimeline_NewTrack_0_CC26ABF642D32909179CBABBB2A238EF) == 0x0002B0, "Member 'ATestGateWagonMinus01_C::StopTimeline_NewTrack_0_CC26ABF642D32909179CBABBB2A238EF' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, StopTimeline__Direction_CC26ABF642D32909179CBABBB2A238EF) == 0x0002B4, "Member 'ATestGateWagonMinus01_C::StopTimeline__Direction_CC26ABF642D32909179CBABBB2A238EF' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, StopTimeline) == 0x0002B8, "Member 'ATestGateWagonMinus01_C::StopTimeline' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, StartingStationInitialPos) == 0x0002C0, "Member 'ATestGateWagonMinus01_C::StartingStationInitialPos' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, StartingStationEndPos) == 0x0002CC, "Member 'ATestGateWagonMinus01_C::StartingStationEndPos' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, EaseInCamShakeData) == 0x0002D8, "Member 'ATestGateWagonMinus01_C::EaseInCamShakeData' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Shake_DataContinousCamShakeData) == 0x000370, "Member 'ATestGateWagonMinus01_C::Shake_DataContinousCamShakeData' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Shake_DataBumpsCamShakeData) == 0x000408, "Member 'ATestGateWagonMinus01_C::Shake_DataBumpsCamShakeData' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, EaseOutCamShakeData) == 0x0004A0, "Member 'ATestGateWagonMinus01_C::EaseOutCamShakeData' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, ShakeLoopsActive) == 0x000538, "Member 'ATestGateWagonMinus01_C::ShakeLoopsActive' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, ArrivingStationInitialPos) == 0x00053C, "Member 'ATestGateWagonMinus01_C::ArrivingStationInitialPos' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, ArrivingStationEndPos) == 0x000548, "Member 'ATestGateWagonMinus01_C::ArrivingStationEndPos' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, DeAnchoringCamShakeData) == 0x000558, "Member 'ATestGateWagonMinus01_C::DeAnchoringCamShakeData' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, LightFlickeringIntensity) == 0x0005F0, "Member 'ATestGateWagonMinus01_C::LightFlickeringIntensity' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, TanglingCables) == 0x0005F8, "Member 'ATestGateWagonMinus01_C::TanglingCables' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Settings) == 0x000610, "Member 'ATestGateWagonMinus01_C::Settings' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Chair) == 0x000BC0, "Member 'ATestGateWagonMinus01_C::Chair' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, MinTimeBeforeStoppingTrain) == 0x000BC8, "Member 'ATestGateWagonMinus01_C::MinTimeBeforeStoppingTrain' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, StartTrainTimeStamp) == 0x000BCC, "Member 'ATestGateWagonMinus01_C::StartTrainTimeStamp' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, DrugSequenceStarted) == 0x000BD0, "Member 'ATestGateWagonMinus01_C::DrugSequenceStarted' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, PleaseSitAnimationDAta) == 0x000BD8, "Member 'ATestGateWagonMinus01_C::PleaseSitAnimationDAta' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, IsTutorialStage) == 0x000BF0, "Member 'ATestGateWagonMinus01_C::IsTutorialStage' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Target) == 0x000BF8, "Member 'ATestGateWagonMinus01_C::Target' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, End_Play_Reason) == 0x000C00, "Member 'ATestGateWagonMinus01_C::End_Play_Reason' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, Time) == 0x000C04, "Member 'ATestGateWagonMinus01_C::Time' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, EndScreenLogo) == 0x000C08, "Member 'ATestGateWagonMinus01_C::EndScreenLogo' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, CurrentSAS) == 0x000C20, "Member 'ATestGateWagonMinus01_C::CurrentSAS' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, DrugPost) == 0x000C28, "Member 'ATestGateWagonMinus01_C::DrugPost' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, LightColor) == 0x000C50, "Member 'ATestGateWagonMinus01_C::LightColor' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, NewPP) == 0x000C60, "Member 'ATestGateWagonMinus01_C::NewPP' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, DestinationSigns) == 0x000C68, "Member 'ATestGateWagonMinus01_C::DestinationSigns' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, FluorescentArray) == 0x000C78, "Member 'ATestGateWagonMinus01_C::FluorescentArray' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, SpotLightArray) == 0x000C88, "Member 'ATestGateWagonMinus01_C::SpotLightArray' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, WagonWindows) == 0x000C98, "Member 'ATestGateWagonMinus01_C::WagonWindows' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, CeilingFluorescentMinus19_ExecuteUbergraph_TestGateWagonMinus01_RefProperty) == 0x000CA8, "Member 'ATestGateWagonMinus01_C::CeilingFluorescentMinus19_ExecuteUbergraph_TestGateWagonMinus01_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, ArrivingStationAnchorMinus01_ExecuteUbergraph_TestGateWagonMinus01_RefProperty) == 0x000CB0, "Member 'ATestGateWagonMinus01_C::ArrivingStationAnchorMinus01_ExecuteUbergraph_TestGateWagonMinus01_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, CeilingFluorescentMinus10_ExecuteUbergraph_TestGateWagonMinus01_RefProperty) == 0x000CB8, "Member 'ATestGateWagonMinus01_C::CeilingFluorescentMinus10_ExecuteUbergraph_TestGateWagonMinus01_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, TestGateMovingBackgroundMinus01_BP_5_ExecuteUbergraph_TestGateWagonMinus01_RefProperty) == 0x000CC0, "Member 'ATestGateWagonMinus01_C::TestGateMovingBackgroundMinus01_BP_5_ExecuteUbergraph_TestGateWagonMinus01_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, SAS_Default_TvChannel_BP_ExecuteUbergraph_TestGateWagonMinus01_RefProperty) == 0x000CC8, "Member 'ATestGateWagonMinus01_C::SAS_Default_TvChannel_BP_ExecuteUbergraph_TestGateWagonMinus01_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, DrugSprayMinus01_PS_ExecuteUbergraph_TestGateWagonMinus01_RefProperty) == 0x000CD0, "Member 'ATestGateWagonMinus01_C::DrugSprayMinus01_PS_ExecuteUbergraph_TestGateWagonMinus01_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, DrugSprayMinus02_PS_ExecuteUbergraph_TestGateWagonMinus01_RefProperty) == 0x000CD8, "Member 'ATestGateWagonMinus01_C::DrugSprayMinus02_PS_ExecuteUbergraph_TestGateWagonMinus01_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, SasDoorExit_ExecuteUbergraph_TestGateWagonMinus01_RefProperty) == 0x000CE0, "Member 'ATestGateWagonMinus01_C::SasDoorExit_ExecuteUbergraph_TestGateWagonMinus01_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, SasDoorEntrance_ExecuteUbergraph_TestGateWagonMinus01_RefProperty) == 0x000CE8, "Member 'ATestGateWagonMinus01_C::SasDoorEntrance_ExecuteUbergraph_TestGateWagonMinus01_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, SAS_Default_TvChannel_BP_EdGraph_2_RefProperty) == 0x000CF0, "Member 'ATestGateWagonMinus01_C::SAS_Default_TvChannel_BP_EdGraph_2_RefProperty' has a wrong offset!");
static_assert(offsetof(ATestGateWagonMinus01_C, SAS_Default_TvChannel_BP_EdGraph_6_RefProperty) == 0x000CF8, "Member 'ATestGateWagonMinus01_C::SAS_Default_TvChannel_BP_EdGraph_6_RefProperty' has a wrong offset!");

}

