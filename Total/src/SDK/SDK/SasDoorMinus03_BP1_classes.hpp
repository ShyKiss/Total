#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SasDoorMinus03_BP1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SasDoor-03_BP1.SasDoor-03_BP1_C
// 0x01C8 (0x0538 - 0x0370)
class ASasDoorMinus03_BP1_C final : public ARBSASTubesDoor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SasBackCollision;                                  // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBRoomAssociationComponent*            EditorOnlyMinusRBRoomAssociation;                  // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                ContainerRef_ActorPrevis_01;                       // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TrialChainingRoot;                                 // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TubeChild4Ref;                                     // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TubeChild3Ref;                                     // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TubeChild2Ref;                                     // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TubeChild1Ref;                                     // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RedLightFrontMinus02;                              // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GreenLightFrontMinus02;                            // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RedLightFrontMinus03;                              // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GreenLightFrontMinus03;                            // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RedLightFrontMinus04;                              // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GreenLightFrontMinus04;                            // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RedLightFrontMinus01;                              // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GreenLightFrontMinus01;                            // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasArmoredDoorMinus01;                             // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasArmoredDoorMinus04;                             // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasArmoredDoorMinus02;                             // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender3;                                       // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender2;                                       // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender1;                                       // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasArmoredDoorMinus03;                             // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasBackFrame;                                      // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasMiddle;                                         // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasFrontFrame;                                     // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBBoxNavMeshBlockingComponent*         RBBoxNavMeshBlocking;                              // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBObjectiveActorComponent*             RBObjectiveActor;                                  // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Door2_C19CC01C469040AA75358887592B7D62; // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_DoorOne_C19CC01C469040AA75358887592B7D62; // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_C19CC01C469040AA75358887592B7D62; // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Door2_56FFA5EE45988F4ABB9E0ABB3E048312; // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_DoorOne_56FFA5EE45988F4ABB9E0ABB3E048312; // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_56FFA5EE45988F4ABB9E0ABB3E048312; // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           GreenLights;                                       // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           RedLights;                                         // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector2D                              Screen_Size;                                       // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RenderTextureSize;                                 // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas;                                            // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasRenderTarget2D*                  CanvasRender;                                      // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArmoredDoorOpened;                                 // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrentText;                                       // 0x04F0(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	bool                                          AutoCloseWhenPlayerInside;                         // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AutoOpenWhenPlayerInside;                          // 0x0509(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForceTubeLightDisabled;                            // 0x050A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B[0x1];                                      // 0x050B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Fog_Intensity;                                     // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewVar_0;                                          // 0x0510(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Kerning;                                           // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FontScale;                                         // 0x052C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysOpenedArmoredDoors;                          // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayingArmoredDoorAnimation;                     // 0x0531(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMainLobbySAS;                                    // 0x0532(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SasDoorMinus03_BP1(int32 EntryPoint);
	void OnPlayersInsideChanged(class ARBSASTube* Tube);
	void Event_OnTubesChanged();
	void OnOpenedStageChanged(class ASASTubeMinus02_BP_C* SASTube);
	void BindEventsOnTube(class ASASTubeMinus02_BP_C* Tube);
	void Event_OnCurrentDirectionChanged();
	void UpdateTextCanvas();
	void CanvasRenderUpdate(class UCanvas* Canvas_0, int32 Width, int32 Height);
	void ReceiveBeginPlay();
	void CloseArmoredDoors();
	void OpenArmoredDoors();
	void BP_OnDeactivate();
	void BP_OnActivate();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void InitializeTubes();
	void OnActivationChanged();
	void GetCurrentStageText(class FText* Text);
	void OnRep_CurrentText();
	void SetCurrentText(const class FText& Text);
	void UpdateArmoredDoors();
	void SpawnTubes();
	void HasOpenedTube(bool* Out);
	void ForceLightDisabled(bool Disabled);
	void SetAutoOpenWhenPlayerInside(bool AutoOpen);
	void SetAutoCloseWhenPlayerInside(bool AutoClose);
	void IsStageExit(bool* NewParam);
	void OnSASTubeDoorStateChanged();
	void HasPlayersInside(bool* Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SasDoor-03_BP1_C">();
	}
	static class ASasDoorMinus03_BP1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASasDoorMinus03_BP1_C>();
	}
};
static_assert(alignof(ASasDoorMinus03_BP1_C) == 0x000008, "Wrong alignment on ASasDoorMinus03_BP1_C");
static_assert(sizeof(ASasDoorMinus03_BP1_C) == 0x000538, "Wrong size on ASasDoorMinus03_BP1_C");
static_assert(offsetof(ASasDoorMinus03_BP1_C, UberGraphFrame) == 0x000370, "Member 'ASasDoorMinus03_BP1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, SasBackCollision) == 0x000378, "Member 'ASasDoorMinus03_BP1_C::SasBackCollision' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, EditorOnlyMinusRBRoomAssociation) == 0x000380, "Member 'ASasDoorMinus03_BP1_C::EditorOnlyMinusRBRoomAssociation' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, ContainerRef_ActorPrevis_01) == 0x000388, "Member 'ASasDoorMinus03_BP1_C::ContainerRef_ActorPrevis_01' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, TrialChainingRoot) == 0x000390, "Member 'ASasDoorMinus03_BP1_C::TrialChainingRoot' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, TubeChild4Ref) == 0x000398, "Member 'ASasDoorMinus03_BP1_C::TubeChild4Ref' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, TubeChild3Ref) == 0x0003A0, "Member 'ASasDoorMinus03_BP1_C::TubeChild3Ref' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, TubeChild2Ref) == 0x0003A8, "Member 'ASasDoorMinus03_BP1_C::TubeChild2Ref' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, TubeChild1Ref) == 0x0003B0, "Member 'ASasDoorMinus03_BP1_C::TubeChild1Ref' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, RBSound) == 0x0003B8, "Member 'ASasDoorMinus03_BP1_C::RBSound' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, RedLightFrontMinus02) == 0x0003C0, "Member 'ASasDoorMinus03_BP1_C::RedLightFrontMinus02' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, GreenLightFrontMinus02) == 0x0003C8, "Member 'ASasDoorMinus03_BP1_C::GreenLightFrontMinus02' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, RedLightFrontMinus03) == 0x0003D0, "Member 'ASasDoorMinus03_BP1_C::RedLightFrontMinus03' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, GreenLightFrontMinus03) == 0x0003D8, "Member 'ASasDoorMinus03_BP1_C::GreenLightFrontMinus03' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, RedLightFrontMinus04) == 0x0003E0, "Member 'ASasDoorMinus03_BP1_C::RedLightFrontMinus04' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, GreenLightFrontMinus04) == 0x0003E8, "Member 'ASasDoorMinus03_BP1_C::GreenLightFrontMinus04' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, RedLightFrontMinus01) == 0x0003F0, "Member 'ASasDoorMinus03_BP1_C::RedLightFrontMinus01' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, GreenLightFrontMinus01) == 0x0003F8, "Member 'ASasDoorMinus03_BP1_C::GreenLightFrontMinus01' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, SasArmoredDoorMinus01) == 0x000400, "Member 'ASasDoorMinus03_BP1_C::SasArmoredDoorMinus01' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, SasArmoredDoorMinus04) == 0x000408, "Member 'ASasDoorMinus03_BP1_C::SasArmoredDoorMinus04' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, SasArmoredDoorMinus02) == 0x000410, "Member 'ASasDoorMinus03_BP1_C::SasArmoredDoorMinus02' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, TextRender) == 0x000418, "Member 'ASasDoorMinus03_BP1_C::TextRender' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, TextRender3) == 0x000420, "Member 'ASasDoorMinus03_BP1_C::TextRender3' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, TextRender2) == 0x000428, "Member 'ASasDoorMinus03_BP1_C::TextRender2' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, TextRender1) == 0x000430, "Member 'ASasDoorMinus03_BP1_C::TextRender1' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, SasArmoredDoorMinus03) == 0x000438, "Member 'ASasDoorMinus03_BP1_C::SasArmoredDoorMinus03' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, SasBackFrame) == 0x000440, "Member 'ASasDoorMinus03_BP1_C::SasBackFrame' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, SasMiddle) == 0x000448, "Member 'ASasDoorMinus03_BP1_C::SasMiddle' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, SasFrontFrame) == 0x000450, "Member 'ASasDoorMinus03_BP1_C::SasFrontFrame' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, RBBoxNavMeshBlocking) == 0x000458, "Member 'ASasDoorMinus03_BP1_C::RBBoxNavMeshBlocking' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, RBObjectiveActor) == 0x000460, "Member 'ASasDoorMinus03_BP1_C::RBObjectiveActor' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, DefaultSceneRoot) == 0x000468, "Member 'ASasDoorMinus03_BP1_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Timeline_1_Door2_C19CC01C469040AA75358887592B7D62) == 0x000470, "Member 'ASasDoorMinus03_BP1_C::Timeline_1_Door2_C19CC01C469040AA75358887592B7D62' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Timeline_1_DoorOne_C19CC01C469040AA75358887592B7D62) == 0x000474, "Member 'ASasDoorMinus03_BP1_C::Timeline_1_DoorOne_C19CC01C469040AA75358887592B7D62' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Timeline_1__Direction_C19CC01C469040AA75358887592B7D62) == 0x000478, "Member 'ASasDoorMinus03_BP1_C::Timeline_1__Direction_C19CC01C469040AA75358887592B7D62' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Timeline_1) == 0x000480, "Member 'ASasDoorMinus03_BP1_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Timeline_0_Door2_56FFA5EE45988F4ABB9E0ABB3E048312) == 0x000488, "Member 'ASasDoorMinus03_BP1_C::Timeline_0_Door2_56FFA5EE45988F4ABB9E0ABB3E048312' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Timeline_0_DoorOne_56FFA5EE45988F4ABB9E0ABB3E048312) == 0x00048C, "Member 'ASasDoorMinus03_BP1_C::Timeline_0_DoorOne_56FFA5EE45988F4ABB9E0ABB3E048312' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Timeline_0__Direction_56FFA5EE45988F4ABB9E0ABB3E048312) == 0x000490, "Member 'ASasDoorMinus03_BP1_C::Timeline_0__Direction_56FFA5EE45988F4ABB9E0ABB3E048312' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Timeline_0) == 0x000498, "Member 'ASasDoorMinus03_BP1_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, GreenLights) == 0x0004A0, "Member 'ASasDoorMinus03_BP1_C::GreenLights' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, RedLights) == 0x0004B0, "Member 'ASasDoorMinus03_BP1_C::RedLights' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Screen_Size) == 0x0004C0, "Member 'ASasDoorMinus03_BP1_C::Screen_Size' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, RenderTextureSize) == 0x0004C8, "Member 'ASasDoorMinus03_BP1_C::RenderTextureSize' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Canvas) == 0x0004D0, "Member 'ASasDoorMinus03_BP1_C::Canvas' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, CanvasRender) == 0x0004D8, "Member 'ASasDoorMinus03_BP1_C::CanvasRender' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Material) == 0x0004E0, "Member 'ASasDoorMinus03_BP1_C::Material' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, ArmoredDoorOpened) == 0x0004E8, "Member 'ASasDoorMinus03_BP1_C::ArmoredDoorOpened' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, CurrentText) == 0x0004F0, "Member 'ASasDoorMinus03_BP1_C::CurrentText' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, AutoCloseWhenPlayerInside) == 0x000508, "Member 'ASasDoorMinus03_BP1_C::AutoCloseWhenPlayerInside' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, AutoOpenWhenPlayerInside) == 0x000509, "Member 'ASasDoorMinus03_BP1_C::AutoOpenWhenPlayerInside' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, ForceTubeLightDisabled) == 0x00050A, "Member 'ASasDoorMinus03_BP1_C::ForceTubeLightDisabled' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Fog_Intensity) == 0x00050C, "Member 'ASasDoorMinus03_BP1_C::Fog_Intensity' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, NewVar_0) == 0x000510, "Member 'ASasDoorMinus03_BP1_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, Kerning) == 0x000528, "Member 'ASasDoorMinus03_BP1_C::Kerning' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, FontScale) == 0x00052C, "Member 'ASasDoorMinus03_BP1_C::FontScale' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, AlwaysOpenedArmoredDoors) == 0x000530, "Member 'ASasDoorMinus03_BP1_C::AlwaysOpenedArmoredDoors' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, IsPlayingArmoredDoorAnimation) == 0x000531, "Member 'ASasDoorMinus03_BP1_C::IsPlayingArmoredDoorAnimation' has a wrong offset!");
static_assert(offsetof(ASasDoorMinus03_BP1_C, IsMainLobbySAS) == 0x000532, "Member 'ASasDoorMinus03_BP1_C::IsMainLobbySAS' has a wrong offset!");

}

