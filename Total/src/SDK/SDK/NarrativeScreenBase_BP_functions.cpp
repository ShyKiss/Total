#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NarrativeScreenBase_BP

#include "Basic.hpp"

#include "NarrativeScreenBase_BP_classes.hpp"
#include "NarrativeScreenBase_BP_parameters.hpp"


namespace SDK
{

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.BeginComponents
// (Public, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::BeginComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "BeginComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.RefreshHackEnabledState
// (Public, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::RefreshHackEnabledState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "RefreshHackEnabledState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.RefreshMultiPositionGroup
// (Public, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::RefreshMultiPositionGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "RefreshMultiPositionGroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.SnapScreenMeshesVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::SnapScreenMeshesVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "SnapScreenMeshesVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.BreakOnServer
// (Public, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::BreakOnServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "BreakOnServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.OnRep_bScreenCracked
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::OnRep_bScreenCracked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "OnRep_bScreenCracked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.OnRep_bScreenExploded
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::OnRep_bScreenExploded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "OnRep_bScreenExploded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.AllowScreenExplosion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bAllowScreenExplosion                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANarrativeScreenBase_BP_C::AllowScreenExplosion(bool* bAllowScreenExplosion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "AllowScreenExplosion");

	Params::NarrativeScreenBase_BP_C_AllowScreenExplosion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAllowScreenExplosion != nullptr)
		*bAllowScreenExplosion = Parms.bAllowScreenExplosion;
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.HandleDamageCountChanged_Cosmetic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANarrativeScreenBase_BP_C::HandleDamageCountChanged_Cosmetic(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "HandleDamageCountChanged_Cosmetic");

	Params::NarrativeScreenBase_BP_C_HandleDamageCountChanged_Cosmetic Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ResetScreenBreakEffects
// (Public, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::ResetScreenBreakEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "ResetScreenBreakEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.Update Screens MDD
// (Public, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::Update_Screens_MDD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "Update Screens MDD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.TurnOnLight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANarrativeScreenBase_BP_C::TurnOnLight(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "TurnOnLight");

	Params::NarrativeScreenBase_BP_C_TurnOnLight Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.SpawnLight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::SpawnLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "SpawnLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.LinkTextureToChannel
// (Public, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::LinkTextureToChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "LinkTextureToChannel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.UpdateTVOn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANarrativeScreenBase_BP_C::UpdateTVOn(bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "UpdateTVOn");

	Params::NarrativeScreenBase_BP_C_UpdateTVOn Parms{};

	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.SetScreenMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANarrativeScreenBase_BP_C::SetScreenMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "SetScreenMaterial");

	Params::NarrativeScreenBase_BP_C_SetScreenMaterial Parms{};

	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ScreenRefreshInTL__FinishedFunc
// (BlueprintEvent)

void ANarrativeScreenBase_BP_C::ScreenRefreshInTL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "ScreenRefreshInTL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ScreenRefreshInTL__UpdateFunc
// (BlueprintEvent)

void ANarrativeScreenBase_BP_C::ScreenRefreshInTL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "ScreenRefreshInTL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ScreenRefreshInTL__NewTrack_1__EventFunc
// (BlueprintEvent)

void ANarrativeScreenBase_BP_C::ScreenRefreshInTL__NewTrack_1__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "ScreenRefreshInTL__NewTrack_1__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ANarrativeScreenBase_BP_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ANarrativeScreenBase_BP_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ANarrativeScreenBase_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.UpdateTVOnVisuals_Internal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANarrativeScreenBase_BP_C::UpdateTVOnVisuals_Internal(bool IsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "UpdateTVOnVisuals_Internal");

	Params::NarrativeScreenBase_BP_C_UpdateTVOnVisuals_Internal Parms{};

	Parms.IsOn = IsOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.Event_OnLinkedStatusChanged
// (Event, Public, BlueprintEvent)

void ANarrativeScreenBase_BP_C::Event_OnLinkedStatusChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "Event_OnLinkedStatusChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.Event_OnIsOnChanged
// (Event, Public, BlueprintEvent)

void ANarrativeScreenBase_BP_C::Event_OnIsOnChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "Event_OnIsOnChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.flashRefreshJump
// (BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::FlashRefreshJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "flashRefreshJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ManualUnmute
// (BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::ManualUnmute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "ManualUnmute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ManualMute
// (BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::ManualMute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "ManualMute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.startDisfunctional
// (BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::StartDisfunctional()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "startDisfunctional");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.stopDisfunctional
// (BlueprintCallable, BlueprintEvent)

void ANarrativeScreenBase_BP_C::StopDisfunctional()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "stopDisfunctional");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.Event_OnDamageCountChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANarrativeScreenBase_BP_C::Event_OnDamageCountChanged(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "Event_OnDamageCountChanged");

	Params::NarrativeScreenBase_BP_C_Event_OnDamageCountChanged Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBDamageableComponent*           DamageableComponent_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANarrativeScreenBase_BP_C::BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature(class URBDamageableComponent* DamageableComponent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature");

	Params::NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature Parms{};

	Parms.DamageableComponent_0 = DamageableComponent_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.PostToggled
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bToggleEnabled                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANarrativeScreenBase_BP_C::PostToggled(bool bToggleEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "PostToggled");

	Params::NarrativeScreenBase_BP_C_PostToggled Parms{};

	Parms.bToggleEnabled = bToggleEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBHackableComponent*             HackableComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANarrativeScreenBase_BP_C::BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature(class URBHackableComponent* HackableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature");

	Params::NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature Parms{};

	Parms.HackableComponent = HackableComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ExecuteUbergraph_NarrativeScreenBase_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANarrativeScreenBase_BP_C::ExecuteUbergraph_NarrativeScreenBase_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "ExecuteUbergraph_NarrativeScreenBase_BP");

	Params::NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.IsTogglingStaticShadowComponentAllowed
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ANarrativeScreenBase_BP_C::IsTogglingStaticShadowComponentAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "IsTogglingStaticShadowComponentAllowed");

	Params::NarrativeScreenBase_BP_C_IsTogglingStaticShadowComponentAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.GetSimilarTVInRadius
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ANarrativeScreenBase_BP_C*>TVs                                                    (Parm, OutParm)

void ANarrativeScreenBase_BP_C::GetSimilarTVInRadius(float Radius, TArray<class ANarrativeScreenBase_BP_C*>* TVs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeScreenBase_BP_C", "GetSimilarTVInRadius");

	Params::NarrativeScreenBase_BP_C_GetSimilarTVInRadius Parms{};

	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);

	if (TVs != nullptr)
		*TVs = std::move(Parms.TVs);
}

}

