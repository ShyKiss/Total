#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PerkSlotsButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function PerkSlotsButton.PerkSlotsButton_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct PerkSlotsButton_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(PerkSlotsButton_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on PerkSlotsButton_C_OnRemovedFromFocusPath");
static_assert(sizeof(PerkSlotsButton_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on PerkSlotsButton_C_OnRemovedFromFocusPath");
static_assert(offsetof(PerkSlotsButton_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'PerkSlotsButton_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function PerkSlotsButton.PerkSlotsButton_C.SetFocused
// 0x0001 (0x0001 - 0x0000)
struct PerkSlotsButton_C_SetFocused final
{
public:
	bool                                          bInFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkSlotsButton_C_SetFocused) == 0x000001, "Wrong alignment on PerkSlotsButton_C_SetFocused");
static_assert(sizeof(PerkSlotsButton_C_SetFocused) == 0x000001, "Wrong size on PerkSlotsButton_C_SetFocused");
static_assert(offsetof(PerkSlotsButton_C_SetFocused, bInFocused) == 0x000000, "Member 'PerkSlotsButton_C_SetFocused::bInFocused' has a wrong offset!");

// Function PerkSlotsButton.PerkSlotsButton_C.IsConsideredHovered
// 0x0001 (0x0001 - 0x0000)
struct PerkSlotsButton_C_IsConsideredHovered final
{
public:
	bool                                          bConsideredHovered;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkSlotsButton_C_IsConsideredHovered) == 0x000001, "Wrong alignment on PerkSlotsButton_C_IsConsideredHovered");
static_assert(sizeof(PerkSlotsButton_C_IsConsideredHovered) == 0x000001, "Wrong size on PerkSlotsButton_C_IsConsideredHovered");
static_assert(offsetof(PerkSlotsButton_C_IsConsideredHovered, bConsideredHovered) == 0x000000, "Member 'PerkSlotsButton_C_IsConsideredHovered::bConsideredHovered' has a wrong offset!");

// Function PerkSlotsButton.PerkSlotsButton_C.OnFocusReceived
// 0x01D0 (0x01D0 - 0x0000)
struct PerkSlotsButton_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00F8(0x0018)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0118(0x00B8)()
};
static_assert(alignof(PerkSlotsButton_C_OnFocusReceived) == 0x000008, "Wrong alignment on PerkSlotsButton_C_OnFocusReceived");
static_assert(sizeof(PerkSlotsButton_C_OnFocusReceived) == 0x0001D0, "Wrong size on PerkSlotsButton_C_OnFocusReceived");
static_assert(offsetof(PerkSlotsButton_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'PerkSlotsButton_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'PerkSlotsButton_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'PerkSlotsButton_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_OnFocusReceived, CallFunc_MakeLiteralText_ReturnValue) == 0x0000F8, "Member 'PerkSlotsButton_C_OnFocusReceived::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_OnFocusReceived, CallFunc_MakeLiteralName_ReturnValue) == 0x000110, "Member 'PerkSlotsButton_C_OnFocusReceived::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000118, "Member 'PerkSlotsButton_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function PerkSlotsButton.PerkSlotsButton_C.SetHovered
// 0x0001 (0x0001 - 0x0000)
struct PerkSlotsButton_C_SetHovered final
{
public:
	bool                                          bInHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkSlotsButton_C_SetHovered) == 0x000001, "Wrong alignment on PerkSlotsButton_C_SetHovered");
static_assert(sizeof(PerkSlotsButton_C_SetHovered) == 0x000001, "Wrong size on PerkSlotsButton_C_SetHovered");
static_assert(offsetof(PerkSlotsButton_C_SetHovered, bInHovered) == 0x000000, "Member 'PerkSlotsButton_C_SetHovered::bInHovered' has a wrong offset!");

// Function PerkSlotsButton.PerkSlotsButton_C.Setup
// 0x01B0 (0x01B0 - 0x0000)
struct PerkSlotsButton_C_Setup final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkSlotButton_C*                      CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	class URBPlayerProgressionData*               CallFunc_GetLocalPlayerProgressionData_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPerkSlotRequiredLevel_ReturnValue;     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class UPerkSlotButton_C*                      K2Node_DynamicCast_AsPerk_Slot_Button;             // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScaleBoxSlot*                          K2Node_DynamicCast_AsScale_Box_Slot;               // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0138(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0158(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0180(0x0028)()
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PerkSlotsButton_C_Setup) == 0x000008, "Wrong alignment on PerkSlotsButton_C_Setup");
static_assert(sizeof(PerkSlotsButton_C_Setup) == 0x0001B0, "Wrong size on PerkSlotsButton_C_Setup");
static_assert(offsetof(PerkSlotsButton_C_Setup, Temp_bool_Variable) == 0x000000, "Member 'PerkSlotsButton_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, Temp_bool_Variable_1) == 0x000001, "Member 'PerkSlotsButton_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, Temp_text_Variable) == 0x000008, "Member 'PerkSlotsButton_C_Setup::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, Temp_bool_Variable_2) == 0x000020, "Member 'PerkSlotsButton_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, Temp_byte_Variable) == 0x000021, "Member 'PerkSlotsButton_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, Temp_byte_Variable_1) == 0x000022, "Member 'PerkSlotsButton_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_Create_ReturnValue) == 0x000028, "Member 'PerkSlotsButton_C_Setup::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'PerkSlotsButton_C_Setup::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'PerkSlotsButton_C_Setup::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_GetLocalPlayerProgressionData_ReturnValue) == 0x000088, "Member 'PerkSlotsButton_C_Setup::CallFunc_GetLocalPlayerProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_GetPerkSlotRequiredLevel_ReturnValue) == 0x000090, "Member 'PerkSlotsButton_C_Setup::CallFunc_GetPerkSlotRequiredLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'PerkSlotsButton_C_Setup::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_MakeArray_Array) == 0x0000D8, "Member 'PerkSlotsButton_C_Setup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_GetChildAt_ReturnValue) == 0x0000E8, "Member 'PerkSlotsButton_C_Setup::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'PerkSlotsButton_C_Setup::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_DynamicCast_AsPerk_Slot_Button) == 0x000108, "Member 'PerkSlotsButton_C_Setup::K2Node_DynamicCast_AsPerk_Slot_Button' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'PerkSlotsButton_C_Setup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_AddChild_ReturnValue) == 0x000118, "Member 'PerkSlotsButton_C_Setup::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000120, "Member 'PerkSlotsButton_C_Setup::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_DynamicCast_AsScale_Box_Slot) == 0x000128, "Member 'PerkSlotsButton_C_Setup::K2Node_DynamicCast_AsScale_Box_Slot' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'PerkSlotsButton_C_Setup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_Select_Default) == 0x000138, "Member 'PerkSlotsButton_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_BooleanOR_ReturnValue) == 0x000150, "Member 'PerkSlotsButton_C_Setup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_Select_Default_1) == 0x000158, "Member 'PerkSlotsButton_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_SelectColor_ReturnValue) == 0x000170, "Member 'PerkSlotsButton_C_Setup::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_MakeStruct_SlateColor) == 0x000180, "Member 'PerkSlotsButton_C_Setup::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x0001A8, "Member 'PerkSlotsButton_C_Setup::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_Setup, K2Node_Select_Default_2) == 0x0001A9, "Member 'PerkSlotsButton_C_Setup::K2Node_Select_Default_2' has a wrong offset!");

// Function PerkSlotsButton.PerkSlotsButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PerkSlotsButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkSlotsButton_C_PreConstruct) == 0x000001, "Wrong alignment on PerkSlotsButton_C_PreConstruct");
static_assert(sizeof(PerkSlotsButton_C_PreConstruct) == 0x000001, "Wrong size on PerkSlotsButton_C_PreConstruct");
static_assert(offsetof(PerkSlotsButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PerkSlotsButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PerkSlotsButton.PerkSlotsButton_C.ExecuteUbergraph_PerkSlotsButton
// 0x01C0 (0x01C0 - 0x0000)
struct PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkCategory                                 Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	EPerkCategory                                 Temp_byte_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C8(0x0040)(HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0118(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0130(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0188(0x0018)()
	class FText                                   CallFunc_FormatTextForDecorator_ReturnValue;       // 0x01A0(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton) == 0x000008, "Wrong alignment on PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton");
static_assert(sizeof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton) == 0x0001C0, "Wrong size on PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, EntryPoint) == 0x000000, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_byte_Variable) == 0x000004, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_text_Variable) == 0x000008, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_text_Variable_1) == 0x000020, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_text_Variable_2) == 0x000038, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_text_Variable_3) == 0x000050, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_byte_Variable_1) == 0x000068, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_name_Variable) == 0x00006C, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_name_Variable_1) == 0x000074, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_name_Variable_2) == 0x00007C, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, Temp_name_Variable_3) == 0x000084, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, K2Node_CreateDelegate_OutputDelegate) == 0x00008C, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, CallFunc_GetMenuManager_ReturnValue) == 0x0000A0, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, K2Node_Select_Default) == 0x0000B0, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, K2Node_MakeStruct_FormatArgumentData) == 0x0000C8, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, K2Node_Select_Default_1) == 0x000108, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, CallFunc_Conv_NameToText_ReturnValue) == 0x000118, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, K2Node_MakeStruct_FormatArgumentData_1) == 0x000130, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, K2Node_MakeArray_Array) == 0x000170, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x000180, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, CallFunc_Format_ReturnValue) == 0x000188, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, CallFunc_FormatTextForDecorator_ReturnValue) == 0x0001A0, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::CallFunc_FormatTextForDecorator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton, K2Node_Event_IsDesignTime) == 0x0001B8, "Member 'PerkSlotsButton_C_ExecuteUbergraph_PerkSlotsButton::K2Node_Event_IsDesignTime' has a wrong offset!");

}

