#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_1P_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function player_1P_AnimBP.player_1P_AnimBP_C.ExecuteUbergraph_player_1P_AnimBP
// 0x0048 (0x0048 - 0x0000)
struct Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESpecialMove                                  CallFunc_BP_GetSpecialMove_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPickup*                              K2Node_DynamicCast_AsRB_Pickup;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP) == 0x000008, "Wrong alignment on Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP");
static_assert(sizeof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP) == 0x000048, "Wrong size on Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, EntryPoint) == 0x000000, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, K2Node_DynamicCast_AsRB_Player) == 0x000010, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_BP_GetSpecialMove_ReturnValue) == 0x000019, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_BP_GetSpecialMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue) == 0x000020, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, K2Node_DynamicCast_AsRB_Pickup) == 0x000030, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::K2Node_DynamicCast_AsRB_Pickup' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_IsValid_ReturnValue_1) == 0x00003B, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, K2Node_Event_DeltaTimeX) == 0x00003C, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP, CallFunc_FInterpTo_ReturnValue) == 0x000040, "Member 'Player_1P_AnimBP_C_ExecuteUbergraph_player_1P_AnimBP::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function player_1P_AnimBP.player_1P_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Player_1P_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_1P_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Player_1P_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Player_1P_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Player_1P_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Player_1P_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Player_1P_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function player_1P_AnimBP.player_1P_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Player_1P_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_1P_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Player_1P_AnimBP_C_AnimGraph");
static_assert(sizeof(Player_1P_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Player_1P_AnimBP_C_AnimGraph");
static_assert(offsetof(Player_1P_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Player_1P_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

