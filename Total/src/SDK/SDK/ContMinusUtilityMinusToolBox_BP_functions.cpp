#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContMinusUtilityMinusToolBox_BP

#include "Basic.hpp"

#include "ContMinusUtilityMinusToolBox_BP_classes.hpp"
#include "ContMinusUtilityMinusToolBox_BP_parameters.hpp"


namespace SDK
{

// Function Cont-Utility-ToolBox_BP.Cont-Utility-ToolBox_BP_C.PlaySpecialMoveAnimation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBPawn*                          InteractorPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESpecialMove                            SpecialMove                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AContMinusUtilityMinusToolBox_BP_C::PlaySpecialMoveAnimation(class ARBPawn* InteractorPawn, ESpecialMove SpecialMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cont-Utility-ToolBox_BP_C", "PlaySpecialMoveAnimation");

	Params::ContMinusUtilityMinusToolBox_BP_C_PlaySpecialMoveAnimation Parms{};

	Parms.InteractorPawn = InteractorPawn;
	Parms.SpecialMove = SpecialMove;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Cont-Utility-ToolBox_BP.Cont-Utility-ToolBox_BP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AContMinusUtilityMinusToolBox_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cont-Utility-ToolBox_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cont-Utility-ToolBox_BP.Cont-Utility-ToolBox_BP_C.Event_SnapToState
// (Event, Public, BlueprintEvent)

void AContMinusUtilityMinusToolBox_BP_C::Event_SnapToState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cont-Utility-ToolBox_BP_C", "Event_SnapToState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cont-Utility-ToolBox_BP.Cont-Utility-ToolBox_BP_C.Event_OnIsOpenedChanged
// (Event, Public, BlueprintEvent)

void AContMinusUtilityMinusToolBox_BP_C::Event_OnIsOpenedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cont-Utility-ToolBox_BP_C", "Event_OnIsOpenedChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cont-Utility-ToolBox_BP.Cont-Utility-ToolBox_BP_C.OnPawnPlaySpecialMoveAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBPawn*                          Pawn                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESpecialMove                            SpecialMove                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContMinusUtilityMinusToolBox_BP_C::OnPawnPlaySpecialMoveAnimation(const class ARBPawn* Pawn, ESpecialMove SpecialMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cont-Utility-ToolBox_BP_C", "OnPawnPlaySpecialMoveAnimation");

	Params::ContMinusUtilityMinusToolBox_BP_C_OnPawnPlaySpecialMoveAnimation Parms{};

	Parms.Pawn = Pawn;
	Parms.SpecialMove = SpecialMove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cont-Utility-ToolBox_BP.Cont-Utility-ToolBox_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AContMinusUtilityMinusToolBox_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cont-Utility-ToolBox_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cont-Utility-ToolBox_BP.Cont-Utility-ToolBox_BP_C.ExecuteUbergraph_Cont-Utility-ToolBox_BP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContMinusUtilityMinusToolBox_BP_C::ExecuteUbergraph_ContMinusUtilityMinusToolBox_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cont-Utility-ToolBox_BP_C", "ExecuteUbergraph_Cont-Utility-ToolBox_BP");

	Params::ContMinusUtilityMinusToolBox_BP_C_ExecuteUbergraph_ContMinusUtilityMinusToolBox_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cont-Utility-ToolBox_BP.Cont-Utility-ToolBox_BP_C.GetLookAtLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutLookAtLocation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AContMinusUtilityMinusToolBox_BP_C::GetLookAtLocation(struct FVector* OutLookAtLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cont-Utility-ToolBox_BP_C", "GetLookAtLocation");

	Params::ContMinusUtilityMinusToolBox_BP_C_GetLookAtLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLookAtLocation != nullptr)
		*OutLookAtLocation = std::move(Parms.OutLookAtLocation);
}


// Function Cont-Utility-ToolBox_BP.Cont-Utility-ToolBox_BP_C.GetInteractionPawnLocation
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPawn*                          Pawn                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESpecialMove                            SpecialMove                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutDirection                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AContMinusUtilityMinusToolBox_BP_C::GetInteractionPawnLocation(const class ARBPawn* Pawn, ESpecialMove SpecialMove, struct FVector* OutLocation, struct FVector* OutDirection) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cont-Utility-ToolBox_BP_C", "GetInteractionPawnLocation");

	Params::ContMinusUtilityMinusToolBox_BP_C_GetInteractionPawnLocation Parms{};

	Parms.Pawn = Pawn;
	Parms.SpecialMove = SpecialMove;

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutDirection != nullptr)
		*OutDirection = std::move(Parms.OutDirection);

	return Parms.ReturnValue;
}

}

