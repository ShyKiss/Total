#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingDoor_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function SlidingDoor_BP.SlidingDoor_BP_C.ExecuteUbergraph_SlidingDoor_BP
// 0x02E8 (0x02E8 - 0x0000)
struct SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x002C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0064(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0074(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0084(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0094(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x011C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_ComponentBoundEvent_player_1;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_1;           // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Reverse;                        // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventOnActor_ReturnValue_2;           // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_ComponentBoundEvent_player;                 // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_3;           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x01D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x025C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_bOpen;                          // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP) == 0x000008, "Wrong alignment on SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP");
static_assert(sizeof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP) == 0x0002E8, "Wrong size on SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, EntryPoint) == 0x000000, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000008, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000010, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_MakeVector_ReturnValue_1) == 0x000020, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, Temp_delegate_Variable) == 0x00002C, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000040, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000044, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000048, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_MakeVector_ReturnValue_2) == 0x00004C, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_MakeVector_ReturnValue_3) == 0x000058, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, Temp_delegate_Variable_1) == 0x000064, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, Temp_delegate_Variable_2) == 0x000074, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, Temp_delegate_Variable_3) == 0x000084, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000094, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x00011C, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, K2Node_ComponentBoundEvent_player_1) == 0x0001A8, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::K2Node_ComponentBoundEvent_player_1' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x0001B0, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_PostEventOnActor_ReturnValue_1) == 0x0001B4, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_PostEventOnActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, K2Node_CustomEvent_Reverse) == 0x0001B8, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::K2Node_CustomEvent_Reverse' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_PostEventOnActor_ReturnValue_2) == 0x0001BC, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_PostEventOnActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_HasAuthority_ReturnValue) == 0x0001C0, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, K2Node_ComponentBoundEvent_player) == 0x0001C8, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::K2Node_ComponentBoundEvent_player' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_PostEventOnActor_ReturnValue_3) == 0x0001D0, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_PostEventOnActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x0001D4, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x00025C, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP, K2Node_CustomEvent_bOpen) == 0x0002E4, "Member 'SlidingDoor_BP_C_ExecuteUbergraph_SlidingDoor_BP::K2Node_CustomEvent_bOpen' has a wrong offset!");

// Function SlidingDoor_BP.SlidingDoor_BP_C.ManualOpenClose
// 0x0001 (0x0001 - 0x0000)
struct SlidingDoor_BP_C_ManualOpenClose final
{
public:
	bool                                          bOpen;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingDoor_BP_C_ManualOpenClose) == 0x000001, "Wrong alignment on SlidingDoor_BP_C_ManualOpenClose");
static_assert(sizeof(SlidingDoor_BP_C_ManualOpenClose) == 0x000001, "Wrong size on SlidingDoor_BP_C_ManualOpenClose");
static_assert(offsetof(SlidingDoor_BP_C_ManualOpenClose, bOpen) == 0x000000, "Member 'SlidingDoor_BP_C_ManualOpenClose::bOpen' has a wrong offset!");

// Function SlidingDoor_BP.SlidingDoor_BP_C.BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature final
{
public:
	class ARBPlayer*                              Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature) == 0x000008, "Wrong alignment on SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature");
static_assert(sizeof(SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature) == 0x000008, "Wrong size on SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature");
static_assert(offsetof(SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature, Player) == 0x000000, "Member 'SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature::Player' has a wrong offset!");

// Function SlidingDoor_BP.SlidingDoor_BP_C.OpenEntryDoor
// 0x0001 (0x0001 - 0x0000)
struct SlidingDoor_BP_C_OpenEntryDoor final
{
public:
	bool                                          Reverse;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingDoor_BP_C_OpenEntryDoor) == 0x000001, "Wrong alignment on SlidingDoor_BP_C_OpenEntryDoor");
static_assert(sizeof(SlidingDoor_BP_C_OpenEntryDoor) == 0x000001, "Wrong size on SlidingDoor_BP_C_OpenEntryDoor");
static_assert(offsetof(SlidingDoor_BP_C_OpenEntryDoor, Reverse) == 0x000000, "Member 'SlidingDoor_BP_C_OpenEntryDoor::Reverse' has a wrong offset!");

// Function SlidingDoor_BP.SlidingDoor_BP_C.BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_4_OnPlayerTriggerVolumeActorEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_4_OnPlayerTriggerVolumeActorEvent__DelegateSignature final
{
public:
	class ARBPlayer*                              Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_4_OnPlayerTriggerVolumeActorEvent__DelegateSignature) == 0x000008, "Wrong alignment on SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_4_OnPlayerTriggerVolumeActorEvent__DelegateSignature");
static_assert(sizeof(SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_4_OnPlayerTriggerVolumeActorEvent__DelegateSignature) == 0x000008, "Wrong size on SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_4_OnPlayerTriggerVolumeActorEvent__DelegateSignature");
static_assert(offsetof(SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_4_OnPlayerTriggerVolumeActorEvent__DelegateSignature, Player) == 0x000000, "Member 'SlidingDoor_BP_C_BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_4_OnPlayerTriggerVolumeActorEvent__DelegateSignature::Player' has a wrong offset!");

// Function SlidingDoor_BP.SlidingDoor_BP_C.SasActivation
// 0x0001 (0x0001 - 0x0000)
struct SlidingDoor_BP_C_SasActivation final
{
public:
	bool                                          IsReady;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingDoor_BP_C_SasActivation) == 0x000001, "Wrong alignment on SlidingDoor_BP_C_SasActivation");
static_assert(sizeof(SlidingDoor_BP_C_SasActivation) == 0x000001, "Wrong size on SlidingDoor_BP_C_SasActivation");
static_assert(offsetof(SlidingDoor_BP_C_SasActivation, IsReady) == 0x000000, "Member 'SlidingDoor_BP_C_SasActivation::IsReady' has a wrong offset!");

// Function SlidingDoor_BP.SlidingDoor_BP_C.opendoor
// 0x0158 (0x0158 - 0x0000)
struct SlidingDoor_BP_C_Opendoor final
{
public:
	class UStaticMeshComponent*                   SasDoorA;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasDoorMinusB;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Opendoor_0;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Target;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SlidingDoor_BP_C_Opendoor) == 0x000008, "Wrong alignment on SlidingDoor_BP_C_Opendoor");
static_assert(sizeof(SlidingDoor_BP_C_Opendoor) == 0x000158, "Wrong size on SlidingDoor_BP_C_Opendoor");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, SasDoorA) == 0x000000, "Member 'SlidingDoor_BP_C_Opendoor::SasDoorA' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, SasDoorMinusB) == 0x000008, "Member 'SlidingDoor_BP_C_Opendoor::SasDoorMinusB' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, Opendoor_0) == 0x000010, "Member 'SlidingDoor_BP_C_Opendoor::Opendoor_0' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, Target) == 0x000018, "Member 'SlidingDoor_BP_C_Opendoor::Target' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'SlidingDoor_BP_C_Opendoor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'SlidingDoor_BP_C_Opendoor::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'SlidingDoor_BP_C_Opendoor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00002C, "Member 'SlidingDoor_BP_C_Opendoor::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'SlidingDoor_BP_C_Opendoor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, CallFunc_MakeRotator_ReturnValue_1) == 0x00003C, "Member 'SlidingDoor_BP_C_Opendoor::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000048, "Member 'SlidingDoor_BP_C_Opendoor::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SlidingDoor_BP_C_Opendoor, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000D0, "Member 'SlidingDoor_BP_C_Opendoor::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function SlidingDoor_BP.SlidingDoor_BP_C.OnRep_bEntryDoorOpened
// 0x0001 (0x0001 - 0x0000)
struct SlidingDoor_BP_C_OnRep_bEntryDoorOpened final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingDoor_BP_C_OnRep_bEntryDoorOpened) == 0x000001, "Wrong alignment on SlidingDoor_BP_C_OnRep_bEntryDoorOpened");
static_assert(sizeof(SlidingDoor_BP_C_OnRep_bEntryDoorOpened) == 0x000001, "Wrong size on SlidingDoor_BP_C_OnRep_bEntryDoorOpened");
static_assert(offsetof(SlidingDoor_BP_C_OnRep_bEntryDoorOpened, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'SlidingDoor_BP_C_OnRep_bEntryDoorOpened::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

