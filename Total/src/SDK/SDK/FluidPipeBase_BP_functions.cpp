#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FluidPipeBase_BP

#include "Basic.hpp"

#include "FluidPipeBase_BP_classes.hpp"
#include "FluidPipeBase_BP_parameters.hpp"


namespace SDK
{

// Function FluidPipeBase_BP.FluidPipeBase_BP_C.setTriggerPressure
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFluidPipeBase_BP_C::SetTriggerPressure(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "setTriggerPressure");

	Params::FluidPipeBase_BP_C_SetTriggerPressure Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.TriggerSprinkler
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TriggerUntrigger                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AFluidPipeBase_BP_C::TriggerSprinkler(bool TriggerUntrigger, bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "TriggerSprinkler");

	Params::FluidPipeBase_BP_C_TriggerSprinkler Parms{};

	Parms.TriggerUntrigger = TriggerUntrigger;
	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.OnRep_State
// (BlueprintCallable, BlueprintEvent)

void AFluidPipeBase_BP_C::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "OnRep_State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.SetData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DataIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFluidPipeBase_BP_C::SetData(int32 DataIndex, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "SetData");

	Params::FluidPipeBase_BP_C_SetData Parms{};

	Parms.DataIndex = DataIndex;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFluidPipeBase_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AFluidPipeBase_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.startFluid
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AFluidPipeBase_BP_C::StartFluid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "startFluid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.StopFluid
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AFluidPipeBase_BP_C::StopFluid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "StopFluid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.Event_OnResetStage
// (Event, Public, BlueprintEvent)

void AFluidPipeBase_BP_C::Event_OnResetStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "Event_OnResetStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.Reset
// (BlueprintCallable, BlueprintEvent)

void AFluidPipeBase_BP_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.On
// (BlueprintCallable, BlueprintEvent)

void AFluidPipeBase_BP_C::On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.played
// (BlueprintCallable, BlueprintEvent)

void AFluidPipeBase_BP_C::Played()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "played");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FluidPipeBase_BP.FluidPipeBase_BP_C.ExecuteUbergraph_FluidPipeBase_BP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AFluidPipeBase_BP_C::ExecuteUbergraph_FluidPipeBase_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FluidPipeBase_BP_C", "ExecuteUbergraph_FluidPipeBase_BP");

	Params::FluidPipeBase_BP_C_ExecuteUbergraph_FluidPipeBase_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

