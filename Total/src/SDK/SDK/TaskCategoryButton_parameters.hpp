#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TaskCategoryButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function TaskCategoryButton.TaskCategoryButton_C.OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TaskCategoryButton_C_OnClicked__DelegateSignature final
{
public:
	class FName                                   ID_0;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TaskCategoryButton_C_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on TaskCategoryButton_C_OnClicked__DelegateSignature");
static_assert(sizeof(TaskCategoryButton_C_OnClicked__DelegateSignature) == 0x000008, "Wrong size on TaskCategoryButton_C_OnClicked__DelegateSignature");
static_assert(offsetof(TaskCategoryButton_C_OnClicked__DelegateSignature, ID_0) == 0x000000, "Member 'TaskCategoryButton_C_OnClicked__DelegateSignature::ID_0' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.OnFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TaskCategoryButton_C_OnFocused__DelegateSignature final
{
public:
	class FName                                   ID_0;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TaskCategoryButton_C_OnFocused__DelegateSignature) == 0x000004, "Wrong alignment on TaskCategoryButton_C_OnFocused__DelegateSignature");
static_assert(sizeof(TaskCategoryButton_C_OnFocused__DelegateSignature) == 0x000008, "Wrong size on TaskCategoryButton_C_OnFocused__DelegateSignature");
static_assert(offsetof(TaskCategoryButton_C_OnFocused__DelegateSignature, ID_0) == 0x000000, "Member 'TaskCategoryButton_C_OnFocused__DelegateSignature::ID_0' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.ExecuteUbergraph_TaskCategoryButton
// 0x0080 (0x0080 - 0x0000)
struct TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_Asset;                          // 0x0058(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton) == 0x000008, "Wrong alignment on TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton");
static_assert(sizeof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton) == 0x000080, "Wrong size on TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, EntryPoint) == 0x000000, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, Temp_object_Variable) == 0x000020, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, K2Node_DynamicCast_AsTexture_2D) == 0x000028, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, CallFunc_GetMenuManager_ReturnValue) == 0x000038, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x000042, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x000044, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton, K2Node_CustomEvent_Asset) == 0x000058, "Member 'TaskCategoryButton_C_ExecuteUbergraph_TaskCategoryButton::K2Node_CustomEvent_Asset' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.SetIcon
// 0x0028 (0x0028 - 0x0000)
struct TaskCategoryButton_C_SetIcon final
{
public:
	TSoftObjectPtr<class UObject>                 Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(TaskCategoryButton_C_SetIcon) == 0x000008, "Wrong alignment on TaskCategoryButton_C_SetIcon");
static_assert(sizeof(TaskCategoryButton_C_SetIcon) == 0x000028, "Wrong size on TaskCategoryButton_C_SetIcon");
static_assert(offsetof(TaskCategoryButton_C_SetIcon, Asset) == 0x000000, "Member 'TaskCategoryButton_C_SetIcon::Asset' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.OnLoaded_DB41A6CB40D5CBDE4EA03AB9C7E72F12
// 0x0008 (0x0008 - 0x0000)
struct TaskCategoryButton_C_OnLoaded_DB41A6CB40D5CBDE4EA03AB9C7E72F12 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TaskCategoryButton_C_OnLoaded_DB41A6CB40D5CBDE4EA03AB9C7E72F12) == 0x000008, "Wrong alignment on TaskCategoryButton_C_OnLoaded_DB41A6CB40D5CBDE4EA03AB9C7E72F12");
static_assert(sizeof(TaskCategoryButton_C_OnLoaded_DB41A6CB40D5CBDE4EA03AB9C7E72F12) == 0x000008, "Wrong size on TaskCategoryButton_C_OnLoaded_DB41A6CB40D5CBDE4EA03AB9C7E72F12");
static_assert(offsetof(TaskCategoryButton_C_OnLoaded_DB41A6CB40D5CBDE4EA03AB9C7E72F12, Loaded) == 0x000000, "Member 'TaskCategoryButton_C_OnLoaded_DB41A6CB40D5CBDE4EA03AB9C7E72F12::Loaded' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.Setup
// 0x0068 (0x0068 - 0x0000)
struct TaskCategoryButton_C_Setup final
{
public:
	class FName                                   ID_0;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bHasSeenTaskGroup_0;                               // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasCompletedTasksPendingConsume_0;                // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Icon_0;                                            // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bHasRefreshTimer_0;                                // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DaysUntilRefresh_0;                                // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HoursUntilRefresh_0;                               // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasClaimedAllTasks_0;                             // 0x005C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NewLocalVar_0;                                     // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TaskCategoryButton_C_Setup) == 0x000008, "Wrong alignment on TaskCategoryButton_C_Setup");
static_assert(sizeof(TaskCategoryButton_C_Setup) == 0x000068, "Wrong size on TaskCategoryButton_C_Setup");
static_assert(offsetof(TaskCategoryButton_C_Setup, ID_0) == 0x000000, "Member 'TaskCategoryButton_C_Setup::ID_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Setup, Text) == 0x000008, "Member 'TaskCategoryButton_C_Setup::Text' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Setup, bHasSeenTaskGroup_0) == 0x000020, "Member 'TaskCategoryButton_C_Setup::bHasSeenTaskGroup_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Setup, bHasCompletedTasksPendingConsume_0) == 0x000021, "Member 'TaskCategoryButton_C_Setup::bHasCompletedTasksPendingConsume_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Setup, Icon_0) == 0x000028, "Member 'TaskCategoryButton_C_Setup::Icon_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Setup, bHasRefreshTimer_0) == 0x000050, "Member 'TaskCategoryButton_C_Setup::bHasRefreshTimer_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Setup, DaysUntilRefresh_0) == 0x000054, "Member 'TaskCategoryButton_C_Setup::DaysUntilRefresh_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Setup, HoursUntilRefresh_0) == 0x000058, "Member 'TaskCategoryButton_C_Setup::HoursUntilRefresh_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Setup, bHasClaimedAllTasks_0) == 0x00005C, "Member 'TaskCategoryButton_C_Setup::bHasClaimedAllTasks_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Setup, NewLocalVar_0) == 0x000060, "Member 'TaskCategoryButton_C_Setup::NewLocalVar_0' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.Update
// 0x0018 (0x0018 - 0x0000)
struct TaskCategoryButton_C_Update final
{
public:
	bool                                          HasSeenTaskGroup;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasCompletedTasksPendingConsume_0;                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasRefreshTimer;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DaysUntilRefresh_0;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HoursUntilRefresh_0;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasClaimedAllTasks_0;                             // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TaskCategoryButton_C_Update) == 0x000004, "Wrong alignment on TaskCategoryButton_C_Update");
static_assert(sizeof(TaskCategoryButton_C_Update) == 0x000018, "Wrong size on TaskCategoryButton_C_Update");
static_assert(offsetof(TaskCategoryButton_C_Update, HasSeenTaskGroup) == 0x000000, "Member 'TaskCategoryButton_C_Update::HasSeenTaskGroup' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Update, bHasCompletedTasksPendingConsume_0) == 0x000001, "Member 'TaskCategoryButton_C_Update::bHasCompletedTasksPendingConsume_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Update, HasRefreshTimer) == 0x000002, "Member 'TaskCategoryButton_C_Update::HasRefreshTimer' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Update, DaysUntilRefresh_0) == 0x000004, "Member 'TaskCategoryButton_C_Update::DaysUntilRefresh_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Update, HoursUntilRefresh_0) == 0x000008, "Member 'TaskCategoryButton_C_Update::HoursUntilRefresh_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Update, bHasClaimedAllTasks_0) == 0x00000C, "Member 'TaskCategoryButton_C_Update::bHasClaimedAllTasks_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Update, NewLocalVar_0) == 0x000010, "Member 'TaskCategoryButton_C_Update::NewLocalVar_0' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.Refresh
// 0x0220 (0x0220 - 0x0000)
struct TaskCategoryButton_C_Refresh final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	bool                                          Temp_bool_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0060(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0088(0x0028)()
	bool                                          Temp_bool_Variable_3;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x00D8(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_2;                           // 0x0100(0x0028)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0198(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01F0(0x0018)()
	bool                                          Temp_bool_Variable_7;                              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_5;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TaskCategoryButton_C_Refresh) == 0x000008, "Wrong alignment on TaskCategoryButton_C_Refresh");
static_assert(sizeof(TaskCategoryButton_C_Refresh) == 0x000220, "Wrong size on TaskCategoryButton_C_Refresh");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable) == 0x000000, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable_1) == 0x000001, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_bool_Variable) == 0x000002, "Member 'TaskCategoryButton_C_Refresh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable_2) == 0x000003, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable_3) == 0x000004, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_bool_Variable_1) == 0x000005, "Member 'TaskCategoryButton_C_Refresh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'TaskCategoryButton_C_Refresh::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'TaskCategoryButton_C_Refresh::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_bool_Variable_2) == 0x000058, "Member 'TaskCategoryButton_C_Refresh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_MakeStruct_SlateColor_2) == 0x000060, "Member 'TaskCategoryButton_C_Refresh::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_MakeStruct_SlateColor_3) == 0x000088, "Member 'TaskCategoryButton_C_Refresh::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_bool_Variable_3) == 0x0000B0, "Member 'TaskCategoryButton_C_Refresh::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable_4) == 0x0000B1, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable_5) == 0x0000B2, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_bool_Variable_4) == 0x0000B3, "Member 'TaskCategoryButton_C_Refresh::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_object_Variable) == 0x0000B8, "Member 'TaskCategoryButton_C_Refresh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_object_Variable_1) == 0x0000C0, "Member 'TaskCategoryButton_C_Refresh::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_bool_Variable_5) == 0x0000C8, "Member 'TaskCategoryButton_C_Refresh::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable_6) == 0x0000C9, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable_7) == 0x0000CA, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_bool_Variable_6) == 0x0000CB, "Member 'TaskCategoryButton_C_Refresh::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable_8) == 0x0000CC, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_byte_Variable_9) == 0x0000CD, "Member 'TaskCategoryButton_C_Refresh::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, CallFunc_Not_PreBool_ReturnValue) == 0x0000CE, "Member 'TaskCategoryButton_C_Refresh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, CallFunc_BooleanOR_ReturnValue) == 0x0000CF, "Member 'TaskCategoryButton_C_Refresh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D0, "Member 'TaskCategoryButton_C_Refresh::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_Select_Default) == 0x0000D1, "Member 'TaskCategoryButton_C_Refresh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, CallFunc_BooleanAND_ReturnValue) == 0x0000D2, "Member 'TaskCategoryButton_C_Refresh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_Select_Default_1) == 0x0000D8, "Member 'TaskCategoryButton_C_Refresh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_Select_Default_2) == 0x000100, "Member 'TaskCategoryButton_C_Refresh::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'TaskCategoryButton_C_Refresh::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, CallFunc_Greater_IntInt_ReturnValue) == 0x000168, "Member 'TaskCategoryButton_C_Refresh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_MakeArray_Array) == 0x000170, "Member 'TaskCategoryButton_C_Refresh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, CallFunc_Format_ReturnValue) == 0x000180, "Member 'TaskCategoryButton_C_Refresh::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_MakeStruct_FormatArgumentData_1) == 0x000198, "Member 'TaskCategoryButton_C_Refresh::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001D8, "Member 'TaskCategoryButton_C_Refresh::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_MakeArray_Array_1) == 0x0001E0, "Member 'TaskCategoryButton_C_Refresh::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, CallFunc_Format_ReturnValue_1) == 0x0001F0, "Member 'TaskCategoryButton_C_Refresh::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, Temp_bool_Variable_7) == 0x000208, "Member 'TaskCategoryButton_C_Refresh::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_Select_Default_3) == 0x000209, "Member 'TaskCategoryButton_C_Refresh::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_Select_Default_4) == 0x00020A, "Member 'TaskCategoryButton_C_Refresh::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_Select_Default_5) == 0x000210, "Member 'TaskCategoryButton_C_Refresh::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_Select_Default_6) == 0x000218, "Member 'TaskCategoryButton_C_Refresh::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000219, "Member 'TaskCategoryButton_C_Refresh::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_Refresh, K2Node_Select_Default_7) == 0x00021A, "Member 'TaskCategoryButton_C_Refresh::K2Node_Select_Default_7' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.SetHovered
// 0x0003 (0x0003 - 0x0000)
struct TaskCategoryButton_C_SetHovered final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TaskCategoryButton_C_SetHovered) == 0x000001, "Wrong alignment on TaskCategoryButton_C_SetHovered");
static_assert(sizeof(TaskCategoryButton_C_SetHovered) == 0x000003, "Wrong size on TaskCategoryButton_C_SetHovered");
static_assert(offsetof(TaskCategoryButton_C_SetHovered, IsHovered_0) == 0x000000, "Member 'TaskCategoryButton_C_SetHovered::IsHovered_0' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_SetHovered, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000001, "Member 'TaskCategoryButton_C_SetHovered::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'TaskCategoryButton_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.SetFocused
// 0x0003 (0x0003 - 0x0000)
struct TaskCategoryButton_C_SetFocused final
{
public:
	bool                                          bInFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TaskCategoryButton_C_SetFocused) == 0x000001, "Wrong alignment on TaskCategoryButton_C_SetFocused");
static_assert(sizeof(TaskCategoryButton_C_SetFocused) == 0x000003, "Wrong size on TaskCategoryButton_C_SetFocused");
static_assert(offsetof(TaskCategoryButton_C_SetFocused, bInFocused) == 0x000000, "Member 'TaskCategoryButton_C_SetFocused::bInFocused' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_SetFocused, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000001, "Member 'TaskCategoryButton_C_SetFocused::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'TaskCategoryButton_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.IsConsideredHovered
// 0x0001 (0x0001 - 0x0000)
struct TaskCategoryButton_C_IsConsideredHovered final
{
public:
	bool                                          bConsideredHovered;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TaskCategoryButton_C_IsConsideredHovered) == 0x000001, "Wrong alignment on TaskCategoryButton_C_IsConsideredHovered");
static_assert(sizeof(TaskCategoryButton_C_IsConsideredHovered) == 0x000001, "Wrong size on TaskCategoryButton_C_IsConsideredHovered");
static_assert(offsetof(TaskCategoryButton_C_IsConsideredHovered, bConsideredHovered) == 0x000000, "Member 'TaskCategoryButton_C_IsConsideredHovered::bConsideredHovered' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct TaskCategoryButton_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(TaskCategoryButton_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on TaskCategoryButton_C_OnRemovedFromFocusPath");
static_assert(sizeof(TaskCategoryButton_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on TaskCategoryButton_C_OnRemovedFromFocusPath");
static_assert(offsetof(TaskCategoryButton_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'TaskCategoryButton_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.OnAddedToFocusPath
// 0x0028 (0x0028 - 0x0000)
struct TaskCategoryButton_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TaskCategoryButton_C_OnAddedToFocusPath) == 0x000008, "Wrong alignment on TaskCategoryButton_C_OnAddedToFocusPath");
static_assert(sizeof(TaskCategoryButton_C_OnAddedToFocusPath) == 0x000028, "Wrong size on TaskCategoryButton_C_OnAddedToFocusPath");
static_assert(offsetof(TaskCategoryButton_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'TaskCategoryButton_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_OnAddedToFocusPath, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'TaskCategoryButton_C_OnAddedToFocusPath::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_OnAddedToFocusPath, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'TaskCategoryButton_C_OnAddedToFocusPath::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct TaskCategoryButton_C_SetSelected final
{
public:
	bool                                          IsSelected_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TaskCategoryButton_C_SetSelected) == 0x000001, "Wrong alignment on TaskCategoryButton_C_SetSelected");
static_assert(sizeof(TaskCategoryButton_C_SetSelected) == 0x000001, "Wrong size on TaskCategoryButton_C_SetSelected");
static_assert(offsetof(TaskCategoryButton_C_SetSelected, IsSelected_0) == 0x000000, "Member 'TaskCategoryButton_C_SetSelected::IsSelected_0' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.UpdateMenuFocusAction
// 0x0028 (0x0028 - 0x0000)
struct TaskCategoryButton_C_UpdateMenuFocusAction final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TaskCategoryButton_C_UpdateMenuFocusAction) == 0x000008, "Wrong alignment on TaskCategoryButton_C_UpdateMenuFocusAction");
static_assert(sizeof(TaskCategoryButton_C_UpdateMenuFocusAction) == 0x000028, "Wrong size on TaskCategoryButton_C_UpdateMenuFocusAction");
static_assert(offsetof(TaskCategoryButton_C_UpdateMenuFocusAction, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'TaskCategoryButton_C_UpdateMenuFocusAction::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_UpdateMenuFocusAction, CallFunc_MakeLiteralName_ReturnValue) == 0x000018, "Member 'TaskCategoryButton_C_UpdateMenuFocusAction::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TaskCategoryButton_C_UpdateMenuFocusAction, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000020, "Member 'TaskCategoryButton_C_UpdateMenuFocusAction::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");

// Function TaskCategoryButton.TaskCategoryButton_C.IsSelected
// 0x0001 (0x0001 - 0x0000)
struct TaskCategoryButton_C_IsSelected final
{
public:
	bool                                          bSelected_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TaskCategoryButton_C_IsSelected) == 0x000001, "Wrong alignment on TaskCategoryButton_C_IsSelected");
static_assert(sizeof(TaskCategoryButton_C_IsSelected) == 0x000001, "Wrong size on TaskCategoryButton_C_IsSelected");
static_assert(offsetof(TaskCategoryButton_C_IsSelected, bSelected_0) == 0x000000, "Member 'TaskCategoryButton_C_IsSelected::bSelected_0' has a wrong offset!");

}

