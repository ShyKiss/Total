#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TimedGateLights_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "TimedGateLightState_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "TimedOpenClosedGateState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TimedGateLights_BP.TimedGateLights_BP_C
// 0x0068 (0x0298 - 0x0230)
class ATimedGateLights_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      OnHackVFX;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBHackableComponent*                   DeviceHackZone;                                    // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBHackableComponent*                   GateHackZone;                                      // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      DisabledVFX;                                       // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GreenLightBulb;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RedLightBulb;                                      // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FourLightSelectorMinus01;                          // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Open;                                              // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WarningDuration;                                   // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimedGateLightState                          LightState;                                        // 0x0280(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          DisabledHacked;                                    // 0x0281(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URBHackableComponent*>           LinkedHackableComponents;                          // 0x0288(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_TimedGateLights_BP(int32 EntryPoint);
	void OnHackStateChanged(class URBHackableComponent* HackableComponent);
	void BndEvt__TimedGateLights_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature(class URBHackableComponent* HackableComponent);
	void OnTriggerEvent(bool IsOn, class ARBTriggerable* Triggerable);
	void ReceiveBeginPlay();
	void SetTimedState(ETimedOpenClosedGateState State);
	void SetVariatorEnabled(bool bEnabled);
	void SetLightState(class UStaticMeshComponent* MeshComponent, bool bOn, bool Green, bool Blinking_Red_Green, bool Blinking_Red, bool Blinking_Green);
	void OnRep_LightState();
	void PlayAlarmSound(class UAkAudioEvent* Event);
	void RefreshLightState();
	void OnDisabledHackedStateChanged(bool bHacked);
	void RefreshGateHackZoneSizes();
	void GetLinkedTriggerable(class ARBTriggerable** Triggerable);
	void RefreshHackedVisualState();
	void IsConsideredActivelyBeingHacked(bool* Out);

	bool GetVariatorEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TimedGateLights_BP_C">();
	}
	static class ATimedGateLights_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATimedGateLights_BP_C>();
	}
};
static_assert(alignof(ATimedGateLights_BP_C) == 0x000008, "Wrong alignment on ATimedGateLights_BP_C");
static_assert(sizeof(ATimedGateLights_BP_C) == 0x000298, "Wrong size on ATimedGateLights_BP_C");
static_assert(offsetof(ATimedGateLights_BP_C, UberGraphFrame) == 0x000230, "Member 'ATimedGateLights_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, OnHackVFX) == 0x000238, "Member 'ATimedGateLights_BP_C::OnHackVFX' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, DeviceHackZone) == 0x000240, "Member 'ATimedGateLights_BP_C::DeviceHackZone' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, GateHackZone) == 0x000248, "Member 'ATimedGateLights_BP_C::GateHackZone' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, DisabledVFX) == 0x000250, "Member 'ATimedGateLights_BP_C::DisabledVFX' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, GreenLightBulb) == 0x000258, "Member 'ATimedGateLights_BP_C::GreenLightBulb' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, RedLightBulb) == 0x000260, "Member 'ATimedGateLights_BP_C::RedLightBulb' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, Scene) == 0x000268, "Member 'ATimedGateLights_BP_C::Scene' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, FourLightSelectorMinus01) == 0x000270, "Member 'ATimedGateLights_BP_C::FourLightSelectorMinus01' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, Open) == 0x000278, "Member 'ATimedGateLights_BP_C::Open' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, WarningDuration) == 0x00027C, "Member 'ATimedGateLights_BP_C::WarningDuration' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, LightState) == 0x000280, "Member 'ATimedGateLights_BP_C::LightState' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, DisabledHacked) == 0x000281, "Member 'ATimedGateLights_BP_C::DisabledHacked' has a wrong offset!");
static_assert(offsetof(ATimedGateLights_BP_C, LinkedHackableComponents) == 0x000288, "Member 'ATimedGateLights_BP_C::LinkedHackableComponents' has a wrong offset!");

}

