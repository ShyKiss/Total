#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TimerCountdownMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TimerCountdown-01_BP.TimerCountdown-01_BP_C
// 0x0100 (0x0520 - 0x0420)
class ATimerCountdownMinus01_BP_C : public ARBTriggerable
{
public:
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      OnHackVFX;                                         // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FrontDisabledVFX;                                  // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBHackableComponent*                   DeviceHackZone;                                    // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBHackableComponent*                   GateHackZone;                                      // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Minute_0;                                          // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Second_00;                                         // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Minute_00;                                         // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Second_0;                                          // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight3;                                      // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight2;                                      // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight1;                                      // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight;                                       // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLightMinus02;                                 // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MurkoffSign;                                       // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InverseTriggerFunction;                            // 0x04B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PreviewLights;                                     // 0x04B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ResetTimerWhenCompleted;                           // 0x04B6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B7[0x1];                                      // 0x04B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeBeforeAnimDone;                                // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentDisplayTime;                                // 0x04BC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         TargetTime;                                        // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LightsON;                                          // 0x04C4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentTimeOnTrigger;                              // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBTriggerable*                         LinkedTriggerable;                                 // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TimerEnabled;                                      // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TimerFrozen;                                       // 0x04D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DA[0x6];                                      // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             TimerReachedZero;                                  // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         LastMin10;                                         // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastMin1;                                          // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastSec10;                                         // 0x04F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastSec1;                                          // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVariatorEnabled;                                  // 0x0500(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URBHackableComponent*>           LinkedHackableComponents;                          // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          HackedDisabled;                                    // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TimerFrozenUpdatedOnce;                            // 0x0519(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void TimerReachedZero__DelegateSignature();
	void ExecuteUbergraph_TimerCountdownMinus01_BP(int32 EntryPoint);
	void OnHackStateChanged(class URBHackableComponent* HackableComponent);
	void SetVariatorEnabled(bool bEnabled);
	void BndEvt__TimerCountdownMinus01_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature(class URBHackableComponent* HackableComponent);
	void TriggerChanged(bool IsOn, class ARBTriggerable* Triggerable);
	void SetupLinkedTriggerable();
	void ReceiveBeginPlay();
	void Event_OnResetStage();
	void ReceiveTick(float DeltaSeconds);
	void Event_OnTriggered();
	void Event_OnUntriggered();
	void UserConstructionScript();
	void DisplayTime(float TimeSeconds);
	void Set_Lights_On(bool bOn);
	void SetCountdownTimer(float Time);
	void SetTickEnabled(bool bEnabled);
	void UpdateTick();
	void OnRep_CurrentDisplayTime();
	void OnRep_LightsON();
	void OnCurrentTimeChanged_Server();
	void SetLinkedTriggerable(class ARBTriggerable* Trigerable);
	void TrySetTriggered(bool Triggered);
	void SetTimerEnabled(bool Enabled);
	void SetTimerFrozen(bool Value);
	void FindFlipSpeed(int32 CurrentNumber, int32 LastNumber, float* NewParam);
	void RefreshGateHackZoneSizes();
	void GetLinkedTriggerable(class ARBTriggerable** Triggerable);
	void On_Hacked_Disable_State_Changed(bool bDisabled);
	void StartInfiniteLoop();
	void OnRep_bVariatorEnabled();
	void RefreshLightState_Server();
	void RefreshHackVisualState();
	void IsConsideredActivelyBeingHacked(bool* Out);
	void ResetTimeCountdown();

	bool GetVariatorEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TimerCountdown-01_BP_C">();
	}
	static class ATimerCountdownMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATimerCountdownMinus01_BP_C>();
	}
};
static_assert(alignof(ATimerCountdownMinus01_BP_C) == 0x000010, "Wrong alignment on ATimerCountdownMinus01_BP_C");
static_assert(sizeof(ATimerCountdownMinus01_BP_C) == 0x000520, "Wrong size on ATimerCountdownMinus01_BP_C");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, UberGraphFrame) == 0x000420, "Member 'ATimerCountdownMinus01_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, OnHackVFX) == 0x000428, "Member 'ATimerCountdownMinus01_BP_C::OnHackVFX' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, FrontDisabledVFX) == 0x000430, "Member 'ATimerCountdownMinus01_BP_C::FrontDisabledVFX' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, DeviceHackZone) == 0x000438, "Member 'ATimerCountdownMinus01_BP_C::DeviceHackZone' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, GateHackZone) == 0x000440, "Member 'ATimerCountdownMinus01_BP_C::GateHackZone' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, RBSound) == 0x000448, "Member 'ATimerCountdownMinus01_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, Minute_0) == 0x000450, "Member 'ATimerCountdownMinus01_BP_C::Minute_0' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, Second_00) == 0x000458, "Member 'ATimerCountdownMinus01_BP_C::Second_00' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, Minute_00) == 0x000460, "Member 'ATimerCountdownMinus01_BP_C::Minute_00' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, Second_0) == 0x000468, "Member 'ATimerCountdownMinus01_BP_C::Second_0' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, RBSpotLight3) == 0x000470, "Member 'ATimerCountdownMinus01_BP_C::RBSpotLight3' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, RBSpotLight2) == 0x000478, "Member 'ATimerCountdownMinus01_BP_C::RBSpotLight2' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, RBSpotLight1) == 0x000480, "Member 'ATimerCountdownMinus01_BP_C::RBSpotLight1' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, RBSpotLight) == 0x000488, "Member 'ATimerCountdownMinus01_BP_C::RBSpotLight' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, PointLightMinus02) == 0x000490, "Member 'ATimerCountdownMinus01_BP_C::PointLightMinus02' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, MurkoffSign) == 0x000498, "Member 'ATimerCountdownMinus01_BP_C::MurkoffSign' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, StaticMesh) == 0x0004A0, "Member 'ATimerCountdownMinus01_BP_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, DefaultSceneRoot) == 0x0004A8, "Member 'ATimerCountdownMinus01_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, CurrentTime) == 0x0004B0, "Member 'ATimerCountdownMinus01_BP_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, InverseTriggerFunction) == 0x0004B4, "Member 'ATimerCountdownMinus01_BP_C::InverseTriggerFunction' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, PreviewLights) == 0x0004B5, "Member 'ATimerCountdownMinus01_BP_C::PreviewLights' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, ResetTimerWhenCompleted) == 0x0004B6, "Member 'ATimerCountdownMinus01_BP_C::ResetTimerWhenCompleted' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, TimeBeforeAnimDone) == 0x0004B8, "Member 'ATimerCountdownMinus01_BP_C::TimeBeforeAnimDone' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, CurrentDisplayTime) == 0x0004BC, "Member 'ATimerCountdownMinus01_BP_C::CurrentDisplayTime' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, TargetTime) == 0x0004C0, "Member 'ATimerCountdownMinus01_BP_C::TargetTime' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, LightsON) == 0x0004C4, "Member 'ATimerCountdownMinus01_BP_C::LightsON' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, CurrentTimeOnTrigger) == 0x0004C8, "Member 'ATimerCountdownMinus01_BP_C::CurrentTimeOnTrigger' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, LinkedTriggerable) == 0x0004D0, "Member 'ATimerCountdownMinus01_BP_C::LinkedTriggerable' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, TimerEnabled) == 0x0004D8, "Member 'ATimerCountdownMinus01_BP_C::TimerEnabled' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, TimerFrozen) == 0x0004D9, "Member 'ATimerCountdownMinus01_BP_C::TimerFrozen' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, TimerReachedZero) == 0x0004E0, "Member 'ATimerCountdownMinus01_BP_C::TimerReachedZero' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, LastMin10) == 0x0004F0, "Member 'ATimerCountdownMinus01_BP_C::LastMin10' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, LastMin1) == 0x0004F4, "Member 'ATimerCountdownMinus01_BP_C::LastMin1' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, LastSec10) == 0x0004F8, "Member 'ATimerCountdownMinus01_BP_C::LastSec10' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, LastSec1) == 0x0004FC, "Member 'ATimerCountdownMinus01_BP_C::LastSec1' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, bVariatorEnabled) == 0x000500, "Member 'ATimerCountdownMinus01_BP_C::bVariatorEnabled' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, LinkedHackableComponents) == 0x000508, "Member 'ATimerCountdownMinus01_BP_C::LinkedHackableComponents' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, HackedDisabled) == 0x000518, "Member 'ATimerCountdownMinus01_BP_C::HackedDisabled' has a wrong offset!");
static_assert(offsetof(ATimerCountdownMinus01_BP_C, TimerFrozenUpdatedOnce) == 0x000519, "Member 'ATimerCountdownMinus01_BP_C::TimerFrozenUpdatedOnce' has a wrong offset!");

}

