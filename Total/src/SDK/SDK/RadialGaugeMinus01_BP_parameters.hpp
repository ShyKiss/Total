#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadialGaugeMinus01_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RadialGauge-01_BP.RadialGauge-01_BP_C.UpdateNeedleRotation
// 0x009C (0x009C - 0x0000)
struct RadialGaugeMinus01_BP_C_UpdateNeedleRotation final
{
public:
	bool                                          bPreviewConstruction;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0014(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RadialGaugeMinus01_BP_C_UpdateNeedleRotation) == 0x000004, "Wrong alignment on RadialGaugeMinus01_BP_C_UpdateNeedleRotation");
static_assert(sizeof(RadialGaugeMinus01_BP_C_UpdateNeedleRotation) == 0x00009C, "Wrong size on RadialGaugeMinus01_BP_C_UpdateNeedleRotation");
static_assert(offsetof(RadialGaugeMinus01_BP_C_UpdateNeedleRotation, bPreviewConstruction) == 0x000000, "Member 'RadialGaugeMinus01_BP_C_UpdateNeedleRotation::bPreviewConstruction' has a wrong offset!");
static_assert(offsetof(RadialGaugeMinus01_BP_C_UpdateNeedleRotation, Temp_bool_Variable) == 0x000001, "Member 'RadialGaugeMinus01_BP_C_UpdateNeedleRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RadialGaugeMinus01_BP_C_UpdateNeedleRotation, K2Node_Select_Default) == 0x000004, "Member 'RadialGaugeMinus01_BP_C_UpdateNeedleRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RadialGaugeMinus01_BP_C_UpdateNeedleRotation, CallFunc_RLerp_ReturnValue) == 0x000008, "Member 'RadialGaugeMinus01_BP_C_UpdateNeedleRotation::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RadialGaugeMinus01_BP_C_UpdateNeedleRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000014, "Member 'RadialGaugeMinus01_BP_C_UpdateNeedleRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function RadialGauge-01_BP.RadialGauge-01_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct RadialGaugeMinus01_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadialGaugeMinus01_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on RadialGaugeMinus01_BP_C_ReceiveTick");
static_assert(sizeof(RadialGaugeMinus01_BP_C_ReceiveTick) == 0x000004, "Wrong size on RadialGaugeMinus01_BP_C_ReceiveTick");
static_assert(offsetof(RadialGaugeMinus01_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'RadialGaugeMinus01_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function RadialGauge-01_BP.RadialGauge-01_BP_C.ExecuteUbergraph_RadialGauge-01_BP
// 0x0008 (0x0008 - 0x0000)
struct RadialGaugeMinus01_BP_C_ExecuteUbergraph_RadialGaugeMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadialGaugeMinus01_BP_C_ExecuteUbergraph_RadialGaugeMinus01_BP) == 0x000004, "Wrong alignment on RadialGaugeMinus01_BP_C_ExecuteUbergraph_RadialGaugeMinus01_BP");
static_assert(sizeof(RadialGaugeMinus01_BP_C_ExecuteUbergraph_RadialGaugeMinus01_BP) == 0x000008, "Wrong size on RadialGaugeMinus01_BP_C_ExecuteUbergraph_RadialGaugeMinus01_BP");
static_assert(offsetof(RadialGaugeMinus01_BP_C_ExecuteUbergraph_RadialGaugeMinus01_BP, EntryPoint) == 0x000000, "Member 'RadialGaugeMinus01_BP_C_ExecuteUbergraph_RadialGaugeMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RadialGaugeMinus01_BP_C_ExecuteUbergraph_RadialGaugeMinus01_BP, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'RadialGaugeMinus01_BP_C_ExecuteUbergraph_RadialGaugeMinus01_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");

}

