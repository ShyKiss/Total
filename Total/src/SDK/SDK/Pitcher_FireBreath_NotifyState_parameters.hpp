#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Pitcher_FireBreath_NotifyState

#include "Basic.hpp"


namespace SDK::Params
{

// Function Pitcher_FireBreath_NotifyState.Pitcher_FireBreath_NotifyState_C.StartStopFirebreathOrGasSFX
// 0x0018 (0x0018 - 0x0000)
struct Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX final
{
public:
	bool                                          IsStart;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBNPC_GroundPitcher_C*                 Pitcher;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayLoopingSoundOnActor_ReturnValue;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayLoopingSoundOnActor_ReturnValue_1;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX) == 0x000008, "Wrong alignment on Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX");
static_assert(sizeof(Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX) == 0x000018, "Wrong size on Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX, IsStart) == 0x000000, "Member 'Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX::IsStart' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX, Pitcher) == 0x000008, "Member 'Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX::Pitcher' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX, CallFunc_PlayLoopingSoundOnActor_ReturnValue) == 0x000010, "Member 'Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX::CallFunc_PlayLoopingSoundOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX, CallFunc_PlayLoopingSoundOnActor_ReturnValue_1) == 0x000014, "Member 'Pitcher_FireBreath_NotifyState_C_StartStopFirebreathOrGasSFX::CallFunc_PlayLoopingSoundOnActor_ReturnValue_1' has a wrong offset!");

// Function Pitcher_FireBreath_NotifyState.Pitcher_FireBreath_NotifyState_C.Received_NotifyBegin
// 0x0040 (0x0040 - 0x0000)
struct Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimDeltaTime;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBNPC_GroundPitcher_C*                 K2Node_DynamicCast_AsRB_NPC_Ground_Pitcher;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin) == 0x000008, "Wrong alignment on Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin");
static_assert(sizeof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin) == 0x000040, "Wrong size on Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin, MeshComp) == 0x000000, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin::MeshComp' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin, Animation) == 0x000008, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin::Animation' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin, AnimDeltaTime) == 0x000010, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin::AnimDeltaTime' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin, TotalDuration) == 0x000014, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin::TotalDuration' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin, ReturnValue) == 0x000018, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin::ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000028, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin, K2Node_DynamicCast_AsRB_NPC_Ground_Pitcher) == 0x000030, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin::K2Node_DynamicCast_AsRB_NPC_Ground_Pitcher' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Pitcher_FireBreath_NotifyState.Pitcher_FireBreath_NotifyState_C.Received_NotifyEnd
// 0x0038 (0x0038 - 0x0000)
struct Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimDeltaTime;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBNPC_GroundPitcher_C*                 K2Node_DynamicCast_AsRB_NPC_Ground_Pitcher;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd) == 0x000008, "Wrong alignment on Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd");
static_assert(sizeof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd) == 0x000038, "Wrong size on Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd, MeshComp) == 0x000000, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd::MeshComp' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd, Animation) == 0x000008, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd::Animation' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd, AnimDeltaTime) == 0x000010, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd::AnimDeltaTime' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd, ReturnValue) == 0x000014, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000020, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd, K2Node_DynamicCast_AsRB_NPC_Ground_Pitcher) == 0x000028, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd::K2Node_DynamicCast_AsRB_NPC_Ground_Pitcher' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Pitcher_FireBreath_NotifyState.Pitcher_FireBreath_NotifyState_C.GetFirebreathCurveValue
// 0x0028 (0x0028 - 0x0000)
struct Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurveName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue) == 0x000008, "Wrong alignment on Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue");
static_assert(sizeof(Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue) == 0x000028, "Wrong size on Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue, MeshComp) == 0x000000, "Member 'Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue::MeshComp' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue, CurveName) == 0x000008, "Member 'Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue::CurveName' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue, Value) == 0x000010, "Member 'Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue::Value' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue, CallFunc_GetCurveValue_ReturnValue) == 0x000020, "Member 'Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'Pitcher_FireBreath_NotifyState_C_GetFirebreathCurveValue::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function Pitcher_FireBreath_NotifyState.Pitcher_FireBreath_NotifyState_C.Received_NotifyTick
// 0x0050 (0x0050 - 0x0000)
struct Pitcher_FireBreath_NotifyState_C_Received_NotifyTick final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDeltaTime;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      FireBreath_FX;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBNPC_GroundPitcher_C*                 Pitcher;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBNPC_GroundPitcher_C*                 K2Node_DynamicCast_AsRB_NPC_Ground_Pitcher;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFirebreathCurveValue_Value;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFirebreathCurveValue_Value_1;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick) == 0x000008, "Wrong alignment on Pitcher_FireBreath_NotifyState_C_Received_NotifyTick");
static_assert(sizeof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick) == 0x000050, "Wrong size on Pitcher_FireBreath_NotifyState_C_Received_NotifyTick");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, MeshComp) == 0x000000, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::MeshComp' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, Animation) == 0x000008, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::Animation' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, FrameDeltaTime) == 0x000010, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::FrameDeltaTime' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, ReturnValue) == 0x000014, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, FireBreath_FX) == 0x000018, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::FireBreath_FX' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, Pitcher) == 0x000020, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::Pitcher' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000030, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, K2Node_DynamicCast_AsRB_NPC_Ground_Pitcher) == 0x000038, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::K2Node_DynamicCast_AsRB_NPC_Ground_Pitcher' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, CallFunc_GetFirebreathCurveValue_Value) == 0x000044, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::CallFunc_GetFirebreathCurveValue_Value' has a wrong offset!");
static_assert(offsetof(Pitcher_FireBreath_NotifyState_C_Received_NotifyTick, CallFunc_GetFirebreathCurveValue_Value_1) == 0x000048, "Member 'Pitcher_FireBreath_NotifyState_C_Received_NotifyTick::CallFunc_GetFirebreathCurveValue_Value_1' has a wrong offset!");

}

