#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Scientist_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Scientist_BP.Scientist_BP_C
// 0x00C0 (0x06F0 - 0x0630)
class AScientist_BP_C final : public ARBBackgroundCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          HailingZone;                                       // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPropOptimizerComponent*              RBPropOptimizer;                                   // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LowerBody;                                         // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 UpperBody;                                         // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PenMesh;                                           // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ClipboardMesh;                                     // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USkeletalMesh>>   Male_Heads;                                        // 0x0670(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class USkeletalMesh>>   Male_UpperBodies;                                  // 0x0680(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class USkeletalMesh>>   Male_LowerBodies;                                  // 0x0690(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          UseCollisions;                                     // 0x06A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class USkeletalMesh>>   Female_LowerBodies;                                // 0x06A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class USkeletalMesh>>   Female_UpperBodies;                                // 0x06B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class USkeletalMesh>>   Female_Heads;                                      // 0x06C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsFemale;                                          // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HeadMeshIndex;                                     // 0x06DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UpperBodyMeshIndex;                                // 0x06E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowerBodyMeshIndex;                                // 0x06E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRandomMesh;                                     // 0x06E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LookAtAllowed;                                     // 0x06E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6EA[0x2];                                      // 0x06EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LookAtYaw;                                         // 0x06EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void RandomizeMeshes();
	void CanBeFemale(bool* Result);
	void UserConstructionScript();
	void OnLoaded_5B190DD74C9C1BA5309F1B83ACAC3AEA(class UObject* Loaded);
	void ReceiveBeginPlay();
	void ApplyAllMeshes();
	void BndEvt__HailingZone_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__HailingZone_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void UpdateLookAt();
	void ApplyMesh(const TArray<TSoftObjectPtr<class USkeletalMesh>>& Meshes, const class USkeletalMeshComponent* Component, int32 MeshIndex);
	void ExecuteUbergraph_Scientist_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Scientist_BP_C">();
	}
	static class AScientist_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AScientist_BP_C>();
	}
};
static_assert(alignof(AScientist_BP_C) == 0x000010, "Wrong alignment on AScientist_BP_C");
static_assert(sizeof(AScientist_BP_C) == 0x0006F0, "Wrong size on AScientist_BP_C");
static_assert(offsetof(AScientist_BP_C, UberGraphFrame) == 0x000630, "Member 'AScientist_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, HailingZone) == 0x000638, "Member 'AScientist_BP_C::HailingZone' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, RBPropOptimizer) == 0x000640, "Member 'AScientist_BP_C::RBPropOptimizer' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, Head) == 0x000648, "Member 'AScientist_BP_C::Head' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, LowerBody) == 0x000650, "Member 'AScientist_BP_C::LowerBody' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, UpperBody) == 0x000658, "Member 'AScientist_BP_C::UpperBody' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, PenMesh) == 0x000660, "Member 'AScientist_BP_C::PenMesh' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, ClipboardMesh) == 0x000668, "Member 'AScientist_BP_C::ClipboardMesh' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, Male_Heads) == 0x000670, "Member 'AScientist_BP_C::Male_Heads' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, Male_UpperBodies) == 0x000680, "Member 'AScientist_BP_C::Male_UpperBodies' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, Male_LowerBodies) == 0x000690, "Member 'AScientist_BP_C::Male_LowerBodies' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, UseCollisions) == 0x0006A0, "Member 'AScientist_BP_C::UseCollisions' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, Female_LowerBodies) == 0x0006A8, "Member 'AScientist_BP_C::Female_LowerBodies' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, Female_UpperBodies) == 0x0006B8, "Member 'AScientist_BP_C::Female_UpperBodies' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, Female_Heads) == 0x0006C8, "Member 'AScientist_BP_C::Female_Heads' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, IsFemale) == 0x0006D8, "Member 'AScientist_BP_C::IsFemale' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, HeadMeshIndex) == 0x0006DC, "Member 'AScientist_BP_C::HeadMeshIndex' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, UpperBodyMeshIndex) == 0x0006E0, "Member 'AScientist_BP_C::UpperBodyMeshIndex' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, LowerBodyMeshIndex) == 0x0006E4, "Member 'AScientist_BP_C::LowerBodyMeshIndex' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, UseRandomMesh) == 0x0006E8, "Member 'AScientist_BP_C::UseRandomMesh' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, LookAtAllowed) == 0x0006E9, "Member 'AScientist_BP_C::LookAtAllowed' has a wrong offset!");
static_assert(offsetof(AScientist_BP_C, LookAtYaw) == 0x0006EC, "Member 'AScientist_BP_C::LookAtYaw' has a wrong offset!");

}

