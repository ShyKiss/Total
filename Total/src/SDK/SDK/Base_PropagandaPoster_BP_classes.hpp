#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_PropagandaPoster_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C
// 0x0110 (0x0340 - 0x0230)
class ABase_PropagandaPoster_BP_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBEditorClearanceCollisionBoxComponent* FloorCollisionCheck;                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* WallCorpseRoomCheck;                               // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* TimeExtenderRoomCheck;                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* ReviveContainerCheck;                              // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* TVBracketCheck;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* TVRoomCheck;                                       // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBTrapProximityComponent*              RBTrapProximity;                                   // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPingComponent*                       RBPing;                                            // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActiveSkillVisionComponent*          RBActiveSkillVision;                               // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* PosterFloatingCollisionCheck;                      // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* PosterCollisionClearanceCheck;                     // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UObject*                                InteractableOwnerClearanceBoxComponent_BP;         // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ActiveSkillWaveSphere;                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBObjectiveActorComponent*             RBObjectiveComponent;                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBase_PropagandaPoster_InteractionComponent_BP_C* PosterInteractionComponent;                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PosterCenterAnchor;                                // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        GroundAnchor;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBOutlineComponent*                    RBOutline;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PosterMesh;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBRandomizableHelperComponent*         RBRandomizableHelper;                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             RandomMaterials;                                   // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         PosterMaterialIndex;                               // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomizeMaterial;                                 // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasInteracted;                                     // 0x02F5(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2F6[0x2];                                      // 0x02F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxHeightOffset;                                   // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinHeightOffset;                                   // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxAngleOffset;                                    // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinAngleOffset;                                    // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoRandomizeOffsetOnDrop;                         // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowOffsetDebug;                                   // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InteractHeight;                                    // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             AnchorTransform;                                   // 0x0310(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	bool BP_MapCheck(EMapCheckType CheckType, class FString* OutErrorMsg);
	bool OnWorldPopulateFinishedTimeSliced();
	bool FixUp();
	bool GetStateName(class FString* StateA, class FString* StateB);
	void SnapToFloor();
	void SetRandomMaterial();
	void SnapToState();
	void Refresh_Visibility();
	void SelectPosterMesh();
	void IsMeshOffsetValid(bool* NewParam);
	void RandomizePoster();
	void OnRep_HasInteracted();
	void UserConstructionScript();
	void BP_PrepareMapCheck();
	void OnWorldFullyLoaded();
	void OnEditorPostLoad();
	void OnPostActorsPasted(const TArray<class AActor*>& PastedActors);
	void PostDuplicated(class AActor* DuplicationParent);
	void PostEditChange(const class FName& PropertyName);
	void PostEditMove(bool bFinished);
	void PrepareState(bool bStateA, class AActor* RandomOwner);
	void ReceiveBeginPlay();
	void SetState(bool bStateA);
	void SetShouldBeIgnoredForLots(bool bValue);
	void Event_OnResetStage();
	void PostAddedToLevel();
	void BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature(class ARBPawn* Interactor, class URBInteractibleComponent* Component);
	void TickSelected();
	void BndEvt__Base_PropagandaPoster_BP_RBRandomizableHelper_K2Node_ComponentBoundEvent_0_OnRandomStateChangedEvent__DelegateSignature();
	void OnWorldPopulateFinished();
	void ExecuteUbergraph_Base_PropagandaPoster_BP(int32 EntryPoint);

	bool IsRandomStateSet() const;
	bool IsStateA() const;
	bool ShouldBeIgnoredForLots() const;
	void GetMeshOffsetFromCenter(float* HeightOffset, float* Angle) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Base_PropagandaPoster_BP_C">();
	}
	static class ABase_PropagandaPoster_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABase_PropagandaPoster_BP_C>();
	}
};
static_assert(alignof(ABase_PropagandaPoster_BP_C) == 0x000010, "Wrong alignment on ABase_PropagandaPoster_BP_C");
static_assert(sizeof(ABase_PropagandaPoster_BP_C) == 0x000340, "Wrong size on ABase_PropagandaPoster_BP_C");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, UberGraphFrame) == 0x000230, "Member 'ABase_PropagandaPoster_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, FloorCollisionCheck) == 0x000238, "Member 'ABase_PropagandaPoster_BP_C::FloorCollisionCheck' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, WallCorpseRoomCheck) == 0x000240, "Member 'ABase_PropagandaPoster_BP_C::WallCorpseRoomCheck' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, TimeExtenderRoomCheck) == 0x000248, "Member 'ABase_PropagandaPoster_BP_C::TimeExtenderRoomCheck' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, ReviveContainerCheck) == 0x000250, "Member 'ABase_PropagandaPoster_BP_C::ReviveContainerCheck' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, TVBracketCheck) == 0x000258, "Member 'ABase_PropagandaPoster_BP_C::TVBracketCheck' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, TVRoomCheck) == 0x000260, "Member 'ABase_PropagandaPoster_BP_C::TVRoomCheck' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, RBTrapProximity) == 0x000268, "Member 'ABase_PropagandaPoster_BP_C::RBTrapProximity' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, RBPing) == 0x000270, "Member 'ABase_PropagandaPoster_BP_C::RBPing' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, RBActiveSkillVision) == 0x000278, "Member 'ABase_PropagandaPoster_BP_C::RBActiveSkillVision' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, PosterFloatingCollisionCheck) == 0x000280, "Member 'ABase_PropagandaPoster_BP_C::PosterFloatingCollisionCheck' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, PosterCollisionClearanceCheck) == 0x000288, "Member 'ABase_PropagandaPoster_BP_C::PosterCollisionClearanceCheck' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, InteractableOwnerClearanceBoxComponent_BP) == 0x000290, "Member 'ABase_PropagandaPoster_BP_C::InteractableOwnerClearanceBoxComponent_BP' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, ActiveSkillWaveSphere) == 0x000298, "Member 'ABase_PropagandaPoster_BP_C::ActiveSkillWaveSphere' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, RBObjectiveComponent) == 0x0002A0, "Member 'ABase_PropagandaPoster_BP_C::RBObjectiveComponent' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, PosterInteractionComponent) == 0x0002A8, "Member 'ABase_PropagandaPoster_BP_C::PosterInteractionComponent' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, PosterCenterAnchor) == 0x0002B0, "Member 'ABase_PropagandaPoster_BP_C::PosterCenterAnchor' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, GroundAnchor) == 0x0002B8, "Member 'ABase_PropagandaPoster_BP_C::GroundAnchor' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, Root) == 0x0002C0, "Member 'ABase_PropagandaPoster_BP_C::Root' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, RBOutline) == 0x0002C8, "Member 'ABase_PropagandaPoster_BP_C::RBOutline' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, PosterMesh) == 0x0002D0, "Member 'ABase_PropagandaPoster_BP_C::PosterMesh' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, RBRandomizableHelper) == 0x0002D8, "Member 'ABase_PropagandaPoster_BP_C::RBRandomizableHelper' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, RandomMaterials) == 0x0002E0, "Member 'ABase_PropagandaPoster_BP_C::RandomMaterials' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, PosterMaterialIndex) == 0x0002F0, "Member 'ABase_PropagandaPoster_BP_C::PosterMaterialIndex' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, RandomizeMaterial) == 0x0002F4, "Member 'ABase_PropagandaPoster_BP_C::RandomizeMaterial' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, HasInteracted) == 0x0002F5, "Member 'ABase_PropagandaPoster_BP_C::HasInteracted' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, MaxHeightOffset) == 0x0002F8, "Member 'ABase_PropagandaPoster_BP_C::MaxHeightOffset' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, MinHeightOffset) == 0x0002FC, "Member 'ABase_PropagandaPoster_BP_C::MinHeightOffset' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, MaxAngleOffset) == 0x000300, "Member 'ABase_PropagandaPoster_BP_C::MaxAngleOffset' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, MinAngleOffset) == 0x000304, "Member 'ABase_PropagandaPoster_BP_C::MinAngleOffset' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, AutoRandomizeOffsetOnDrop) == 0x000308, "Member 'ABase_PropagandaPoster_BP_C::AutoRandomizeOffsetOnDrop' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, ShowOffsetDebug) == 0x000309, "Member 'ABase_PropagandaPoster_BP_C::ShowOffsetDebug' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, InteractHeight) == 0x00030C, "Member 'ABase_PropagandaPoster_BP_C::InteractHeight' has a wrong offset!");
static_assert(offsetof(ABase_PropagandaPoster_BP_C, AnchorTransform) == 0x000310, "Member 'ABase_PropagandaPoster_BP_C::AnchorTransform' has a wrong offset!");

}

