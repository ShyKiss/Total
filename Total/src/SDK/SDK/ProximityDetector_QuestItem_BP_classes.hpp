#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProximityDetector_QuestItem_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ProximityDetector_QuestItem_BP.ProximityDetector_QuestItem_BP_C
// 0x02D0 (0x0FA0 - 0x0CD0)
class AProximityDetector_QuestItem_BP_C final : public ARBProximityDetectorItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0CD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   FogLight;                                          // 0x0CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPingComponent*                       RBPing;                                            // 0x0CE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScapegoatDevice_LightMinus05;                      // 0x0CF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScapegoatDevice_LightMinus04;                      // 0x0CF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScapegoatDevice_LightMinus03;                      // 0x0D00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScapegoatDevice_LightMinus02;                      // 0x0D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScapegoatDevice_LightMinus01;                      // 0x0D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScapegoatDevice_LightMinusDown;                    // 0x0D18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScapegoatDevice_LightMinusUp;                      // 0x0D20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScapegoatDevice_TrackerMinus01;                    // 0x0D28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBObjectiveActorComponent*             RBObjectiveActor;                                  // 0x0D30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InWorldMesh;                                       // 0x0D38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBRandomizableHelperComponent*         RBRandomizableHelper;                              // 0x0D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FConfigurableFloat                     AlarmIntervalMin;                                  // 0x0D48(0x00C8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FConfigurableFloat                     AlarmIntervalMax;                                  // 0x0E10(0x00C8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         TriggerCount;                                      // 0x0ED8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay;                                             // 0x0EDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeThreshold;                                    // 0x0EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE4[0x4];                                      // 0x0EE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   ActiveLightColors;                                 // 0x0EE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           InactiveLightColor;                                // 0x0EF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RTPCProgressLoopName;                              // 0x0F08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventButtonPressed;                              // 0x0F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventButtonRelease;                              // 0x0F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventLEDTurnOff;                                 // 0x0F20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventLEDTurnOn;                                  // 0x0F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasPlayedLEDTurnOnSound;                          // 0x0F30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F31[0x7];                                      // 0x0F31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          AkEventAlarmDeviceOnSuccessStart;                  // 0x0F38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventAlarmDeviceOnSuccessStop;                   // 0x0F40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventCookSuccess;                                // 0x0F48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventProximityLoopStart;                         // 0x0F50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventProximityLoopStop;                          // 0x0F58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayingLoopingProximitySound;                   // 0x0F60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F61[0x7];                                      // 0x0F61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          StartDetectionAudioEvent;                          // 0x0F68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          StopDetectionAudioEvent;                           // 0x0F70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAudioLoopPlaying;                                 // 0x0F78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F79[0x7];                                      // 0x0F79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                AudioOwner;                                        // 0x0F80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProximityFullLightIntensity;                       // 0x0F88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProximityDetectorZLevelState                 LocalZLevel;                                       // 0x0F8C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8D[0x3];                                      // 0x0F8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalProximityLevel;                               // 0x0F90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool GetStateName(class FString* StateA, class FString* StateB);
	void CheckForProximityChange(bool* bSomethingChanged);
	bool ShouldFogLightBeVisible(int32* LIghtLevel);
	void RefreshFogLight();
	void StartAudioLoop();
	void StopAudioLoop();
	void RefreshAudioState(bool bAllowAudio);
	void UserConstructionScript();
	void PrepareState(bool bStateA, class AActor* RandomOwner);
	void SetShouldBeIgnoredForLots(bool bValue);
	void SetState(bool bStateA);
	void BP_OnProximityLevelChanged();
	void BP_OnEquipped();
	void BP_OnUnequipped();
	void ExecuteUbergraph_ProximityDetector_QuestItem_BP(int32 EntryPoint);

	bool IsRandomStateSet() const;
	bool IsStateA() const;
	bool ShouldBeIgnoredForLots() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProximityDetector_QuestItem_BP_C">();
	}
	static class AProximityDetector_QuestItem_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProximityDetector_QuestItem_BP_C>();
	}
};
static_assert(alignof(AProximityDetector_QuestItem_BP_C) == 0x000010, "Wrong alignment on AProximityDetector_QuestItem_BP_C");
static_assert(sizeof(AProximityDetector_QuestItem_BP_C) == 0x000FA0, "Wrong size on AProximityDetector_QuestItem_BP_C");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, UberGraphFrame) == 0x000CD0, "Member 'AProximityDetector_QuestItem_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, FogLight) == 0x000CD8, "Member 'AProximityDetector_QuestItem_BP_C::FogLight' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, RBSound) == 0x000CE0, "Member 'AProximityDetector_QuestItem_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, RBPing) == 0x000CE8, "Member 'AProximityDetector_QuestItem_BP_C::RBPing' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ScapegoatDevice_LightMinus05) == 0x000CF0, "Member 'AProximityDetector_QuestItem_BP_C::ScapegoatDevice_LightMinus05' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ScapegoatDevice_LightMinus04) == 0x000CF8, "Member 'AProximityDetector_QuestItem_BP_C::ScapegoatDevice_LightMinus04' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ScapegoatDevice_LightMinus03) == 0x000D00, "Member 'AProximityDetector_QuestItem_BP_C::ScapegoatDevice_LightMinus03' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ScapegoatDevice_LightMinus02) == 0x000D08, "Member 'AProximityDetector_QuestItem_BP_C::ScapegoatDevice_LightMinus02' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ScapegoatDevice_LightMinus01) == 0x000D10, "Member 'AProximityDetector_QuestItem_BP_C::ScapegoatDevice_LightMinus01' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ScapegoatDevice_LightMinusDown) == 0x000D18, "Member 'AProximityDetector_QuestItem_BP_C::ScapegoatDevice_LightMinusDown' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ScapegoatDevice_LightMinusUp) == 0x000D20, "Member 'AProximityDetector_QuestItem_BP_C::ScapegoatDevice_LightMinusUp' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ScapegoatDevice_TrackerMinus01) == 0x000D28, "Member 'AProximityDetector_QuestItem_BP_C::ScapegoatDevice_TrackerMinus01' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, RBObjectiveActor) == 0x000D30, "Member 'AProximityDetector_QuestItem_BP_C::RBObjectiveActor' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, InWorldMesh) == 0x000D38, "Member 'AProximityDetector_QuestItem_BP_C::InWorldMesh' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, RBRandomizableHelper) == 0x000D40, "Member 'AProximityDetector_QuestItem_BP_C::RBRandomizableHelper' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AlarmIntervalMin) == 0x000D48, "Member 'AProximityDetector_QuestItem_BP_C::AlarmIntervalMin' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AlarmIntervalMax) == 0x000E10, "Member 'AProximityDetector_QuestItem_BP_C::AlarmIntervalMax' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, TriggerCount) == 0x000ED8, "Member 'AProximityDetector_QuestItem_BP_C::TriggerCount' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, Delay) == 0x000EDC, "Member 'AProximityDetector_QuestItem_BP_C::Delay' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ShakeThreshold) == 0x000EE0, "Member 'AProximityDetector_QuestItem_BP_C::ShakeThreshold' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ActiveLightColors) == 0x000EE8, "Member 'AProximityDetector_QuestItem_BP_C::ActiveLightColors' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, InactiveLightColor) == 0x000EF8, "Member 'AProximityDetector_QuestItem_BP_C::InactiveLightColor' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, RTPCProgressLoopName) == 0x000F08, "Member 'AProximityDetector_QuestItem_BP_C::RTPCProgressLoopName' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AkEventButtonPressed) == 0x000F10, "Member 'AProximityDetector_QuestItem_BP_C::AkEventButtonPressed' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AkEventButtonRelease) == 0x000F18, "Member 'AProximityDetector_QuestItem_BP_C::AkEventButtonRelease' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AkEventLEDTurnOff) == 0x000F20, "Member 'AProximityDetector_QuestItem_BP_C::AkEventLEDTurnOff' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AkEventLEDTurnOn) == 0x000F28, "Member 'AProximityDetector_QuestItem_BP_C::AkEventLEDTurnOn' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, bHasPlayedLEDTurnOnSound) == 0x000F30, "Member 'AProximityDetector_QuestItem_BP_C::bHasPlayedLEDTurnOnSound' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AkEventAlarmDeviceOnSuccessStart) == 0x000F38, "Member 'AProximityDetector_QuestItem_BP_C::AkEventAlarmDeviceOnSuccessStart' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AkEventAlarmDeviceOnSuccessStop) == 0x000F40, "Member 'AProximityDetector_QuestItem_BP_C::AkEventAlarmDeviceOnSuccessStop' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AkEventCookSuccess) == 0x000F48, "Member 'AProximityDetector_QuestItem_BP_C::AkEventCookSuccess' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AkEventProximityLoopStart) == 0x000F50, "Member 'AProximityDetector_QuestItem_BP_C::AkEventProximityLoopStart' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AkEventProximityLoopStop) == 0x000F58, "Member 'AProximityDetector_QuestItem_BP_C::AkEventProximityLoopStop' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, bIsPlayingLoopingProximitySound) == 0x000F60, "Member 'AProximityDetector_QuestItem_BP_C::bIsPlayingLoopingProximitySound' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, StartDetectionAudioEvent) == 0x000F68, "Member 'AProximityDetector_QuestItem_BP_C::StartDetectionAudioEvent' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, StopDetectionAudioEvent) == 0x000F70, "Member 'AProximityDetector_QuestItem_BP_C::StopDetectionAudioEvent' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, bAudioLoopPlaying) == 0x000F78, "Member 'AProximityDetector_QuestItem_BP_C::bAudioLoopPlaying' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, AudioOwner) == 0x000F80, "Member 'AProximityDetector_QuestItem_BP_C::AudioOwner' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, ProximityFullLightIntensity) == 0x000F88, "Member 'AProximityDetector_QuestItem_BP_C::ProximityFullLightIntensity' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, LocalZLevel) == 0x000F8C, "Member 'AProximityDetector_QuestItem_BP_C::LocalZLevel' has a wrong offset!");
static_assert(offsetof(AProximityDetector_QuestItem_BP_C, LocalProximityLevel) == 0x000F90, "Member 'AProximityDetector_QuestItem_BP_C::LocalProximityLevel' has a wrong offset!");

}

