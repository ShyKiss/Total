#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContMinusHealthMinusMedkit_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Cont-Health-Medkit_BP.Cont-Health-Medkit_BP_C
// 0x0160 (0x06A0 - 0x0540)
class AContMinusHealthMinusMedkit_BP_C final : public ARBInteractibleContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0540(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBActorPrevisComponent*                RightBandagePrevis;                                // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                LeftBandagePrevis;                                 // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* OpenClearanceBox;                                  // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBContainerInteractibleZoneComponent*  RBContainerInteractibleZone;                       // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                RightTempHealthPrevis;                             // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                RightHealthGainPrevis;                             // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                LeftTempHealthPrevis;                              // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                LeftHealthGainPrevis;                              // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* OpeningClearanceBox;                               // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UObject*                                InteractableOwnerClearanceBoxComponent_BP;         // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GasTrapMesh;                                       // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GasTrapTriggerMesh;                                // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PadLockMinus01;                                    // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hinge;                                             // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                RightAntidotePrevis;                               // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                RightSyringePrevis;                                // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                RightStaminaBoostPrevis;                           // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                RightStaminaPrevis;                                // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                LeftStaminaBoostPrevis;                            // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                LeftAntidotePrevis;                                // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                LeftStaminaPrevis;                                 // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                LeftSyringePrevis;                                 // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PadLockBarMinus01;                                 // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBOutlineComponent*                    RBOutline;                                         // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBContainerSpawnLocationComponent*     RightSpawnLocation;                                // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBContainerSpawnLocationComponent*     LeftSpawnLocation;                                 // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RefStaticmesh;                                     // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Base;                                              // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_628[0x8];                                      // 0x0628(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BaseTransform;                                     // 0x0630(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             InteractionBaseTransform;                          // 0x0660(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bOpenAnimPlayed;                                   // 0x0690(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	bool PlaySpecialMoveAnimation(class ARBPawn* InteractorPawn, ESpecialMove SpecialMove);
	void UserConstructionScript();
	void Event_SnapToState();
	void Event_OnIsOpenedChanged();
	void OnPawnPlaySpecialMoveAnimation(const class ARBPawn* Pawn, ESpecialMove SpecialMove);
	void Event_OnResetStage();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_ContMinusHealthMinusMedkit_BP(int32 EntryPoint);

	void GetLookAtLocation(struct FVector* OutLookAtLocation) const;
	bool GetInteractionPawnLocation(const class ARBPawn* Pawn, ESpecialMove SpecialMove, struct FVector* OutLocation, struct FVector* OutDirection) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cont-Health-Medkit_BP_C">();
	}
	static class AContMinusHealthMinusMedkit_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AContMinusHealthMinusMedkit_BP_C>();
	}
};
static_assert(alignof(AContMinusHealthMinusMedkit_BP_C) == 0x000010, "Wrong alignment on AContMinusHealthMinusMedkit_BP_C");
static_assert(sizeof(AContMinusHealthMinusMedkit_BP_C) == 0x0006A0, "Wrong size on AContMinusHealthMinusMedkit_BP_C");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, UberGraphFrame) == 0x000540, "Member 'AContMinusHealthMinusMedkit_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RightBandagePrevis) == 0x000548, "Member 'AContMinusHealthMinusMedkit_BP_C::RightBandagePrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, LeftBandagePrevis) == 0x000550, "Member 'AContMinusHealthMinusMedkit_BP_C::LeftBandagePrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, OpenClearanceBox) == 0x000558, "Member 'AContMinusHealthMinusMedkit_BP_C::OpenClearanceBox' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RBContainerInteractibleZone) == 0x000560, "Member 'AContMinusHealthMinusMedkit_BP_C::RBContainerInteractibleZone' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RightTempHealthPrevis) == 0x000568, "Member 'AContMinusHealthMinusMedkit_BP_C::RightTempHealthPrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RightHealthGainPrevis) == 0x000570, "Member 'AContMinusHealthMinusMedkit_BP_C::RightHealthGainPrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, LeftTempHealthPrevis) == 0x000578, "Member 'AContMinusHealthMinusMedkit_BP_C::LeftTempHealthPrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, LeftHealthGainPrevis) == 0x000580, "Member 'AContMinusHealthMinusMedkit_BP_C::LeftHealthGainPrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, OpeningClearanceBox) == 0x000588, "Member 'AContMinusHealthMinusMedkit_BP_C::OpeningClearanceBox' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, InteractableOwnerClearanceBoxComponent_BP) == 0x000590, "Member 'AContMinusHealthMinusMedkit_BP_C::InteractableOwnerClearanceBoxComponent_BP' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, GasTrapMesh) == 0x000598, "Member 'AContMinusHealthMinusMedkit_BP_C::GasTrapMesh' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, GasTrapTriggerMesh) == 0x0005A0, "Member 'AContMinusHealthMinusMedkit_BP_C::GasTrapTriggerMesh' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, PadLockMinus01) == 0x0005A8, "Member 'AContMinusHealthMinusMedkit_BP_C::PadLockMinus01' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, Hinge) == 0x0005B0, "Member 'AContMinusHealthMinusMedkit_BP_C::Hinge' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RightAntidotePrevis) == 0x0005B8, "Member 'AContMinusHealthMinusMedkit_BP_C::RightAntidotePrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RightSyringePrevis) == 0x0005C0, "Member 'AContMinusHealthMinusMedkit_BP_C::RightSyringePrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RightStaminaBoostPrevis) == 0x0005C8, "Member 'AContMinusHealthMinusMedkit_BP_C::RightStaminaBoostPrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RightStaminaPrevis) == 0x0005D0, "Member 'AContMinusHealthMinusMedkit_BP_C::RightStaminaPrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, LeftStaminaBoostPrevis) == 0x0005D8, "Member 'AContMinusHealthMinusMedkit_BP_C::LeftStaminaBoostPrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, LeftAntidotePrevis) == 0x0005E0, "Member 'AContMinusHealthMinusMedkit_BP_C::LeftAntidotePrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, LeftStaminaPrevis) == 0x0005E8, "Member 'AContMinusHealthMinusMedkit_BP_C::LeftStaminaPrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, LeftSyringePrevis) == 0x0005F0, "Member 'AContMinusHealthMinusMedkit_BP_C::LeftSyringePrevis' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, PadLockBarMinus01) == 0x0005F8, "Member 'AContMinusHealthMinusMedkit_BP_C::PadLockBarMinus01' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RBOutline) == 0x000600, "Member 'AContMinusHealthMinusMedkit_BP_C::RBOutline' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RightSpawnLocation) == 0x000608, "Member 'AContMinusHealthMinusMedkit_BP_C::RightSpawnLocation' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, LeftSpawnLocation) == 0x000610, "Member 'AContMinusHealthMinusMedkit_BP_C::LeftSpawnLocation' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, RefStaticmesh) == 0x000618, "Member 'AContMinusHealthMinusMedkit_BP_C::RefStaticmesh' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, Base) == 0x000620, "Member 'AContMinusHealthMinusMedkit_BP_C::Base' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, BaseTransform) == 0x000630, "Member 'AContMinusHealthMinusMedkit_BP_C::BaseTransform' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, InteractionBaseTransform) == 0x000660, "Member 'AContMinusHealthMinusMedkit_BP_C::InteractionBaseTransform' has a wrong offset!");
static_assert(offsetof(AContMinusHealthMinusMedkit_BP_C, bOpenAnimPlayed) == 0x000690, "Member 'AContMinusHealthMinusMedkit_BP_C::bOpenAnimPlayed' has a wrong offset!");

}

