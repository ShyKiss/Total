#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SPMinusDocumentMinusSurface_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.RefreshRadioIconVisibility
// 0x0020 (0x0020 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility) == 0x000004, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility) == 0x000020, "Wrong size on SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility, Temp_name_Variable) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility, Temp_name_Variable_1) == 0x000008, "Member 'SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility, Temp_name_Variable_2) == 0x000010, "Member 'SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility, CallFunc_Array_Contains_ReturnValue_1) == 0x000019, "Member 'SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility, CallFunc_Array_Contains_ReturnValue_2) == 0x00001A, "Member 'SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility, CallFunc_BooleanOR_ReturnValue_1) == 0x00001C, "Member 'SPMinusDocumentMinusSurface_BP_C_RefreshRadioIconVisibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.TestPawnClearanceFromBox
// 0x00B0 (0x00B0 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox final
{
public:
	TArray<class UPrimitiveComponent*>            Clearances;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          bClear;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class UPrimitiveComponent*>              CallFunc_GatherComponentOverlaps_out_overlappingComponent; // 0x0030(0x0050)(ContainsInstancedReference)
	TArray<class UPrimitiveComponent*>            CallFunc_Set_ToArray_Result;                       // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanComponentCollisionOverlapInEditor_ReturnValue; // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox) == 0x000008, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox) == 0x0000B0, "Wrong size on SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, Clearances) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::Clearances' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, bClear) == 0x000010, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::bClear' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, Temp_int_Array_Index_Variable) == 0x000020, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_Array_Get_Item) == 0x000028, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_GatherComponentOverlaps_out_overlappingComponent) == 0x000030, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_GatherComponentOverlaps_out_overlappingComponent' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_Set_ToArray_Result) == 0x000080, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_GetCollisionEnabled_ReturnValue) == 0x00009C, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_Less_IntInt_ReturnValue) == 0x00009D, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, K2Node_SwitchEnum_CmpSuccess) == 0x00009E, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_CanComponentCollisionOverlapInEditor_ReturnValue) == 0x00009F, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_CanComponentCollisionOverlapInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, Temp_int_Loop_Counter_Variable_1) == 0x0000A0, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.BndEvt__SP-Document-Surface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature final
{
public:
	bool                                          bClearancePassed;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature) == 0x000001, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature) == 0x000001, "Wrong size on SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature, bClearancePassed) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature::bClearancePassed' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.BndEvt__SP-Document-Surface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature final
{
public:
	bool                                          bClearancePassed;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature) == 0x000001, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature) == 0x000001, "Wrong size on SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature, bClearancePassed) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature::bClearancePassed' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.BndEvt__SP-Document-Surface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature final
{
public:
	bool                                          bClearancePassed;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature) == 0x000001, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature) == 0x000001, "Wrong size on SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature, bClearancePassed) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature::bClearancePassed' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.ExecuteUbergraph_SP-Document-Surface_BP
// 0x0050 (0x0050 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bClearancePassed_1;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bClearancePassed;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_TestPawnClearanceFromBox_bClear;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_TestPawnClearanceFromBox_bClear_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array_2;                          // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SetTagInEditor_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestPawnClearanceFromBox_bClear_2;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTagInEditor_ReturnValue_1;             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTagInEditor_ReturnValue_2;             // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTagInEditor_ReturnValue_3;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bClearancePassed_2;     // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTagInEditor_ReturnValue_4;             // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTagInEditor_ReturnValue_5;             // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP) == 0x000008, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP) == 0x000050, "Wrong size on SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, EntryPoint) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, K2Node_ComponentBoundEvent_bClearancePassed_1) == 0x000004, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::K2Node_ComponentBoundEvent_bClearancePassed_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, K2Node_ComponentBoundEvent_bClearancePassed) == 0x000005, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::K2Node_ComponentBoundEvent_bClearancePassed' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, K2Node_MakeArray_Array) == 0x000008, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, CallFunc_TestPawnClearanceFromBox_bClear) == 0x000018, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::CallFunc_TestPawnClearanceFromBox_bClear' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, K2Node_MakeArray_Array_1) == 0x000020, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, CallFunc_TestPawnClearanceFromBox_bClear_1) == 0x000030, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::CallFunc_TestPawnClearanceFromBox_bClear_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, K2Node_MakeArray_Array_2) == 0x000038, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, CallFunc_SetTagInEditor_ReturnValue) == 0x000048, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::CallFunc_SetTagInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, CallFunc_TestPawnClearanceFromBox_bClear_2) == 0x000049, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::CallFunc_TestPawnClearanceFromBox_bClear_2' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, CallFunc_SetTagInEditor_ReturnValue_1) == 0x00004A, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::CallFunc_SetTagInEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, CallFunc_SetTagInEditor_ReturnValue_2) == 0x00004B, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::CallFunc_SetTagInEditor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, CallFunc_SetTagInEditor_ReturnValue_3) == 0x00004C, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::CallFunc_SetTagInEditor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, K2Node_ComponentBoundEvent_bClearancePassed_2) == 0x00004D, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::K2Node_ComponentBoundEvent_bClearancePassed_2' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, CallFunc_SetTagInEditor_ReturnValue_4) == 0x00004E, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::CallFunc_SetTagInEditor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP, CallFunc_SetTagInEditor_ReturnValue_5) == 0x00004F, "Member 'SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP::CallFunc_SetTagInEditor_ReturnValue_5' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.ShouldPingFollowActor
// 0x0002 (0x0002 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor final
{
public:
	bool                                          OutShouldFollow;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor) == 0x000001, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor) == 0x000002, "Wrong size on SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor, OutShouldFollow) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor::OutShouldFollow' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor, ReturnValue) == 0x000001, "Member 'SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor::ReturnValue' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.GetPingItemName
// 0x0020 (0x0020 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_GetPingItemName final
{
public:
	class FText                                   OutName;                                           // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_GetPingItemName) == 0x000008, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_GetPingItemName");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_GetPingItemName) == 0x000020, "Wrong size on SPMinusDocumentMinusSurface_BP_C_GetPingItemName");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPingItemName, OutName) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPingItemName::OutName' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPingItemName, ReturnValue) == 0x000018, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPingItemName::ReturnValue' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.GetPingEnabled
// 0x0098 (0x0098 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_GetPingEnabled final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          OutIsEnabled;                                      // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0091(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EContainerPopulatedState                      CallFunc_GetPopulatedState_ReturnValue;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_GetPingEnabled) == 0x000008, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_GetPingEnabled");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_GetPingEnabled) == 0x000098, "Wrong size on SPMinusDocumentMinusSurface_BP_C_GetPingEnabled");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPingEnabled, PingOwner) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPingEnabled::PingOwner' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPingEnabled, HitResult) == 0x000008, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPingEnabled::HitResult' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPingEnabled, OutIsEnabled) == 0x000090, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPingEnabled::OutIsEnabled' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPingEnabled, ReturnValue) == 0x000091, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPingEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPingEnabled, CallFunc_GetPopulatedState_ReturnValue) == 0x000092, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPingEnabled::CallFunc_GetPopulatedState_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPingEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000093, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPingEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.GetPlayerPingData
// 0x0130 (0x0130 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FPlayerPingData                        OutData;                                           // 0x0090(0x0030)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemName;                                          // 0x00C8(0x0018)(Edit, BlueprintVisible)
	class FText                                   SourceString;                                      // 0x00E0(0x0018)(Edit, BlueprintVisible)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerPingData                        CallFunc_GetPlayerPingDataFromId_ReturnValue;      // 0x0100(0x0030)()
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData) == 0x000008, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData) == 0x000130, "Wrong size on SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData, PingOwner) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData::PingOwner' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData, HitResult) == 0x000008, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData::HitResult' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData, OutData) == 0x000090, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData::OutData' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData, ReturnValue) == 0x0000C0, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData::ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData, ItemName) == 0x0000C8, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData::ItemName' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData, SourceString) == 0x0000E0, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData::SourceString' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData, CallFunc_MakeLiteralName_ReturnValue) == 0x0000F8, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData, CallFunc_GetPlayerPingDataFromId_ReturnValue) == 0x000100, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData::CallFunc_GetPlayerPingDataFromId_ReturnValue' has a wrong offset!");

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.GetPlayerPingWorldLocation
// 0x00B0 (0x00B0 - 0x0000)
struct SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                OutLocation;                                       // 0x0090(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x009C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation) == 0x000008, "Wrong alignment on SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation");
static_assert(sizeof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation) == 0x0000B0, "Wrong size on SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation, PingOwner) == 0x000000, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation::PingOwner' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation, HitResult) == 0x000008, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation::HitResult' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation, OutLocation) == 0x000090, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation::OutLocation' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation, ReturnValue) == 0x00009C, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A0, "Member 'SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

