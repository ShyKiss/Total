#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElectricalSwitchMinusRollingdoorVariatorMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BASE_ElectricalSwitchMinus01_BP_classes.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C
// 0x0068 (0x07B0 - 0x0748)
class AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C final : public ABASE_ElectricalSwitchMinus01_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C; // 0x0748(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SwitchAMinusClawMinus01;                           // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FrontDisabledVFX;                                  // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBHackableComponent*                   RBHackable;                                        // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActiveSkillVisionComponent*          ActiveSkillVisionComponent;                        // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ActiveSkillWaveSphere;                             // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ClampAngle_Angle_DE9D99B8415989D42C663B97B9C43812; // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ClampAngle__Direction_DE9D99B8415989D42C663B97B9C43812; // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D[0x3];                                      // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ClampAngle;                                        // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBTriggerable*                         LinkedTriggerable;                                 // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVariatorEnabled;                                  // 0x0790(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URBHackableComponent*>           LinkedHackableComponents;                          // 0x0798(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          HackedDisabled;                                    // 0x07A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ElectricalSwitchMinusRollingdoorVariatorMinus01_BP(int32 EntryPoint);
	void Event_OnCompletedOperation(const TArray<class ARBPawn*>& Pawns);
	void OnHackStateChanged(class URBHackableComponent* HackableComponent);
	void SetVariatorEnabled(bool bEnabled);
	void ReceiveBeginPlay();
	void OnVariatorEnabledChanged();
	void BndEvt__ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature(class URBHackableComponent* HackableComponent);
	void ClampAngle__UpdateFunc();
	void ClampAngle__FinishedFunc();
	void TryResetSwitch();
	void SetLinkedTriggerable(class ARBTriggerable* LinkedTriggerable_0);
	void OnHackedDisableStateChanged(bool bHackedDisabled);
	void OnRep_bVariatorEnabled();
	void SetHaveClamps(bool bNewVisibility);
	void RefreshHackedVisualState();
	void IsConsideredActivelyBeingHacked(bool* Out);
	void ShouldAllLightBeOn(bool* bAllLightOn);

	void GetLinkedTriggerable(class ARBTriggerable** Triggerable) const;
	bool BP_ShouldProgressShowMaxedOut() const;
	bool GetVariatorEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ElectricalSwitch-RollingdoorVariator-01_BP_C">();
	}
	static class AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C>();
	}
};
static_assert(alignof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C) == 0x000008, "Wrong alignment on AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C");
static_assert(sizeof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C) == 0x0007B0, "Wrong size on AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, UberGraphFrame_ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C) == 0x000748, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::UberGraphFrame_ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, SwitchAMinusClawMinus01) == 0x000750, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::SwitchAMinusClawMinus01' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, FrontDisabledVFX) == 0x000758, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::FrontDisabledVFX' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, RBHackable) == 0x000760, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::RBHackable' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, ActiveSkillVisionComponent) == 0x000768, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ActiveSkillVisionComponent' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, ActiveSkillWaveSphere) == 0x000770, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ActiveSkillWaveSphere' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, ClampAngle_Angle_DE9D99B8415989D42C663B97B9C43812) == 0x000778, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ClampAngle_Angle_DE9D99B8415989D42C663B97B9C43812' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, ClampAngle__Direction_DE9D99B8415989D42C663B97B9C43812) == 0x00077C, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ClampAngle__Direction_DE9D99B8415989D42C663B97B9C43812' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, ClampAngle) == 0x000780, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ClampAngle' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, LinkedTriggerable) == 0x000788, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::LinkedTriggerable' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, bVariatorEnabled) == 0x000790, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::bVariatorEnabled' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, LinkedHackableComponents) == 0x000798, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::LinkedHackableComponents' has a wrong offset!");
static_assert(offsetof(AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C, HackedDisabled) == 0x0007A8, "Member 'AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::HackedDisabled' has a wrong offset!");

}

