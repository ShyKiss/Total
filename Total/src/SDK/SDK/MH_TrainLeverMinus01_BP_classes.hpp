#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MH_TrainLeverMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MH_TrainLever-01_BP.MH_TrainLever-01_BP_C
// 0x0040 (0x0270 - 0x0230)
class AMH_TrainLeverMinus01_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Collision;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MH_TrainLeverMinus01;                              // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MH_TrainLeverBaseMinus01;                          // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Lever_Rotation;                                    // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve;                                             // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Event_PostRegisterAllComponents();
	void ExecuteUbergraph_MH_TrainLeverMinus01_BP(int32 EntryPoint);
	void UpdateMorphTarget();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MH_TrainLever-01_BP_C">();
	}
	static class AMH_TrainLeverMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMH_TrainLeverMinus01_BP_C>();
	}
};
static_assert(alignof(AMH_TrainLeverMinus01_BP_C) == 0x000008, "Wrong alignment on AMH_TrainLeverMinus01_BP_C");
static_assert(sizeof(AMH_TrainLeverMinus01_BP_C) == 0x000270, "Wrong size on AMH_TrainLeverMinus01_BP_C");
static_assert(offsetof(AMH_TrainLeverMinus01_BP_C, UberGraphFrame) == 0x000230, "Member 'AMH_TrainLeverMinus01_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMH_TrainLeverMinus01_BP_C, Collision) == 0x000238, "Member 'AMH_TrainLeverMinus01_BP_C::Collision' has a wrong offset!");
static_assert(offsetof(AMH_TrainLeverMinus01_BP_C, Scene) == 0x000240, "Member 'AMH_TrainLeverMinus01_BP_C::Scene' has a wrong offset!");
static_assert(offsetof(AMH_TrainLeverMinus01_BP_C, MH_TrainLeverMinus01) == 0x000248, "Member 'AMH_TrainLeverMinus01_BP_C::MH_TrainLeverMinus01' has a wrong offset!");
static_assert(offsetof(AMH_TrainLeverMinus01_BP_C, MH_TrainLeverBaseMinus01) == 0x000250, "Member 'AMH_TrainLeverMinus01_BP_C::MH_TrainLeverBaseMinus01' has a wrong offset!");
static_assert(offsetof(AMH_TrainLeverMinus01_BP_C, DefaultSceneRoot) == 0x000258, "Member 'AMH_TrainLeverMinus01_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMH_TrainLeverMinus01_BP_C, Lever_Rotation) == 0x000260, "Member 'AMH_TrainLeverMinus01_BP_C::Lever_Rotation' has a wrong offset!");
static_assert(offsetof(AMH_TrainLeverMinus01_BP_C, Curve) == 0x000268, "Member 'AMH_TrainLeverMinus01_BP_C::Curve' has a wrong offset!");

}

