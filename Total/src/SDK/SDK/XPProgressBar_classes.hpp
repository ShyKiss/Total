#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XPProgressBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass XPProgressBar.XPProgressBar_C
// 0x0058 (0x02B8 - 0x0260)
class UXPProgressBar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       BarFadeOut;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_131;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         LineIndicatorContainer;                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               NewProgressContainer;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           NewProgressionBar;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProgressBackground;                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ProgressContainer;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressionBar;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         PlayerLevel;                                       // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartXp;                                           // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentXp;                                         // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_XPProgressBar(int32 EntryPoint);
	void RefreshWithAnimation();
	void Finished_9C6F7CD84E0F470B1412B4BAA721AA7E();
	void Init(int32 PlayerLevel_0, int32 StartXp_0, int32 CurrentXp_0);
	void Refresh();
	void InitProgressBar(class UProgressBar* ProgressBar, int32 Xp);
	void Update(int32 PlayerLevel_0, int32 StartXp_0, int32 CurrentXp_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"XPProgressBar_C">();
	}
	static class UXPProgressBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UXPProgressBar_C>();
	}
};
static_assert(alignof(UXPProgressBar_C) == 0x000008, "Wrong alignment on UXPProgressBar_C");
static_assert(sizeof(UXPProgressBar_C) == 0x0002B8, "Wrong size on UXPProgressBar_C");
static_assert(offsetof(UXPProgressBar_C, UberGraphFrame) == 0x000260, "Member 'UXPProgressBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, BarFadeOut) == 0x000268, "Member 'UXPProgressBar_C::BarFadeOut' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, Image_131) == 0x000270, "Member 'UXPProgressBar_C::Image_131' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, LineIndicatorContainer) == 0x000278, "Member 'UXPProgressBar_C::LineIndicatorContainer' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, NewProgressContainer) == 0x000280, "Member 'UXPProgressBar_C::NewProgressContainer' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, NewProgressionBar) == 0x000288, "Member 'UXPProgressBar_C::NewProgressionBar' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, ProgressBackground) == 0x000290, "Member 'UXPProgressBar_C::ProgressBackground' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, ProgressContainer) == 0x000298, "Member 'UXPProgressBar_C::ProgressContainer' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, ProgressionBar) == 0x0002A0, "Member 'UXPProgressBar_C::ProgressionBar' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, PlayerLevel) == 0x0002A8, "Member 'UXPProgressBar_C::PlayerLevel' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, StartXp) == 0x0002AC, "Member 'UXPProgressBar_C::StartXp' has a wrong offset!");
static_assert(offsetof(UXPProgressBar_C, CurrentXp) == 0x0002B0, "Member 'UXPProgressBar_C::CurrentXp' has a wrong offset!");

}

