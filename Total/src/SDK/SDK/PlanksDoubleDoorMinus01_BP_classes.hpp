#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlanksDoubleDoorMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlanksDoubleDoor-01_BP.PlanksDoubleDoor-01_BP_C
// 0x00E0 (0x0710 - 0x0630)
class APlanksDoubleDoorMinus01_BP_C final : public ARBSlidingLock
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBActorPrevisComponent*                DestructibleActor;                                 // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CoopDecalBack;                                     // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CoopDecalFront;                                    // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBDamageableComponent*                 RBDamageable;                                      // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorToLock_0;                                     // 0x0658(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBContainer*                           ContainerToLock;                                   // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_668[0x8];                                      // 0x0668(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BaseTransform;                                     // 0x0670(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             FinalTransform;                                    // 0x06A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDoorDestroyed;                                    // 0x06D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D1[0xF];                                      // 0x06D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InitialTransform;                                  // 0x06E0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PlanksDoubleDoorMinus01_BP(int32 EntryPoint);
	void BP_OnUnlock();
	void ReceiveBeginPlay();
	void BndEvt__RBDamageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature(class URBDamageableComponent* DamageableComponent);
	void BP_PostDoorInitialization();
	void OnSetup();
	struct FTransform BP_OverrideEditorCompTranform(class FName CompName, bool bLocked, const struct FTransform& Transform);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlanksDoubleDoor-01_BP_C">();
	}
	static class APlanksDoubleDoorMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlanksDoubleDoorMinus01_BP_C>();
	}
};
static_assert(alignof(APlanksDoubleDoorMinus01_BP_C) == 0x000010, "Wrong alignment on APlanksDoubleDoorMinus01_BP_C");
static_assert(sizeof(APlanksDoubleDoorMinus01_BP_C) == 0x000710, "Wrong size on APlanksDoubleDoorMinus01_BP_C");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, UberGraphFrame) == 0x000630, "Member 'APlanksDoubleDoorMinus01_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, DestructibleActor) == 0x000638, "Member 'APlanksDoubleDoorMinus01_BP_C::DestructibleActor' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, CoopDecalBack) == 0x000640, "Member 'APlanksDoubleDoorMinus01_BP_C::CoopDecalBack' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, CoopDecalFront) == 0x000648, "Member 'APlanksDoubleDoorMinus01_BP_C::CoopDecalFront' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, RBDamageable) == 0x000650, "Member 'APlanksDoubleDoorMinus01_BP_C::RBDamageable' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, ActorToLock_0) == 0x000658, "Member 'APlanksDoubleDoorMinus01_BP_C::ActorToLock_0' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, ContainerToLock) == 0x000660, "Member 'APlanksDoubleDoorMinus01_BP_C::ContainerToLock' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, BaseTransform) == 0x000670, "Member 'APlanksDoubleDoorMinus01_BP_C::BaseTransform' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, FinalTransform) == 0x0006A0, "Member 'APlanksDoubleDoorMinus01_BP_C::FinalTransform' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, bDoorDestroyed) == 0x0006D0, "Member 'APlanksDoubleDoorMinus01_BP_C::bDoorDestroyed' has a wrong offset!");
static_assert(offsetof(APlanksDoubleDoorMinus01_BP_C, InitialTransform) == 0x0006E0, "Member 'APlanksDoubleDoorMinus01_BP_C::InitialTransform' has a wrong offset!");

}

