#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Window_Breakable_Base_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SimpleDestructiblePhysicalMesh_Stuc_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.ConstructClearanceBox
// 0x0290 (0x0290 - 0x0000)
struct Window_Breakable_Base_BP_C_ConstructClearanceBox final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0140(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1C8[0x8];                                      // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_SelectTransform_ReturnValue_1;            // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0200(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Window_Breakable_Base_BP_C_ConstructClearanceBox) == 0x000010, "Wrong alignment on Window_Breakable_Base_BP_C_ConstructClearanceBox");
static_assert(sizeof(Window_Breakable_Base_BP_C_ConstructClearanceBox) == 0x000290, "Wrong size on Window_Breakable_Base_BP_C_ConstructClearanceBox");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_BreakVector_X) == 0x000000, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_BreakVector_Y) == 0x000004, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_BreakVector_Z) == 0x000008, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_BreakVector_X_1) == 0x00000C, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_BreakVector_Y_1) == 0x000010, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_BreakVector_Z_1) == 0x000014, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_MakeVector_ReturnValue_1) == 0x000024, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_MakeTransform_ReturnValue_1) == 0x000060, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_MakeVector_ReturnValue_2) == 0x000090, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_MakeVector_ReturnValue_3) == 0x00009C, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_MakeTransform_ReturnValue_2) == 0x0000B0, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_MakeTransform_ReturnValue_3) == 0x0000E0, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_SelectTransform_ReturnValue) == 0x000110, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000140, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_SelectTransform_ReturnValue_1) == 0x0001D0, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_SelectTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ConstructClearanceBox, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000200, "Member 'Window_Breakable_Base_BP_C_ConstructClearanceBox::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.Update Window Shutters
// 0x0001 (0x0001 - 0x0000)
struct Window_Breakable_Base_BP_C_Update_Window_Shutters final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Window_Breakable_Base_BP_C_Update_Window_Shutters) == 0x000001, "Wrong alignment on Window_Breakable_Base_BP_C_Update_Window_Shutters");
static_assert(sizeof(Window_Breakable_Base_BP_C_Update_Window_Shutters) == 0x000001, "Wrong size on Window_Breakable_Base_BP_C_Update_Window_Shutters");
static_assert(offsetof(Window_Breakable_Base_BP_C_Update_Window_Shutters, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Window_Breakable_Base_BP_C_Update_Window_Shutters::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.UpdateLedgeMarkerIgnoreActors
// 0x0080 (0x0080 - 0x0000)
struct Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0030(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0048(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors) == 0x000008, "Wrong alignment on Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors");
static_assert(sizeof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors) == 0x000080, "Wrong size on Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, K2Node_DynamicCast_AsRB_Ledge_Marker) == 0x000010, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::K2Node_DynamicCast_AsRB_Ledge_Marker' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, K2Node_DynamicCast_AsRB_Ledge_Marker_1) == 0x000020, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::K2Node_DynamicCast_AsRB_Ledge_Marker_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000030, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, CallFunc_Array_Get_Item) == 0x000040, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000048, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors, CallFunc_Array_Add_ReturnValue_1) == 0x00007C, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkerIgnoreActors::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.UpdateLedgeMarkers
// 0x0040 (0x0040 - 0x0000)
struct Window_Breakable_Base_BP_C_UpdateLedgeMarkers final
{
public:
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBlocked_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsActive_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker_2;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker_3;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers) == 0x000008, "Wrong alignment on Window_Breakable_Base_BP_C_UpdateLedgeMarkers");
static_assert(sizeof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers) == 0x000040, "Wrong size on Window_Breakable_Base_BP_C_UpdateLedgeMarkers");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, K2Node_DynamicCast_AsRB_Ledge_Marker) == 0x000000, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::K2Node_DynamicCast_AsRB_Ledge_Marker' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, K2Node_DynamicCast_AsRB_Ledge_Marker_1) == 0x000010, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::K2Node_DynamicCast_AsRB_Ledge_Marker_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, CallFunc_IsBlocked_ReturnValue) == 0x000019, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::CallFunc_IsBlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, CallFunc_BP_IsActive_ReturnValue) == 0x00001B, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::CallFunc_BP_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001C, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, K2Node_DynamicCast_AsRB_Ledge_Marker_2) == 0x000020, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::K2Node_DynamicCast_AsRB_Ledge_Marker_2' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, K2Node_DynamicCast_bSuccess_2) == 0x000028, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, K2Node_DynamicCast_AsRB_Ledge_Marker_3) == 0x000030, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::K2Node_DynamicCast_AsRB_Ledge_Marker_3' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateLedgeMarkers, K2Node_DynamicCast_bSuccess_3) == 0x000038, "Member 'Window_Breakable_Base_BP_C_UpdateLedgeMarkers::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.ClearSpawnedPhysicalMeshes
// 0x0020 (0x0020 - 0x0000)
struct Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes) == 0x000008, "Wrong alignment on Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes");
static_assert(sizeof(Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes) == 0x000020, "Wrong size on Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes");
static_assert(offsetof(Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes, CallFunc_Array_Get_Item) == 0x000010, "Member 'Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'Window_Breakable_Base_BP_C_ClearSpawnedPhysicalMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.OnBreakWindow
// 0x0110 (0x0110 - 0x0000)
struct Window_Breakable_Base_BP_C_OnBreakWindow final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceAtFinalPosition;                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSimpleDestructiblePhysicalMesh_Stuc   CallFunc_Array_Get_Item;                           // 0x0040(0x0050)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0xF];                                       // 0x00A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Window_Breakable_Base_BP_C_OnBreakWindow) == 0x000010, "Wrong alignment on Window_Breakable_Base_BP_C_OnBreakWindow");
static_assert(sizeof(Window_Breakable_Base_BP_C_OnBreakWindow) == 0x000110, "Wrong size on Window_Breakable_Base_BP_C_OnBreakWindow");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, Direction) == 0x000000, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::Direction' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, ForceAtFinalPosition) == 0x00000C, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::ForceAtFinalPosition' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_BreakVector2D_X) == 0x000010, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_RandomFloatInRange_ReturnValue) == 0x000024, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, Temp_int_Variable) == 0x00002C, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_Percent_IntInt_ReturnValue) == 0x000030, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_BreakVector2D_X_1) == 0x000034, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_BreakVector2D_Y_1) == 0x000038, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_Array_Get_Item) == 0x000040, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000090, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_MakeVector_ReturnValue) == 0x000094, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_AddComponent_ReturnValue) == 0x0000E0, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_SetStaticMesh_ReturnValue) == 0x0000E8, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E9, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F4, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_Array_Add_ReturnValue) == 0x0000F8, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000FC, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_OnBreakWindow, CallFunc_BooleanAND_ReturnValue) == 0x000108, "Member 'Window_Breakable_Base_BP_C_OnBreakWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.UpdateWindowMeshes
// 0x0001 (0x0001 - 0x0000)
struct Window_Breakable_Base_BP_C_UpdateWindowMeshes final
{
public:
	bool                                          CallFunc_BP_IsActive_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Window_Breakable_Base_BP_C_UpdateWindowMeshes) == 0x000001, "Wrong alignment on Window_Breakable_Base_BP_C_UpdateWindowMeshes");
static_assert(sizeof(Window_Breakable_Base_BP_C_UpdateWindowMeshes) == 0x000001, "Wrong size on Window_Breakable_Base_BP_C_UpdateWindowMeshes");
static_assert(offsetof(Window_Breakable_Base_BP_C_UpdateWindowMeshes, CallFunc_BP_IsActive_ReturnValue) == 0x000000, "Member 'Window_Breakable_Base_BP_C_UpdateWindowMeshes::CallFunc_BP_IsActive_ReturnValue' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.SetupLedgeMarkers
// 0x0040 (0x0040 - 0x0000)
struct Window_Breakable_Base_BP_C_SetupLedgeMarkers final
{
public:
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker_2;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLedgeMarker*                         K2Node_DynamicCast_AsRB_Ledge_Marker_3;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Window_Breakable_Base_BP_C_SetupLedgeMarkers) == 0x000008, "Wrong alignment on Window_Breakable_Base_BP_C_SetupLedgeMarkers");
static_assert(sizeof(Window_Breakable_Base_BP_C_SetupLedgeMarkers) == 0x000040, "Wrong size on Window_Breakable_Base_BP_C_SetupLedgeMarkers");
static_assert(offsetof(Window_Breakable_Base_BP_C_SetupLedgeMarkers, K2Node_DynamicCast_AsRB_Ledge_Marker) == 0x000000, "Member 'Window_Breakable_Base_BP_C_SetupLedgeMarkers::K2Node_DynamicCast_AsRB_Ledge_Marker' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_SetupLedgeMarkers, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'Window_Breakable_Base_BP_C_SetupLedgeMarkers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_SetupLedgeMarkers, K2Node_DynamicCast_AsRB_Ledge_Marker_1) == 0x000010, "Member 'Window_Breakable_Base_BP_C_SetupLedgeMarkers::K2Node_DynamicCast_AsRB_Ledge_Marker_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_SetupLedgeMarkers, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'Window_Breakable_Base_BP_C_SetupLedgeMarkers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_SetupLedgeMarkers, K2Node_DynamicCast_AsRB_Ledge_Marker_2) == 0x000020, "Member 'Window_Breakable_Base_BP_C_SetupLedgeMarkers::K2Node_DynamicCast_AsRB_Ledge_Marker_2' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_SetupLedgeMarkers, K2Node_DynamicCast_bSuccess_2) == 0x000028, "Member 'Window_Breakable_Base_BP_C_SetupLedgeMarkers::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_SetupLedgeMarkers, K2Node_DynamicCast_AsRB_Ledge_Marker_3) == 0x000030, "Member 'Window_Breakable_Base_BP_C_SetupLedgeMarkers::K2Node_DynamicCast_AsRB_Ledge_Marker_3' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_SetupLedgeMarkers, K2Node_DynamicCast_bSuccess_3) == 0x000038, "Member 'Window_Breakable_Base_BP_C_SetupLedgeMarkers::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.PostToggled
// 0x0001 (0x0001 - 0x0000)
struct Window_Breakable_Base_BP_C_PostToggled final
{
public:
	bool                                          bToggleEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Window_Breakable_Base_BP_C_PostToggled) == 0x000001, "Wrong alignment on Window_Breakable_Base_BP_C_PostToggled");
static_assert(sizeof(Window_Breakable_Base_BP_C_PostToggled) == 0x000001, "Wrong size on Window_Breakable_Base_BP_C_PostToggled");
static_assert(offsetof(Window_Breakable_Base_BP_C_PostToggled, bToggleEnabled) == 0x000000, "Member 'Window_Breakable_Base_BP_C_PostToggled::bToggleEnabled' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.Event_OnBreakObject
// 0x0008 (0x0008 - 0x0000)
struct Window_Breakable_Base_BP_C_Event_OnBreakObject final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Window_Breakable_Base_BP_C_Event_OnBreakObject) == 0x000008, "Wrong alignment on Window_Breakable_Base_BP_C_Event_OnBreakObject");
static_assert(sizeof(Window_Breakable_Base_BP_C_Event_OnBreakObject) == 0x000008, "Wrong size on Window_Breakable_Base_BP_C_Event_OnBreakObject");
static_assert(offsetof(Window_Breakable_Base_BP_C_Event_OnBreakObject, SourceActor) == 0x000000, "Member 'Window_Breakable_Base_BP_C_Event_OnBreakObject::SourceActor' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.CloseShutters
// 0x0001 (0x0001 - 0x0000)
struct Window_Breakable_Base_BP_C_CloseShutters final
{
public:
	bool                                          bPlaySound;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Window_Breakable_Base_BP_C_CloseShutters) == 0x000001, "Wrong alignment on Window_Breakable_Base_BP_C_CloseShutters");
static_assert(sizeof(Window_Breakable_Base_BP_C_CloseShutters) == 0x000001, "Wrong size on Window_Breakable_Base_BP_C_CloseShutters");
static_assert(offsetof(Window_Breakable_Base_BP_C_CloseShutters, bPlaySound) == 0x000000, "Member 'Window_Breakable_Base_BP_C_CloseShutters::bPlaySound' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.OpenShutters
// 0x0001 (0x0001 - 0x0000)
struct Window_Breakable_Base_BP_C_OpenShutters final
{
public:
	bool                                          bPlaySound;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Window_Breakable_Base_BP_C_OpenShutters) == 0x000001, "Wrong alignment on Window_Breakable_Base_BP_C_OpenShutters");
static_assert(sizeof(Window_Breakable_Base_BP_C_OpenShutters) == 0x000001, "Wrong size on Window_Breakable_Base_BP_C_OpenShutters");
static_assert(offsetof(Window_Breakable_Base_BP_C_OpenShutters, bPlaySound) == 0x000000, "Member 'Window_Breakable_Base_BP_C_OpenShutters::bPlaySound' has a wrong offset!");

// Function Window_Breakable_Base_BP.Window_Breakable_Base_BP_C.ExecuteUbergraph_Window_Breakable_Base_BP
// 0x00E8 (0x00E8 - 0x0000)
struct Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bToggleEnabled;                       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_sourceActor;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                K2Node_DynamicCast_AsRB_Pawn;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0084(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPlaySound_1;                   // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bPlaySound;                     // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x00CC(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_1;           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default_1;                           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP) == 0x000008, "Wrong alignment on Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP");
static_assert(sizeof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP) == 0x0000E8, "Wrong size on Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, EntryPoint) == 0x000000, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_float_Variable) == 0x000004, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_float_Variable_1) == 0x000008, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_bool_Variable) == 0x00000C, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_byte_Variable) == 0x00000D, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_byte_Variable_1) == 0x00000E, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_bool_Variable_1) == 0x00000F, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_HasAuthority_ReturnValue) == 0x000024, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_Event_bToggleEnabled) == 0x00002C, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_Event_bToggleEnabled' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_Event_sourceActor) == 0x000030, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_Event_sourceActor' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_DynamicCast_AsRB_Pawn) == 0x000040, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_DynamicCast_AsRB_Pawn' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_DynamicCast_AsRB_Player) == 0x000050, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Array_Get_Item) == 0x000060, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_HasAuthority_ReturnValue_1) == 0x00007D, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x00007E, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Not_PreBool_ReturnValue) == 0x00007F, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000080, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_delegate_Variable) == 0x000084, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000094, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x000098, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00009C, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000A8, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B4, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_IsValid_ReturnValue_2) == 0x0000C1, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_CustomEvent_bPlaySound_1) == 0x0000C2, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_CustomEvent_bPlaySound_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_CustomEvent_bPlaySound) == 0x0000C3, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_CustomEvent_bPlaySound' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_IsValid_ReturnValue_3) == 0x0000C4, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_Select_Default) == 0x0000C8, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, Temp_delegate_Variable_1) == 0x0000CC, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_PostEventOnActor_ReturnValue_1) == 0x0000DC, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_PostEventOnActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E0, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP, K2Node_Select_Default_1) == 0x0000E1, "Member 'Window_Breakable_Base_BP_C_ExecuteUbergraph_Window_Breakable_Base_BP::K2Node_Select_Default_1' has a wrong offset!");

}

