#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TableLampShadeBaseMinus02

#include "Basic.hpp"

#include "RBLight_BP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TableLampShadeBase-02.TableLampShadeBase-02_C
// 0x0030 (0x07A0 - 0x0770)
class ATableLampShadeBaseMinus02_C : public ARBLight_BP_C
{
public:
	class URBVolumetricFogLightComponent*         RBVolumetricFogLight;                              // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight_Dual;                                   // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight_Static;                                // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight2_Static;                               // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight2_Movable;                              // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight_Movable;                               // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TableLampShadeBase-02_C">();
	}
	static class ATableLampShadeBaseMinus02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATableLampShadeBaseMinus02_C>();
	}
};
static_assert(alignof(ATableLampShadeBaseMinus02_C) == 0x000010, "Wrong alignment on ATableLampShadeBaseMinus02_C");
static_assert(sizeof(ATableLampShadeBaseMinus02_C) == 0x0007A0, "Wrong size on ATableLampShadeBaseMinus02_C");
static_assert(offsetof(ATableLampShadeBaseMinus02_C, RBVolumetricFogLight) == 0x000770, "Member 'ATableLampShadeBaseMinus02_C::RBVolumetricFogLight' has a wrong offset!");
static_assert(offsetof(ATableLampShadeBaseMinus02_C, PointLight_Dual) == 0x000778, "Member 'ATableLampShadeBaseMinus02_C::PointLight_Dual' has a wrong offset!");
static_assert(offsetof(ATableLampShadeBaseMinus02_C, RBSpotLight_Static) == 0x000780, "Member 'ATableLampShadeBaseMinus02_C::RBSpotLight_Static' has a wrong offset!");
static_assert(offsetof(ATableLampShadeBaseMinus02_C, RBSpotLight2_Static) == 0x000788, "Member 'ATableLampShadeBaseMinus02_C::RBSpotLight2_Static' has a wrong offset!");
static_assert(offsetof(ATableLampShadeBaseMinus02_C, RBSpotLight2_Movable) == 0x000790, "Member 'ATableLampShadeBaseMinus02_C::RBSpotLight2_Movable' has a wrong offset!");
static_assert(offsetof(ATableLampShadeBaseMinus02_C, RBSpotLight_Movable) == 0x000798, "Member 'ATableLampShadeBaseMinus02_C::RBSpotLight_Movable' has a wrong offset!");

}

