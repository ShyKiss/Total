#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBNPC_Spectre_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "RBNPC_BP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass RBNPC_Spectre_BP.RBNPC_Spectre_BP_C
// 0x0130 (0x5BA0 - 0x5A70)
class ARBNPC_Spectre_BP_C final : public ARBNPC_BP_C
{
public:
	uint8                                         Pad_5A61[0x7];                                     // 0x5A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_RBNPC_Spectre_BP_C;                 // 0x5A68(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Easterman_03;                                      // 0x5A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Easterman_02;                                      // 0x5A78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Easterman_01;                                      // 0x5A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Ngr_Spectre_HeadSmoke;                             // 0x5A88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Timeline_3_NewTrack_0_280A6EF64938922A23B79C96257205CB; // 0x5A90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_3__Direction_280A6EF64938922A23B79C96257205CB; // 0x5A9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9D[0x3];                                     // 0x5A9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_3;                                        // 0x5AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_2_Entity1_DB68589D40DA9C275A41348A8D1C5232; // 0x5AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_2__Direction_DB68589D40DA9C275A41348A8D1C5232; // 0x5AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AAD[0x3];                                     // 0x5AAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x5AB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Timeline_0_NewTrack_0_F06F1A2A46B57364E4826BAC496DF290; // 0x5AB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_F06F1A2A46B57364E4826BAC496DF290; // 0x5AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC5[0x3];                                     // 0x5AC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x5AC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowMeshScale;                                      // 0x5AD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AD4[0x4];                                     // 0x5AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CurrentMesh;                                       // 0x5AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighMeshScale;                                     // 0x5AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextScaleChangeTime;                               // 0x5AE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMeshScale;                                  // 0x5AE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighScaleOdds;                                     // 0x5AEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleChangeInterval;                               // 0x5AF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AF4[0x4];                                     // 0x5AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      Mat;                                               // 0x5AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimerVision;                                       // 0x5B00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpectreDistance;                                   // 0x5B04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RandomOffset;                                      // 0x5B08(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BodyGroundLiftOffset;                              // 0x5B14(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x5B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B24[0x4];                                     // 0x5B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 PastMesh;                                          // 0x5B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAISpectreVisualType                          Old_Type;                                          // 0x5B30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAISpectreVisualType                          New_Type;                                          // 0x5B31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B32[0x6];                                     // 0x5B32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         AllEastermanMeshes;                                // 0x5B38(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsPlayingTransform;                                // 0x5B48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPlayingGlitch;                                   // 0x5B49(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B4A[0x2];                                     // 0x5B4A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Veins1Location;                                    // 0x5B4C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Veins2Location;                                    // 0x5B58(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Veins3Location;                                    // 0x5B64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewScale;                                          // 0x5B70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exiting;                                           // 0x5B7C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B7D[0x3];                                     // 0x5B7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentScale;                                      // 0x5B80(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullBodyMB;                                      // 0x5B8C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B8D[0x3];                                     // 0x5B8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         VFXBlackHoleMinus01;                               // 0x5B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateSpectreMeshes();
	void Update_Spectre_Meshes_Visibiliy(bool OldMeshVisible, bool AllMeshesVisible);
	void UpdateSpectreVisibility(class USkeletalMeshComponent* SpectreMesh, bool bNewVisibility);
	void UpdateRandomOffset();
	void UpdateSpectre();
	void UserConstructionScript();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_2__FinishedFunc();
	void Timeline_2__UpdateFunc();
	void Timeline_3__FinishedFunc();
	void Timeline_3__UpdateFunc();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetNormalMeshVisibility(bool bVisible);
	void ReceiveDestroyed();
	void MotionBlurByBones(const TArray<class FName>& ListOfBones, const TArray<class USkeletalMeshComponent*>& Target, const struct FVector& Rotation);
	void MotionBlurSwap(float blurIntensity);
	void Event_OnSpectreVisibilityChanged(bool bShouldBeVisible);
	void StartGlitch(bool Reset);
	void Event_OnSpectreVisualTypeChanged(EAISpectreVisualType OldType, EAISpectreVisualType NewType);
	void StartBlackHole();
	void SetScaleMesh();
	void Event_OnSpectreIntroSpecialMoveStarted();
	void Event_OnSpectreOutroSpecialMoveStarted();
	void Event_OnFootstep(const struct FFootstepData& FootstepData);
	void BlurHead(float blurIntensity);
	void EntityAnimControl();
	void StopBlurHead();
	void ExecuteUbergraph_RBNPC_Spectre_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RBNPC_Spectre_BP_C">();
	}
	static class ARBNPC_Spectre_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARBNPC_Spectre_BP_C>();
	}
};
static_assert(alignof(ARBNPC_Spectre_BP_C) == 0x000010, "Wrong alignment on ARBNPC_Spectre_BP_C");
static_assert(sizeof(ARBNPC_Spectre_BP_C) == 0x005BA0, "Wrong size on ARBNPC_Spectre_BP_C");
static_assert(offsetof(ARBNPC_Spectre_BP_C, UberGraphFrame_RBNPC_Spectre_BP_C) == 0x005A68, "Member 'ARBNPC_Spectre_BP_C::UberGraphFrame_RBNPC_Spectre_BP_C' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Easterman_03) == 0x005A70, "Member 'ARBNPC_Spectre_BP_C::Easterman_03' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Easterman_02) == 0x005A78, "Member 'ARBNPC_Spectre_BP_C::Easterman_02' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Easterman_01) == 0x005A80, "Member 'ARBNPC_Spectre_BP_C::Easterman_01' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Ngr_Spectre_HeadSmoke) == 0x005A88, "Member 'ARBNPC_Spectre_BP_C::Ngr_Spectre_HeadSmoke' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Timeline_3_NewTrack_0_280A6EF64938922A23B79C96257205CB) == 0x005A90, "Member 'ARBNPC_Spectre_BP_C::Timeline_3_NewTrack_0_280A6EF64938922A23B79C96257205CB' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Timeline_3__Direction_280A6EF64938922A23B79C96257205CB) == 0x005A9C, "Member 'ARBNPC_Spectre_BP_C::Timeline_3__Direction_280A6EF64938922A23B79C96257205CB' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Timeline_3) == 0x005AA0, "Member 'ARBNPC_Spectre_BP_C::Timeline_3' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Timeline_2_Entity1_DB68589D40DA9C275A41348A8D1C5232) == 0x005AA8, "Member 'ARBNPC_Spectre_BP_C::Timeline_2_Entity1_DB68589D40DA9C275A41348A8D1C5232' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Timeline_2__Direction_DB68589D40DA9C275A41348A8D1C5232) == 0x005AAC, "Member 'ARBNPC_Spectre_BP_C::Timeline_2__Direction_DB68589D40DA9C275A41348A8D1C5232' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Timeline_2) == 0x005AB0, "Member 'ARBNPC_Spectre_BP_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Timeline_0_NewTrack_0_F06F1A2A46B57364E4826BAC496DF290) == 0x005AB8, "Member 'ARBNPC_Spectre_BP_C::Timeline_0_NewTrack_0_F06F1A2A46B57364E4826BAC496DF290' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Timeline_0__Direction_F06F1A2A46B57364E4826BAC496DF290) == 0x005AC4, "Member 'ARBNPC_Spectre_BP_C::Timeline_0__Direction_F06F1A2A46B57364E4826BAC496DF290' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Timeline_0) == 0x005AC8, "Member 'ARBNPC_Spectre_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, LowMeshScale) == 0x005AD0, "Member 'ARBNPC_Spectre_BP_C::LowMeshScale' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, CurrentMesh) == 0x005AD8, "Member 'ARBNPC_Spectre_BP_C::CurrentMesh' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, HighMeshScale) == 0x005AE0, "Member 'ARBNPC_Spectre_BP_C::HighMeshScale' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, NextScaleChangeTime) == 0x005AE4, "Member 'ARBNPC_Spectre_BP_C::NextScaleChangeTime' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, CurrentMeshScale) == 0x005AE8, "Member 'ARBNPC_Spectre_BP_C::CurrentMeshScale' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, HighScaleOdds) == 0x005AEC, "Member 'ARBNPC_Spectre_BP_C::HighScaleOdds' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, ScaleChangeInterval) == 0x005AF0, "Member 'ARBNPC_Spectre_BP_C::ScaleChangeInterval' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Mat) == 0x005AF8, "Member 'ARBNPC_Spectre_BP_C::Mat' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, TimerVision) == 0x005B00, "Member 'ARBNPC_Spectre_BP_C::TimerVision' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, SpectreDistance) == 0x005B04, "Member 'ARBNPC_Spectre_BP_C::SpectreDistance' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, RandomOffset) == 0x005B08, "Member 'ARBNPC_Spectre_BP_C::RandomOffset' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, BodyGroundLiftOffset) == 0x005B14, "Member 'ARBNPC_Spectre_BP_C::BodyGroundLiftOffset' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Time) == 0x005B20, "Member 'ARBNPC_Spectre_BP_C::Time' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, PastMesh) == 0x005B28, "Member 'ARBNPC_Spectre_BP_C::PastMesh' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Old_Type) == 0x005B30, "Member 'ARBNPC_Spectre_BP_C::Old_Type' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, New_Type) == 0x005B31, "Member 'ARBNPC_Spectre_BP_C::New_Type' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, AllEastermanMeshes) == 0x005B38, "Member 'ARBNPC_Spectre_BP_C::AllEastermanMeshes' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, IsPlayingTransform) == 0x005B48, "Member 'ARBNPC_Spectre_BP_C::IsPlayingTransform' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, IsPlayingGlitch) == 0x005B49, "Member 'ARBNPC_Spectre_BP_C::IsPlayingGlitch' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Veins1Location) == 0x005B4C, "Member 'ARBNPC_Spectre_BP_C::Veins1Location' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Veins2Location) == 0x005B58, "Member 'ARBNPC_Spectre_BP_C::Veins2Location' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Veins3Location) == 0x005B64, "Member 'ARBNPC_Spectre_BP_C::Veins3Location' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, NewScale) == 0x005B70, "Member 'ARBNPC_Spectre_BP_C::NewScale' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, Exiting) == 0x005B7C, "Member 'ARBNPC_Spectre_BP_C::Exiting' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, CurrentScale) == 0x005B80, "Member 'ARBNPC_Spectre_BP_C::CurrentScale' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, IsFullBodyMB) == 0x005B8C, "Member 'ARBNPC_Spectre_BP_C::IsFullBodyMB' has a wrong offset!");
static_assert(offsetof(ARBNPC_Spectre_BP_C, VFXBlackHoleMinus01) == 0x005B90, "Member 'ARBNPC_Spectre_BP_C::VFXBlackHoleMinus01' has a wrong offset!");

}

