#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_ENV_DryIceSpray

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FX_ENV_DryIceSpray.BP_FX_ENV_DryIceSpray_C
// 0x0050 (0x0280 - 0x0230)
class ABP_FX_ENV_DryIceSpray_C final : public ARBClientOnlyActor
{
public:
	class UArrowComponent*                        Arrow;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Dry;                                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GasColor;                                          // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShapeRadius;                                       // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShapeScale;                                        // 0x025C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VelocityDirection;                                 // 0x0268(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedSpherical;                                    // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpriteSize;                                        // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FX_ENV_DryIceSpray_C">();
	}
	static class ABP_FX_ENV_DryIceSpray_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FX_ENV_DryIceSpray_C>();
	}
};
static_assert(alignof(ABP_FX_ENV_DryIceSpray_C) == 0x000008, "Wrong alignment on ABP_FX_ENV_DryIceSpray_C");
static_assert(sizeof(ABP_FX_ENV_DryIceSpray_C) == 0x000280, "Wrong size on ABP_FX_ENV_DryIceSpray_C");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, Arrow) == 0x000230, "Member 'ABP_FX_ENV_DryIceSpray_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, Dry) == 0x000238, "Member 'ABP_FX_ENV_DryIceSpray_C::Dry' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_FX_ENV_DryIceSpray_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, GasColor) == 0x000248, "Member 'ABP_FX_ENV_DryIceSpray_C::GasColor' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, ShapeRadius) == 0x000258, "Member 'ABP_FX_ENV_DryIceSpray_C::ShapeRadius' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, ShapeScale) == 0x00025C, "Member 'ABP_FX_ENV_DryIceSpray_C::ShapeScale' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, VelocityDirection) == 0x000268, "Member 'ABP_FX_ENV_DryIceSpray_C::VelocityDirection' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, SpeedSpherical) == 0x000274, "Member 'ABP_FX_ENV_DryIceSpray_C::SpeedSpherical' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, SpriteSize) == 0x000278, "Member 'ABP_FX_ENV_DryIceSpray_C::SpriteSize' has a wrong offset!");
static_assert(offsetof(ABP_FX_ENV_DryIceSpray_C, Rate) == 0x00027C, "Member 'ABP_FX_ENV_DryIceSpray_C::Rate' has a wrong offset!");

}

