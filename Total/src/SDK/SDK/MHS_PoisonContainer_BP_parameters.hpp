#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MHS_PoisonContainer_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MHS_PoisonContainer_BP.MHS_PoisonContainer_BP_C.ExecuteUbergraph_MHS_PoisonContainer_BP
// 0x0160 (0x0160 - 0x0000)
struct MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x00D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP) == 0x000004, "Wrong alignment on MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP");
static_assert(sizeof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP) == 0x000160, "Wrong size on MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, EntryPoint) == 0x000000, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_MakeRotator_ReturnValue) == 0x00000C, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_MakeRotator_ReturnValue_1) == 0x00001C, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x00002C, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_LinearColorLerp_ReturnValue) == 0x000030, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000040, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000050, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x0000D8, "Member 'MHS_PoisonContainer_BP_C_ExecuteUbergraph_MHS_PoisonContainer_BP::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");

// Function MHS_PoisonContainer_BP.MHS_PoisonContainer_BP_C.SnapLiquidToState
// 0x0020 (0x0020 - 0x0000)
struct MHS_PoisonContainer_BP_C_SnapLiquidToState final
{
public:
	bool                                          bTriggered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_PoisonContainer_BP_C_SnapLiquidToState) == 0x000004, "Wrong alignment on MHS_PoisonContainer_BP_C_SnapLiquidToState");
static_assert(sizeof(MHS_PoisonContainer_BP_C_SnapLiquidToState) == 0x000020, "Wrong size on MHS_PoisonContainer_BP_C_SnapLiquidToState");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SnapLiquidToState, bTriggered) == 0x000000, "Member 'MHS_PoisonContainer_BP_C_SnapLiquidToState::bTriggered' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SnapLiquidToState, Temp_bool_Variable) == 0x000001, "Member 'MHS_PoisonContainer_BP_C_SnapLiquidToState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SnapLiquidToState, Temp_bool_Variable_1) == 0x000002, "Member 'MHS_PoisonContainer_BP_C_SnapLiquidToState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SnapLiquidToState, Temp_float_Variable) == 0x000004, "Member 'MHS_PoisonContainer_BP_C_SnapLiquidToState::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SnapLiquidToState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'MHS_PoisonContainer_BP_C_SnapLiquidToState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SnapLiquidToState, K2Node_Select_Default) == 0x00000C, "Member 'MHS_PoisonContainer_BP_C_SnapLiquidToState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SnapLiquidToState, K2Node_Select_Default_1) == 0x00001C, "Member 'MHS_PoisonContainer_BP_C_SnapLiquidToState::K2Node_Select_Default_1' has a wrong offset!");

// Function MHS_PoisonContainer_BP.MHS_PoisonContainer_BP_C.SetTankLiquidLevel
// 0x0014 (0x0014 - 0x0000)
struct MHS_PoisonContainer_BP_C_SetTankLiquidLevel final
{
public:
	float                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_PoisonContainer_BP_C_SetTankLiquidLevel) == 0x000004, "Wrong alignment on MHS_PoisonContainer_BP_C_SetTankLiquidLevel");
static_assert(sizeof(MHS_PoisonContainer_BP_C_SetTankLiquidLevel) == 0x000014, "Wrong size on MHS_PoisonContainer_BP_C_SetTankLiquidLevel");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidLevel, Level) == 0x000000, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidLevel::Level' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidLevel, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidLevel::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidLevel, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000008, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidLevel::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidLevel, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00000C, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidLevel::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidLevel, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000010, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidLevel::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function MHS_PoisonContainer_BP.MHS_PoisonContainer_BP_C.SetTankLiquidTime
// 0x0004 (0x0004 - 0x0000)
struct MHS_PoisonContainer_BP_C_SetTankLiquidTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_PoisonContainer_BP_C_SetTankLiquidTime) == 0x000004, "Wrong alignment on MHS_PoisonContainer_BP_C_SetTankLiquidTime");
static_assert(sizeof(MHS_PoisonContainer_BP_C_SetTankLiquidTime) == 0x000004, "Wrong size on MHS_PoisonContainer_BP_C_SetTankLiquidTime");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidTime, Time) == 0x000000, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidTime::Time' has a wrong offset!");

// Function MHS_PoisonContainer_BP.MHS_PoisonContainer_BP_C.SetTankLiquidStartFade
// 0x0004 (0x0004 - 0x0000)
struct MHS_PoisonContainer_BP_C_SetTankLiquidStartFade final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_PoisonContainer_BP_C_SetTankLiquidStartFade) == 0x000004, "Wrong alignment on MHS_PoisonContainer_BP_C_SetTankLiquidStartFade");
static_assert(sizeof(MHS_PoisonContainer_BP_C_SetTankLiquidStartFade) == 0x000004, "Wrong size on MHS_PoisonContainer_BP_C_SetTankLiquidStartFade");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidStartFade, Alpha) == 0x000000, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidStartFade::Alpha' has a wrong offset!");

// Function MHS_PoisonContainer_BP.MHS_PoisonContainer_BP_C.SetTankLiquidEndFade
// 0x0004 (0x0004 - 0x0000)
struct MHS_PoisonContainer_BP_C_SetTankLiquidEndFade final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_PoisonContainer_BP_C_SetTankLiquidEndFade) == 0x000004, "Wrong alignment on MHS_PoisonContainer_BP_C_SetTankLiquidEndFade");
static_assert(sizeof(MHS_PoisonContainer_BP_C_SetTankLiquidEndFade) == 0x000004, "Wrong size on MHS_PoisonContainer_BP_C_SetTankLiquidEndFade");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidEndFade, Alpha) == 0x000000, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidEndFade::Alpha' has a wrong offset!");

// Function MHS_PoisonContainer_BP.MHS_PoisonContainer_BP_C.SetTankLiquidColor
// 0x0020 (0x0020 - 0x0000)
struct MHS_PoisonContainer_BP_C_SetTankLiquidColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_PoisonContainer_BP_C_SetTankLiquidColor) == 0x000010, "Wrong alignment on MHS_PoisonContainer_BP_C_SetTankLiquidColor");
static_assert(sizeof(MHS_PoisonContainer_BP_C_SetTankLiquidColor) == 0x000020, "Wrong size on MHS_PoisonContainer_BP_C_SetTankLiquidColor");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidColor, Color) == 0x000000, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidColor::Color' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankLiquidColor, CallFunc_MakeVector4_ReturnValue) == 0x000010, "Member 'MHS_PoisonContainer_BP_C_SetTankLiquidColor::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

// Function MHS_PoisonContainer_BP.MHS_PoisonContainer_BP_C.SetTankDripColor
// 0x0020 (0x0020 - 0x0000)
struct MHS_PoisonContainer_BP_C_SetTankDripColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_PoisonContainer_BP_C_SetTankDripColor) == 0x000010, "Wrong alignment on MHS_PoisonContainer_BP_C_SetTankDripColor");
static_assert(sizeof(MHS_PoisonContainer_BP_C_SetTankDripColor) == 0x000020, "Wrong size on MHS_PoisonContainer_BP_C_SetTankDripColor");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankDripColor, Color) == 0x000000, "Member 'MHS_PoisonContainer_BP_C_SetTankDripColor::Color' has a wrong offset!");
static_assert(offsetof(MHS_PoisonContainer_BP_C_SetTankDripColor, CallFunc_MakeVector4_ReturnValue) == 0x000010, "Member 'MHS_PoisonContainer_BP_C_SetTankDripColor::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

}

