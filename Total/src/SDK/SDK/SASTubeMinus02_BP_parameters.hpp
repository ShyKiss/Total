#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SASTubeMinus02_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SASTube-02_BP.SASTube-02_BP_C.OnOpenedStageChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct SASTubeMinus02_BP_C_OnOpenedStageChanged__DelegateSignature final
{
public:
	class ASASTubeMinus02_BP_C*                   SASTube;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SASTubeMinus02_BP_C_OnOpenedStageChanged__DelegateSignature) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_OnOpenedStageChanged__DelegateSignature");
static_assert(sizeof(SASTubeMinus02_BP_C_OnOpenedStageChanged__DelegateSignature) == 0x000008, "Wrong size on SASTubeMinus02_BP_C_OnOpenedStageChanged__DelegateSignature");
static_assert(offsetof(SASTubeMinus02_BP_C_OnOpenedStageChanged__DelegateSignature, SASTube) == 0x000000, "Member 'SASTubeMinus02_BP_C_OnOpenedStageChanged__DelegateSignature::SASTube' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.ExecuteUbergraph_SASTube-02_BP
// 0x0280 (0x0280 - 0x0000)
struct SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0034(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0044(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x0178(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingDoorSequence_bValue;             // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_ComponentBoundEvent_player_1;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_ComponentBoundEvent_player;                 // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingDoorSequence_bValue_1;           // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingDoorSequence_bValue_2;           // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingDoorSequence_bValue_3;           // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingDoorSequence_bValue_4;           // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21E[0x2];                                      // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_SpotLightIntensity;             // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PointLightIntensity;            // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FogLight;                       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MeshLight;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASasDoor_SoloMinus01_BP_C*              K2Node_DynamicCast_AsSas_Door_Solo_01_BP;          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASasDoorMinus03_BP1_C*                  K2Node_DynamicCast_AsSas_Door_03_BP1;              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventOnActor_ReturnValue_1;           // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP");
static_assert(sizeof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP) == 0x000280, "Wrong size on SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, EntryPoint) == 0x000000, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue) == 0x000014, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue_1) == 0x000018, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_MakeRotator_ReturnValue_1) == 0x00001C, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_MakeRotator_ReturnValue_2) == 0x000028, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, Temp_delegate_Variable) == 0x000034, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, Temp_delegate_Variable_1) == 0x000044, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue_2) == 0x000054, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue_3) == 0x000058, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue_4) == 0x00005C, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue_5) == 0x000060, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_IsValid_ReturnValue_1) == 0x000065, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Not_PreBool_ReturnValue) == 0x000066, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_HasAuthority_ReturnValue) == 0x000067, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000068, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000F0, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x000178, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x000200, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_IsPlayingDoorSequence_bValue) == 0x000204, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_IsPlayingDoorSequence_bValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_ComponentBoundEvent_player_1) == 0x000208, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_ComponentBoundEvent_player_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_ComponentBoundEvent_player) == 0x000210, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_ComponentBoundEvent_player' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000218, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_BooleanOR_ReturnValue) == 0x000219, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_IsPlayingDoorSequence_bValue_1) == 0x00021A, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_IsPlayingDoorSequence_bValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_IsPlayingDoorSequence_bValue_2) == 0x00021B, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_IsPlayingDoorSequence_bValue_2' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_IsPlayingDoorSequence_bValue_3) == 0x00021C, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_IsPlayingDoorSequence_bValue_3' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_IsPlayingDoorSequence_bValue_4) == 0x00021D, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_IsPlayingDoorSequence_bValue_4' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Array_Length_ReturnValue) == 0x000220, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000224, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_CustomEvent_SpotLightIntensity) == 0x000228, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_CustomEvent_SpotLightIntensity' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_CustomEvent_PointLightIntensity) == 0x00022C, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_CustomEvent_PointLightIntensity' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_CustomEvent_FogLight) == 0x000230, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_CustomEvent_FogLight' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_CustomEvent_MeshLight) == 0x000234, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_CustomEvent_MeshLight' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_MakeStruct_LinearColor) == 0x000238, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue_6) == 0x000248, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue_7) == 0x00024C, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue_8) == 0x000250, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_Lerp_ReturnValue_9) == 0x000254, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_IsValid_ReturnValue_2) == 0x000258, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_DynamicCast_AsSas_Door_Solo_01_BP) == 0x000260, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_DynamicCast_AsSas_Door_Solo_01_BP' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_DynamicCast_bSuccess) == 0x000268, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_DynamicCast_AsSas_Door_03_BP1) == 0x000270, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_DynamicCast_AsSas_Door_03_BP1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, K2Node_DynamicCast_bSuccess_1) == 0x000278, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP, CallFunc_PostEventOnActor_ReturnValue_1) == 0x00027C, "Member 'SASTubeMinus02_BP_C_ExecuteUbergraph_SASTubeMinus02_BP::CallFunc_PostEventOnActor_ReturnValue_1' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.SetLight
// 0x0010 (0x0010 - 0x0000)
struct SASTubeMinus02_BP_C_SetLight final
{
public:
	float                                         SpotLightIntensity;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PointLightIntensity;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogLight;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MeshLight;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SASTubeMinus02_BP_C_SetLight) == 0x000004, "Wrong alignment on SASTubeMinus02_BP_C_SetLight");
static_assert(sizeof(SASTubeMinus02_BP_C_SetLight) == 0x000010, "Wrong size on SASTubeMinus02_BP_C_SetLight");
static_assert(offsetof(SASTubeMinus02_BP_C_SetLight, SpotLightIntensity) == 0x000000, "Member 'SASTubeMinus02_BP_C_SetLight::SpotLightIntensity' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_SetLight, PointLightIntensity) == 0x000004, "Member 'SASTubeMinus02_BP_C_SetLight::PointLightIntensity' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_SetLight, FogLight) == 0x000008, "Member 'SASTubeMinus02_BP_C_SetLight::FogLight' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_SetLight, MeshLight) == 0x00000C, "Member 'SASTubeMinus02_BP_C_SetLight::MeshLight' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_1_OnPlayerTriggerVolumeActorEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_1_OnPlayerTriggerVolumeActorEvent__DelegateSignature final
{
public:
	class ARBPlayer*                              Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_1_OnPlayerTriggerVolumeActorEvent__DelegateSignature) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_1_OnPlayerTriggerVolumeActorEvent__DelegateSignature");
static_assert(sizeof(SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_1_OnPlayerTriggerVolumeActorEvent__DelegateSignature) == 0x000008, "Wrong size on SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_1_OnPlayerTriggerVolumeActorEvent__DelegateSignature");
static_assert(offsetof(SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_1_OnPlayerTriggerVolumeActorEvent__DelegateSignature, Player) == 0x000000, "Member 'SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_1_OnPlayerTriggerVolumeActorEvent__DelegateSignature::Player' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature final
{
public:
	class ARBPlayer*                              Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature");
static_assert(sizeof(SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature) == 0x000008, "Wrong size on SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature");
static_assert(offsetof(SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature, Player) == 0x000000, "Member 'SASTubeMinus02_BP_C_BndEvt__PlayerInSASTrigger_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature::Player' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.Initialize
// 0x0020 (0x0020 - 0x0000)
struct SASTubeMinus02_BP_C_Initialize final
{
public:
	class AActor*                                 Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Red_Light;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Green_Light;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogIntensity;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SASTubeMinus02_BP_C_Initialize) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_Initialize");
static_assert(sizeof(SASTubeMinus02_BP_C_Initialize) == 0x000020, "Wrong size on SASTubeMinus02_BP_C_Initialize");
static_assert(offsetof(SASTubeMinus02_BP_C_Initialize, Owner_0) == 0x000000, "Member 'SASTubeMinus02_BP_C_Initialize::Owner_0' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_Initialize, Red_Light) == 0x000008, "Member 'SASTubeMinus02_BP_C_Initialize::Red_Light' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_Initialize, Green_Light) == 0x000010, "Member 'SASTubeMinus02_BP_C_Initialize::Green_Light' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_Initialize, FogIntensity) == 0x000018, "Member 'SASTubeMinus02_BP_C_Initialize::FogIntensity' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.UpdateColor
// 0x0050 (0x0050 - 0x0000)
struct SASTubeMinus02_BP_C_UpdateColor final
{
public:
	bool                                          IsSASDoor;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsActive;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsMainLobbySAS;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ASasDoor_SoloMinus01_BP_C*              K2Node_DynamicCast_AsSas_Door_Solo_01_BP;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASasDoorMinus03_BP1_C*                  K2Node_DynamicCast_AsSas_Door_03_BP1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoDoorState                                CallFunc_GetDoorState_ReturnValue;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_UpdateColor) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_UpdateColor");
static_assert(sizeof(SASTubeMinus02_BP_C_UpdateColor) == 0x000050, "Wrong size on SASTubeMinus02_BP_C_UpdateColor");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, IsSASDoor) == 0x000000, "Member 'SASTubeMinus02_BP_C_UpdateColor::IsSASDoor' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, IsActive) == 0x000001, "Member 'SASTubeMinus02_BP_C_UpdateColor::IsActive' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, IsMainLobbySAS) == 0x000002, "Member 'SASTubeMinus02_BP_C_UpdateColor::IsMainLobbySAS' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, K2Node_DynamicCast_AsSas_Door_Solo_01_BP) == 0x000008, "Member 'SASTubeMinus02_BP_C_UpdateColor::K2Node_DynamicCast_AsSas_Door_Solo_01_BP' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SASTubeMinus02_BP_C_UpdateColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, K2Node_DynamicCast_AsSas_Door_03_BP1) == 0x000018, "Member 'SASTubeMinus02_BP_C_UpdateColor::K2Node_DynamicCast_AsSas_Door_03_BP1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'SASTubeMinus02_BP_C_UpdateColor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_SelectColor_ReturnValue) == 0x000024, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_SelectColor_ReturnValue_1) == 0x000034, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_GetDoorState_ReturnValue) == 0x000044, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_GetDoorState_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000045, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_IsValid_ReturnValue_1) == 0x000046, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_BooleanAND_ReturnValue_1) == 0x000047, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateColor, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'SASTubeMinus02_BP_C_UpdateColor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.ValidateTubeActivation
// 0x0020 (0x0020 - 0x0000)
struct SASTubeMinus02_BP_C_ValidateTubeActivation final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_ValidateTubeActivation) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_ValidateTubeActivation");
static_assert(sizeof(SASTubeMinus02_BP_C_ValidateTubeActivation) == 0x000020, "Wrong size on SASTubeMinus02_BP_C_ValidateTubeActivation");
static_assert(offsetof(SASTubeMinus02_BP_C_ValidateTubeActivation, Valid) == 0x000000, "Member 'SASTubeMinus02_BP_C_ValidateTubeActivation::Valid' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ValidateTubeActivation, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000008, "Member 'SASTubeMinus02_BP_C_ValidateTubeActivation::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ValidateTubeActivation, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'SASTubeMinus02_BP_C_ValidateTubeActivation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_ValidateTubeActivation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'SASTubeMinus02_BP_C_ValidateTubeActivation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.GetStateName
// 0x0028 (0x0028 - 0x0000)
struct SASTubeMinus02_BP_C_GetStateName final
{
public:
	class FString                                 StateA;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StateB;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_GetStateName) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_GetStateName");
static_assert(sizeof(SASTubeMinus02_BP_C_GetStateName) == 0x000028, "Wrong size on SASTubeMinus02_BP_C_GetStateName");
static_assert(offsetof(SASTubeMinus02_BP_C_GetStateName, StateA) == 0x000000, "Member 'SASTubeMinus02_BP_C_GetStateName::StateA' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_GetStateName, StateB) == 0x000010, "Member 'SASTubeMinus02_BP_C_GetStateName::StateB' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_GetStateName, ReturnValue) == 0x000020, "Member 'SASTubeMinus02_BP_C_GetStateName::ReturnValue' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.SetPlayerInTubeZone
// 0x0010 (0x0010 - 0x0000)
struct SASTubeMinus02_BP_C_SetPlayerInTubeZone final
{
public:
	class ARBPlayer*                              Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_SetPlayerInTubeZone) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_SetPlayerInTubeZone");
static_assert(sizeof(SASTubeMinus02_BP_C_SetPlayerInTubeZone) == 0x000010, "Wrong size on SASTubeMinus02_BP_C_SetPlayerInTubeZone");
static_assert(offsetof(SASTubeMinus02_BP_C_SetPlayerInTubeZone, Player) == 0x000000, "Member 'SASTubeMinus02_BP_C_SetPlayerInTubeZone::Player' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_SetPlayerInTubeZone, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'SASTubeMinus02_BP_C_SetPlayerInTubeZone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_SetPlayerInTubeZone, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'SASTubeMinus02_BP_C_SetPlayerInTubeZone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.SetFrontLightsEnabled
// 0x0001 (0x0001 - 0x0000)
struct SASTubeMinus02_BP_C_SetFrontLightsEnabled final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_SetFrontLightsEnabled) == 0x000001, "Wrong alignment on SASTubeMinus02_BP_C_SetFrontLightsEnabled");
static_assert(sizeof(SASTubeMinus02_BP_C_SetFrontLightsEnabled) == 0x000001, "Wrong size on SASTubeMinus02_BP_C_SetFrontLightsEnabled");
static_assert(offsetof(SASTubeMinus02_BP_C_SetFrontLightsEnabled, Enable) == 0x000000, "Member 'SASTubeMinus02_BP_C_SetFrontLightsEnabled::Enable' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.OnActivationChanged
// 0x000C (0x000C - 0x0000)
struct SASTubeMinus02_BP_C_OnActivationChanged final
{
public:
	bool                                          LightsEnabled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingDoorSequence_bValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_OnActivationChanged) == 0x000004, "Wrong alignment on SASTubeMinus02_BP_C_OnActivationChanged");
static_assert(sizeof(SASTubeMinus02_BP_C_OnActivationChanged) == 0x00000C, "Wrong size on SASTubeMinus02_BP_C_OnActivationChanged");
static_assert(offsetof(SASTubeMinus02_BP_C_OnActivationChanged, LightsEnabled) == 0x000000, "Member 'SASTubeMinus02_BP_C_OnActivationChanged::LightsEnabled' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_OnActivationChanged, CallFunc_IsPlayingDoorSequence_bValue) == 0x000001, "Member 'SASTubeMinus02_BP_C_OnActivationChanged::CallFunc_IsPlayingDoorSequence_bValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_OnActivationChanged, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'SASTubeMinus02_BP_C_OnActivationChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_OnActivationChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'SASTubeMinus02_BP_C_OnActivationChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_OnActivationChanged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000009, "Member 'SASTubeMinus02_BP_C_OnActivationChanged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_OnActivationChanged, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'SASTubeMinus02_BP_C_OnActivationChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.UpdateTubeLighting
// 0x0028 (0x0028 - 0x0000)
struct SASTubeMinus02_BP_C_UpdateTubeLighting final
{
public:
	bool                                          bIsActiveSAS;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASasDoor_SoloMinus01_BP_C*              K2Node_DynamicCast_AsSas_Door_Solo_01_BP;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASasDoorMinus03_BP1_C*                  K2Node_DynamicCast_AsSas_Door_03_BP1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_UpdateTubeLighting) == 0x000008, "Wrong alignment on SASTubeMinus02_BP_C_UpdateTubeLighting");
static_assert(sizeof(SASTubeMinus02_BP_C_UpdateTubeLighting) == 0x000028, "Wrong size on SASTubeMinus02_BP_C_UpdateTubeLighting");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, bIsActiveSAS) == 0x000000, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::bIsActiveSAS' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, K2Node_DynamicCast_AsSas_Door_Solo_01_BP) == 0x000008, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::K2Node_DynamicCast_AsSas_Door_Solo_01_BP' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, K2Node_DynamicCast_AsSas_Door_03_BP1) == 0x000018, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::K2Node_DynamicCast_AsSas_Door_03_BP1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, CallFunc_BooleanAND_ReturnValue_1) == 0x000023, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateTubeLighting, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000024, "Member 'SASTubeMinus02_BP_C_UpdateTubeLighting::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.ForceLightDisabled
// 0x0001 (0x0001 - 0x0000)
struct SASTubeMinus02_BP_C_ForceLightDisabled final
{
public:
	bool                                          Disabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_ForceLightDisabled) == 0x000001, "Wrong alignment on SASTubeMinus02_BP_C_ForceLightDisabled");
static_assert(sizeof(SASTubeMinus02_BP_C_ForceLightDisabled) == 0x000001, "Wrong size on SASTubeMinus02_BP_C_ForceLightDisabled");
static_assert(offsetof(SASTubeMinus02_BP_C_ForceLightDisabled, Disabled) == 0x000000, "Member 'SASTubeMinus02_BP_C_ForceLightDisabled::Disabled' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.UpdateOpenedState
// 0x0001 (0x0001 - 0x0000)
struct SASTubeMinus02_BP_C_UpdateOpenedState final
{
public:
	bool                                          CallFunc_IsPlayingDoorSequence_bValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_UpdateOpenedState) == 0x000001, "Wrong alignment on SASTubeMinus02_BP_C_UpdateOpenedState");
static_assert(sizeof(SASTubeMinus02_BP_C_UpdateOpenedState) == 0x000001, "Wrong size on SASTubeMinus02_BP_C_UpdateOpenedState");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateOpenedState, CallFunc_IsPlayingDoorSequence_bValue) == 0x000000, "Member 'SASTubeMinus02_BP_C_UpdateOpenedState::CallFunc_IsPlayingDoorSequence_bValue' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.IsPlayingDoorSequence
// 0x0002 (0x0002 - 0x0000)
struct SASTubeMinus02_BP_C_IsPlayingDoorSequence final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_IsPlayingDoorSequence) == 0x000001, "Wrong alignment on SASTubeMinus02_BP_C_IsPlayingDoorSequence");
static_assert(sizeof(SASTubeMinus02_BP_C_IsPlayingDoorSequence) == 0x000002, "Wrong size on SASTubeMinus02_BP_C_IsPlayingDoorSequence");
static_assert(offsetof(SASTubeMinus02_BP_C_IsPlayingDoorSequence, bValue) == 0x000000, "Member 'SASTubeMinus02_BP_C_IsPlayingDoorSequence::bValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_IsPlayingDoorSequence, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'SASTubeMinus02_BP_C_IsPlayingDoorSequence::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.UpdateShadowVisual
// 0x0014 (0x0014 - 0x0000)
struct SASTubeMinus02_BP_C_UpdateShadowVisual final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SASTubeMinus02_BP_C_UpdateShadowVisual) == 0x000004, "Wrong alignment on SASTubeMinus02_BP_C_UpdateShadowVisual");
static_assert(sizeof(SASTubeMinus02_BP_C_UpdateShadowVisual) == 0x000014, "Wrong size on SASTubeMinus02_BP_C_UpdateShadowVisual");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateShadowVisual, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'SASTubeMinus02_BP_C_UpdateShadowVisual::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateShadowVisual, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'SASTubeMinus02_BP_C_UpdateShadowVisual::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateShadowVisual, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'SASTubeMinus02_BP_C_UpdateShadowVisual::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateShadowVisual, CallFunc_BooleanOR_ReturnValue_1) == 0x000003, "Member 'SASTubeMinus02_BP_C_UpdateShadowVisual::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateShadowVisual, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'SASTubeMinus02_BP_C_UpdateShadowVisual::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateShadowVisual, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'SASTubeMinus02_BP_C_UpdateShadowVisual::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateShadowVisual, CallFunc_SelectFloat_ReturnValue_1) == 0x00000C, "Member 'SASTubeMinus02_BP_C_UpdateShadowVisual::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SASTubeMinus02_BP_C_UpdateShadowVisual, CallFunc_SelectFloat_ReturnValue_2) == 0x000010, "Member 'SASTubeMinus02_BP_C_UpdateShadowVisual::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.IsStateA
// 0x0001 (0x0001 - 0x0000)
struct SASTubeMinus02_BP_C_IsStateA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_IsStateA) == 0x000001, "Wrong alignment on SASTubeMinus02_BP_C_IsStateA");
static_assert(sizeof(SASTubeMinus02_BP_C_IsStateA) == 0x000001, "Wrong size on SASTubeMinus02_BP_C_IsStateA");
static_assert(offsetof(SASTubeMinus02_BP_C_IsStateA, ReturnValue) == 0x000000, "Member 'SASTubeMinus02_BP_C_IsStateA::ReturnValue' has a wrong offset!");

// Function SASTube-02_BP.SASTube-02_BP_C.ShouldBeIgnoredForLots
// 0x0001 (0x0001 - 0x0000)
struct SASTubeMinus02_BP_C_ShouldBeIgnoredForLots final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SASTubeMinus02_BP_C_ShouldBeIgnoredForLots) == 0x000001, "Wrong alignment on SASTubeMinus02_BP_C_ShouldBeIgnoredForLots");
static_assert(sizeof(SASTubeMinus02_BP_C_ShouldBeIgnoredForLots) == 0x000001, "Wrong size on SASTubeMinus02_BP_C_ShouldBeIgnoredForLots");
static_assert(offsetof(SASTubeMinus02_BP_C_ShouldBeIgnoredForLots, ReturnValue) == 0x000000, "Member 'SASTubeMinus02_BP_C_ShouldBeIgnoredForLots::ReturnValue' has a wrong offset!");

}

