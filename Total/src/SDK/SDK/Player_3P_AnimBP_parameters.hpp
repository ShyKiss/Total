#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_3P_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function player_3P_AnimBP.player_3P_AnimBP_C.ExecuteUbergraph_player_3P_AnimBP
// 0x01C8 (0x01C8 - 0x0000)
struct Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESpecialMove                                  CallFunc_BP_GetSpecialMove_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPickup*                              K2Node_DynamicCast_AsRB_Pickup;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer_BP_C*                         K2Node_DynamicCast_AsRB_Player_BP;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer_BP_C*                         K2Node_DynamicCast_AsRB_Player_BP_1;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerFace_AnimBlueprint_C*            K2Node_DynamicCast_AsPlayer_Face_Anim_Blueprint;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerFace_AnimBlueprint_C*            K2Node_DynamicCast_AsPlayer_Face_Anim_Blueprint_1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldIgnoreLookAround_ReturnValue;       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBPlayerCustomizationInfo             Temp_struct_Variable;                              // 0x00E0(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue_1;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_3;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player_1;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRBPlayerCustomizationOwner> K2Node_DynamicCast_AsRB_Player_Customization_Owner; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBPlayerCustomizationInfo             CallFunc_GetPlayerCustomizationInfo_ReturnValue;   // 0x0178(0x0050)()
};
static_assert(alignof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP) == 0x000008, "Wrong alignment on Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP");
static_assert(sizeof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP) == 0x0001C8, "Wrong size on Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, EntryPoint) == 0x000000, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_GetCurveValue_ReturnValue) == 0x00000C, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_AsRB_Player) == 0x000018, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_BP_GetSpecialMove_ReturnValue) == 0x000021, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_BP_GetSpecialMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue) == 0x000028, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000030, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_AsRB_Pickup) == 0x000038, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_AsRB_Pickup' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000043, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000048, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x000050, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_AsRB_Player_BP) == 0x000058, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_AsRB_Player_BP' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_AsRB_Player_BP_1) == 0x000068, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_AsRB_Player_BP_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_IsValid_ReturnValue_3) == 0x000072, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_GetAnimInstance_ReturnValue) == 0x000078, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000080, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_AsPlayer_Face_Anim_Blueprint) == 0x000088, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_AsPlayer_Face_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_bSuccess_4) == 0x000090, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_AsPlayer_Face_Anim_Blueprint_1) == 0x000098, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_AsPlayer_Face_Anim_Blueprint_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_bSuccess_5) == 0x0000A0, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_ShouldIgnoreLookAround_ReturnValue) == 0x0000A1, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_ShouldIgnoreLookAround_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_SelectFloat_ReturnValue) == 0x0000A4, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_FInterpTo_ReturnValue_1) == 0x0000A8, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000AC, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_CreateDelegate_OutputDelegate) == 0x0000B0, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C0, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x0000C8, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x0000D0, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_IsValid_ReturnValue_4) == 0x0000D8, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, Temp_struct_Variable) == 0x0000E0, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_IsValid_ReturnValue_5) == 0x000130, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_GetRBGameStateLobby_ReturnValue_1) == 0x000138, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_GetRBGameStateLobby_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_IsValid_ReturnValue_6) == 0x000140, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_IsValid_ReturnValue_7) == 0x000141, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue_3) == 0x000148, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_AsRB_Player_1) == 0x000150, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_AsRB_Player_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_bSuccess_6) == 0x000158, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_AsRB_Player_Customization_Owner) == 0x000160, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_AsRB_Player_Customization_Owner' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, K2Node_DynamicCast_bSuccess_7) == 0x000170, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP, CallFunc_GetPlayerCustomizationInfo_ReturnValue) == 0x000178, "Member 'Player_3P_AnimBP_C_ExecuteUbergraph_player_3P_AnimBP::CallFunc_GetPlayerCustomizationInfo_ReturnValue' has a wrong offset!");

// Function player_3P_AnimBP.player_3P_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Player_3P_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Player_3P_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Player_3P_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Player_3P_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Player_3P_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Player_3P_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Player_3P_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function player_3P_AnimBP.player_3P_AnimBP_C.ShouldIgnoreLookAround
// 0x000E (0x000E - 0x0000)
struct Player_3P_AnimBP_C_ShouldIgnoreLookAround final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidUpperBodyAnimationForLookAt_bValid; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESpecialMove                                  CallFunc_BP_GetSpecialMove_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Player_3P_AnimBP_C_ShouldIgnoreLookAround) == 0x000001, "Wrong alignment on Player_3P_AnimBP_C_ShouldIgnoreLookAround");
static_assert(sizeof(Player_3P_AnimBP_C_ShouldIgnoreLookAround) == 0x00000E, "Wrong size on Player_3P_AnimBP_C_ShouldIgnoreLookAround");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, ReturnValue) == 0x000000, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_IsValidUpperBodyAnimationForLookAt_bValid) == 0x000003, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_IsValidUpperBodyAnimationForLookAt_bValid' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_BP_GetSpecialMove_ReturnValue) == 0x000005, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_BP_GetSpecialMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000007, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_BooleanAND_ReturnValue_1) == 0x000009, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_BooleanOR_ReturnValue_1) == 0x00000B, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_BooleanOR_ReturnValue_2) == 0x00000C, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ShouldIgnoreLookAround, CallFunc_BooleanOR_ReturnValue_3) == 0x00000D, "Member 'Player_3P_AnimBP_C_ShouldIgnoreLookAround::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function player_3P_AnimBP.player_3P_AnimBP_C.ToggleAFK
// 0x0002 (0x0002 - 0x0000)
struct Player_3P_AnimBP_C_ToggleAFK final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Player_3P_AnimBP_C_ToggleAFK) == 0x000001, "Wrong alignment on Player_3P_AnimBP_C_ToggleAFK");
static_assert(sizeof(Player_3P_AnimBP_C_ToggleAFK) == 0x000002, "Wrong size on Player_3P_AnimBP_C_ToggleAFK");
static_assert(offsetof(Player_3P_AnimBP_C_ToggleAFK, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'Player_3P_AnimBP_C_ToggleAFK::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_ToggleAFK, CallFunc_BooleanOR_ReturnValue_1) == 0x000001, "Member 'Player_3P_AnimBP_C_ToggleAFK::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function player_3P_AnimBP.player_3P_AnimBP_C.IsValidUpperBodyAnimationForLookAt
// 0x0020 (0x0020 - 0x0000)
struct Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt final
{
public:
	class ARBPawn*                                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bValid;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESpecialMove                                  CallFunc_BP_GetSpecialMove_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_BP_GetSpecialMoveSubtype_ReturnValue;     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUpperBodyAnimationType                       Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt) == 0x000008, "Wrong alignment on Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt");
static_assert(sizeof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt) == 0x000020, "Wrong size on Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Player) == 0x000000, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Player' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, bValid) == 0x000008, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::bValid' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable) == 0x000009, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, CallFunc_BP_GetSpecialMove_ReturnValue) == 0x00000A, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::CallFunc_BP_GetSpecialMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, CallFunc_BP_GetSpecialMoveSubtype_ReturnValue) == 0x00000C, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::CallFunc_BP_GetSpecialMoveSubtype_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, CallFunc_GetValidValue_ReturnValue) == 0x00000D, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_1) == 0x00000E, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_2) == 0x00000F, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_3) == 0x000010, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_4) == 0x000011, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_5) == 0x000012, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_6) == 0x000013, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_7) == 0x000014, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_8) == 0x000015, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_9) == 0x000016, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_bool_Variable_10) == 0x000017, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, Temp_byte_Variable) == 0x000018, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt, K2Node_Select_Default) == 0x000019, "Member 'Player_3P_AnimBP_C_IsValidUpperBodyAnimationForLookAt::K2Node_Select_Default' has a wrong offset!");

// Function player_3P_AnimBP.player_3P_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Player_3P_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Player_3P_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Player_3P_AnimBP_C_AnimGraph");
static_assert(sizeof(Player_3P_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Player_3P_AnimBP_C_AnimGraph");
static_assert(offsetof(Player_3P_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Player_3P_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

