#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUDLibrary

#include "Basic.hpp"


namespace SDK::Params
{

// Function HUDLibrary.HUDLibrary_C.FadeIfNecessary
// 0x0050 (0x0050 - 0x0000)
struct HUDLibrary_C_FadeIfNecessary final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                AnimatedWidget;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FadeIn;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnim;                                          // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlayingForward_ReturnValue;    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDLibrary_C_FadeIfNecessary) == 0x000008, "Wrong alignment on HUDLibrary_C_FadeIfNecessary");
static_assert(sizeof(HUDLibrary_C_FadeIfNecessary) == 0x000050, "Wrong size on HUDLibrary_C_FadeIfNecessary");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, Widget) == 0x000000, "Member 'HUDLibrary_C_FadeIfNecessary::Widget' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, AnimatedWidget) == 0x000008, "Member 'HUDLibrary_C_FadeIfNecessary::AnimatedWidget' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, Anim) == 0x000010, "Member 'HUDLibrary_C_FadeIfNecessary::Anim' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, FadeIn) == 0x000018, "Member 'HUDLibrary_C_FadeIfNecessary::FadeIn' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, __WorldContext) == 0x000020, "Member 'HUDLibrary_C_FadeIfNecessary::__WorldContext' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, PlayAnim) == 0x000028, "Member 'HUDLibrary_C_FadeIfNecessary::PlayAnim' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000029, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002B, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_GetRenderOpacity_ReturnValue) == 0x00002C, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000031, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_BooleanAND_ReturnValue_1) == 0x000033, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_BooleanOR_ReturnValue) == 0x000034, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_IsAnimationPlayingForward_ReturnValue) == 0x000035, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_IsAnimationPlayingForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_Not_PreBool_ReturnValue_2) == 0x000036, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_BooleanAND_ReturnValue_2) == 0x000037, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_BooleanAND_ReturnValue_3) == 0x000038, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_BooleanOR_ReturnValue_1) == 0x000039, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000040, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDLibrary_C_FadeIfNecessary, CallFunc_PlayAnimationForward_ReturnValue) == 0x000048, "Member 'HUDLibrary_C_FadeIfNecessary::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

}

