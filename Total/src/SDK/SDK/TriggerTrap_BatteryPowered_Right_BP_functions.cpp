#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TriggerTrap_BatteryPowered_Right_BP

#include "Basic.hpp"

#include "TriggerTrap_BatteryPowered_Right_BP_classes.hpp"
#include "TriggerTrap_BatteryPowered_Right_BP_parameters.hpp"


namespace SDK
{

// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.RefreshConvertedVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::RefreshConvertedVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "RefreshConvertedVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.DestroyedSpawnedBattery
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::DestroyedSpawnedBattery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "DestroyedSpawnedBattery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.PlaySpecialMoveAnimation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBPawn*                          InteractorPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESpecialMove                            SpecialMove                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATriggerTrap_BatteryPowered_Right_BP_C::PlaySpecialMoveAnimation(class ARBPawn* InteractorPawn, ESpecialMove SpecialMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "PlaySpecialMoveAnimation");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_PlaySpecialMoveAnimation Parms{};

	Parms.InteractorPawn = InteractorPawn;
	Parms.SpecialMove = SpecialMove;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.OnRep_bOpen
// (BlueprintCallable, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::OnRep_bOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "OnRep_bOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.SetSpawnedItemsInteractible
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInteractibe                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATriggerTrap_BatteryPowered_Right_BP_C::SetSpawnedItemsInteractible(bool IsInteractibe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "SetSpawnedItemsInteractible");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_SetSpawnedItemsInteractible Parms{};

	Parms.IsInteractibe = IsInteractibe;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.BP_OnArmed
// (Event, Public, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::BP_OnArmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "BP_OnArmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.BP_OnDisarmed
// (Event, Public, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::BP_OnDisarmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "BP_OnDisarmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.Event_OnCompletedOperation
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class ARBPawn*>                  Pawns                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ATriggerTrap_BatteryPowered_Right_BP_C::Event_OnCompletedOperation(const TArray<class ARBPawn*>& Pawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "Event_OnCompletedOperation");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_Event_OnCompletedOperation Parms{};

	Parms.Pawns = std::move(Pawns);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.OpenTrap
// (BlueprintCallable, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::OpenTrap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "OpenTrap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.OnRep_Open
// (BlueprintCallable, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::OnRep_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "OnRep_Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.BndEvt__BatterySpawnerActor_K2Node_ComponentBoundEvent_0_OnActorPrevisRuntimeChildActorChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBActorPrevisComponent*          ActorPrevis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           RuntimeChildActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATriggerTrap_BatteryPowered_Right_BP_C::BndEvt__BatterySpawnerActor_K2Node_ComponentBoundEvent_0_OnActorPrevisRuntimeChildActorChanged__DelegateSignature(class URBActorPrevisComponent* ActorPrevis, class AActor* RuntimeChildActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "BndEvt__BatterySpawnerActor_K2Node_ComponentBoundEvent_0_OnActorPrevisRuntimeChildActorChanged__DelegateSignature");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_BndEvt__BatterySpawnerActor_K2Node_ComponentBoundEvent_0_OnActorPrevisRuntimeChildActorChanged__DelegateSignature Parms{};

	Parms.ActorPrevis = ActorPrevis;
	Parms.RuntimeChildActor = RuntimeChildActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.Event_SnapToState
// (Event, Public, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::Event_SnapToState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "Event_SnapToState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.OnDisarmed_Internal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSnapToState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATriggerTrap_BatteryPowered_Right_BP_C::OnDisarmed_Internal(bool bSnapToState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "OnDisarmed_Internal");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_OnDisarmed_Internal Parms{};

	Parms.bSnapToState = bSnapToState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.BP_OnTrapBatteryStateChanged
// (Event, Public, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::BP_OnTrapBatteryStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "BP_OnTrapBatteryStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.BndEvt__TriggerTrap_BatteryPowered_Right_BP_DeviceHackZone_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBHackableComponent*             HackableComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATriggerTrap_BatteryPowered_Right_BP_C::BndEvt__TriggerTrap_BatteryPowered_Right_BP_DeviceHackZone_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature(class URBHackableComponent* HackableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "BndEvt__TriggerTrap_BatteryPowered_Right_BP_DeviceHackZone_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_BndEvt__TriggerTrap_BatteryPowered_Right_BP_DeviceHackZone_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature Parms{};

	Parms.HackableComponent = HackableComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATriggerTrap_BatteryPowered_Right_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.ExecuteUbergraph_TriggerTrap_BatteryPowered_Right_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATriggerTrap_BatteryPowered_Right_BP_C::ExecuteUbergraph_TriggerTrap_BatteryPowered_Right_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "ExecuteUbergraph_TriggerTrap_BatteryPowered_Right_BP");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_ExecuteUbergraph_TriggerTrap_BatteryPowered_Right_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.GetFriendlyDeviceIconLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Out_location                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATriggerTrap_BatteryPowered_Right_BP_C::GetFriendlyDeviceIconLocation(struct FVector* Out_location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "GetFriendlyDeviceIconLocation");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_GetFriendlyDeviceIconLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_location != nullptr)
		*Out_location = std::move(Parms.Out_location);

	return Parms.ReturnValue;
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.GetLookAtLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutLookAtLocation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATriggerTrap_BatteryPowered_Right_BP_C::GetLookAtLocation(struct FVector* OutLookAtLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "GetLookAtLocation");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_GetLookAtLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLookAtLocation != nullptr)
		*OutLookAtLocation = std::move(Parms.OutLookAtLocation);
}


// Function TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C.GetInteractionPawnLocation
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPawn*                          Pawn                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESpecialMove                            SpecialMove                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutDirection                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATriggerTrap_BatteryPowered_Right_BP_C::GetInteractionPawnLocation(const class ARBPawn* Pawn, ESpecialMove SpecialMove, struct FVector* OutLocation, struct FVector* OutDirection) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TriggerTrap_BatteryPowered_Right_BP_C", "GetInteractionPawnLocation");

	Params::TriggerTrap_BatteryPowered_Right_BP_C_GetInteractionPawnLocation Parms{};

	Parms.Pawn = Pawn;
	Parms.SpecialMove = SpecialMove;

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutDirection != nullptr)
		*OutDirection = std::move(Parms.OutDirection);

	return Parms.ReturnValue;
}

}

