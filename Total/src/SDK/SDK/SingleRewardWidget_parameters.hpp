#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SingleRewardWidget

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SingleRewardWidget.SingleRewardWidget_C.ExecuteUbergraph_SingleRewardWidget
// 0x0060 (0x0060 - 0x0000)
struct SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_thumbnailSoftref;               // 0x0038(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget) == 0x000008, "Wrong alignment on SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget");
static_assert(sizeof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget) == 0x000060, "Wrong size on SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget");
static_assert(offsetof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget, EntryPoint) == 0x000000, "Member 'SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget, Temp_object_Variable) == 0x000020, "Member 'SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget, K2Node_DynamicCast_AsTexture_2D) == 0x000028, "Member 'SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget, K2Node_Event_IsDesignTime) == 0x000031, "Member 'SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget, K2Node_CustomEvent_thumbnailSoftref) == 0x000038, "Member 'SingleRewardWidget_C_ExecuteUbergraph_SingleRewardWidget::K2Node_CustomEvent_thumbnailSoftref' has a wrong offset!");

// Function SingleRewardWidget.SingleRewardWidget_C.LoadThumbnail
// 0x0028 (0x0028 - 0x0000)
struct SingleRewardWidget_C_LoadThumbnail final
{
public:
	TSoftObjectPtr<class UTexture2D>              ThumbnailSoftRef;                                  // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(SingleRewardWidget_C_LoadThumbnail) == 0x000008, "Wrong alignment on SingleRewardWidget_C_LoadThumbnail");
static_assert(sizeof(SingleRewardWidget_C_LoadThumbnail) == 0x000028, "Wrong size on SingleRewardWidget_C_LoadThumbnail");
static_assert(offsetof(SingleRewardWidget_C_LoadThumbnail, ThumbnailSoftRef) == 0x000000, "Member 'SingleRewardWidget_C_LoadThumbnail::ThumbnailSoftRef' has a wrong offset!");

// Function SingleRewardWidget.SingleRewardWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct SingleRewardWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleRewardWidget_C_PreConstruct) == 0x000001, "Wrong alignment on SingleRewardWidget_C_PreConstruct");
static_assert(sizeof(SingleRewardWidget_C_PreConstruct) == 0x000001, "Wrong size on SingleRewardWidget_C_PreConstruct");
static_assert(offsetof(SingleRewardWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'SingleRewardWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function SingleRewardWidget.SingleRewardWidget_C.OnLoaded_0010701F4B6D26334013828A2735795D
// 0x0008 (0x0008 - 0x0000)
struct SingleRewardWidget_C_OnLoaded_0010701F4B6D26334013828A2735795D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SingleRewardWidget_C_OnLoaded_0010701F4B6D26334013828A2735795D) == 0x000008, "Wrong alignment on SingleRewardWidget_C_OnLoaded_0010701F4B6D26334013828A2735795D");
static_assert(sizeof(SingleRewardWidget_C_OnLoaded_0010701F4B6D26334013828A2735795D) == 0x000008, "Wrong size on SingleRewardWidget_C_OnLoaded_0010701F4B6D26334013828A2735795D");
static_assert(offsetof(SingleRewardWidget_C_OnLoaded_0010701F4B6D26334013828A2735795D, Loaded) == 0x000000, "Member 'SingleRewardWidget_C_OnLoaded_0010701F4B6D26334013828A2735795D::Loaded' has a wrong offset!");

// Function SingleRewardWidget.SingleRewardWidget_C.Setup
// 0x0250 (0x0250 - 0x0000)
struct SingleRewardWidget_C_Setup final
{
public:
	class UObject*                                DummyMaterial;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0058(0x0028)()
	bool                                          Temp_bool_Variable_2;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0088(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x00B0(0x0028)()
	bool                                          Temp_bool_Variable_3;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x00F0(0x0028)()
	struct FSlateColor                            K2Node_Select_Default_2;                           // 0x0118(0x0028)()
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0148(0x0020)(NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0168(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01E0(0x0040)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0238(0x0018)()
};
static_assert(alignof(SingleRewardWidget_C_Setup) == 0x000008, "Wrong alignment on SingleRewardWidget_C_Setup");
static_assert(sizeof(SingleRewardWidget_C_Setup) == 0x000250, "Wrong size on SingleRewardWidget_C_Setup");
static_assert(offsetof(SingleRewardWidget_C_Setup, DummyMaterial) == 0x000000, "Member 'SingleRewardWidget_C_Setup::DummyMaterial' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, Temp_bool_Variable) == 0x000008, "Member 'SingleRewardWidget_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, Temp_struct_Variable) == 0x00000C, "Member 'SingleRewardWidget_C_Setup::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, Temp_struct_Variable_1) == 0x00001C, "Member 'SingleRewardWidget_C_Setup::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, Temp_bool_Variable_1) == 0x00002C, "Member 'SingleRewardWidget_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'SingleRewardWidget_C_Setup::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_MakeStruct_SlateColor_1) == 0x000058, "Member 'SingleRewardWidget_C_Setup::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, Temp_bool_Variable_2) == 0x000080, "Member 'SingleRewardWidget_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_MakeStruct_SlateColor_2) == 0x000088, "Member 'SingleRewardWidget_C_Setup::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_MakeStruct_SlateColor_3) == 0x0000B0, "Member 'SingleRewardWidget_C_Setup::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, Temp_bool_Variable_3) == 0x0000D8, "Member 'SingleRewardWidget_C_Setup::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, Temp_byte_Variable) == 0x0000D9, "Member 'SingleRewardWidget_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, Temp_byte_Variable_1) == 0x0000DA, "Member 'SingleRewardWidget_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_Select_Default) == 0x0000DC, "Member 'SingleRewardWidget_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_Select_Default_1) == 0x0000F0, "Member 'SingleRewardWidget_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_Select_Default_2) == 0x000118, "Member 'SingleRewardWidget_C_Setup::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, CallFunc_SelectInt_ReturnValue) == 0x000140, "Member 'SingleRewardWidget_C_Setup::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_MakeStruct_FontOutlineSettings) == 0x000148, "Member 'SingleRewardWidget_C_Setup::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_MakeStruct_SlateFontInfo) == 0x000168, "Member 'SingleRewardWidget_C_Setup::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, CallFunc_Greater_IntInt_ReturnValue) == 0x0001C0, "Member 'SingleRewardWidget_C_Setup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, CallFunc_Conv_IntToText_ReturnValue) == 0x0001C8, "Member 'SingleRewardWidget_C_Setup::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_MakeStruct_FormatArgumentData) == 0x0001E0, "Member 'SingleRewardWidget_C_Setup::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_Select_Default_3) == 0x000220, "Member 'SingleRewardWidget_C_Setup::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, K2Node_MakeArray_Array) == 0x000228, "Member 'SingleRewardWidget_C_Setup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Setup, CallFunc_Format_ReturnValue) == 0x000238, "Member 'SingleRewardWidget_C_Setup::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function SingleRewardWidget.SingleRewardWidget_C.PlayNewRewardAnimation
// 0x0008 (0x0008 - 0x0000)
struct SingleRewardWidget_C_PlayNewRewardAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SingleRewardWidget_C_PlayNewRewardAnimation) == 0x000008, "Wrong alignment on SingleRewardWidget_C_PlayNewRewardAnimation");
static_assert(sizeof(SingleRewardWidget_C_PlayNewRewardAnimation) == 0x000008, "Wrong size on SingleRewardWidget_C_PlayNewRewardAnimation");
static_assert(offsetof(SingleRewardWidget_C_PlayNewRewardAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'SingleRewardWidget_C_PlayNewRewardAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function SingleRewardWidget.SingleRewardWidget_C.Init
// 0x02D8 (0x02D8 - 0x0000)
struct SingleRewardWidget_C_Init final
{
public:
	struct FRewardUIData                          RewardUIData;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0058(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0080(0x0028)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerIconCustomizationOption*       K2Node_DynamicCast_AsRB_Player_Icon_Customization_Option; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBEmoteCustomizationOption*            K2Node_DynamicCast_AsRB_Emote_Customization_Option; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerCellItemDefinition*            K2Node_DynamicCast_AsRB_Player_Cell_Item_Definition; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBCustomizationOutfit*                 K2Node_DynamicCast_AsRB_Customization_Outfit;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerCustomizationOption*           K2Node_DynamicCast_AsRB_Player_Customization_Option; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayerState*                         CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayerState*                         CallFunc_GetLocalPlayerState_ReturnValue_1;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFemale_ReturnValue;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFemale_ReturnValue_1;                   // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayerState*                         CallFunc_GetLocalPlayerState_ReturnValue_2;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFemale_ReturnValue_2;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0138(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_1;                           // 0x0160(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x018C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_2;                           // 0x01A0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class URBSettings_Gameplay*                   CallFunc_GetRBSettings_Gameplay_ReturnValue;       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurencySettings                       CallFunc_Map_Find_Value;                           // 0x01E8(0x0060)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomRewardPoolDisplayDetails        CallFunc_GetRandomRewardPoolDisplayDetails_ReturnValue; // 0x0250(0x0030)(ConstParm, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0280(0x0028)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x02B0(0x0028)()
};
static_assert(alignof(SingleRewardWidget_C_Init) == 0x000008, "Wrong alignment on SingleRewardWidget_C_Init");
static_assert(sizeof(SingleRewardWidget_C_Init) == 0x0002D8, "Wrong size on SingleRewardWidget_C_Init");
static_assert(offsetof(SingleRewardWidget_C_Init, RewardUIData) == 0x000000, "Member 'SingleRewardWidget_C_Init::RewardUIData' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, Temp_bool_Variable) == 0x000020, "Member 'SingleRewardWidget_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, Temp_bool_Variable_1) == 0x000021, "Member 'SingleRewardWidget_C_Init::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'SingleRewardWidget_C_Init::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, Temp_bool_Variable_2) == 0x000050, "Member 'SingleRewardWidget_C_Init::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, Temp_byte_Variable) == 0x000051, "Member 'SingleRewardWidget_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, Temp_byte_Variable_1) == 0x000052, "Member 'SingleRewardWidget_C_Init::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_MakeStruct_SlateColor_1) == 0x000058, "Member 'SingleRewardWidget_C_Init::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_MakeStruct_SlateColor_2) == 0x000080, "Member 'SingleRewardWidget_C_Init::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'SingleRewardWidget_C_Init::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_AsRB_Player_Icon_Customization_Option) == 0x0000B0, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_AsRB_Player_Icon_Customization_Option' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_AsRB_Emote_Customization_Option) == 0x0000C0, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_AsRB_Emote_Customization_Option' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_AsRB_Player_Cell_Item_Definition) == 0x0000D0, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_AsRB_Player_Cell_Item_Definition' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_AsRB_Customization_Outfit) == 0x0000E0, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_AsRB_Customization_Outfit' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_bSuccess_3) == 0x0000E8, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000E9, "Member 'SingleRewardWidget_C_Init::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_AsRB_Player_Customization_Option) == 0x0000F0, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_AsRB_Player_Customization_Option' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_DynamicCast_bSuccess_4) == 0x0000F8, "Member 'SingleRewardWidget_C_Init::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x0000F9, "Member 'SingleRewardWidget_C_Init::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000100, "Member 'SingleRewardWidget_C_Init::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000108, "Member 'SingleRewardWidget_C_Init::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000110, "Member 'SingleRewardWidget_C_Init::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_GetLocalPlayerState_ReturnValue_1) == 0x000118, "Member 'SingleRewardWidget_C_Init::CallFunc_GetLocalPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_IsFemale_ReturnValue) == 0x000120, "Member 'SingleRewardWidget_C_Init::CallFunc_IsFemale_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_IsFemale_ReturnValue_1) == 0x000121, "Member 'SingleRewardWidget_C_Init::CallFunc_IsFemale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_BooleanAND_ReturnValue) == 0x000122, "Member 'SingleRewardWidget_C_Init::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_BooleanAND_ReturnValue_1) == 0x000123, "Member 'SingleRewardWidget_C_Init::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_GetLocalPlayerState_ReturnValue_2) == 0x000128, "Member 'SingleRewardWidget_C_Init::CallFunc_GetLocalPlayerState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_IsFemale_ReturnValue_2) == 0x000130, "Member 'SingleRewardWidget_C_Init::CallFunc_IsFemale_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_Select_Default) == 0x000138, "Member 'SingleRewardWidget_C_Init::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_Select_Default_1) == 0x000160, "Member 'SingleRewardWidget_C_Init::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, Temp_bool_Variable_3) == 0x000188, "Member 'SingleRewardWidget_C_Init::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_MakeStruct_Margin) == 0x00018C, "Member 'SingleRewardWidget_C_Init::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_Select_Default_2) == 0x0001A0, "Member 'SingleRewardWidget_C_Init::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_MakeStruct_Margin_1) == 0x0001C8, "Member 'SingleRewardWidget_C_Init::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_GetRBSettings_Gameplay_ReturnValue) == 0x0001D8, "Member 'SingleRewardWidget_C_Init::CallFunc_GetRBSettings_Gameplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x0001E0, "Member 'SingleRewardWidget_C_Init::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_Map_Find_Value) == 0x0001E8, "Member 'SingleRewardWidget_C_Init::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_Map_Find_ReturnValue) == 0x000248, "Member 'SingleRewardWidget_C_Init::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, CallFunc_GetRandomRewardPoolDisplayDetails_ReturnValue) == 0x000250, "Member 'SingleRewardWidget_C_Init::CallFunc_GetRandomRewardPoolDisplayDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_MakeStruct_SlateColor_3) == 0x000280, "Member 'SingleRewardWidget_C_Init::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_Select_Default_3) == 0x0002A8, "Member 'SingleRewardWidget_C_Init::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_Init, K2Node_MakeStruct_SlateColor_4) == 0x0002B0, "Member 'SingleRewardWidget_C_Init::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");

// Function SingleRewardWidget.SingleRewardWidget_C.CanMergeWith
// 0x0028 (0x0028 - 0x0000)
struct SingleRewardWidget_C_CanMergeWith final
{
public:
	struct FRewardUIData                          RewardUIData;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          bCanMergeWith;                                     // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SingleRewardWidget_C_CanMergeWith) == 0x000008, "Wrong alignment on SingleRewardWidget_C_CanMergeWith");
static_assert(sizeof(SingleRewardWidget_C_CanMergeWith) == 0x000028, "Wrong size on SingleRewardWidget_C_CanMergeWith");
static_assert(offsetof(SingleRewardWidget_C_CanMergeWith, RewardUIData) == 0x000000, "Member 'SingleRewardWidget_C_CanMergeWith::RewardUIData' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_CanMergeWith, bCanMergeWith) == 0x000020, "Member 'SingleRewardWidget_C_CanMergeWith::bCanMergeWith' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_CanMergeWith, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'SingleRewardWidget_C_CanMergeWith::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_CanMergeWith, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'SingleRewardWidget_C_CanMergeWith::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_CanMergeWith, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000023, "Member 'SingleRewardWidget_C_CanMergeWith::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_CanMergeWith, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'SingleRewardWidget_C_CanMergeWith::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function SingleRewardWidget.SingleRewardWidget_C.MergeWith
// 0x0028 (0x0028 - 0x0000)
struct SingleRewardWidget_C_MergeWith final
{
public:
	struct FRewardUIData                          RewardUIData;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SingleRewardWidget_C_MergeWith) == 0x000008, "Wrong alignment on SingleRewardWidget_C_MergeWith");
static_assert(sizeof(SingleRewardWidget_C_MergeWith) == 0x000028, "Wrong size on SingleRewardWidget_C_MergeWith");
static_assert(offsetof(SingleRewardWidget_C_MergeWith, RewardUIData) == 0x000000, "Member 'SingleRewardWidget_C_MergeWith::RewardUIData' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_MergeWith, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'SingleRewardWidget_C_MergeWith::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function SingleRewardWidget.SingleRewardWidget_C.UpdateRarity
// 0x00D0 (0x00D0 - 0x0000)
struct SingleRewardWidget_C_UpdateRarity final
{
public:
	EPlayerCustomizationRarity                    Rarity;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	class URBPlayerCustomizationConfig*           CallFunc_GetPlayerCustomizationConfig_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationRarityUIInfo             CallFunc_Map_Find_Value;                           // 0x0038(0x0068)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00A8(0x0028)()
};
static_assert(alignof(SingleRewardWidget_C_UpdateRarity) == 0x000008, "Wrong alignment on SingleRewardWidget_C_UpdateRarity");
static_assert(sizeof(SingleRewardWidget_C_UpdateRarity) == 0x0000D0, "Wrong size on SingleRewardWidget_C_UpdateRarity");
static_assert(offsetof(SingleRewardWidget_C_UpdateRarity, Rarity) == 0x000000, "Member 'SingleRewardWidget_C_UpdateRarity::Rarity' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_UpdateRarity, Temp_bool_Variable) == 0x000001, "Member 'SingleRewardWidget_C_UpdateRarity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_UpdateRarity, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'SingleRewardWidget_C_UpdateRarity::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_UpdateRarity, CallFunc_GetPlayerCustomizationConfig_ReturnValue) == 0x000030, "Member 'SingleRewardWidget_C_UpdateRarity::CallFunc_GetPlayerCustomizationConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_UpdateRarity, CallFunc_Map_Find_Value) == 0x000038, "Member 'SingleRewardWidget_C_UpdateRarity::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_UpdateRarity, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'SingleRewardWidget_C_UpdateRarity::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(SingleRewardWidget_C_UpdateRarity, K2Node_Select_Default) == 0x0000A8, "Member 'SingleRewardWidget_C_UpdateRarity::K2Node_Select_Default' has a wrong offset!");

}

