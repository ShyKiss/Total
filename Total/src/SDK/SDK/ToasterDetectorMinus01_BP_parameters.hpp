#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ToasterDetectorMinus01_BP

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.ExecuteUbergraph_ToasterDetector-01_BP
// 0x0100 (0x0100 - 0x0000)
struct ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(bool IsOn, class ARBTriggerable* Triggerable)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0028(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0048(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewTime;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerTime_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerComponentDetectionState                K2Node_CustomEvent_oldState;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerComponentDetectionState                K2Node_CustomEvent_newState;                       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPlayerComponentDetectionState OldState, EPlayerComponentDetectionState NewState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerTime_ReturnValue_1;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayLoopingSound_ReturnValue;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayLoopingSound_ReturnValue_1;           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARay_BP_C*                              K2Node_DynamicCast_AsRay_B_P;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBDamageableComponent*                 K2Node_ComponentBoundEvent_DamageableComponent;    // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIdle_Value;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBHackableComponent*                   K2Node_ComponentBoundEvent_hackableComponent;      // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHackState                                    CallFunc_GetCurrentHackState_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bDisabled;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBTriggerable*                         CallFunc_GetLinkedTriggerable_Triggerable;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsOn;                           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBTriggerable*                         K2Node_CustomEvent_triggerable;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP) == 0x000008, "Wrong alignment on ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP) == 0x000100, "Wrong size on ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, EntryPoint) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, Temp_struct_Variable) == 0x000008, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, Temp_delegate_Variable) == 0x000028, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, Temp_struct_Variable_1) == 0x000038, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, Temp_delegate_Variable_1) == 0x000048, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000058, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_HasAuthority_ReturnValue) == 0x000059, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00005A, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_Event_DeltaSeconds) == 0x00005C, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_CustomEvent_NewTime) == 0x000060, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_CustomEvent_NewTime' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_GetServerTime_ReturnValue) == 0x000064, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_GetServerTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_CustomEvent_oldState) == 0x000068, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_CustomEvent_oldState' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_CustomEvent_newState) == 0x000069, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_CustomEvent_newState' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006A, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00007C, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_HasAuthority_ReturnValue_1) == 0x00007D, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_GetServerTime_ReturnValue_1) == 0x000080, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_GetServerTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_PlayLoopingSound_ReturnValue) == 0x000084, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_PlayLoopingSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_PlayLoopingSound_ReturnValue_1) == 0x000088, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_PlayLoopingSound_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_DynamicCast_AsRay_B_P) == 0x000090, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_DynamicCast_AsRay_B_P' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_ComponentBoundEvent_DamageableComponent) == 0x0000A0, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_ComponentBoundEvent_DamageableComponent' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_IsIdle_Value) == 0x0000A8, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_IsIdle_Value' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_ComponentBoundEvent_hackableComponent) == 0x0000B0, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_ComponentBoundEvent_hackableComponent' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_GetCurrentHackState_ReturnValue) == 0x0000B8, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_GetCurrentHackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_BreakVector_X) == 0x0000BC, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_BreakVector_Y) == 0x0000C0, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_BreakVector_Z) == 0x0000C4, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000C8, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_Lerp_ReturnValue) == 0x0000CC, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_ComponentBoundEvent_bDisabled) == 0x0000D0, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_ComponentBoundEvent_bDisabled' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_HasAuthority_ReturnValue_2) == 0x0000D1, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_GetLinkedTriggerable_Triggerable) == 0x0000D8, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_GetLinkedTriggerable_Triggerable' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_CustomEvent_IsOn) == 0x0000E0, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_CustomEvent_IsOn' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, K2Node_CustomEvent_triggerable) == 0x0000E8, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::K2Node_CustomEvent_triggerable' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_Not_PreBool_ReturnValue) == 0x0000F1, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_PostAkEvent_ReturnValue) == 0x0000F4, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000F8, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP, CallFunc_BooleanOR_ReturnValue) == 0x0000FC, "Member 'ToasterDetectorMinus01_BP_C_ExecuteUbergraph_ToasterDetectorMinus01_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.OnTriggerEvent
// 0x0010 (0x0010 - 0x0000)
struct ToasterDetectorMinus01_BP_C_OnTriggerEvent final
{
public:
	bool                                          IsOn;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBTriggerable*                         Triggerable;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_OnTriggerEvent) == 0x000008, "Wrong alignment on ToasterDetectorMinus01_BP_C_OnTriggerEvent");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_OnTriggerEvent) == 0x000010, "Wrong size on ToasterDetectorMinus01_BP_C_OnTriggerEvent");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_OnTriggerEvent, IsOn) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_OnTriggerEvent::IsOn' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_OnTriggerEvent, Triggerable) == 0x000008, "Member 'ToasterDetectorMinus01_BP_C_OnTriggerEvent::Triggerable' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.BndEvt__ToasterDetector-01_BP_RBPlayerDetection_K2Node_ComponentBoundEvent_1_OnDisableStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBPlayerDetection_K2Node_ComponentBoundEvent_1_OnDisableStateChanged__DelegateSignature final
{
public:
	bool                                          bDisabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBPlayerDetection_K2Node_ComponentBoundEvent_1_OnDisableStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBPlayerDetection_K2Node_ComponentBoundEvent_1_OnDisableStateChanged__DelegateSignature");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBPlayerDetection_K2Node_ComponentBoundEvent_1_OnDisableStateChanged__DelegateSignature) == 0x000001, "Wrong size on ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBPlayerDetection_K2Node_ComponentBoundEvent_1_OnDisableStateChanged__DelegateSignature");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBPlayerDetection_K2Node_ComponentBoundEvent_1_OnDisableStateChanged__DelegateSignature, bDisabled) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBPlayerDetection_K2Node_ComponentBoundEvent_1_OnDisableStateChanged__DelegateSignature::bDisabled' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.BndEvt__ToasterDetector-01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature final
{
public:
	class URBHackableComponent*                   HackableComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong size on ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature, HackableComponent) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature::HackableComponent' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.BndEvt__ToasterDetector-01_BP_RBDamageable_K2Node_ComponentBoundEvent_2_OnNumberOfHitsChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBDamageable_K2Node_ComponentBoundEvent_2_OnNumberOfHitsChanged__DelegateSignature final
{
public:
	class URBDamageableComponent*                 DamageableComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBDamageable_K2Node_ComponentBoundEvent_2_OnNumberOfHitsChanged__DelegateSignature) == 0x000008, "Wrong alignment on ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBDamageable_K2Node_ComponentBoundEvent_2_OnNumberOfHitsChanged__DelegateSignature");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBDamageable_K2Node_ComponentBoundEvent_2_OnNumberOfHitsChanged__DelegateSignature) == 0x000008, "Wrong size on ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBDamageable_K2Node_ComponentBoundEvent_2_OnNumberOfHitsChanged__DelegateSignature");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBDamageable_K2Node_ComponentBoundEvent_2_OnNumberOfHitsChanged__DelegateSignature, DamageableComponent) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_BndEvt__ToasterDetectorMinus01_BP_RBDamageable_K2Node_ComponentBoundEvent_2_OnNumberOfHitsChanged__DelegateSignature::DamageableComponent' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.OnDetectionStateChanged
// 0x0002 (0x0002 - 0x0000)
struct ToasterDetectorMinus01_BP_C_OnDetectionStateChanged final
{
public:
	EPlayerComponentDetectionState                OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerComponentDetectionState                NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_OnDetectionStateChanged) == 0x000001, "Wrong alignment on ToasterDetectorMinus01_BP_C_OnDetectionStateChanged");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_OnDetectionStateChanged) == 0x000002, "Wrong size on ToasterDetectorMinus01_BP_C_OnDetectionStateChanged");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_OnDetectionStateChanged, OldState) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_OnDetectionStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_OnDetectionStateChanged, NewState) == 0x000001, "Member 'ToasterDetectorMinus01_BP_C_OnDetectionStateChanged::NewState' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.SetIdleAnimationTime
// 0x0004 (0x0004 - 0x0000)
struct ToasterDetectorMinus01_BP_C_SetIdleAnimationTime final
{
public:
	float                                         NewTime;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_SetIdleAnimationTime) == 0x000004, "Wrong alignment on ToasterDetectorMinus01_BP_C_SetIdleAnimationTime");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_SetIdleAnimationTime) == 0x000004, "Wrong size on ToasterDetectorMinus01_BP_C_SetIdleAnimationTime");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_SetIdleAnimationTime, NewTime) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_SetIdleAnimationTime::NewTime' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ToasterDetectorMinus01_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on ToasterDetectorMinus01_BP_C_ReceiveTick");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_ReceiveTick) == 0x000004, "Wrong size on ToasterDetectorMinus01_BP_C_ReceiveTick");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.UpdateDetectionLevel
// 0x0030 (0x0030 - 0x0000)
struct ToasterDetectorMinus01_BP_C_UpdateDetectionLevel final
{
public:
	bool                                          ShouldReset;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_UpdateDetectionLevel) == 0x000004, "Wrong alignment on ToasterDetectorMinus01_BP_C_UpdateDetectionLevel");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_UpdateDetectionLevel) == 0x000030, "Wrong size on ToasterDetectorMinus01_BP_C_UpdateDetectionLevel");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateDetectionLevel, ShouldReset) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_UpdateDetectionLevel::ShouldReset' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateDetectionLevel, CallFunc_LinearColorLerp_ReturnValue) == 0x000004, "Member 'ToasterDetectorMinus01_BP_C_UpdateDetectionLevel::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateDetectionLevel, CallFunc_GetFloatValue_ReturnValue) == 0x000014, "Member 'ToasterDetectorMinus01_BP_C_UpdateDetectionLevel::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateDetectionLevel, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'ToasterDetectorMinus01_BP_C_UpdateDetectionLevel::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateDetectionLevel, CallFunc_LinearColorLerp_ReturnValue_1) == 0x00001C, "Member 'ToasterDetectorMinus01_BP_C_UpdateDetectionLevel::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateDetectionLevel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002C, "Member 'ToasterDetectorMinus01_BP_C_UpdateDetectionLevel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.UpdateCameraRotations
// 0x0134 (0x0134 - 0x0000)
struct ToasterDetectorMinus01_BP_C_UpdateCameraRotations final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Approach_ReturnValue;                     // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Approach_ReturnValue_1;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_UpdateCameraRotations) == 0x000004, "Wrong alignment on ToasterDetectorMinus01_BP_C_UpdateCameraRotations");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_UpdateCameraRotations) == 0x000134, "Wrong size on ToasterDetectorMinus01_BP_C_UpdateCameraRotations");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateCameraRotations, DeltaTime) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_UpdateCameraRotations::DeltaTime' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateCameraRotations, CallFunc_MakeRotator_ReturnValue) == 0x000004, "Member 'ToasterDetectorMinus01_BP_C_UpdateCameraRotations::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateCameraRotations, CallFunc_MakeRotator_ReturnValue_1) == 0x000010, "Member 'ToasterDetectorMinus01_BP_C_UpdateCameraRotations::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateCameraRotations, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00001C, "Member 'ToasterDetectorMinus01_BP_C_UpdateCameraRotations::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateCameraRotations, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000A4, "Member 'ToasterDetectorMinus01_BP_C_UpdateCameraRotations::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateCameraRotations, CallFunc_Approach_ReturnValue) == 0x00012C, "Member 'ToasterDetectorMinus01_BP_C_UpdateCameraRotations::CallFunc_Approach_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateCameraRotations, CallFunc_Approach_ReturnValue_1) == 0x000130, "Member 'ToasterDetectorMinus01_BP_C_UpdateCameraRotations::CallFunc_Approach_ReturnValue_1' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.OnRep_IdleAnimationStartTime
// 0x0001 (0x0001 - 0x0000)
struct ToasterDetectorMinus01_BP_C_OnRep_IdleAnimationStartTime final
{
public:
	bool                                          CallFunc_IsIdle_Value;                             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_OnRep_IdleAnimationStartTime) == 0x000001, "Wrong alignment on ToasterDetectorMinus01_BP_C_OnRep_IdleAnimationStartTime");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_OnRep_IdleAnimationStartTime) == 0x000001, "Wrong size on ToasterDetectorMinus01_BP_C_OnRep_IdleAnimationStartTime");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_OnRep_IdleAnimationStartTime, CallFunc_IsIdle_Value) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_OnRep_IdleAnimationStartTime::CallFunc_IsIdle_Value' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.UpdateIdleAnimationTime
// 0x0020 (0x0020 - 0x0000)
struct ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime final
{
public:
	float                                         CallFunc_GetServerTime_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime) == 0x000004, "Wrong alignment on ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime) == 0x000020, "Wrong size on ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime, CallFunc_GetServerTime_ReturnValue) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime::CallFunc_GetServerTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime, CallFunc_GetPlayRate_ReturnValue) == 0x000004, "Member 'ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime::CallFunc_GetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime, CallFunc_GetTimelineLength_ReturnValue) == 0x000008, "Member 'ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime, CallFunc_FMod_Remainder) == 0x000014, "Member 'ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime, CallFunc_FMod_ReturnValue) == 0x000018, "Member 'ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'ToasterDetectorMinus01_BP_C_UpdateIdleAnimationTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.UpdateTrackedTarget
// 0x0024 (0x0024 - 0x0000)
struct ToasterDetectorMinus01_BP_C_UpdateTrackedTarget final
{
public:
	struct FVector                                TrackedPosition;                                   // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateTargetYaw_Value;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTrackedLocation_ReturnValue;           // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateTargetRoll_Value;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_UpdateTrackedTarget) == 0x000004, "Wrong alignment on ToasterDetectorMinus01_BP_C_UpdateTrackedTarget");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_UpdateTrackedTarget) == 0x000024, "Wrong size on ToasterDetectorMinus01_BP_C_UpdateTrackedTarget");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateTrackedTarget, TrackedPosition) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_UpdateTrackedTarget::TrackedPosition' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateTrackedTarget, CallFunc_CalculateTargetYaw_Value) == 0x00000C, "Member 'ToasterDetectorMinus01_BP_C_UpdateTrackedTarget::CallFunc_CalculateTargetYaw_Value' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateTrackedTarget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ToasterDetectorMinus01_BP_C_UpdateTrackedTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateTrackedTarget, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'ToasterDetectorMinus01_BP_C_UpdateTrackedTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateTrackedTarget, CallFunc_GetTrackedLocation_ReturnValue) == 0x000014, "Member 'ToasterDetectorMinus01_BP_C_UpdateTrackedTarget::CallFunc_GetTrackedLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateTrackedTarget, CallFunc_CalculateTargetRoll_Value) == 0x000020, "Member 'ToasterDetectorMinus01_BP_C_UpdateTrackedTarget::CallFunc_CalculateTargetRoll_Value' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.CalculateTargetRoll
// 0x00E8 (0x00E8 - 0x0000)
struct ToasterDetectorMinus01_BP_C_CalculateTargetRoll final
{
public:
	struct FVector                                TrackedPosition;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetPosRef;                                      // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance2D_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll) == 0x000004, "Wrong alignment on ToasterDetectorMinus01_BP_C_CalculateTargetRoll");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll) == 0x0000E8, "Wrong size on ToasterDetectorMinus01_BP_C_CalculateTargetRoll");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, TrackedPosition) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::TrackedPosition' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, Value) == 0x00000C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::Value' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, TargetPosRef) == 0x000010, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::TargetPosRef' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_BreakVector_X) == 0x00001C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_BreakVector_Y) == 0x000020, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_BreakVector_Z) == 0x000024, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000034, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000038, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_GetRightVector_ReturnValue) == 0x00004C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Normal_ReturnValue) == 0x000064, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Normal_ReturnValue_1) == 0x000070, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00007C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_GetRightVector_ReturnValue_1) == 0x000088, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000094, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Normal_ReturnValue_2) == 0x00009C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Distance2D_ReturnValue) == 0x0000A8, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000AC, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_DegAcos_ReturnValue) == 0x0000BC, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_FClamp_ReturnValue) == 0x0000CC, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_BreakVector_X_1) == 0x0000D0, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_BreakVector_Y_1) == 0x0000D4, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_BreakVector_Z_1) == 0x0000D8, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetRoll, CallFunc_MakeVector_ReturnValue_1) == 0x0000DC, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetRoll::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.CalculateTargetYaw
// 0x00C0 (0x00C0 - 0x0000)
struct ToasterDetectorMinus01_BP_C_CalculateTargetYaw final
{
public:
	struct FVector                                TrackedPosition;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TrackPositionRef;                                  // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0xC];                                       // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_FindQuatBetweenVectors_ReturnValue;       // 0x0080(0x0010)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Quat_Euler_ReturnValue;                   // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw) == 0x000010, "Wrong alignment on ToasterDetectorMinus01_BP_C_CalculateTargetYaw");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw) == 0x0000C0, "Wrong size on ToasterDetectorMinus01_BP_C_CalculateTargetYaw");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, TrackedPosition) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::TrackedPosition' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, Value) == 0x00000C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::Value' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, TrackPositionRef) == 0x000010, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::TrackPositionRef' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_BreakVector_X) == 0x00001C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_BreakVector_Y) == 0x000020, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_BreakVector_Z) == 0x000024, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000028, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_GetRightVector_ReturnValue) == 0x000038, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000044, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000050, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_Normal_ReturnValue) == 0x00005C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_BreakVector_X_1) == 0x000068, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_BreakVector_Y_1) == 0x00006C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_BreakVector_Z_1) == 0x000070, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_FindQuatBetweenVectors_ReturnValue) == 0x000080, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_FindQuatBetweenVectors_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_Quat_Euler_ReturnValue) == 0x00009C, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_Quat_Euler_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_BreakVector_X_2) == 0x0000A8, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_BreakVector_Y_2) == 0x0000AC, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_BreakVector_Z_2) == 0x0000B0, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_CalculateTargetYaw, CallFunc_FClamp_ReturnValue) == 0x0000B4, "Member 'ToasterDetectorMinus01_BP_C_CalculateTargetYaw::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.UpdateRayDetectionDistance
// 0x0004 (0x0004 - 0x0000)
struct ToasterDetectorMinus01_BP_C_UpdateRayDetectionDistance final
{
public:
	float                                         CallFunc_GetCurrentDetectionDistance_ReturnValue;  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_UpdateRayDetectionDistance) == 0x000004, "Wrong alignment on ToasterDetectorMinus01_BP_C_UpdateRayDetectionDistance");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_UpdateRayDetectionDistance) == 0x000004, "Wrong size on ToasterDetectorMinus01_BP_C_UpdateRayDetectionDistance");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_UpdateRayDetectionDistance, CallFunc_GetCurrentDetectionDistance_ReturnValue) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_UpdateRayDetectionDistance::CallFunc_GetCurrentDetectionDistance_ReturnValue' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.OverrideIdleDetectionSettings
// 0x0018 (0x0018 - 0x0000)
struct ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings final
{
public:
	struct FIdleDetectionSettings                 NewSettings;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIdle_Value;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings) == 0x000004, "Wrong alignment on ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings) == 0x000018, "Wrong size on ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings, NewSettings) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings::NewSettings' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings, CallFunc_IsIdle_Value) == 0x000014, "Member 'ToasterDetectorMinus01_BP_C_OverrideIdleDetectionSettings::CallFunc_IsIdle_Value' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.IsIdle
// 0x0002 (0x0002 - 0x0000)
struct ToasterDetectorMinus01_BP_C_IsIdle final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_IsIdle) == 0x000001, "Wrong alignment on ToasterDetectorMinus01_BP_C_IsIdle");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_IsIdle) == 0x000002, "Wrong size on ToasterDetectorMinus01_BP_C_IsIdle");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_IsIdle, Value) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_IsIdle::Value' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_IsIdle, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'ToasterDetectorMinus01_BP_C_IsIdle::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.RefreshGateHackZoneSizes
// 0x0030 (0x0030 - 0x0000)
struct ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes final
{
public:
	class ARBTriggerable*                         CallFunc_GetLinkedTriggerable_Triggerable;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARollingDoorMinusBase_BP_C*             K2Node_DynamicCast_AsRolling_Door__Base_BP;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes) == 0x000008, "Wrong alignment on ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes) == 0x000030, "Wrong size on ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes, CallFunc_GetLinkedTriggerable_Triggerable) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes::CallFunc_GetLinkedTriggerable_Triggerable' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes, K2Node_DynamicCast_AsRolling_Door__Base_BP) == 0x000008, "Member 'ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes::K2Node_DynamicCast_AsRolling_Door__Base_BP' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes, CallFunc_BreakVector_X) == 0x000018, "Member 'ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes, CallFunc_BreakVector_Y) == 0x00001C, "Member 'ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes, CallFunc_BreakVector_Z) == 0x000020, "Member 'ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'ToasterDetectorMinus01_BP_C_RefreshGateHackZoneSizes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.GetLinkedTriggerable
// 0x0078 (0x0078 - 0x0000)
struct ToasterDetectorMinus01_BP_C_GetLinkedTriggerable final
{
public:
	class ARBTriggerable*                         Triggerable;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBTriggerable*                         NULLL;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ARBTriggerable>          CallFunc_Array_Get_Item;                           // 0x0020(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBTriggerable*                         K2Node_DynamicCast_AsRB_Triggerable;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARollingDoorMinusBase_BP_C*             K2Node_DynamicCast_AsRolling_Door__Base_BP;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable) == 0x000008, "Wrong alignment on ToasterDetectorMinus01_BP_C_GetLinkedTriggerable");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable) == 0x000078, "Wrong size on ToasterDetectorMinus01_BP_C_GetLinkedTriggerable");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, Triggerable) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::Triggerable' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, NULLL) == 0x000008, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::NULLL' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, CallFunc_Array_Get_Item) == 0x000020, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, K2Node_DynamicCast_AsRB_Triggerable) == 0x000058, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::K2Node_DynamicCast_AsRB_Triggerable' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, K2Node_DynamicCast_AsRolling_Door__Base_BP) == 0x000068, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::K2Node_DynamicCast_AsRolling_Door__Base_BP' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_GetLinkedTriggerable, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'ToasterDetectorMinus01_BP_C_GetLinkedTriggerable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ToasterDetector-01_BP.ToasterDetector-01_BP_C.RefreshHackedVFX
// 0x0005 (0x0005 - 0x0000)
struct ToasterDetectorMinus01_BP_C_RefreshHackedVFX final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisabled_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHackState                                    CallFunc_GetCurrentHackState_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ToasterDetectorMinus01_BP_C_RefreshHackedVFX) == 0x000001, "Wrong alignment on ToasterDetectorMinus01_BP_C_RefreshHackedVFX");
static_assert(sizeof(ToasterDetectorMinus01_BP_C_RefreshHackedVFX) == 0x000005, "Wrong size on ToasterDetectorMinus01_BP_C_RefreshHackedVFX");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshHackedVFX, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'ToasterDetectorMinus01_BP_C_RefreshHackedVFX::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshHackedVFX, CallFunc_IsDisabled_ReturnValue) == 0x000001, "Member 'ToasterDetectorMinus01_BP_C_RefreshHackedVFX::CallFunc_IsDisabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshHackedVFX, CallFunc_GetCurrentHackState_ReturnValue) == 0x000002, "Member 'ToasterDetectorMinus01_BP_C_RefreshHackedVFX::CallFunc_GetCurrentHackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshHackedVFX, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'ToasterDetectorMinus01_BP_C_RefreshHackedVFX::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ToasterDetectorMinus01_BP_C_RefreshHackedVFX, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'ToasterDetectorMinus01_BP_C_RefreshHackedVFX::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

