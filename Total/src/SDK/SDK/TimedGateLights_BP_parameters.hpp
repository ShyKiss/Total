#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TimedGateLights_BP

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TimedOpenClosedGateState_structs.hpp"


namespace SDK::Params
{

// Function TimedGateLights_BP.TimedGateLights_BP_C.ExecuteUbergraph_TimedGateLights_BP
// 0x0078 (0x0078 - 0x0000)
struct TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bEnabled;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimedOpenClosedGateState                     K2Node_CustomEvent_state;                          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBTriggerable*                         CallFunc_GetLinkedTriggerable_Triggerable;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsOn;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBTriggerable*                         K2Node_CustomEvent_triggerable;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsOn, class ARBTriggerable* Triggerable)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBHackableComponent*                   K2Node_ComponentBoundEvent_hackableComponent;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHackState                                    CallFunc_GetCurrentHackState_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBHackableComponent*                   K2Node_Event_hackableComponent;                    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBTriggerable*                         CallFunc_GetLinkedTriggerable_Triggerable_1;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARollingDoorMinusBase_BP_C*             K2Node_DynamicCast_AsRolling_Door__Base_BP;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP) == 0x000008, "Wrong alignment on TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP");
static_assert(sizeof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP) == 0x000078, "Wrong size on TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, EntryPoint) == 0x000000, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, CallFunc_HasAuthority_ReturnValue_1) == 0x000005, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_Event_bEnabled) == 0x000006, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_CustomEvent_state) == 0x000007, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_CustomEvent_state' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, CallFunc_GetLinkedTriggerable_Triggerable) == 0x000010, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::CallFunc_GetLinkedTriggerable_Triggerable' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_CustomEvent_IsOn) == 0x000018, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_CustomEvent_IsOn' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_CustomEvent_triggerable) == 0x000020, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_CustomEvent_triggerable' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_ComponentBoundEvent_hackableComponent) == 0x000040, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_ComponentBoundEvent_hackableComponent' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, CallFunc_GetCurrentHackState_ReturnValue) == 0x000048, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::CallFunc_GetCurrentHackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_Event_hackableComponent) == 0x000050, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_Event_hackableComponent' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, CallFunc_GetLinkedTriggerable_Triggerable_1) == 0x000060, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::CallFunc_GetLinkedTriggerable_Triggerable_1' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_DynamicCast_AsRolling_Door__Base_BP) == 0x000068, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_DynamicCast_AsRolling_Door__Base_BP' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'TimedGateLights_BP_C_ExecuteUbergraph_TimedGateLights_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.OnHackStateChanged
// 0x0008 (0x0008 - 0x0000)
struct TimedGateLights_BP_C_OnHackStateChanged final
{
public:
	class URBHackableComponent*                   HackableComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimedGateLights_BP_C_OnHackStateChanged) == 0x000008, "Wrong alignment on TimedGateLights_BP_C_OnHackStateChanged");
static_assert(sizeof(TimedGateLights_BP_C_OnHackStateChanged) == 0x000008, "Wrong size on TimedGateLights_BP_C_OnHackStateChanged");
static_assert(offsetof(TimedGateLights_BP_C_OnHackStateChanged, HackableComponent) == 0x000000, "Member 'TimedGateLights_BP_C_OnHackStateChanged::HackableComponent' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.BndEvt__TimedGateLights_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TimedGateLights_BP_C_BndEvt__TimedGateLights_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature final
{
public:
	class URBHackableComponent*                   HackableComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimedGateLights_BP_C_BndEvt__TimedGateLights_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on TimedGateLights_BP_C_BndEvt__TimedGateLights_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature");
static_assert(sizeof(TimedGateLights_BP_C_BndEvt__TimedGateLights_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong size on TimedGateLights_BP_C_BndEvt__TimedGateLights_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature");
static_assert(offsetof(TimedGateLights_BP_C_BndEvt__TimedGateLights_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature, HackableComponent) == 0x000000, "Member 'TimedGateLights_BP_C_BndEvt__TimedGateLights_BP_DeviceHackZone_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature::HackableComponent' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.OnTriggerEvent
// 0x0010 (0x0010 - 0x0000)
struct TimedGateLights_BP_C_OnTriggerEvent final
{
public:
	bool                                          IsOn;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBTriggerable*                         Triggerable;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimedGateLights_BP_C_OnTriggerEvent) == 0x000008, "Wrong alignment on TimedGateLights_BP_C_OnTriggerEvent");
static_assert(sizeof(TimedGateLights_BP_C_OnTriggerEvent) == 0x000010, "Wrong size on TimedGateLights_BP_C_OnTriggerEvent");
static_assert(offsetof(TimedGateLights_BP_C_OnTriggerEvent, IsOn) == 0x000000, "Member 'TimedGateLights_BP_C_OnTriggerEvent::IsOn' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_OnTriggerEvent, Triggerable) == 0x000008, "Member 'TimedGateLights_BP_C_OnTriggerEvent::Triggerable' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.SetTimedState
// 0x0001 (0x0001 - 0x0000)
struct TimedGateLights_BP_C_SetTimedState final
{
public:
	ETimedOpenClosedGateState                     State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimedGateLights_BP_C_SetTimedState) == 0x000001, "Wrong alignment on TimedGateLights_BP_C_SetTimedState");
static_assert(sizeof(TimedGateLights_BP_C_SetTimedState) == 0x000001, "Wrong size on TimedGateLights_BP_C_SetTimedState");
static_assert(offsetof(TimedGateLights_BP_C_SetTimedState, State) == 0x000000, "Member 'TimedGateLights_BP_C_SetTimedState::State' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.SetVariatorEnabled
// 0x0001 (0x0001 - 0x0000)
struct TimedGateLights_BP_C_SetVariatorEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TimedGateLights_BP_C_SetVariatorEnabled) == 0x000001, "Wrong alignment on TimedGateLights_BP_C_SetVariatorEnabled");
static_assert(sizeof(TimedGateLights_BP_C_SetVariatorEnabled) == 0x000001, "Wrong size on TimedGateLights_BP_C_SetVariatorEnabled");
static_assert(offsetof(TimedGateLights_BP_C_SetVariatorEnabled, bEnabled) == 0x000000, "Member 'TimedGateLights_BP_C_SetVariatorEnabled::bEnabled' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.SetLightState
// 0x0038 (0x0038 - 0x0000)
struct TimedGateLights_BP_C_SetLightState final
{
public:
	class UStaticMeshComponent*                   MeshComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOn;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Green;                                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Blinking_Red_Green;                                // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Blinking_Red;                                      // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Blinking_Green;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_3;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_4;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimedGateLights_BP_C_SetLightState) == 0x000008, "Wrong alignment on TimedGateLights_BP_C_SetLightState");
static_assert(sizeof(TimedGateLights_BP_C_SetLightState) == 0x000038, "Wrong size on TimedGateLights_BP_C_SetLightState");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, MeshComponent) == 0x000000, "Member 'TimedGateLights_BP_C_SetLightState::MeshComponent' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, bOn) == 0x000008, "Member 'TimedGateLights_BP_C_SetLightState::bOn' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, Green) == 0x000009, "Member 'TimedGateLights_BP_C_SetLightState::Green' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, Blinking_Red_Green) == 0x00000A, "Member 'TimedGateLights_BP_C_SetLightState::Blinking_Red_Green' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, Blinking_Red) == 0x00000B, "Member 'TimedGateLights_BP_C_SetLightState::Blinking_Red' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, Blinking_Green) == 0x00000C, "Member 'TimedGateLights_BP_C_SetLightState::Blinking_Green' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'TimedGateLights_BP_C_SetLightState::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000014, "Member 'TimedGateLights_BP_C_SetLightState::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000018, "Member 'TimedGateLights_BP_C_SetLightState::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, CallFunc_Conv_BoolToFloat_ReturnValue_3) == 0x00001C, "Member 'TimedGateLights_BP_C_SetLightState::CallFunc_Conv_BoolToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'TimedGateLights_BP_C_SetLightState::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, CallFunc_Conv_BoolToFloat_ReturnValue_4) == 0x000028, "Member 'TimedGateLights_BP_C_SetLightState::CallFunc_Conv_BoolToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_SetLightState, CallFunc_MakeVector_ReturnValue) == 0x00002C, "Member 'TimedGateLights_BP_C_SetLightState::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.PlayAlarmSound
// 0x0020 (0x0020 - 0x0000)
struct TimedGateLights_BP_C_PlayAlarmSound final
{
public:
	class UAkAudioEvent*                          Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimedGateLights_BP_C_PlayAlarmSound) == 0x000008, "Wrong alignment on TimedGateLights_BP_C_PlayAlarmSound");
static_assert(sizeof(TimedGateLights_BP_C_PlayAlarmSound) == 0x000020, "Wrong size on TimedGateLights_BP_C_PlayAlarmSound");
static_assert(offsetof(TimedGateLights_BP_C_PlayAlarmSound, Event) == 0x000000, "Member 'TimedGateLights_BP_C_PlayAlarmSound::Event' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_PlayAlarmSound, Temp_delegate_Variable) == 0x000008, "Member 'TimedGateLights_BP_C_PlayAlarmSound::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_PlayAlarmSound, CallFunc_PostEventOnActor_ReturnValue) == 0x000018, "Member 'TimedGateLights_BP_C_PlayAlarmSound::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.RefreshLightState
// 0x0004 (0x0004 - 0x0000)
struct TimedGateLights_BP_C_RefreshLightState final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredActivelyBeingHacked_Out;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TimedGateLights_BP_C_RefreshLightState) == 0x000001, "Wrong alignment on TimedGateLights_BP_C_RefreshLightState");
static_assert(sizeof(TimedGateLights_BP_C_RefreshLightState) == 0x000004, "Wrong size on TimedGateLights_BP_C_RefreshLightState");
static_assert(offsetof(TimedGateLights_BP_C_RefreshLightState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'TimedGateLights_BP_C_RefreshLightState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshLightState, CallFunc_IsConsideredActivelyBeingHacked_Out) == 0x000001, "Member 'TimedGateLights_BP_C_RefreshLightState::CallFunc_IsConsideredActivelyBeingHacked_Out' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshLightState, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'TimedGateLights_BP_C_RefreshLightState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshLightState, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'TimedGateLights_BP_C_RefreshLightState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.OnDisabledHackedStateChanged
// 0x0006 (0x0006 - 0x0000)
struct TimedGateLights_BP_C_OnDisabledHackedStateChanged final
{
public:
	bool                                          bHacked;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHackState                                    Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHackState                                    Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHackState                                    K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimedGateLights_BP_C_OnDisabledHackedStateChanged) == 0x000001, "Wrong alignment on TimedGateLights_BP_C_OnDisabledHackedStateChanged");
static_assert(sizeof(TimedGateLights_BP_C_OnDisabledHackedStateChanged) == 0x000006, "Wrong size on TimedGateLights_BP_C_OnDisabledHackedStateChanged");
static_assert(offsetof(TimedGateLights_BP_C_OnDisabledHackedStateChanged, bHacked) == 0x000000, "Member 'TimedGateLights_BP_C_OnDisabledHackedStateChanged::bHacked' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_OnDisabledHackedStateChanged, Temp_bool_Variable) == 0x000001, "Member 'TimedGateLights_BP_C_OnDisabledHackedStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_OnDisabledHackedStateChanged, Temp_byte_Variable) == 0x000002, "Member 'TimedGateLights_BP_C_OnDisabledHackedStateChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_OnDisabledHackedStateChanged, Temp_byte_Variable_1) == 0x000003, "Member 'TimedGateLights_BP_C_OnDisabledHackedStateChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_OnDisabledHackedStateChanged, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'TimedGateLights_BP_C_OnDisabledHackedStateChanged::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_OnDisabledHackedStateChanged, K2Node_Select_Default) == 0x000005, "Member 'TimedGateLights_BP_C_OnDisabledHackedStateChanged::K2Node_Select_Default' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.RefreshGateHackZoneSizes
// 0x0038 (0x0038 - 0x0000)
struct TimedGateLights_BP_C_RefreshGateHackZoneSizes final
{
public:
	class ARBTriggerable*                         CallFunc_GetLinkedTriggerable_Triggerable;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBTriggerable*                         CallFunc_GetLinkedTriggerable_Triggerable_1;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARollingDoorMinusBase_BP_C*             K2Node_DynamicCast_AsRolling_Door__Base_BP;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimedGateLights_BP_C_RefreshGateHackZoneSizes) == 0x000008, "Wrong alignment on TimedGateLights_BP_C_RefreshGateHackZoneSizes");
static_assert(sizeof(TimedGateLights_BP_C_RefreshGateHackZoneSizes) == 0x000038, "Wrong size on TimedGateLights_BP_C_RefreshGateHackZoneSizes");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, CallFunc_GetLinkedTriggerable_Triggerable) == 0x000000, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::CallFunc_GetLinkedTriggerable_Triggerable' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, CallFunc_GetLinkedTriggerable_Triggerable_1) == 0x000008, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::CallFunc_GetLinkedTriggerable_Triggerable_1' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, K2Node_DynamicCast_AsRolling_Door__Base_BP) == 0x000010, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::K2Node_DynamicCast_AsRolling_Door__Base_BP' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, CallFunc_BreakVector_X) == 0x000020, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, CallFunc_BreakVector_Y) == 0x000024, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, CallFunc_BreakVector_Z) == 0x000028, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshGateHackZoneSizes, CallFunc_MakeVector_ReturnValue) == 0x00002C, "Member 'TimedGateLights_BP_C_RefreshGateHackZoneSizes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.GetLinkedTriggerable
// 0x0028 (0x0028 - 0x0000)
struct TimedGateLights_BP_C_GetLinkedTriggerable final
{
public:
	class ARBTriggerable*                         Triggerable;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBTriggerable*                         NULLL;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARollingDoorMinusBase_BP_C*             K2Node_DynamicCast_AsRolling_Door__Base_BP;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TimedGateLights_BP_C_GetLinkedTriggerable) == 0x000008, "Wrong alignment on TimedGateLights_BP_C_GetLinkedTriggerable");
static_assert(sizeof(TimedGateLights_BP_C_GetLinkedTriggerable) == 0x000028, "Wrong size on TimedGateLights_BP_C_GetLinkedTriggerable");
static_assert(offsetof(TimedGateLights_BP_C_GetLinkedTriggerable, Triggerable) == 0x000000, "Member 'TimedGateLights_BP_C_GetLinkedTriggerable::Triggerable' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_GetLinkedTriggerable, NULLL) == 0x000008, "Member 'TimedGateLights_BP_C_GetLinkedTriggerable::NULLL' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_GetLinkedTriggerable, CallFunc_GetAttachParentActor_ReturnValue) == 0x000010, "Member 'TimedGateLights_BP_C_GetLinkedTriggerable::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_GetLinkedTriggerable, K2Node_DynamicCast_AsRolling_Door__Base_BP) == 0x000018, "Member 'TimedGateLights_BP_C_GetLinkedTriggerable::K2Node_DynamicCast_AsRolling_Door__Base_BP' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_GetLinkedTriggerable, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TimedGateLights_BP_C_GetLinkedTriggerable::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.RefreshHackedVisualState
// 0x0003 (0x0003 - 0x0000)
struct TimedGateLights_BP_C_RefreshHackedVisualState final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredActivelyBeingHacked_Out;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TimedGateLights_BP_C_RefreshHackedVisualState) == 0x000001, "Wrong alignment on TimedGateLights_BP_C_RefreshHackedVisualState");
static_assert(sizeof(TimedGateLights_BP_C_RefreshHackedVisualState) == 0x000003, "Wrong size on TimedGateLights_BP_C_RefreshHackedVisualState");
static_assert(offsetof(TimedGateLights_BP_C_RefreshHackedVisualState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'TimedGateLights_BP_C_RefreshHackedVisualState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshHackedVisualState, CallFunc_IsConsideredActivelyBeingHacked_Out) == 0x000001, "Member 'TimedGateLights_BP_C_RefreshHackedVisualState::CallFunc_IsConsideredActivelyBeingHacked_Out' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_RefreshHackedVisualState, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'TimedGateLights_BP_C_RefreshHackedVisualState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.IsConsideredActivelyBeingHacked
// 0x0028 (0x0028 - 0x0000)
struct TimedGateLights_BP_C_IsConsideredActivelyBeingHacked final
{
public:
	bool                                          Out;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBHackableComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHackState                                    CallFunc_GetCurrentHackState_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked) == 0x000008, "Wrong alignment on TimedGateLights_BP_C_IsConsideredActivelyBeingHacked");
static_assert(sizeof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked) == 0x000028, "Wrong size on TimedGateLights_BP_C_IsConsideredActivelyBeingHacked");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, Out) == 0x000000, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::Out' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, Temp_int_Array_Index_Variable) == 0x000004, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, CallFunc_Array_Get_Item) == 0x000018, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, CallFunc_GetCurrentHackState_ReturnValue) == 0x000022, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::CallFunc_GetCurrentHackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimedGateLights_BP_C_IsConsideredActivelyBeingHacked, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000023, "Member 'TimedGateLights_BP_C_IsConsideredActivelyBeingHacked::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function TimedGateLights_BP.TimedGateLights_BP_C.GetVariatorEnabled
// 0x0001 (0x0001 - 0x0000)
struct TimedGateLights_BP_C_GetVariatorEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TimedGateLights_BP_C_GetVariatorEnabled) == 0x000001, "Wrong alignment on TimedGateLights_BP_C_GetVariatorEnabled");
static_assert(sizeof(TimedGateLights_BP_C_GetVariatorEnabled) == 0x000001, "Wrong size on TimedGateLights_BP_C_GetVariatorEnabled");
static_assert(offsetof(TimedGateLights_BP_C_GetVariatorEnabled, ReturnValue) == 0x000000, "Member 'TimedGateLights_BP_C_GetVariatorEnabled::ReturnValue' has a wrong offset!");

}

