#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CineSpectre_BP

#include "Basic.hpp"

#include "CineSpectre_BP_classes.hpp"
#include "CineSpectre_BP_parameters.hpp"


namespace SDK
{

// Function CineSpectre_BP.CineSpectre_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ACineSpectre_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CineSpectre_BP.CineSpectre_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACineSpectre_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CineSpectre_BP.CineSpectre_BP_C.Hidding Chid
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACineSpectre_BP_C::Hidding_Chid(class USkeletalMeshComponent* Parent, bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "Hidding Chid");

	Params::CineSpectre_BP_C_Hidding_Chid Parms{};

	Parms.Parent = Parent;
	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CineSpectre_BP.CineSpectre_BP_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ACineSpectre_BP_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CineSpectre_BP.CineSpectre_BP_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ACineSpectre_BP_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CineSpectre_BP.CineSpectre_BP_C.MotionBlurByBones
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ListOfBones                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class USkeletalMeshComponent*>   Array_0                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FVector                          Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACineSpectre_BP_C::MotionBlurByBones(const TArray<class FName>& ListOfBones, const TArray<class USkeletalMeshComponent*>& Array_0, const struct FVector& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "MotionBlurByBones");

	Params::CineSpectre_BP_C_MotionBlurByBones Parms{};

	Parms.ListOfBones = std::move(ListOfBones);
	Parms.Array_0 = std::move(Array_0);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CineSpectre_BP.CineSpectre_BP_C.MotionBlurSwap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   blurIntensity                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACineSpectre_BP_C::MotionBlurSwap(float blurIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "MotionBlurSwap");

	Params::CineSpectre_BP_C_MotionBlurSwap Parms{};

	Parms.blurIntensity = blurIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CineSpectre_BP.CineSpectre_BP_C.DesactivateParticles
// (BlueprintCallable, BlueprintEvent)

void ACineSpectre_BP_C::DesactivateParticles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "DesactivateParticles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CineSpectre_BP.CineSpectre_BP_C.SetVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Spectre01                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Spectre02                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Spectre03                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACineSpectre_BP_C::SetVisibility(bool Spectre01, bool Spectre02, bool Spectre03)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "SetVisibility");

	Params::CineSpectre_BP_C_SetVisibility Parms{};

	Parms.Spectre01 = Spectre01;
	Parms.Spectre02 = Spectre02;
	Parms.Spectre03 = Spectre03;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CineSpectre_BP.CineSpectre_BP_C.MotionBlurHold
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Blur_Intensity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACineSpectre_BP_C::MotionBlurHold(float Blur_Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "MotionBlurHold");

	Params::CineSpectre_BP_C_MotionBlurHold Parms{};

	Parms.Blur_Intensity = Blur_Intensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CineSpectre_BP.CineSpectre_BP_C.ExecuteUbergraph_CineSpectre_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACineSpectre_BP_C::ExecuteUbergraph_CineSpectre_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CineSpectre_BP_C", "ExecuteUbergraph_CineSpectre_BP");

	Params::CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

