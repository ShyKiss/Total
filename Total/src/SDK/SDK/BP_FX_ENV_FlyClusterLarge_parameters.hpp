#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_ENV_FlyClusterLarge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FX_ENV_FlyClusterLarge.BP_FX_ENV_FlyClusterLarge_C.FixUp
// 0x0001 (0x0001 - 0x0000)
struct BP_FX_ENV_FlyClusterLarge_C_FixUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FX_ENV_FlyClusterLarge_C_FixUp) == 0x000001, "Wrong alignment on BP_FX_ENV_FlyClusterLarge_C_FixUp");
static_assert(sizeof(BP_FX_ENV_FlyClusterLarge_C_FixUp) == 0x000001, "Wrong size on BP_FX_ENV_FlyClusterLarge_C_FixUp");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_FixUp, ReturnValue) == 0x000000, "Member 'BP_FX_ENV_FlyClusterLarge_C_FixUp::ReturnValue' has a wrong offset!");

// Function BP_FX_ENV_FlyClusterLarge.BP_FX_ENV_FlyClusterLarge_C.OnPostActorsPasted
// 0x0010 (0x0010 - 0x0000)
struct BP_FX_ENV_FlyClusterLarge_C_OnPostActorsPasted final
{
public:
	TArray<class AActor*>                         PastedActors;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_FX_ENV_FlyClusterLarge_C_OnPostActorsPasted) == 0x000008, "Wrong alignment on BP_FX_ENV_FlyClusterLarge_C_OnPostActorsPasted");
static_assert(sizeof(BP_FX_ENV_FlyClusterLarge_C_OnPostActorsPasted) == 0x000010, "Wrong size on BP_FX_ENV_FlyClusterLarge_C_OnPostActorsPasted");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_OnPostActorsPasted, PastedActors) == 0x000000, "Member 'BP_FX_ENV_FlyClusterLarge_C_OnPostActorsPasted::PastedActors' has a wrong offset!");

// Function BP_FX_ENV_FlyClusterLarge.BP_FX_ENV_FlyClusterLarge_C.PostDuplicated
// 0x0008 (0x0008 - 0x0000)
struct BP_FX_ENV_FlyClusterLarge_C_PostDuplicated final
{
public:
	class AActor*                                 DuplicationParent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FX_ENV_FlyClusterLarge_C_PostDuplicated) == 0x000008, "Wrong alignment on BP_FX_ENV_FlyClusterLarge_C_PostDuplicated");
static_assert(sizeof(BP_FX_ENV_FlyClusterLarge_C_PostDuplicated) == 0x000008, "Wrong size on BP_FX_ENV_FlyClusterLarge_C_PostDuplicated");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_PostDuplicated, DuplicationParent) == 0x000000, "Member 'BP_FX_ENV_FlyClusterLarge_C_PostDuplicated::DuplicationParent' has a wrong offset!");

// Function BP_FX_ENV_FlyClusterLarge.BP_FX_ENV_FlyClusterLarge_C.PostEditChange
// 0x0008 (0x0008 - 0x0000)
struct BP_FX_ENV_FlyClusterLarge_C_PostEditChange final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FX_ENV_FlyClusterLarge_C_PostEditChange) == 0x000004, "Wrong alignment on BP_FX_ENV_FlyClusterLarge_C_PostEditChange");
static_assert(sizeof(BP_FX_ENV_FlyClusterLarge_C_PostEditChange) == 0x000008, "Wrong size on BP_FX_ENV_FlyClusterLarge_C_PostEditChange");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_PostEditChange, PropertyName) == 0x000000, "Member 'BP_FX_ENV_FlyClusterLarge_C_PostEditChange::PropertyName' has a wrong offset!");

// Function BP_FX_ENV_FlyClusterLarge.BP_FX_ENV_FlyClusterLarge_C.PostEditMove
// 0x0001 (0x0001 - 0x0000)
struct BP_FX_ENV_FlyClusterLarge_C_PostEditMove final
{
public:
	bool                                          bFinished;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FX_ENV_FlyClusterLarge_C_PostEditMove) == 0x000001, "Wrong alignment on BP_FX_ENV_FlyClusterLarge_C_PostEditMove");
static_assert(sizeof(BP_FX_ENV_FlyClusterLarge_C_PostEditMove) == 0x000001, "Wrong size on BP_FX_ENV_FlyClusterLarge_C_PostEditMove");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_PostEditMove, bFinished) == 0x000000, "Member 'BP_FX_ENV_FlyClusterLarge_C_PostEditMove::bFinished' has a wrong offset!");

// Function BP_FX_ENV_FlyClusterLarge.BP_FX_ENV_FlyClusterLarge_C.ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge
// 0x0038 (0x0038 - 0x0000)
struct BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditorViewportRealtime_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_pastedActors;                         // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 K2Node_Event_duplicationParent;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_propertyName;                         // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFinished;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge) == 0x000008, "Wrong alignment on BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge");
static_assert(sizeof(BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge) == 0x000038, "Wrong size on BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge, EntryPoint) == 0x000000, "Member 'BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge, CallFunc_IsEditorViewportRealtime_ReturnValue) == 0x000004, "Member 'BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge::CallFunc_IsEditorViewportRealtime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge, K2Node_Event_pastedActors) == 0x000008, "Member 'BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge::K2Node_Event_pastedActors' has a wrong offset!");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge, K2Node_Event_duplicationParent) == 0x000018, "Member 'BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge::K2Node_Event_duplicationParent' has a wrong offset!");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge, K2Node_Event_propertyName) == 0x000020, "Member 'BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge::K2Node_Event_propertyName' has a wrong offset!");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge, K2Node_Event_bFinished) == 0x000028, "Member 'BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge::K2Node_Event_bFinished' has a wrong offset!");
static_assert(offsetof(BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00002C, "Member 'BP_FX_ENV_FlyClusterLarge_C_ExecuteUbergraph_BP_FX_ENV_FlyClusterLarge::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

