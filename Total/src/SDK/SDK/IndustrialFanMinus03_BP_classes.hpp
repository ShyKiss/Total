#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IndustrialFanMinus03_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RBStationnaryActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass IndustrialFan-03_BP.IndustrialFan-03_BP_C
// 0x0030 (0x0270 - 0x0240)
class AIndustrialFanMinus03_BP_C final : public ARBStationnaryActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   IndustrialFanBladesMinus01;                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RotationNode;                                      // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CeilingFanBaseMinus01;                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RotateSpeed;                                       // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_IndustrialFanMinus03_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IndustrialFan-03_BP_C">();
	}
	static class AIndustrialFanMinus03_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AIndustrialFanMinus03_BP_C>();
	}
};
static_assert(alignof(AIndustrialFanMinus03_BP_C) == 0x000008, "Wrong alignment on AIndustrialFanMinus03_BP_C");
static_assert(sizeof(AIndustrialFanMinus03_BP_C) == 0x000270, "Wrong size on AIndustrialFanMinus03_BP_C");
static_assert(offsetof(AIndustrialFanMinus03_BP_C, UberGraphFrame) == 0x000240, "Member 'AIndustrialFanMinus03_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AIndustrialFanMinus03_BP_C, IndustrialFanBladesMinus01) == 0x000248, "Member 'AIndustrialFanMinus03_BP_C::IndustrialFanBladesMinus01' has a wrong offset!");
static_assert(offsetof(AIndustrialFanMinus03_BP_C, RotationNode) == 0x000250, "Member 'AIndustrialFanMinus03_BP_C::RotationNode' has a wrong offset!");
static_assert(offsetof(AIndustrialFanMinus03_BP_C, RBSound) == 0x000258, "Member 'AIndustrialFanMinus03_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(AIndustrialFanMinus03_BP_C, CeilingFanBaseMinus01) == 0x000260, "Member 'AIndustrialFanMinus03_BP_C::CeilingFanBaseMinus01' has a wrong offset!");
static_assert(offsetof(AIndustrialFanMinus03_BP_C, RotateSpeed) == 0x000268, "Member 'AIndustrialFanMinus03_BP_C::RotateSpeed' has a wrong offset!");

}

