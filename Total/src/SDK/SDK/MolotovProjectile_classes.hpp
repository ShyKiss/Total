#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MolotovProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MolotovProjectile.MolotovProjectile_C
// 0x0088 (0x03A0 - 0x0318)
class AMolotovProjectile_C final : public ARBMolotovProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      MolotovProjectile_NS;                              // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Ptc_BurningBottle;                                 // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Intensity_55462148454B775C71A42BB8BB43C0A5; // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_55462148454B775C71A42BB8BB43C0A5; // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_HideFlames_CEF89AC54A66DC96993E959757EE2EDA; // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Intensity_CEF89AC54A66DC96993E959757EE2EDA; // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_CEF89AC54A66DC96993E959757EE2EDA; // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinFireScale;                                      // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFireScale;                                      // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Ptc_FireGround;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightLocation;                                     // 0x0378(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPreviewParticles;                                 // 0x0384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DebugDataIndex;                                    // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        DebugPositionList;                                 // 0x0390(0x0010)(Edit, BlueprintVisible)

public:
	void GetCurrentDebugData();
	void DisplayDebugDraw();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void ReceiveBeginPlay();
	void Event_OnFireStarted(float LifeTime);
	void Event_OnFireFinished();
	void ExecuteUbergraph_MolotovProjectile(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MolotovProjectile_C">();
	}
	static class AMolotovProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMolotovProjectile_C>();
	}
};
static_assert(alignof(AMolotovProjectile_C) == 0x000008, "Wrong alignment on AMolotovProjectile_C");
static_assert(sizeof(AMolotovProjectile_C) == 0x0003A0, "Wrong size on AMolotovProjectile_C");
static_assert(offsetof(AMolotovProjectile_C, UberGraphFrame) == 0x000318, "Member 'AMolotovProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, MolotovProjectile_NS) == 0x000320, "Member 'AMolotovProjectile_C::MolotovProjectile_NS' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, RBSound) == 0x000328, "Member 'AMolotovProjectile_C::RBSound' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, Ptc_BurningBottle) == 0x000330, "Member 'AMolotovProjectile_C::Ptc_BurningBottle' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, PointLight) == 0x000338, "Member 'AMolotovProjectile_C::PointLight' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, Timeline_1_Intensity_55462148454B775C71A42BB8BB43C0A5) == 0x000340, "Member 'AMolotovProjectile_C::Timeline_1_Intensity_55462148454B775C71A42BB8BB43C0A5' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, Timeline_1__Direction_55462148454B775C71A42BB8BB43C0A5) == 0x000344, "Member 'AMolotovProjectile_C::Timeline_1__Direction_55462148454B775C71A42BB8BB43C0A5' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, Timeline_1) == 0x000348, "Member 'AMolotovProjectile_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, Timeline_0_HideFlames_CEF89AC54A66DC96993E959757EE2EDA) == 0x000350, "Member 'AMolotovProjectile_C::Timeline_0_HideFlames_CEF89AC54A66DC96993E959757EE2EDA' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, Timeline_0_Intensity_CEF89AC54A66DC96993E959757EE2EDA) == 0x000354, "Member 'AMolotovProjectile_C::Timeline_0_Intensity_CEF89AC54A66DC96993E959757EE2EDA' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, Timeline_0__Direction_CEF89AC54A66DC96993E959757EE2EDA) == 0x000358, "Member 'AMolotovProjectile_C::Timeline_0__Direction_CEF89AC54A66DC96993E959757EE2EDA' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, Timeline_0) == 0x000360, "Member 'AMolotovProjectile_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, MinFireScale) == 0x000368, "Member 'AMolotovProjectile_C::MinFireScale' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, MaxFireScale) == 0x00036C, "Member 'AMolotovProjectile_C::MaxFireScale' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, Ptc_FireGround) == 0x000370, "Member 'AMolotovProjectile_C::Ptc_FireGround' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, LightLocation) == 0x000378, "Member 'AMolotovProjectile_C::LightLocation' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, bPreviewParticles) == 0x000384, "Member 'AMolotovProjectile_C::bPreviewParticles' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, DebugDataIndex) == 0x000388, "Member 'AMolotovProjectile_C::DebugDataIndex' has a wrong offset!");
static_assert(offsetof(AMolotovProjectile_C, DebugPositionList) == 0x000390, "Member 'AMolotovProjectile_C::DebugPositionList' has a wrong offset!");

}

