#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_ConditionalContainer_BP

#include "Basic.hpp"


namespace SDK::Params
{

// Function Base_ConditionalContainer_BP.Base_ConditionalContainer_BP_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct Base_ConditionalContainer_BP_C_UserConstructionScript final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_ConditionalContainer_BP_C_UserConstructionScript) == 0x000004, "Wrong alignment on Base_ConditionalContainer_BP_C_UserConstructionScript");
static_assert(sizeof(Base_ConditionalContainer_BP_C_UserConstructionScript) == 0x000020, "Wrong size on Base_ConditionalContainer_BP_C_UserConstructionScript");
static_assert(offsetof(Base_ConditionalContainer_BP_C_UserConstructionScript, Temp_name_Variable) == 0x000000, "Member 'Base_ConditionalContainer_BP_C_UserConstructionScript::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Base_ConditionalContainer_BP_C_UserConstructionScript, Temp_int_Variable) == 0x000008, "Member 'Base_ConditionalContainer_BP_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Base_ConditionalContainer_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Base_ConditionalContainer_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_ConditionalContainer_BP_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'Base_ConditionalContainer_BP_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_ConditionalContainer_BP_C_UserConstructionScript, CallFunc_GetNumMaterials_ReturnValue) == 0x000014, "Member 'Base_ConditionalContainer_BP_C_UserConstructionScript::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_ConditionalContainer_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'Base_ConditionalContainer_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_ConditionalContainer_BP_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'Base_ConditionalContainer_BP_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Base_ConditionalContainer_BP.Base_ConditionalContainer_BP_C.ExecuteUbergraph_Base_ConditionalContainer_BP
// 0x0004 (0x0004 - 0x0000)
struct Base_ConditionalContainer_BP_C_ExecuteUbergraph_Base_ConditionalContainer_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_ConditionalContainer_BP_C_ExecuteUbergraph_Base_ConditionalContainer_BP) == 0x000004, "Wrong alignment on Base_ConditionalContainer_BP_C_ExecuteUbergraph_Base_ConditionalContainer_BP");
static_assert(sizeof(Base_ConditionalContainer_BP_C_ExecuteUbergraph_Base_ConditionalContainer_BP) == 0x000004, "Wrong size on Base_ConditionalContainer_BP_C_ExecuteUbergraph_Base_ConditionalContainer_BP");
static_assert(offsetof(Base_ConditionalContainer_BP_C_ExecuteUbergraph_Base_ConditionalContainer_BP, EntryPoint) == 0x000000, "Member 'Base_ConditionalContainer_BP_C_ExecuteUbergraph_Base_ConditionalContainer_BP::EntryPoint' has a wrong offset!");

}

