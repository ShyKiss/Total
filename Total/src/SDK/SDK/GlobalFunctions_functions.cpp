#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlobalFunctions

#include "Basic.hpp"

#include "GlobalFunctions_classes.hpp"
#include "GlobalFunctions_parameters.hpp"


namespace SDK
{

// Function GlobalFunctions.GlobalFunctions_C.GetActorsDistance2D
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetActorsDistance2D(class AActor* Actor1, class AActor* Actor2, class UObject* __WorldContext, float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetActorsDistance2D");

	Params::GlobalFunctions_C_GetActorsDistance2D Parms{};

	Parms.Actor1 = Actor1;
	Parms.Actor2 = Actor2;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function GlobalFunctions.GlobalFunctions_C.GetActorsWithinConeAngle
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Targets                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   Actors                                                 (Parm, OutParm)

void UGlobalFunctions_C::GetActorsWithinConeAngle(TArray<class AActor*>& Targets, class AActor* Source, float Angle, class UObject* __WorldContext, TArray<class AActor*>* Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetActorsWithinConeAngle");

	Params::GlobalFunctions_C_GetActorsWithinConeAngle Parms{};

	Parms.Targets = std::move(Targets);
	Parms.Source = Source;
	Parms.Angle = Angle;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Targets = std::move(Parms.Targets);

	if (Actors != nullptr)
		*Actors = std::move(Parms.Actors);
}


// Function GlobalFunctions.GlobalFunctions_C.GetActorsWithinRadius
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Targets                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   Actors                                                 (Parm, OutParm)

void UGlobalFunctions_C::GetActorsWithinRadius(TArray<class AActor*>& Targets, class AActor* Source, float Radius, class UObject* __WorldContext, TArray<class AActor*>* Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetActorsWithinRadius");

	Params::GlobalFunctions_C_GetActorsWithinRadius Parms{};

	Parms.Targets = std::move(Targets);
	Parms.Source = Source;
	Parms.Radius = Radius;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Targets = std::move(Parms.Targets);

	if (Actors != nullptr)
		*Actors = std::move(Parms.Actors);
}


// Function GlobalFunctions.GlobalFunctions_C.GetClosestActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   TargetActors                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bFarthest                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ClosestActor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetClosestActor(class AActor* SourceActor, TArray<class AActor*>& TargetActors, bool bFarthest, class UObject* __WorldContext, class AActor** ClosestActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetClosestActor");

	Params::GlobalFunctions_C_GetClosestActor Parms{};

	Parms.SourceActor = SourceActor;
	Parms.TargetActors = std::move(TargetActors);
	Parms.bFarthest = bFarthest;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	TargetActors = std::move(Parms.TargetActors);

	if (ClosestActor != nullptr)
		*ClosestActor = Parms.ClosestActor;
}


// Function GlobalFunctions.GlobalFunctions_C.GetActorsDistance3D
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetActorsDistance3D(class AActor* Actor1, class AActor* Actor2, class UObject* __WorldContext, float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetActorsDistance3D");

	Params::GlobalFunctions_C_GetActorsDistance3D Parms{};

	Parms.Actor1 = Actor1;
	Parms.Actor2 = Actor2;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function GlobalFunctions.GlobalFunctions_C.GiveSeparateIntFromTime
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number1                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number2                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number3                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number4                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GiveSeparateIntFromTime(int32 Time, class UObject* __WorldContext, int32* Number1, int32* Number2, int32* Number3, int32* Number4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GiveSeparateIntFromTime");

	Params::GlobalFunctions_C_GiveSeparateIntFromTime Parms{};

	Parms.Time = Time;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Number1 != nullptr)
		*Number1 = Parms.Number1;

	if (Number2 != nullptr)
		*Number2 = Parms.Number2;

	if (Number3 != nullptr)
		*Number3 = Parms.Number3;

	if (Number4 != nullptr)
		*Number4 = Parms.Number4;
}


// Function GlobalFunctions.GlobalFunctions_C.SetInteractiveReferenceMeshMaterials
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             NewStaticmeshComponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class UStaticMeshComponent*             RefStaticMeshComponent                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::SetInteractiveReferenceMeshMaterials(class UStaticMeshComponent* NewStaticmeshComponent, const struct FTransform& Transform, class UStaticMeshComponent* RefStaticMeshComponent, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "SetInteractiveReferenceMeshMaterials");

	Params::GlobalFunctions_C_SetInteractiveReferenceMeshMaterials Parms{};

	Parms.NewStaticmeshComponent = NewStaticmeshComponent;
	Parms.Transform = std::move(Transform);
	Parms.RefStaticMeshComponent = RefStaticMeshComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GlobalFunctions.GlobalFunctions_C.CanWeaponApplyDamageType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDamageByFists                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageBySlash                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageByChop                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageByLightBlunt                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDamageByHeavyBlunt                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EWeaponType                             WeaponType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalFunctions_C::CanWeaponApplyDamageType(bool bDamageByFists, bool bDamageBySlash, bool bDamageByChop, bool bDamageByLightBlunt, bool bDamageByHeavyBlunt, EWeaponType WeaponType, class UObject* __WorldContext, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "CanWeaponApplyDamageType");

	Params::GlobalFunctions_C_CanWeaponApplyDamageType Parms{};

	Parms.bDamageByFists = bDamageByFists;
	Parms.bDamageBySlash = bDamageBySlash;
	Parms.bDamageByChop = bDamageByChop;
	Parms.bDamageByLightBlunt = bDamageByLightBlunt;
	Parms.bDamageByHeavyBlunt = bDamageByHeavyBlunt;
	Parms.WeaponType = WeaponType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function GlobalFunctions.GlobalFunctions_C.GetRandomReward
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Reward                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetRandomReward(class UObject* __WorldContext, uint8* Reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "GetRandomReward");

	Params::GlobalFunctions_C_GetRandomReward Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Reward != nullptr)
		*Reward = Parms.Reward;
}


// Function GlobalFunctions.GlobalFunctions_C.ConvertIntToTimeFormat
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Int                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UGlobalFunctions_C::ConvertIntToTimeFormat(int32 Int, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "ConvertIntToTimeFormat");

	Params::GlobalFunctions_C_ConvertIntToTimeFormat Parms{};

	Parms.Int = Int;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalFunctions.GlobalFunctions_C.CreateDynamicMaterials
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              PrimitiveComponent                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           IDs                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    SpecifyIDs                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstanceDynamic*> DynamicMaterials                                       (Parm, OutParm)

void UGlobalFunctions_C::CreateDynamicMaterials(class UPrimitiveComponent*& PrimitiveComponent, TArray<int32>& IDs, bool SpecifyIDs, class UObject* __WorldContext, TArray<class UMaterialInstanceDynamic*>* DynamicMaterials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GlobalFunctions_C", "CreateDynamicMaterials");

	Params::GlobalFunctions_C_CreateDynamicMaterials Parms{};

	Parms.PrimitiveComponent = PrimitiveComponent;
	Parms.IDs = std::move(IDs);
	Parms.SpecifyIDs = SpecifyIDs;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	PrimitiveComponent = Parms.PrimitiveComponent;
	IDs = std::move(Parms.IDs);

	if (DynamicMaterials != nullptr)
		*DynamicMaterials = std::move(Parms.DynamicMaterials);
}


// Function GlobalFunctions.GlobalFunctions_C.GetRandomItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   ItemList                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           NewItem                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalFunctions_C::GetRandomItem(class AActor* Item, TArray<class AActor*>& ItemList, class UObject* __WorldContext, class AActor** NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalFunctions_C", "GetRandomItem");

	Params::GlobalFunctions_C_GetRandomItem Parms{};

	Parms.Item = Item;
	Parms.ItemList = std::move(ItemList);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	ItemList = std::move(Parms.ItemList);

	if (NewItem != nullptr)
		*NewItem = Parms.NewItem;
}

}

