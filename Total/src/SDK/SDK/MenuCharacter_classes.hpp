#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuCharacter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MenuCharacter.MenuCharacter_C
// 0x0218 (0x0470 - 0x0258)
class AMenuCharacter_C final : public ARBCustomizableMenuCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBSpotLightComponent*                  RBSpotLight11;                                     // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight10;                                     // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight9;                                      // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight8;                                      // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight7;                                      // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight6;                                      // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight5;                                      // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Watch;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight4;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CameraBoxDetection;                                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Character_Mesh;                                    // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair_Mesh;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 NightVision;                                       // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Glove_Mesh;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ESOP;                                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ESOP_Battery;                                      // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ESOP_Apparatus;                                    // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Straps;                                            // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 UpperBody_Mesh;                                    // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LowerBody_Mesh;                                    // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head_Mesh;                                         // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 RigChest;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 RigComponent;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBCustomizationOutfit*                 LegendaryOutfit;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECustomizationMenuCategory, class UAnimSequence*> EquipAnimations;                                   // 0x0328(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class URBPlayerCustomizationOption*>   CustomizationOptions;                              // 0x0378(0x0010)(Edit, BlueprintVisible)
	class URBCustomizationOutfit*                 LegendaryOutfit_0;                                 // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBCustomizationOutfit*                 LegendaryOutfit_1;                                 // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         ExtraCustomizationMeshes;                          // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             OncategoryClickedEvent;                            // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ACameraActor*                           CurrentCamera;                                     // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           HeadCamea;                                         // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           LowerBodyCamera;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           UpperBodyCamera;                                   // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           WholeBodyCamera;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           MirrorCamera;                                      // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPoseAsset*                             FacePoseAsset;                                     // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBPlayerCustomizationOption*           HeadOption;                                        // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBEmoteCustomizationOption*            Emote_Option;                                      // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECustomizationMenuCategory, struct FCustomizationCategoryCameras> CamerasPerCategory;                                // 0x0400(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	ECustomizationMenuCategory                    CurrentMenuCategory;                               // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECustomizationMenuCategory                    PreviousMenuCategory;                              // 0x0451(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              SelectedActiveSkill;                               // 0x0452(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_453[0x1];                                      // 0x0453(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DebugPoseIndex;                                    // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CameraIndex;                                       // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Initialized;                                       // 0x045C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsFemale;                                         // 0x045D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug;                                             // 0x045E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAllowRotation;                                    // 0x045F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   HairColorId;                                       // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseThumbnailEmotePose;                             // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CustoApplied;                                      // 0x0469(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ThumbnailEmoteApplied;                             // 0x046A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OncategoryClickedEvent__DelegateSignature(ECustomizationMenuCategory CustomizationMenuCategory);
	void ExecuteUbergraph_MenuCharacter(int32 EntryPoint);
	void Event_SetThumbnailEmoteMode(bool bEnableThumbnailEmoteMode);
	void OnThumbnailEmoteApplied();
	void Event_ClearPoses();
	void Event_SetCustomization(const struct FRBPlayerCustomizationInfo& CustomizationInfo);
	void Event_SetCharacterHidden(bool bIsHidden);
	void SkipToMainPosition();
	void OnWorldPopulateFinished();
	void ReachedMainPosition();
	void OnPawnCustomizationCompleted(class AActor* CustomizationOwner, int32 RequestID, EPawnCustomizationRequestType RequestType);
	void OnPlayerCustoLoaded();
	void OnActiveSkillLoaded();
	void RequestSpawnRig(EActiveSkillType SkillType);
	void OnExtraCustomizationMeshesAddedForSlot(const TArray<class USkeletalMeshComponent*>& AddedExtraMeshes, EPlayerCustomizationSlot Slot);
	void RequestDressCharacter();
	void StartInteracting();
	void GoingToMainPosition();
	void BindOnCategoryChanged();
	void OnCatetoryClicked(ECustomizationMenuCategory CustomizationMenuCategory);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void AddCharacterRotation(float Factor);
	void OnWorldFullyLoaded();
	void UserConstructionScript();
	void ActivateViewer(class AActor* CustomReturnViewTarget);
	void ChangeBodyType(bool IsFemale, TArray<class URBPlayerCustomizationOption*>& Options);
	void CleanSpawnedRigs();
	void CycleDebugPose();
	void CycleCameras(ECustomizationMenuCategory Selection, float blendTime);
	void DressCharacter();
	void DeactivateViewer();
	void GetSelectedCustomizationOption(EPlayerCustomizationSlot Slot, class URBPlayerCustomizationOption** SelectedOption);
	void GetCameras();
	void HasCustomizationChanged(const struct FRBPlayerCustomizationInfo& RBPlayerCustomizationInfo, bool* bHasChanged);
	void LoadCustomization();
	void On_Item_Equipped();
	void OnItemBought();
	void OnCategoryClicked(ECustomizationMenuCategory CustomizationCategory);
	void ResetPlacementAndAnim();
	void SetCustomization(const struct FRBPlayerCustomizationInfo& CustomizationInfo);
	void SetLightingChannels();
	void SetLightsActivation(bool bAffectWorld);
	void SetDebugMode(bool Debug_0);
	void SetCharacterHidden(bool Hidden);
	void SetHairColor(class FName NewHairColor);
	void Show();
	void UpdateCustomization(class URBPlayerCustomizationOption* Option);
	void UpdateSlotSelection(class URBPlayerCustomizationOption* NewCustomizationOption);
	void GetFacePoseAsset(class UPoseAsset** FacePoseAsset_0);
	void Event_GetExtraCustomizationMeshes(TArray<class USkeletalMeshComponent*>* Meshes);
	bool OnWorldPopulateFinishedTimeSliced();

	class USkeletalMeshComponent* GetSkeletalMeshComponentForSlot(EPlayerCustomizationSlot Slot) const;
	struct FRBPlayerCustomizationInfo GetPlayerCustomizationInfo() const;
	class UStaticMeshComponent* GetWatchComponent() const;
	class USkeletalMeshComponent* GetMainParentSkeletalMesh() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuCharacter_C">();
	}
	static class AMenuCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMenuCharacter_C>();
	}
};
static_assert(alignof(AMenuCharacter_C) == 0x000008, "Wrong alignment on AMenuCharacter_C");
static_assert(sizeof(AMenuCharacter_C) == 0x000470, "Wrong size on AMenuCharacter_C");
static_assert(offsetof(AMenuCharacter_C, UberGraphFrame) == 0x000258, "Member 'AMenuCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RBSpotLight11) == 0x000260, "Member 'AMenuCharacter_C::RBSpotLight11' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RBSpotLight10) == 0x000268, "Member 'AMenuCharacter_C::RBSpotLight10' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RBSpotLight9) == 0x000270, "Member 'AMenuCharacter_C::RBSpotLight9' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RBSpotLight8) == 0x000278, "Member 'AMenuCharacter_C::RBSpotLight8' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RBSpotLight7) == 0x000280, "Member 'AMenuCharacter_C::RBSpotLight7' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RBSpotLight6) == 0x000288, "Member 'AMenuCharacter_C::RBSpotLight6' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RBSpotLight5) == 0x000290, "Member 'AMenuCharacter_C::RBSpotLight5' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Watch) == 0x000298, "Member 'AMenuCharacter_C::Watch' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RBSpotLight4) == 0x0002A0, "Member 'AMenuCharacter_C::RBSpotLight4' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, CameraBoxDetection) == 0x0002A8, "Member 'AMenuCharacter_C::CameraBoxDetection' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Character_Mesh) == 0x0002B0, "Member 'AMenuCharacter_C::Character_Mesh' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Scene) == 0x0002B8, "Member 'AMenuCharacter_C::Scene' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Hair_Mesh) == 0x0002C0, "Member 'AMenuCharacter_C::Hair_Mesh' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, NightVision) == 0x0002C8, "Member 'AMenuCharacter_C::NightVision' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Glove_Mesh) == 0x0002D0, "Member 'AMenuCharacter_C::Glove_Mesh' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, ESOP) == 0x0002D8, "Member 'AMenuCharacter_C::ESOP' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, ESOP_Battery) == 0x0002E0, "Member 'AMenuCharacter_C::ESOP_Battery' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, ESOP_Apparatus) == 0x0002E8, "Member 'AMenuCharacter_C::ESOP_Apparatus' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Straps) == 0x0002F0, "Member 'AMenuCharacter_C::Straps' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, UpperBody_Mesh) == 0x0002F8, "Member 'AMenuCharacter_C::UpperBody_Mesh' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, LowerBody_Mesh) == 0x000300, "Member 'AMenuCharacter_C::LowerBody_Mesh' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Head_Mesh) == 0x000308, "Member 'AMenuCharacter_C::Head_Mesh' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RigChest) == 0x000310, "Member 'AMenuCharacter_C::RigChest' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, RigComponent) == 0x000318, "Member 'AMenuCharacter_C::RigComponent' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, LegendaryOutfit) == 0x000320, "Member 'AMenuCharacter_C::LegendaryOutfit' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, EquipAnimations) == 0x000328, "Member 'AMenuCharacter_C::EquipAnimations' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, CustomizationOptions) == 0x000378, "Member 'AMenuCharacter_C::CustomizationOptions' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, LegendaryOutfit_0) == 0x000388, "Member 'AMenuCharacter_C::LegendaryOutfit_0' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, LegendaryOutfit_1) == 0x000390, "Member 'AMenuCharacter_C::LegendaryOutfit_1' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, ExtraCustomizationMeshes) == 0x000398, "Member 'AMenuCharacter_C::ExtraCustomizationMeshes' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, OncategoryClickedEvent) == 0x0003A8, "Member 'AMenuCharacter_C::OncategoryClickedEvent' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, CurrentCamera) == 0x0003B8, "Member 'AMenuCharacter_C::CurrentCamera' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, HeadCamea) == 0x0003C0, "Member 'AMenuCharacter_C::HeadCamea' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, LowerBodyCamera) == 0x0003C8, "Member 'AMenuCharacter_C::LowerBodyCamera' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, UpperBodyCamera) == 0x0003D0, "Member 'AMenuCharacter_C::UpperBodyCamera' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, WholeBodyCamera) == 0x0003D8, "Member 'AMenuCharacter_C::WholeBodyCamera' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, MirrorCamera) == 0x0003E0, "Member 'AMenuCharacter_C::MirrorCamera' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, FacePoseAsset) == 0x0003E8, "Member 'AMenuCharacter_C::FacePoseAsset' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, HeadOption) == 0x0003F0, "Member 'AMenuCharacter_C::HeadOption' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Emote_Option) == 0x0003F8, "Member 'AMenuCharacter_C::Emote_Option' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, CamerasPerCategory) == 0x000400, "Member 'AMenuCharacter_C::CamerasPerCategory' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, CurrentMenuCategory) == 0x000450, "Member 'AMenuCharacter_C::CurrentMenuCategory' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, PreviousMenuCategory) == 0x000451, "Member 'AMenuCharacter_C::PreviousMenuCategory' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, SelectedActiveSkill) == 0x000452, "Member 'AMenuCharacter_C::SelectedActiveSkill' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, DebugPoseIndex) == 0x000454, "Member 'AMenuCharacter_C::DebugPoseIndex' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, CameraIndex) == 0x000458, "Member 'AMenuCharacter_C::CameraIndex' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Initialized) == 0x00045C, "Member 'AMenuCharacter_C::Initialized' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, bIsFemale) == 0x00045D, "Member 'AMenuCharacter_C::bIsFemale' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, Debug) == 0x00045E, "Member 'AMenuCharacter_C::Debug' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, bAllowRotation) == 0x00045F, "Member 'AMenuCharacter_C::bAllowRotation' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, HairColorId) == 0x000460, "Member 'AMenuCharacter_C::HairColorId' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, UseThumbnailEmotePose) == 0x000468, "Member 'AMenuCharacter_C::UseThumbnailEmotePose' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, CustoApplied) == 0x000469, "Member 'AMenuCharacter_C::CustoApplied' has a wrong offset!");
static_assert(offsetof(AMenuCharacter_C, ThumbnailEmoteApplied) == 0x00046A, "Member 'AMenuCharacter_C::ThumbnailEmoteApplied' has a wrong offset!");

}

