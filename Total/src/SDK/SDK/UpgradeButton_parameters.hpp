#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UpgradeButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "OPP_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UpgradeButton.UpgradeButton_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct UpgradeButton_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(UpgradeButton_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on UpgradeButton_C_OnRemovedFromFocusPath");
static_assert(sizeof(UpgradeButton_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on UpgradeButton_C_OnRemovedFromFocusPath");
static_assert(offsetof(UpgradeButton_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'UpgradeButton_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.IsConsideredHovered
// 0x0001 (0x0001 - 0x0000)
struct UpgradeButton_C_IsConsideredHovered final
{
public:
	bool                                          bConsideredHovered;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UpgradeButton_C_IsConsideredHovered) == 0x000001, "Wrong alignment on UpgradeButton_C_IsConsideredHovered");
static_assert(sizeof(UpgradeButton_C_IsConsideredHovered) == 0x000001, "Wrong size on UpgradeButton_C_IsConsideredHovered");
static_assert(offsetof(UpgradeButton_C_IsConsideredHovered, bConsideredHovered) == 0x000000, "Member 'UpgradeButton_C_IsConsideredHovered::bConsideredHovered' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.SetFocused
// 0x0018 (0x0018 - 0x0000)
struct UpgradeButton_C_SetFocused final
{
public:
	bool                                          bInFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELoadoutElementType                           K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradeButton_C_SetFocused) == 0x000008, "Wrong alignment on UpgradeButton_C_SetFocused");
static_assert(sizeof(UpgradeButton_C_SetFocused) == 0x000018, "Wrong size on UpgradeButton_C_SetFocused");
static_assert(offsetof(UpgradeButton_C_SetFocused, bInFocused) == 0x000000, "Member 'UpgradeButton_C_SetFocused::bInFocused' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetFocused, bWasConsideredHovered) == 0x000001, "Member 'UpgradeButton_C_SetFocused::bWasConsideredHovered' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetFocused, Temp_bool_Variable) == 0x000002, "Member 'UpgradeButton_C_SetFocused::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetFocused, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'UpgradeButton_C_SetFocused::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'UpgradeButton_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetFocused, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000005, "Member 'UpgradeButton_C_SetFocused::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetFocused, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x000006, "Member 'UpgradeButton_C_SetFocused::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000007, "Member 'UpgradeButton_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetFocused, CallFunc_GetMenuManager_ReturnValue) == 0x000008, "Member 'UpgradeButton_C_SetFocused::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetFocused, K2Node_Select_Default) == 0x000010, "Member 'UpgradeButton_C_SetFocused::K2Node_Select_Default' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct UpgradeButton_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(UpgradeButton_C_OnFocusReceived) == 0x000008, "Wrong alignment on UpgradeButton_C_OnFocusReceived");
static_assert(sizeof(UpgradeButton_C_OnFocusReceived) == 0x0001B0, "Wrong size on UpgradeButton_C_OnFocusReceived");
static_assert(offsetof(UpgradeButton_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'UpgradeButton_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'UpgradeButton_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'UpgradeButton_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'UpgradeButton_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.SetHovered
// 0x0018 (0x0018 - 0x0000)
struct UpgradeButton_C_SetHovered final
{
public:
	bool                                          bInHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELoadoutElementType                           K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradeButton_C_SetHovered) == 0x000008, "Wrong alignment on UpgradeButton_C_SetHovered");
static_assert(sizeof(UpgradeButton_C_SetHovered) == 0x000018, "Wrong size on UpgradeButton_C_SetHovered");
static_assert(offsetof(UpgradeButton_C_SetHovered, bInHovered) == 0x000000, "Member 'UpgradeButton_C_SetHovered::bInHovered' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetHovered, bWasConsideredHovered) == 0x000001, "Member 'UpgradeButton_C_SetHovered::bWasConsideredHovered' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetHovered, Temp_bool_Variable) == 0x000002, "Member 'UpgradeButton_C_SetHovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetHovered, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'UpgradeButton_C_SetHovered::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetHovered, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000004, "Member 'UpgradeButton_C_SetHovered::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetHovered, K2Node_Select_Default) == 0x000005, "Member 'UpgradeButton_C_SetHovered::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000006, "Member 'UpgradeButton_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetHovered, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x000007, "Member 'UpgradeButton_C_SetHovered::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000008, "Member 'UpgradeButton_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_SetHovered, CallFunc_GetMenuManager_ReturnValue) == 0x000010, "Member 'UpgradeButton_C_SetHovered::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.Refresh
// 0x01A8 (0x01A8 - 0x0000)
struct UpgradeButton_C_Refresh final
{
public:
	bool                                          bWasAcquired;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuUpgradeItemInfo                   CallFunc_GetUpgradeItemInfo_ReturnValue;           // 0x0018(0x0190)()
};
static_assert(alignof(UpgradeButton_C_Refresh) == 0x000008, "Wrong alignment on UpgradeButton_C_Refresh");
static_assert(sizeof(UpgradeButton_C_Refresh) == 0x0001A8, "Wrong size on UpgradeButton_C_Refresh");
static_assert(offsetof(UpgradeButton_C_Refresh, bWasAcquired) == 0x000000, "Member 'UpgradeButton_C_Refresh::bWasAcquired' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Refresh, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'UpgradeButton_C_Refresh::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Refresh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'UpgradeButton_C_Refresh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Refresh, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'UpgradeButton_C_Refresh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Refresh, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'UpgradeButton_C_Refresh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Refresh, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'UpgradeButton_C_Refresh::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Refresh, CallFunc_GetUpgradeItemInfo_ReturnValue) == 0x000018, "Member 'UpgradeButton_C_Refresh::CallFunc_GetUpgradeItemInfo_ReturnValue' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.Init
// 0x01B0 (0x01B0 - 0x0000)
struct UpgradeButton_C_Init final
{
public:
	bool                                          bIsLoadout_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemId;                                            // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             UpgradeIcon_0;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplayNumber_0;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ELoadoutElementType                           OverrideLoadoutHoverType_0;                        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuUpgradeItemInfo                   CallFunc_GetUpgradeItemInfo_ReturnValue;           // 0x0020(0x0190)()
};
static_assert(alignof(UpgradeButton_C_Init) == 0x000008, "Wrong alignment on UpgradeButton_C_Init");
static_assert(sizeof(UpgradeButton_C_Init) == 0x0001B0, "Wrong size on UpgradeButton_C_Init");
static_assert(offsetof(UpgradeButton_C_Init, bIsLoadout_0) == 0x000000, "Member 'UpgradeButton_C_Init::bIsLoadout_0' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Init, ItemId) == 0x000004, "Member 'UpgradeButton_C_Init::ItemId' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Init, UpgradeIcon_0) == 0x000010, "Member 'UpgradeButton_C_Init::UpgradeIcon_0' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Init, bDisplayNumber_0) == 0x000018, "Member 'UpgradeButton_C_Init::bDisplayNumber_0' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Init, OverrideLoadoutHoverType_0) == 0x000019, "Member 'UpgradeButton_C_Init::OverrideLoadoutHoverType_0' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Init, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'UpgradeButton_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Init, CallFunc_GetUpgradeItemInfo_ReturnValue) == 0x000020, "Member 'UpgradeButton_C_Init::CallFunc_GetUpgradeItemInfo_ReturnValue' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.Setup
// 0x0298 (0x0298 - 0x0000)
struct UpgradeButton_C_Setup final
{
public:
	float                                         Temp_float_Variable;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemProgressionCategory                      Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0018)()
	ECurrencyType                                 Temp_byte_Variable_3;                              // 0x0080(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuUpgradeItemState                         Temp_byte_Variable_6;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMenuUpgradeItemState                         Temp_byte_Variable_7;                              // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuUpgradeItemState                         Temp_byte_Variable_15;                             // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_6;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_7;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerProgressionData*               CallFunc_GetLocalPlayerProgressionData_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBItemProgressionData                 CallFunc_GetItemProgressionData_ReturnValue;       // 0x00F0(0x0170)(ConstParm)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_8;                           // 0x0268(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0280(0x0018)()
};
static_assert(alignof(UpgradeButton_C_Setup) == 0x000008, "Wrong alignment on UpgradeButton_C_Setup");
static_assert(sizeof(UpgradeButton_C_Setup) == 0x000298, "Wrong size on UpgradeButton_C_Setup");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_float_Variable) == 0x000000, "Member 'UpgradeButton_C_Setup::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable) == 0x000004, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable) == 0x000005, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_1) == 0x000006, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_2) == 0x000007, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_text_Variable) == 0x000008, "Member 'UpgradeButton_C_Setup::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_text_Variable_1) == 0x000020, "Member 'UpgradeButton_C_Setup::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_text_Variable_2) == 0x000038, "Member 'UpgradeButton_C_Setup::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_text_Variable_3) == 0x000050, "Member 'UpgradeButton_C_Setup::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_text_Variable_4) == 0x000068, "Member 'UpgradeButton_C_Setup::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_3) == 0x000080, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_1) == 0x000081, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_4) == 0x000082, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_5) == 0x000083, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_6) == 0x000084, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_2) == 0x000085, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_3) == 0x000086, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_4) == 0x000087, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_5) == 0x000088, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_6) == 0x000089, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_7) == 0x00008A, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_8) == 0x00008B, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_9) == 0x00008C, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_7) == 0x00008D, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_8) == 0x00008E, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_9) == 0x00008F, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_10) == 0x000090, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_11) == 0x000091, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_12) == 0x000092, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_10) == 0x000093, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_13) == 0x000094, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_14) == 0x000095, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_15) == 0x000096, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_float_Variable_1) == 0x000098, "Member 'UpgradeButton_C_Setup::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_float_Variable_2) == 0x00009C, "Member 'UpgradeButton_C_Setup::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_float_Variable_3) == 0x0000A0, "Member 'UpgradeButton_C_Setup::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_float_Variable_4) == 0x0000A4, "Member 'UpgradeButton_C_Setup::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_float_Variable_5) == 0x0000A8, "Member 'UpgradeButton_C_Setup::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_float_Variable_6) == 0x0000AC, "Member 'UpgradeButton_C_Setup::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_float_Variable_7) == 0x0000B0, "Member 'UpgradeButton_C_Setup::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_float_Variable_8) == 0x0000B4, "Member 'UpgradeButton_C_Setup::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_11) == 0x0000B8, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_16) == 0x0000B9, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_byte_Variable_17) == 0x0000BA, "Member 'UpgradeButton_C_Setup::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x0000BB, "Member 'UpgradeButton_C_Setup::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000BC, "Member 'UpgradeButton_C_Setup::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_SelectColor_ReturnValue) == 0x0000C0, "Member 'UpgradeButton_C_Setup::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x0000D0, "Member 'UpgradeButton_C_Setup::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, K2Node_Select_Default) == 0x0000D1, "Member 'UpgradeButton_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, K2Node_Select_Default_1) == 0x0000D2, "Member 'UpgradeButton_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, Temp_bool_Variable_12) == 0x0000D3, "Member 'UpgradeButton_C_Setup::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D4, "Member 'UpgradeButton_C_Setup::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_Not_PreBool_ReturnValue) == 0x0000D5, "Member 'UpgradeButton_C_Setup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, K2Node_Select_Default_2) == 0x0000D6, "Member 'UpgradeButton_C_Setup::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, K2Node_Select_Default_3) == 0x0000D7, "Member 'UpgradeButton_C_Setup::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'UpgradeButton_C_Setup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D9, "Member 'UpgradeButton_C_Setup::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, K2Node_Select_Default_4) == 0x0000DA, "Member 'UpgradeButton_C_Setup::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, K2Node_Select_Default_5) == 0x0000DB, "Member 'UpgradeButton_C_Setup::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, K2Node_Select_Default_6) == 0x0000DC, "Member 'UpgradeButton_C_Setup::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, K2Node_Select_Default_7) == 0x0000E0, "Member 'UpgradeButton_C_Setup::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_GetLocalPlayerProgressionData_ReturnValue) == 0x0000E8, "Member 'UpgradeButton_C_Setup::CallFunc_GetLocalPlayerProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_GetItemProgressionData_ReturnValue) == 0x0000F0, "Member 'UpgradeButton_C_Setup::CallFunc_GetItemProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_Map_Find_Value) == 0x000260, "Member 'UpgradeButton_C_Setup::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_Map_Find_ReturnValue) == 0x000264, "Member 'UpgradeButton_C_Setup::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, K2Node_Select_Default_8) == 0x000268, "Member 'UpgradeButton_C_Setup::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_Setup, CallFunc_Conv_IntToText_ReturnValue) == 0x000280, "Member 'UpgradeButton_C_Setup::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.OnMenuActionProgressChanged
// 0x000C (0x000C - 0x0000)
struct UpgradeButton_C_OnMenuActionProgressChanged final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewProgress;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradeButton_C_OnMenuActionProgressChanged) == 0x000004, "Wrong alignment on UpgradeButton_C_OnMenuActionProgressChanged");
static_assert(sizeof(UpgradeButton_C_OnMenuActionProgressChanged) == 0x00000C, "Wrong size on UpgradeButton_C_OnMenuActionProgressChanged");
static_assert(offsetof(UpgradeButton_C_OnMenuActionProgressChanged, ActionName) == 0x000000, "Member 'UpgradeButton_C_OnMenuActionProgressChanged::ActionName' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_OnMenuActionProgressChanged, NewProgress) == 0x000008, "Member 'UpgradeButton_C_OnMenuActionProgressChanged::NewProgress' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.ExecuteUbergraph_UpgradeButton
// 0x0070 (0x0070 - 0x0000)
struct UpgradeButton_C_ExecuteUbergraph_UpgradeButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName& ActionName, float NewProgress)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_LastReset_Variable;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStageResetCount_ReturnValue;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_actionName;                     // 0x0034(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_newProgress;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBMenuPlayerController*                CallFunc_GetLocalMenuController_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBMenuPlayerController*                CallFunc_GetLocalMenuController_ReturnValue_1;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton) == 0x000008, "Wrong alignment on UpgradeButton_C_ExecuteUbergraph_UpgradeButton");
static_assert(sizeof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton) == 0x000070, "Wrong size on UpgradeButton_C_ExecuteUbergraph_UpgradeButton");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, EntryPoint) == 0x000000, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, Temp_bool_IsClosed_Variable) == 0x000014, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, Temp_bool_Has_Been_Initd_Variable) == 0x000015, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, Temp_int_LastReset_Variable) == 0x000028, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::Temp_int_LastReset_Variable' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_GetStageResetCount_ReturnValue) == 0x00002C, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_GetStageResetCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, K2Node_CustomEvent_actionName) == 0x000034, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::K2Node_CustomEvent_actionName' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, K2Node_CustomEvent_newProgress) == 0x00003C, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::K2Node_CustomEvent_newProgress' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_GetMenuManager_ReturnValue) == 0x000048, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000050, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_IsValid_ReturnValue_1) == 0x000053, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x000054, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_GetLocalMenuController_ReturnValue) == 0x000058, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_GetLocalMenuController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_GetLocalMenuController_ReturnValue_1) == 0x000060, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_GetLocalMenuController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_IsValid_ReturnValue_2) == 0x000068, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UpgradeButton_C_ExecuteUbergraph_UpgradeButton, CallFunc_IsValid_ReturnValue_3) == 0x000069, "Member 'UpgradeButton_C_ExecuteUbergraph_UpgradeButton::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.OnReleased__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UpgradeButton_C_OnReleased__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradeButton_C_OnReleased__DelegateSignature) == 0x000004, "Wrong alignment on UpgradeButton_C_OnReleased__DelegateSignature");
static_assert(sizeof(UpgradeButton_C_OnReleased__DelegateSignature) == 0x000008, "Wrong size on UpgradeButton_C_OnReleased__DelegateSignature");
static_assert(offsetof(UpgradeButton_C_OnReleased__DelegateSignature, ItemId) == 0x000000, "Member 'UpgradeButton_C_OnReleased__DelegateSignature::ItemId' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.OnPressed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UpgradeButton_C_OnPressed__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradeButton_C_OnPressed__DelegateSignature) == 0x000004, "Wrong alignment on UpgradeButton_C_OnPressed__DelegateSignature");
static_assert(sizeof(UpgradeButton_C_OnPressed__DelegateSignature) == 0x000008, "Wrong size on UpgradeButton_C_OnPressed__DelegateSignature");
static_assert(offsetof(UpgradeButton_C_OnPressed__DelegateSignature, ItemId) == 0x000000, "Member 'UpgradeButton_C_OnPressed__DelegateSignature::ItemId' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UpgradeButton_C_OnClicked__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradeButton_C_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on UpgradeButton_C_OnClicked__DelegateSignature");
static_assert(sizeof(UpgradeButton_C_OnClicked__DelegateSignature) == 0x000008, "Wrong size on UpgradeButton_C_OnClicked__DelegateSignature");
static_assert(offsetof(UpgradeButton_C_OnClicked__DelegateSignature, ItemId) == 0x000000, "Member 'UpgradeButton_C_OnClicked__DelegateSignature::ItemId' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UpgradeButton_C_OnUnhovered__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradeButton_C_OnUnhovered__DelegateSignature) == 0x000004, "Wrong alignment on UpgradeButton_C_OnUnhovered__DelegateSignature");
static_assert(sizeof(UpgradeButton_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on UpgradeButton_C_OnUnhovered__DelegateSignature");
static_assert(offsetof(UpgradeButton_C_OnUnhovered__DelegateSignature, ItemId) == 0x000000, "Member 'UpgradeButton_C_OnUnhovered__DelegateSignature::ItemId' has a wrong offset!");

// Function UpgradeButton.UpgradeButton_C.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UpgradeButton_C_OnHovered__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UpgradeButton_C_OnHovered__DelegateSignature) == 0x000004, "Wrong alignment on UpgradeButton_C_OnHovered__DelegateSignature");
static_assert(sizeof(UpgradeButton_C_OnHovered__DelegateSignature) == 0x000008, "Wrong size on UpgradeButton_C_OnHovered__DelegateSignature");
static_assert(offsetof(UpgradeButton_C_OnHovered__DelegateSignature, ItemId) == 0x000000, "Member 'UpgradeButton_C_OnHovered__DelegateSignature::ItemId' has a wrong offset!");

}

