#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgramTrialVariatorWidget

#include "Basic.hpp"

#include "ProgramTrialVariatorWidget_classes.hpp"
#include "ProgramTrialVariatorWidget_parameters.hpp"


namespace SDK
{

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UProgramTrialVariatorWidget_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "OnFocusReceived");

	Params::ProgramTrialVariatorWidget_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UProgramTrialVariatorWidget_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "OnRemovedFromFocusPath");

	Params::ProgramTrialVariatorWidget_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UProgramTrialVariatorWidget_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "OnAddedToFocusPath");

	Params::ProgramTrialVariatorWidget_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.IsConsideredHovered
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bConsideredHovered                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UProgramTrialVariatorWidget_C::IsConsideredHovered(bool* bConsideredHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "IsConsideredHovered");

	Params::ProgramTrialVariatorWidget_C_IsConsideredHovered Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bConsideredHovered != nullptr)
		*bConsideredHovered = Parms.bConsideredHovered;
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.TriggerHoverEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UProgramTrialVariatorWidget_C::TriggerHoverEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "TriggerHoverEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.SetDetailsDisplayed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDetailsDisplayed_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UProgramTrialVariatorWidget_C::SetDetailsDisplayed(bool bDetailsDisplayed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "SetDetailsDisplayed");

	Params::ProgramTrialVariatorWidget_C_SetDetailsDisplayed Parms{};

	Parms.bDetailsDisplayed_0 = bDetailsDisplayed_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.SetFocused
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFocused_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UProgramTrialVariatorWidget_C::SetFocused(bool bFocused_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "SetFocused");

	Params::ProgramTrialVariatorWidget_C_SetFocused Parms{};

	Parms.bFocused_0 = bFocused_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.SetHovered
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHovered_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UProgramTrialVariatorWidget_C::SetHovered(bool bHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "SetHovered");

	Params::ProgramTrialVariatorWidget_C_SetHovered Parms{};

	Parms.bHovered_0 = bHovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.InitFromVariatorInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URBVariatorInfo*                  VariatorInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UProgramTrialVariatorWidget_C::InitFromVariatorInfo(class URBVariatorInfo* VariatorInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "InitFromVariatorInfo");

	Params::ProgramTrialVariatorWidget_C_InitFromVariatorInfo Parms{};

	Parms.VariatorInfo = VariatorInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.InitFromDifficulty
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameDifficulty                         Difficulty                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UProgramTrialVariatorWidget_C::InitFromDifficulty(EGameDifficulty Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "InitFromDifficulty");

	Params::ProgramTrialVariatorWidget_C_InitFromDifficulty Parms{};

	Parms.Difficulty = Difficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.Refresh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UProgramTrialVariatorWidget_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UProgramTrialVariatorWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "PreConstruct");

	Params::ProgramTrialVariatorWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.BndEvt__ProgramTrialVariatorWidget_Button_0_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UProgramTrialVariatorWidget_C::BndEvt__ProgramTrialVariatorWidget_Button_0_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "BndEvt__ProgramTrialVariatorWidget_Button_0_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.BndEvt__ProgramTrialVariatorWidget_Button_0_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UProgramTrialVariatorWidget_C::BndEvt__ProgramTrialVariatorWidget_Button_0_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "BndEvt__ProgramTrialVariatorWidget_Button_0_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UProgramTrialVariatorWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.OnMenuInputSourceChanged
// (BlueprintCallable, BlueprintEvent)

void UProgramTrialVariatorWidget_C::OnMenuInputSourceChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "OnMenuInputSourceChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UProgramTrialVariatorWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.BndEvt__ProgramTrialVariatorWidget_Button_0_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UProgramTrialVariatorWidget_C::BndEvt__ProgramTrialVariatorWidget_Button_0_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "BndEvt__ProgramTrialVariatorWidget_Button_0_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.ExecuteUbergraph_ProgramTrialVariatorWidget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UProgramTrialVariatorWidget_C::ExecuteUbergraph_ProgramTrialVariatorWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "ExecuteUbergraph_ProgramTrialVariatorWidget");

	Params::ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.OnClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UProgramTrialVariatorWidget_C::OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.OnUnhovered__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UProgramTrialVariatorWidget_C*    Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UProgramTrialVariatorWidget_C::OnUnhovered__DelegateSignature(class UProgramTrialVariatorWidget_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "OnUnhovered__DelegateSignature");

	Params::ProgramTrialVariatorWidget_C_OnUnhovered__DelegateSignature Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.OnHovered__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UProgramTrialVariatorWidget_C*    Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UProgramTrialVariatorWidget_C::OnHovered__DelegateSignature(class UProgramTrialVariatorWidget_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProgramTrialVariatorWidget_C", "OnHovered__DelegateSignature");

	Params::ProgramTrialVariatorWidget_C_OnHovered__DelegateSignature Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}

}

