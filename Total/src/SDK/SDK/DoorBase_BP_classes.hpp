#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DoorBase_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DoorBase_BP.DoorBase_BP_C
// 0x0410 (0x1110 - 0x0D00)
#pragma pack(push, 0x1)
class alignas(0x10) ADoorBase_BP_C : public ARBDoor
{
public:
	uint8                                         Pad_CF8[0x8];                                      // 0x0CF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      DisabledVFX;                                       // 0x0D08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      OnRewireVFX;                                       // 0x0D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      OnHackVFX;                                         // 0x0D18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        HackVFXRoot;                                       // 0x0D20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBDoorSeparatingPlaneComponent*        RBDoorSeparatingPlane;                             // 0x0D28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBDoorLightingComponent*               RBDoorLighting;                                    // 0x0D30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0D38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Editor_DoorKnobBackward;                           // 0x0D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Editor_DoorKnobForward;                            // 0x0D48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBDeadRepulsionBoxComponent*           RBDeadRepulsionBox;                                // 0x0D50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CollisionMesh;                                     // 0x0D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorTrapMinusElectricBoxMinusLeftTop;              // 0x0D60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorTrapMinusElectricBoxMinusLeftBottom;           // 0x0D68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorTrapMinusElectricBoxMinusTopRight;             // 0x0D70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorTrapMinusElectricBoxMinusTopLeft;              // 0x0D78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorTrapMinusElectricBoxMinusTopCornerLeft;        // 0x0D80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorTrapMinusElectricBoxMinusTopCornerRight;       // 0x0D88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorTrapMinusElectricBoxMinusRightTop;             // 0x0D90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorTrapMinusElectricBoxMinusRightBottom;          // 0x0D98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* DoorEditorClearanceBlockerComponent;               // 0x0DA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBInteractionZoneComponent*            PerpendicularInteractZoneBox;                      // 0x0DA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ShakeStartTransform;                               // 0x0DB0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             ShakeEndTransform;                                 // 0x0DE0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bForceNoVolumetricLightmaps;                       // 0x0E10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseLockBars;                                       // 0x0E11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E12[0x6];                                      // 0x0E12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UStaticMeshComponent*>      TrapIndicatorRef;                                  // 0x0E18(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         NumberOfTrappedTells;                              // 0x0E68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6C[0x4];                                      // 0x0E6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TrapTellRef_Right_Bottom;                          // 0x0E70(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             TrapTellRef_Right_Top;                             // 0x0EA0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             TrapTellRef_TopCorner_Right;                       // 0x0ED0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             TrapTellRef_TopCorner_Left;                        // 0x0F00(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             TrapTellRef_Top_Left;                              // 0x0F30(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             TrapTellRef_Top_Right;                             // 0x0F60(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             TrapTellRef_Left_Bottom;                           // 0x0F90(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             TrapTellRef_Left_Top;                              // 0x0FC0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TMap<int32, class UStaticMeshComponent*>      TrapIndicatorCoverRef;                             // 0x0FF0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<int32, class USpotLightComponent*>       TrapIndicatorCoverLight;                           // 0x1040(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UStaticMeshComponent*                   SpawnWindowCollision;                              // 0x1090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseDoorLighting;                                  // 0x1098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1099[0x3];                                     // 0x1099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BrightnessFront;                                   // 0x109C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrightnessBack;                                    // 0x10A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoorLightingSettingsMigrated;                     // 0x10A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A5[0x3];                                     // 0x10A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      DoorPhysicalMaterial;                              // 0x10A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DoorFrameColor;                                    // 0x10B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DoorColor;                                         // 0x10C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTrapIsConverted;                                  // 0x10D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_10D1[0x3];                                     // 0x10D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TrapTellLightOffColor;                             // 0x10D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TrapTellLightOnColor;                              // 0x10E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TrapTellLightOnConvertedColor;                     // 0x10F4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DoorBase_BP(int32 EntryPoint);
	void OnEditorPostLoad();
	void PostToggled(bool bToggleEnabled);
	void Event_SnapToState();
	void BP_OnDoorTrapDisarmed();
	void BP_OnDoorTrapActivated();
	void Event_OnResetStage();
	void BP_OnDoorTrappedStateChanged(bool bTrapped, bool bFromFront);
	void BP_OnActorAttachedToDoor(class AActor* Actor);
	void Event_PostRegisterAllComponents();
	void BP_OnDoorUnhingeEvent(class ARBPawn* Pawn);
	void BP_OnDoorBarsLockingEvent(bool bLocking);
	void BP_OnDoorBashEvent(class ARBPawn* Pawn, bool bSuccess, bool bApplyVisualDoorDamage, EBashDoorType bashType);
	void UserConstructionScript();
	void DisableDestructibleDoorCollision();
	void SetLockBarsVisibility();
	void InitializeSettings(class AActor* Actor);
	void GetRandomTrapIndicator(int32* TellIndex, class UStaticMesh** Mesh, struct FTransform* RelativeTransform);
	void TryAddNewTrapTell(bool bFromFront);
	void ClearAllTrapTells();
	void GetTrapTellMaxIndex(int32* TrapTellMaxIndex);
	void ApplyDoorCollisionTypeToDoor();
	void HasDestructibleDoor(bool* NewParam);
	void AddWindowCollision(class AActor* Actor, class USceneComponent* AttachBase);
	void UpdatePostLoadDoorLightingSettings();
	void ApplyDoorLightingSettings();
	void UpdateCollision(bool bToggledOn);
	void AllowDecals(class UPrimitiveComponent* Component, bool* bAllowDecals);
	void ApplyColorOverrides(bool bConstScript);
	bool FixUp();
	void OnRep_bTrapIsConverted();
	void SetTrapIsConverted(bool bConverted);
	void OnHackStateChanged(EHackState State);

	bool GetFriendlyDeviceIconLocation(struct FVector* Out_location) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DoorBase_BP_C">();
	}
	static class ADoorBase_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADoorBase_BP_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ADoorBase_BP_C) == 0x000010, "Wrong alignment on ADoorBase_BP_C");
static_assert(sizeof(ADoorBase_BP_C) == 0x001110, "Wrong size on ADoorBase_BP_C");
static_assert(offsetof(ADoorBase_BP_C, UberGraphFrame) == 0x000D00, "Member 'ADoorBase_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DisabledVFX) == 0x000D08, "Member 'ADoorBase_BP_C::DisabledVFX' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, OnRewireVFX) == 0x000D10, "Member 'ADoorBase_BP_C::OnRewireVFX' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, OnHackVFX) == 0x000D18, "Member 'ADoorBase_BP_C::OnHackVFX' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, HackVFXRoot) == 0x000D20, "Member 'ADoorBase_BP_C::HackVFXRoot' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, RBDoorSeparatingPlane) == 0x000D28, "Member 'ADoorBase_BP_C::RBDoorSeparatingPlane' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, RBDoorLighting) == 0x000D30, "Member 'ADoorBase_BP_C::RBDoorLighting' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, RBSound) == 0x000D38, "Member 'ADoorBase_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, Editor_DoorKnobBackward) == 0x000D40, "Member 'ADoorBase_BP_C::Editor_DoorKnobBackward' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, Editor_DoorKnobForward) == 0x000D48, "Member 'ADoorBase_BP_C::Editor_DoorKnobForward' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, RBDeadRepulsionBox) == 0x000D50, "Member 'ADoorBase_BP_C::RBDeadRepulsionBox' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, CollisionMesh) == 0x000D58, "Member 'ADoorBase_BP_C::CollisionMesh' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorTrapMinusElectricBoxMinusLeftTop) == 0x000D60, "Member 'ADoorBase_BP_C::DoorTrapMinusElectricBoxMinusLeftTop' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorTrapMinusElectricBoxMinusLeftBottom) == 0x000D68, "Member 'ADoorBase_BP_C::DoorTrapMinusElectricBoxMinusLeftBottom' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorTrapMinusElectricBoxMinusTopRight) == 0x000D70, "Member 'ADoorBase_BP_C::DoorTrapMinusElectricBoxMinusTopRight' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorTrapMinusElectricBoxMinusTopLeft) == 0x000D78, "Member 'ADoorBase_BP_C::DoorTrapMinusElectricBoxMinusTopLeft' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorTrapMinusElectricBoxMinusTopCornerLeft) == 0x000D80, "Member 'ADoorBase_BP_C::DoorTrapMinusElectricBoxMinusTopCornerLeft' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorTrapMinusElectricBoxMinusTopCornerRight) == 0x000D88, "Member 'ADoorBase_BP_C::DoorTrapMinusElectricBoxMinusTopCornerRight' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorTrapMinusElectricBoxMinusRightTop) == 0x000D90, "Member 'ADoorBase_BP_C::DoorTrapMinusElectricBoxMinusRightTop' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorTrapMinusElectricBoxMinusRightBottom) == 0x000D98, "Member 'ADoorBase_BP_C::DoorTrapMinusElectricBoxMinusRightBottom' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorEditorClearanceBlockerComponent) == 0x000DA0, "Member 'ADoorBase_BP_C::DoorEditorClearanceBlockerComponent' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, PerpendicularInteractZoneBox) == 0x000DA8, "Member 'ADoorBase_BP_C::PerpendicularInteractZoneBox' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, ShakeStartTransform) == 0x000DB0, "Member 'ADoorBase_BP_C::ShakeStartTransform' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, ShakeEndTransform) == 0x000DE0, "Member 'ADoorBase_BP_C::ShakeEndTransform' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, bForceNoVolumetricLightmaps) == 0x000E10, "Member 'ADoorBase_BP_C::bForceNoVolumetricLightmaps' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, UseLockBars) == 0x000E11, "Member 'ADoorBase_BP_C::UseLockBars' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapIndicatorRef) == 0x000E18, "Member 'ADoorBase_BP_C::TrapIndicatorRef' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, NumberOfTrappedTells) == 0x000E68, "Member 'ADoorBase_BP_C::NumberOfTrappedTells' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellRef_Right_Bottom) == 0x000E70, "Member 'ADoorBase_BP_C::TrapTellRef_Right_Bottom' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellRef_Right_Top) == 0x000EA0, "Member 'ADoorBase_BP_C::TrapTellRef_Right_Top' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellRef_TopCorner_Right) == 0x000ED0, "Member 'ADoorBase_BP_C::TrapTellRef_TopCorner_Right' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellRef_TopCorner_Left) == 0x000F00, "Member 'ADoorBase_BP_C::TrapTellRef_TopCorner_Left' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellRef_Top_Left) == 0x000F30, "Member 'ADoorBase_BP_C::TrapTellRef_Top_Left' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellRef_Top_Right) == 0x000F60, "Member 'ADoorBase_BP_C::TrapTellRef_Top_Right' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellRef_Left_Bottom) == 0x000F90, "Member 'ADoorBase_BP_C::TrapTellRef_Left_Bottom' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellRef_Left_Top) == 0x000FC0, "Member 'ADoorBase_BP_C::TrapTellRef_Left_Top' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapIndicatorCoverRef) == 0x000FF0, "Member 'ADoorBase_BP_C::TrapIndicatorCoverRef' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapIndicatorCoverLight) == 0x001040, "Member 'ADoorBase_BP_C::TrapIndicatorCoverLight' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, SpawnWindowCollision) == 0x001090, "Member 'ADoorBase_BP_C::SpawnWindowCollision' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, bUseDoorLighting) == 0x001098, "Member 'ADoorBase_BP_C::bUseDoorLighting' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, BrightnessFront) == 0x00109C, "Member 'ADoorBase_BP_C::BrightnessFront' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, BrightnessBack) == 0x0010A0, "Member 'ADoorBase_BP_C::BrightnessBack' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, bDoorLightingSettingsMigrated) == 0x0010A4, "Member 'ADoorBase_BP_C::bDoorLightingSettingsMigrated' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorPhysicalMaterial) == 0x0010A8, "Member 'ADoorBase_BP_C::DoorPhysicalMaterial' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorFrameColor) == 0x0010B0, "Member 'ADoorBase_BP_C::DoorFrameColor' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, DoorColor) == 0x0010C0, "Member 'ADoorBase_BP_C::DoorColor' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, bTrapIsConverted) == 0x0010D0, "Member 'ADoorBase_BP_C::bTrapIsConverted' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellLightOffColor) == 0x0010D4, "Member 'ADoorBase_BP_C::TrapTellLightOffColor' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellLightOnColor) == 0x0010E4, "Member 'ADoorBase_BP_C::TrapTellLightOnColor' has a wrong offset!");
static_assert(offsetof(ADoorBase_BP_C, TrapTellLightOnConvertedColor) == 0x0010F4, "Member 'ADoorBase_BP_C::TrapTellLightOnConvertedColor' has a wrong offset!");

}

