#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RailBlockMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RailBlock-01_BP.RailBlock-01_BP_C.UpdateBlockingCollision
// 0x0004 (0x0004 - 0x0000)
struct RailBlockMinus01_BP_C_UpdateBlockingCollision final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RailBlockMinus01_BP_C_UpdateBlockingCollision) == 0x000001, "Wrong alignment on RailBlockMinus01_BP_C_UpdateBlockingCollision");
static_assert(sizeof(RailBlockMinus01_BP_C_UpdateBlockingCollision) == 0x000004, "Wrong size on RailBlockMinus01_BP_C_UpdateBlockingCollision");
static_assert(offsetof(RailBlockMinus01_BP_C_UpdateBlockingCollision, Temp_bool_Variable) == 0x000000, "Member 'RailBlockMinus01_BP_C_UpdateBlockingCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_UpdateBlockingCollision, Temp_byte_Variable) == 0x000001, "Member 'RailBlockMinus01_BP_C_UpdateBlockingCollision::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_UpdateBlockingCollision, Temp_byte_Variable_1) == 0x000002, "Member 'RailBlockMinus01_BP_C_UpdateBlockingCollision::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_UpdateBlockingCollision, K2Node_Select_Default) == 0x000003, "Member 'RailBlockMinus01_BP_C_UpdateBlockingCollision::K2Node_Select_Default' has a wrong offset!");

// Function RailBlock-01_BP.RailBlock-01_BP_C.ExecuteUbergraph_RailBlock-01_BP
// 0x0180 (0x0180 - 0x0000)
struct RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0024(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x004C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP) == 0x000008, "Wrong alignment on RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP");
static_assert(sizeof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP) == 0x000180, "Wrong size on RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, EntryPoint) == 0x000000, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, Temp_struct_Variable) == 0x000008, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, Temp_delegate_Variable) == 0x000024, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, Temp_struct_Variable_1) == 0x000038, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, CallFunc_Lerp_ReturnValue_1) == 0x000048, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, Temp_delegate_Variable_1) == 0x00004C, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, CallFunc_MakeRotator_ReturnValue_1) == 0x00005C, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000068, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, CallFunc_PostAkEvent_ReturnValue) == 0x0000F0, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000F4, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP, CallFunc_PostAkEvent_ReturnValue_1) == 0x00017C, "Member 'RailBlockMinus01_BP_C_ExecuteUbergraph_RailBlockMinus01_BP::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

}

