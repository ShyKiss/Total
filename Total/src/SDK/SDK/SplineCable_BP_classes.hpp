#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SplineCable_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SplineCable_BP.SplineCable_BP_C
// 0x0040 (0x0270 - 0x0230)
class ASplineCable_BP_C final : public AActor
{
public:
	class USplineComponent*                       Spline;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            StaticMesh;                                        // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Foward_Axis;                                       // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCollision;                                      // 0x0241(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MaterialOverite;                                   // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RelativeRotation;                                  // 0x0250(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanWalkOn;                                         // 0x025C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FixUpDirTwists;                                    // 0x025D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E[0x2];                                      // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   SplineMesh;                                        // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CastShadow;                                        // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCastStaticShadows;                                // 0x0269(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void SetupMeshCollision(class UPrimitiveComponent* MeshComponent);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SplineCable_BP_C">();
	}
	static class ASplineCable_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASplineCable_BP_C>();
	}
};
static_assert(alignof(ASplineCable_BP_C) == 0x000008, "Wrong alignment on ASplineCable_BP_C");
static_assert(sizeof(ASplineCable_BP_C) == 0x000270, "Wrong size on ASplineCable_BP_C");
static_assert(offsetof(ASplineCable_BP_C, Spline) == 0x000230, "Member 'ASplineCable_BP_C::Spline' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, StaticMesh) == 0x000238, "Member 'ASplineCable_BP_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, Foward_Axis) == 0x000240, "Member 'ASplineCable_BP_C::Foward_Axis' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, UseCollision) == 0x000241, "Member 'ASplineCable_BP_C::UseCollision' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, MaterialOverite) == 0x000248, "Member 'ASplineCable_BP_C::MaterialOverite' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, RelativeRotation) == 0x000250, "Member 'ASplineCable_BP_C::RelativeRotation' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, CanWalkOn) == 0x00025C, "Member 'ASplineCable_BP_C::CanWalkOn' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, FixUpDirTwists) == 0x00025D, "Member 'ASplineCable_BP_C::FixUpDirTwists' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, SplineMesh) == 0x000260, "Member 'ASplineCable_BP_C::SplineMesh' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, CastShadow) == 0x000268, "Member 'ASplineCable_BP_C::CastShadow' has a wrong offset!");
static_assert(offsetof(ASplineCable_BP_C, bCastStaticShadows) == 0x000269, "Member 'ASplineCable_BP_C::bCastStaticShadows' has a wrong offset!");

}

