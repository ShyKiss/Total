#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TvChannel_BP

#include "Basic.hpp"

#include "TvChannel_BP_classes.hpp"
#include "TvChannel_BP_parameters.hpp"


namespace SDK
{

// Function tvChannel_BP.tvChannel_BP_C.FormatText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             OutText                                                (Parm, OutParm)

void ATvChannel_BP_C::FormatText(const class FText& Text, class FText* OutText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "FormatText");

	Params::TvChannel_BP_C_FormatText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);
}


// Function tvChannel_BP.tvChannel_BP_C.StreamingTextures
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::StreamingTextures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "StreamingTextures");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.PostSoundToComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkAudioEvent*                    Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsVO                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class URBSoundComponent*                SoundComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::PostSoundToComponent(class UAkAudioEvent* Sound, bool bIsVO, class URBSoundComponent* SoundComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "PostSoundToComponent");

	Params::TvChannel_BP_C_PostSoundToComponent Parms{};

	Parms.Sound = Sound;
	Parms.bIsVO = bIsVO;
	Parms.SoundComponent = SoundComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.UpdateMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TextIntensity                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Noise                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Rorschard                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    MovieFlash                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor                     TextColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::UpdateMaterial(float TextIntensity, class UTexture* Texture, bool Noise, bool Rorschard, bool MovieFlash, const struct FLinearColor& TextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "UpdateMaterial");

	Params::TvChannel_BP_C_UpdateMaterial Parms{};

	Parms.TextIntensity = TextIntensity;
	Parms.Texture = Texture;
	Parms.Noise = Noise;
	Parms.Rorschard = Rorschard;
	Parms.MovieFlash = MovieFlash;
	Parms.TextColor = std::move(TextColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.UpdateTextFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::UpdateTextFunc(const class FText& Text, float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "UpdateTextFunc");

	Params::TvChannel_BP_C_UpdateTextFunc Parms{};

	Parms.Text = std::move(Text);
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.SetSoundVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldBeHeard                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Actor__self_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::SetSoundVolume(bool ShouldBeHeard, class AActor* Actor__self_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "SetSoundVolume");

	Params::TvChannel_BP_C_SetSoundVolume Parms{};

	Parms.ShouldBeHeard = ShouldBeHeard;
	Parms.Actor__self_ = Actor__self_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.GetElapsedAnimTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::GetElapsedAnimTime(float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "GetElapsedAnimTime");

	Params::TvChannel_BP_C_GetElapsedAnimTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function tvChannel_BP.tvChannel_BP_C.Set Material Dynamic Parameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Height                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ChromaticAberation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NoiseDeform                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefreshJumpLuminosity                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Interlace                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         TVmovie                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::Set_Material_Dynamic_Parameter(float Height, float ChromaticAberation, float NoiseDeform, float RefreshJumpLuminosity, float Interlace, class UTexture* TVmovie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "Set Material Dynamic Parameter");

	Params::TvChannel_BP_C_Set_Material_Dynamic_Parameter Parms{};

	Parms.Height = Height;
	Parms.ChromaticAberation = ChromaticAberation;
	Parms.NoiseDeform = NoiseDeform;
	Parms.RefreshJumpLuminosity = RefreshJumpLuminosity;
	Parms.Interlace = Interlace;
	Parms.TVmovie = TVmovie;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.PlaySoundFromTV
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkAudioEvent*                    Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayOnNarrator                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PlayAsVO                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATvChannel_BP_C::PlaySoundFromTV(class UAkAudioEvent* Sound, bool PlayOnNarrator, bool PlayAsVO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "PlaySoundFromTV");

	Params::TvChannel_BP_C_PlaySoundFromTV Parms{};

	Parms.Sound = Sound;
	Parms.PlayOnNarrator = PlayOnNarrator;
	Parms.PlayAsVO = PlayAsVO;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.PlayRandomAnim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       Data_Table                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LoopSingleAnimation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OnlySingleRow                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATvChannel_BP_C::PlayRandomAnim(class UDataTable* Data_Table, bool LoopSingleAnimation, bool OnlySingleRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "PlayRandomAnim");

	Params::TvChannel_BP_C_PlayRandomAnim Parms{};

	Parms.Data_Table = Data_Table;
	Parms.LoopSingleAnimation = LoopSingleAnimation;
	Parms.OnlySingleRow = OnlySingleRow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.ShouldLoopAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATvChannel_BP_C::ShouldLoopAnim(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "ShouldLoopAnim");

	Params::TvChannel_BP_C_ShouldLoopAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function tvChannel_BP.tvChannel_BP_C.ValidateTexture
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::ValidateTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "ValidateTexture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.GetRandomDataTableRow
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UDataTable*                       Data_Table                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             RowName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::GetRandomDataTableRow(class UDataTable* Data_Table, class FName* RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "GetRandomDataTableRow");

	Params::TvChannel_BP_C_GetRandomDataTableRow Parms{};

	Parms.Data_Table = Data_Table;

	UObject::ProcessEvent(Func, &Parms);

	if (RowName != nullptr)
		*RowName = Parms.RowName;
}


// Function tvChannel_BP.tvChannel_BP_C.Create Dynamic Texture
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::Create_Dynamic_Texture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "Create Dynamic Texture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.Set Test Screen Mat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::Set_Test_Screen_Mat(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "Set Test Screen Mat");

	Params::TvChannel_BP_C_Set_Test_Screen_Mat Parms{};

	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATvChannel_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.startMovie
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FTextAnim_Struc>          TextAnim                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UMediaSource*                     Movie                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkAudioEvent*                    MovieSound                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::StartMovie(const TArray<struct FTextAnim_Struc>& TextAnim, class UMediaSource* Movie, class UAkAudioEvent* MovieSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "startMovie");

	Params::TvChannel_BP_C_StartMovie Parms{};

	Parms.TextAnim = std::move(TextAnim);
	Parms.Movie = Movie;
	Parms.MovieSound = MovieSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.StartTextAnimation
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FTextAnim_Struc>          TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ATvChannel_BP_C::StartTextAnimation(const TArray<struct FTextAnim_Struc>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "StartTextAnimation");

	Params::TvChannel_BP_C_StartTextAnimation Parms{};

	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.EndMovie
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::EndMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "EndMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.PlayCurrentAnim
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::PlayCurrentAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "PlayCurrentAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.CreateTextTexture
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::CreateTextTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "CreateTextTexture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.DrawRenderTarget
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::DrawRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "DrawRenderTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.Event_OnCurrentlyPlayingDataChanged
// (Event, Public, BlueprintEvent)

void ATvChannel_BP_C::Event_OnCurrentlyPlayingDataChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "Event_OnCurrentlyPlayingDataChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.OnAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::OnAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "OnAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.PlayCountdown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Countdown_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::PlayCountdown(int32 Countdown_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "PlayCountdown");

	Params::TvChannel_BP_C_PlayCountdown Parms{};

	Parms.Countdown_0 = Countdown_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.stopMovie
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::StopMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "stopMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.loopAnim
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::LoopAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "loopAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.StopAnim
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::StopAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "StopAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "ReceiveEndPlay");

	Params::TvChannel_BP_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.OnLoop
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::OnLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "OnLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.OnTextLanguageUpdated
// (BlueprintCallable, BlueprintEvent)

void ATvChannel_BP_C::OnTextLanguageUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "OnTextLanguageUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function tvChannel_BP.tvChannel_BP_C.UpdateMaterialParameter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TextColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Noise                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Rorschard                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    MovieFlash                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATvChannel_BP_C::UpdateMaterialParameter(float TextColor, class UTexture* Texture, bool Noise, bool Rorschard, bool MovieFlash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "UpdateMaterialParameter");

	Params::TvChannel_BP_C_UpdateMaterialParameter Parms{};

	Parms.TextColor = TextColor;
	Parms.Texture = Texture;
	Parms.Noise = Noise;
	Parms.Rorschard = Rorschard;
	Parms.MovieFlash = MovieFlash;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.UpdateText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   __0__Font_Scale                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::UpdateText(const class FText& Text, float __0__Font_Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "UpdateText");

	Params::TvChannel_BP_C_UpdateText Parms{};

	Parms.Text = std::move(Text);
	Parms.__0__Font_Scale = __0__Font_Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function tvChannel_BP.tvChannel_BP_C.ExecuteUbergraph_tvChannel_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATvChannel_BP_C::ExecuteUbergraph_tvChannel_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("tvChannel_BP_C", "ExecuteUbergraph_tvChannel_BP");

	Params::TvChannel_BP_C_ExecuteUbergraph_tvChannel_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

