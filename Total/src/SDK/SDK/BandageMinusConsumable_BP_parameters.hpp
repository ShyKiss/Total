#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BandageMinusConsumable_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function Bandage-Consumable_BP.Bandage-Consumable_BP_C.Event_OnUpdateVisibility
// 0x0001 (0x0001 - 0x0000)
struct BandageMinusConsumable_BP_C_Event_OnUpdateVisibility final
{
public:
	bool                                          bShouldBeHidden;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BandageMinusConsumable_BP_C_Event_OnUpdateVisibility) == 0x000001, "Wrong alignment on BandageMinusConsumable_BP_C_Event_OnUpdateVisibility");
static_assert(sizeof(BandageMinusConsumable_BP_C_Event_OnUpdateVisibility) == 0x000001, "Wrong size on BandageMinusConsumable_BP_C_Event_OnUpdateVisibility");
static_assert(offsetof(BandageMinusConsumable_BP_C_Event_OnUpdateVisibility, bShouldBeHidden) == 0x000000, "Member 'BandageMinusConsumable_BP_C_Event_OnUpdateVisibility::bShouldBeHidden' has a wrong offset!");

// Function Bandage-Consumable_BP.Bandage-Consumable_BP_C.ExecuteUbergraph_Bandage-Consumable_BP
// 0x0060 (0x0060 - 0x0000)
struct BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ARBPawn*                                K2Node_Event_pawn_1;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Event_sequence;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_bloodyRatio;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                K2Node_Event_pawn;                                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0040(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldBeHidden;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP) == 0x000008, "Wrong alignment on BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP");
static_assert(sizeof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP) == 0x000060, "Wrong size on BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, EntryPoint) == 0x000000, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000005, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000006, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000007, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, K2Node_Event_pawn_1) == 0x000008, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::K2Node_Event_pawn_1' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, K2Node_Event_sequence) == 0x000010, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::K2Node_Event_sequence' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, K2Node_Event_bloodyRatio) == 0x00001C, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::K2Node_Event_bloodyRatio' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, K2Node_MakeStruct_LinearColor) == 0x000024, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, K2Node_Event_pawn) == 0x000038, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::K2Node_Event_pawn' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, Temp_delegate_Variable) == 0x000040, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, CallFunc_HasAuthority_ReturnValue) == 0x000050, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, CallFunc_PostEventGlobal_ReturnValue) == 0x000054, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP, K2Node_Event_bShouldBeHidden) == 0x000058, "Member 'BandageMinusConsumable_BP_C_ExecuteUbergraph_BandageMinusConsumable_BP::K2Node_Event_bShouldBeHidden' has a wrong offset!");

// Function Bandage-Consumable_BP.Bandage-Consumable_BP_C.BP_OnStartHoldConsumeAction
// 0x0008 (0x0008 - 0x0000)
struct BandageMinusConsumable_BP_C_BP_OnStartHoldConsumeAction final
{
public:
	class ARBPawn*                                Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandageMinusConsumable_BP_C_BP_OnStartHoldConsumeAction) == 0x000008, "Wrong alignment on BandageMinusConsumable_BP_C_BP_OnStartHoldConsumeAction");
static_assert(sizeof(BandageMinusConsumable_BP_C_BP_OnStartHoldConsumeAction) == 0x000008, "Wrong size on BandageMinusConsumable_BP_C_BP_OnStartHoldConsumeAction");
static_assert(offsetof(BandageMinusConsumable_BP_C_BP_OnStartHoldConsumeAction, Pawn) == 0x000000, "Member 'BandageMinusConsumable_BP_C_BP_OnStartHoldConsumeAction::Pawn' has a wrong offset!");

// Function Bandage-Consumable_BP.Bandage-Consumable_BP_C.BP_OnBloodyRatioChanged
// 0x0004 (0x0004 - 0x0000)
struct BandageMinusConsumable_BP_C_BP_OnBloodyRatioChanged final
{
public:
	float                                         bloodyRatio;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandageMinusConsumable_BP_C_BP_OnBloodyRatioChanged) == 0x000004, "Wrong alignment on BandageMinusConsumable_BP_C_BP_OnBloodyRatioChanged");
static_assert(sizeof(BandageMinusConsumable_BP_C_BP_OnBloodyRatioChanged) == 0x000004, "Wrong size on BandageMinusConsumable_BP_C_BP_OnBloodyRatioChanged");
static_assert(offsetof(BandageMinusConsumable_BP_C_BP_OnBloodyRatioChanged, bloodyRatio) == 0x000000, "Member 'BandageMinusConsumable_BP_C_BP_OnBloodyRatioChanged::bloodyRatio' has a wrong offset!");

// Function Bandage-Consumable_BP.Bandage-Consumable_BP_C.BP_OnPlayItemAnimation
// 0x0008 (0x0008 - 0x0000)
struct BandageMinusConsumable_BP_C_BP_OnPlayItemAnimation final
{
public:
	class UAnimSequenceBase*                      Sequence;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandageMinusConsumable_BP_C_BP_OnPlayItemAnimation) == 0x000008, "Wrong alignment on BandageMinusConsumable_BP_C_BP_OnPlayItemAnimation");
static_assert(sizeof(BandageMinusConsumable_BP_C_BP_OnPlayItemAnimation) == 0x000008, "Wrong size on BandageMinusConsumable_BP_C_BP_OnPlayItemAnimation");
static_assert(offsetof(BandageMinusConsumable_BP_C_BP_OnPlayItemAnimation, Sequence) == 0x000000, "Member 'BandageMinusConsumable_BP_C_BP_OnPlayItemAnimation::Sequence' has a wrong offset!");

// Function Bandage-Consumable_BP.Bandage-Consumable_BP_C.OnConsumeItemCancelledNotify
// 0x0008 (0x0008 - 0x0000)
struct BandageMinusConsumable_BP_C_OnConsumeItemCancelledNotify final
{
public:
	class ARBPawn*                                Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BandageMinusConsumable_BP_C_OnConsumeItemCancelledNotify) == 0x000008, "Wrong alignment on BandageMinusConsumable_BP_C_OnConsumeItemCancelledNotify");
static_assert(sizeof(BandageMinusConsumable_BP_C_OnConsumeItemCancelledNotify) == 0x000008, "Wrong size on BandageMinusConsumable_BP_C_OnConsumeItemCancelledNotify");
static_assert(offsetof(BandageMinusConsumable_BP_C_OnConsumeItemCancelledNotify, Pawn) == 0x000000, "Member 'BandageMinusConsumable_BP_C_OnConsumeItemCancelledNotify::Pawn' has a wrong offset!");

// Function Bandage-Consumable_BP.Bandage-Consumable_BP_C.OnRep_bTearOpen
// 0x0030 (0x0030 - 0x0000)
struct BandageMinusConsumable_BP_C_OnRep_bTearOpen final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BandageMinusConsumable_BP_C_OnRep_bTearOpen) == 0x000008, "Wrong alignment on BandageMinusConsumable_BP_C_OnRep_bTearOpen");
static_assert(sizeof(BandageMinusConsumable_BP_C_OnRep_bTearOpen) == 0x000030, "Wrong size on BandageMinusConsumable_BP_C_OnRep_bTearOpen");
static_assert(offsetof(BandageMinusConsumable_BP_C_OnRep_bTearOpen, Temp_bool_Variable) == 0x000000, "Member 'BandageMinusConsumable_BP_C_OnRep_bTearOpen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_OnRep_bTearOpen, Temp_object_Variable) == 0x000008, "Member 'BandageMinusConsumable_BP_C_OnRep_bTearOpen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_OnRep_bTearOpen, Temp_object_Variable_1) == 0x000010, "Member 'BandageMinusConsumable_BP_C_OnRep_bTearOpen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_OnRep_bTearOpen, CallFunc_IsDedicatedServer_ReturnValue) == 0x000018, "Member 'BandageMinusConsumable_BP_C_OnRep_bTearOpen::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_OnRep_bTearOpen, K2Node_Select_Default) == 0x000020, "Member 'BandageMinusConsumable_BP_C_OnRep_bTearOpen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BandageMinusConsumable_BP_C_OnRep_bTearOpen, CallFunc_SetStaticMesh_ReturnValue) == 0x000028, "Member 'BandageMinusConsumable_BP_C_OnRep_bTearOpen::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

}

