#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBNPC_Spectre_BP

#include "Basic.hpp"

#include "RBNPC_Spectre_BP_classes.hpp"
#include "RBNPC_Spectre_BP_parameters.hpp"


namespace SDK
{

// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.UpdateSpectreMeshes
// (Public, BlueprintCallable, BlueprintEvent)

void ARBNPC_Spectre_BP_C::UpdateSpectreMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "UpdateSpectreMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Update Spectre Meshes Visibiliy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OldMeshVisible                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    AllMeshesVisible                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBNPC_Spectre_BP_C::Update_Spectre_Meshes_Visibiliy(bool OldMeshVisible, bool AllMeshesVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Update Spectre Meshes Visibiliy");

	Params::RBNPC_Spectre_BP_C_Update_Spectre_Meshes_Visibiliy Parms{};

	Parms.OldMeshVisible = OldMeshVisible;
	Parms.AllMeshesVisible = AllMeshesVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.UpdateSpectreVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SpectreMesh                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBNPC_Spectre_BP_C::UpdateSpectreVisibility(class USkeletalMeshComponent* SpectreMesh, bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "UpdateSpectreVisibility");

	Params::RBNPC_Spectre_BP_C_UpdateSpectreVisibility Parms{};

	Parms.SpectreMesh = SpectreMesh;
	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.UpdateRandomOffset
// (Public, BlueprintCallable, BlueprintEvent)

void ARBNPC_Spectre_BP_C::UpdateRandomOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "UpdateRandomOffset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.UpdateSpectre
// (Public, BlueprintCallable, BlueprintEvent)

void ARBNPC_Spectre_BP_C::UpdateSpectre()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "UpdateSpectre");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARBNPC_Spectre_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ARBNPC_Spectre_BP_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ARBNPC_Spectre_BP_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Timeline_2__FinishedFunc
// (BlueprintEvent)

void ARBNPC_Spectre_BP_C::Timeline_2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Timeline_2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Timeline_2__UpdateFunc
// (BlueprintEvent)

void ARBNPC_Spectre_BP_C::Timeline_2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Timeline_2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Timeline_3__FinishedFunc
// (BlueprintEvent)

void ARBNPC_Spectre_BP_C::Timeline_3__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Timeline_3__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Timeline_3__UpdateFunc
// (BlueprintEvent)

void ARBNPC_Spectre_BP_C::Timeline_3__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Timeline_3__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ARBNPC_Spectre_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBNPC_Spectre_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "ReceiveTick");

	Params::RBNPC_Spectre_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.SetNormalMeshVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBNPC_Spectre_BP_C::SetNormalMeshVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "SetNormalMeshVisibility");

	Params::RBNPC_Spectre_BP_C_SetNormalMeshVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ARBNPC_Spectre_BP_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.MotionBlurByBones
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ListOfBones                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class USkeletalMeshComponent*>   Target                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FVector                          Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBNPC_Spectre_BP_C::MotionBlurByBones(const TArray<class FName>& ListOfBones, const TArray<class USkeletalMeshComponent*>& Target, const struct FVector& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "MotionBlurByBones");

	Params::RBNPC_Spectre_BP_C_MotionBlurByBones Parms{};

	Parms.ListOfBones = std::move(ListOfBones);
	Parms.Target = std::move(Target);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.MotionBlurSwap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   blurIntensity                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBNPC_Spectre_BP_C::MotionBlurSwap(float blurIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "MotionBlurSwap");

	Params::RBNPC_Spectre_BP_C_MotionBlurSwap Parms{};

	Parms.blurIntensity = blurIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Event_OnSpectreVisibilityChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShouldBeVisible                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBNPC_Spectre_BP_C::Event_OnSpectreVisibilityChanged(bool bShouldBeVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Event_OnSpectreVisibilityChanged");

	Params::RBNPC_Spectre_BP_C_Event_OnSpectreVisibilityChanged Parms{};

	Parms.bShouldBeVisible = bShouldBeVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.startGlitch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBNPC_Spectre_BP_C::StartGlitch(bool Reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "startGlitch");

	Params::RBNPC_Spectre_BP_C_StartGlitch Parms{};

	Parms.Reset = Reset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Event_OnSpectreVisualTypeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EAISpectreVisualType                    OldType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAISpectreVisualType                    NewType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBNPC_Spectre_BP_C::Event_OnSpectreVisualTypeChanged(EAISpectreVisualType OldType, EAISpectreVisualType NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Event_OnSpectreVisualTypeChanged");

	Params::RBNPC_Spectre_BP_C_Event_OnSpectreVisualTypeChanged Parms{};

	Parms.OldType = OldType;
	Parms.NewType = NewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.StartBlackHole
// (BlueprintCallable, BlueprintEvent)

void ARBNPC_Spectre_BP_C::StartBlackHole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "StartBlackHole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.setScaleMesh
// (BlueprintCallable, BlueprintEvent)

void ARBNPC_Spectre_BP_C::SetScaleMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "setScaleMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Event_OnSpectreIntroSpecialMoveStarted
// (Event, Public, BlueprintEvent)

void ARBNPC_Spectre_BP_C::Event_OnSpectreIntroSpecialMoveStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Event_OnSpectreIntroSpecialMoveStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Event_OnSpectreOutroSpecialMoveStarted
// (Event, Public, BlueprintEvent)

void ARBNPC_Spectre_BP_C::Event_OnSpectreOutroSpecialMoveStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Event_OnSpectreOutroSpecialMoveStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.Event_OnFootstep
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFootstepData                    FootstepData                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ARBNPC_Spectre_BP_C::Event_OnFootstep(const struct FFootstepData& FootstepData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "Event_OnFootstep");

	Params::RBNPC_Spectre_BP_C_Event_OnFootstep Parms{};

	Parms.FootstepData = std::move(FootstepData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.BlurHead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   blurIntensity                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBNPC_Spectre_BP_C::BlurHead(float blurIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "BlurHead");

	Params::RBNPC_Spectre_BP_C_BlurHead Parms{};

	Parms.blurIntensity = blurIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.EntityAnimControl
// (BlueprintCallable, BlueprintEvent)

void ARBNPC_Spectre_BP_C::EntityAnimControl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "EntityAnimControl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.StopBlurHead
// (BlueprintCallable, BlueprintEvent)

void ARBNPC_Spectre_BP_C::StopBlurHead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "StopBlurHead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_Spectre_BP.RBNPC_Spectre_BP_C.ExecuteUbergraph_RBNPC_Spectre_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBNPC_Spectre_BP_C::ExecuteUbergraph_RBNPC_Spectre_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_Spectre_BP_C", "ExecuteUbergraph_RBNPC_Spectre_BP");

	Params::RBNPC_Spectre_BP_C_ExecuteUbergraph_RBNPC_Spectre_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

