#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MannequinBP_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "Engine_structs.hpp"
#include "MannequinStaticMeshAssetStruct_structs.hpp"
#include "MannequinSkeletonMeshAssetStruct_structs.hpp"


namespace SDK::Params
{

// Function MannequinBP_Base.MannequinBP_Base_C.BP_MapCheck
// 0x0040 (0x0040 - 0x0000)
struct MannequinBP_Base_C_BP_MapCheck final
{
public:
	EMapCheckType                                 CheckType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutErrorMsg;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_Base_C_BP_MapCheck) == 0x000008, "Wrong alignment on MannequinBP_Base_C_BP_MapCheck");
static_assert(sizeof(MannequinBP_Base_C_BP_MapCheck) == 0x000040, "Wrong size on MannequinBP_Base_C_BP_MapCheck");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CheckType) == 0x000000, "Member 'MannequinBP_Base_C_BP_MapCheck::CheckType' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, OutErrorMsg) == 0x000008, "Member 'MannequinBP_Base_C_BP_MapCheck::OutErrorMsg' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, ReturnValue) == 0x000018, "Member 'MannequinBP_Base_C_BP_MapCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'MannequinBP_Base_C_BP_MapCheck::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CallFunc_GetActorScale3D_ReturnValue) == 0x00001C, "Member 'MannequinBP_Base_C_BP_MapCheck::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CallFunc_BreakVector_X) == 0x000028, "Member 'MannequinBP_Base_C_BP_MapCheck::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CallFunc_BreakVector_Y) == 0x00002C, "Member 'MannequinBP_Base_C_BP_MapCheck::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CallFunc_BreakVector_Z) == 0x000030, "Member 'MannequinBP_Base_C_BP_MapCheck::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'MannequinBP_Base_C_BP_MapCheck::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000035, "Member 'MannequinBP_Base_C_BP_MapCheck::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000036, "Member 'MannequinBP_Base_C_BP_MapCheck::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CallFunc_BooleanOR_ReturnValue) == 0x000037, "Member 'MannequinBP_Base_C_BP_MapCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_BP_MapCheck, CallFunc_BooleanOR_ReturnValue_1) == 0x000038, "Member 'MannequinBP_Base_C_BP_MapCheck::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.SetCommonMeshData
// 0x0040 (0x0040 - 0x0000)
struct MannequinBP_Base_C_SetCommonMeshData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        K2Node_DynamicCast_AsShape_Component;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_Base_C_SetCommonMeshData) == 0x000008, "Wrong alignment on MannequinBP_Base_C_SetCommonMeshData");
static_assert(sizeof(MannequinBP_Base_C_SetCommonMeshData) == 0x000040, "Wrong size on MannequinBP_Base_C_SetCommonMeshData");
static_assert(offsetof(MannequinBP_Base_C_SetCommonMeshData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MannequinBP_Base_C_SetCommonMeshData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetCommonMeshData, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MannequinBP_Base_C_SetCommonMeshData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetCommonMeshData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MannequinBP_Base_C_SetCommonMeshData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetCommonMeshData, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'MannequinBP_Base_C_SetCommonMeshData::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetCommonMeshData, CallFunc_Array_Get_Item) == 0x000020, "Member 'MannequinBP_Base_C_SetCommonMeshData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetCommonMeshData, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'MannequinBP_Base_C_SetCommonMeshData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetCommonMeshData, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'MannequinBP_Base_C_SetCommonMeshData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetCommonMeshData, K2Node_DynamicCast_AsShape_Component) == 0x000030, "Member 'MannequinBP_Base_C_SetCommonMeshData::K2Node_DynamicCast_AsShape_Component' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetCommonMeshData, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'MannequinBP_Base_C_SetCommonMeshData::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.SetAnimation
// 0x0050 (0x0050 - 0x0000)
struct MannequinBP_Base_C_SetAnimation final
{
public:
	class UAnimationAsset*                        Animation_Data_Anim_To_Play;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSingleAnimationPlayData               K2Node_MakeStruct_SingleAnimationPlayData;         // 0x0008(0x0018)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_Base_C_SetAnimation) == 0x000008, "Wrong alignment on MannequinBP_Base_C_SetAnimation");
static_assert(sizeof(MannequinBP_Base_C_SetAnimation) == 0x000050, "Wrong size on MannequinBP_Base_C_SetAnimation");
static_assert(offsetof(MannequinBP_Base_C_SetAnimation, Animation_Data_Anim_To_Play) == 0x000000, "Member 'MannequinBP_Base_C_SetAnimation::Animation_Data_Anim_To_Play' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetAnimation, K2Node_MakeStruct_SingleAnimationPlayData) == 0x000008, "Member 'MannequinBP_Base_C_SetAnimation::K2Node_MakeStruct_SingleAnimationPlayData' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetAnimation, Temp_int_Array_Index_Variable) == 0x000020, "Member 'MannequinBP_Base_C_SetAnimation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetAnimation, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'MannequinBP_Base_C_SetAnimation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'MannequinBP_Base_C_SetAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetAnimation, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'MannequinBP_Base_C_SetAnimation::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetAnimation, CallFunc_Array_Get_Item) == 0x000040, "Member 'MannequinBP_Base_C_SetAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetAnimation, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'MannequinBP_Base_C_SetAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'MannequinBP_Base_C_SetAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.SetMasterPose
// 0x0038 (0x0038 - 0x0000)
struct MannequinBP_Base_C_SetMasterPose final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_Base_C_SetMasterPose) == 0x000008, "Wrong alignment on MannequinBP_Base_C_SetMasterPose");
static_assert(sizeof(MannequinBP_Base_C_SetMasterPose) == 0x000038, "Wrong size on MannequinBP_Base_C_SetMasterPose");
static_assert(offsetof(MannequinBP_Base_C_SetMasterPose, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MannequinBP_Base_C_SetMasterPose::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetMasterPose, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MannequinBP_Base_C_SetMasterPose::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetMasterPose, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MannequinBP_Base_C_SetMasterPose::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetMasterPose, K2Node_MakeArray_Array) == 0x000010, "Member 'MannequinBP_Base_C_SetMasterPose::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetMasterPose, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'MannequinBP_Base_C_SetMasterPose::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetMasterPose, CallFunc_Array_Get_Item) == 0x000028, "Member 'MannequinBP_Base_C_SetMasterPose::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetMasterPose, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'MannequinBP_Base_C_SetMasterPose::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetMasterPose, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'MannequinBP_Base_C_SetMasterPose::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.SetPose
// 0x0020 (0x0020 - 0x0000)
struct MannequinBP_Base_C_SetPose final
{
public:
	class UAnimationAsset*                        Animation_Data_Anim_To_Play;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSingleAnimationPlayData               K2Node_MakeStruct_SingleAnimationPlayData;         // 0x0008(0x0018)(NoDestructor)
};
static_assert(alignof(MannequinBP_Base_C_SetPose) == 0x000008, "Wrong alignment on MannequinBP_Base_C_SetPose");
static_assert(sizeof(MannequinBP_Base_C_SetPose) == 0x000020, "Wrong size on MannequinBP_Base_C_SetPose");
static_assert(offsetof(MannequinBP_Base_C_SetPose, Animation_Data_Anim_To_Play) == 0x000000, "Member 'MannequinBP_Base_C_SetPose::Animation_Data_Anim_To_Play' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_SetPose, K2Node_MakeStruct_SingleAnimationPlayData) == 0x000008, "Member 'MannequinBP_Base_C_SetPose::K2Node_MakeStruct_SingleAnimationPlayData' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.DressStaticMeshPart
// 0x00B8 (0x00B8 - 0x0000)
struct MannequinBP_Base_C_DressStaticMeshPart final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            NewMesh;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UMaterialInstance*>   TargetMap;                                         // 0x0018(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UStaticMeshComponent*                   CurrentStaticMeshComp;                             // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_Map_Find_Value;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MannequinBP_Base_C_DressStaticMeshPart) == 0x000008, "Wrong alignment on MannequinBP_Base_C_DressStaticMeshPart");
static_assert(sizeof(MannequinBP_Base_C_DressStaticMeshPart) == 0x0000B8, "Wrong size on MannequinBP_Base_C_DressStaticMeshPart");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, Index_0) == 0x000000, "Member 'MannequinBP_Base_C_DressStaticMeshPart::Index_0' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, NewMesh) == 0x000008, "Member 'MannequinBP_Base_C_DressStaticMeshPart::NewMesh' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, SocketName) == 0x000010, "Member 'MannequinBP_Base_C_DressStaticMeshPart::SocketName' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, TargetMap) == 0x000018, "Member 'MannequinBP_Base_C_DressStaticMeshPart::TargetMap' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CurrentStaticMeshComp) == 0x000068, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CurrentStaticMeshComp' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, Temp_int_Array_Index_Variable) == 0x000070, "Member 'MannequinBP_Base_C_DressStaticMeshPart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'MannequinBP_Base_C_DressStaticMeshPart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_Array_Get_Item) == 0x000090, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_Less_IntInt_ReturnValue) == 0x0000A9, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_SetStaticMesh_ReturnValue) == 0x0000AA, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000AB, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000AC, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressStaticMeshPart, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'MannequinBP_Base_C_DressStaticMeshPart::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.Init
// 0x0030 (0x0030 - 0x0000)
struct MannequinBP_Base_C_Init final
{
public:
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_2;                          // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(MannequinBP_Base_C_Init) == 0x000008, "Wrong alignment on MannequinBP_Base_C_Init");
static_assert(sizeof(MannequinBP_Base_C_Init) == 0x000030, "Wrong size on MannequinBP_Base_C_Init");
static_assert(offsetof(MannequinBP_Base_C_Init, K2Node_MakeArray_Array) == 0x000000, "Member 'MannequinBP_Base_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_Init, K2Node_MakeArray_Array_1) == 0x000010, "Member 'MannequinBP_Base_C_Init::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_Init, K2Node_MakeArray_Array_2) == 0x000020, "Member 'MannequinBP_Base_C_Init::K2Node_MakeArray_Array_2' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.RemoveEmptyComponents
// 0x0040 (0x0040 - 0x0000)
struct MannequinBP_Base_C_RemoveEmptyComponents final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_Base_C_RemoveEmptyComponents) == 0x000008, "Wrong alignment on MannequinBP_Base_C_RemoveEmptyComponents");
static_assert(sizeof(MannequinBP_Base_C_RemoveEmptyComponents) == 0x000040, "Wrong size on MannequinBP_Base_C_RemoveEmptyComponents");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, Temp_int_Array_Index_Variable) == 0x000008, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_Array_Get_Item) == 0x000018, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_Array_Contains_ReturnValue) == 0x000030, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_RemoveEmptyComponents, CallFunc_Less_IntInt_ReturnValue_1) == 0x000039, "Member 'MannequinBP_Base_C_RemoveEmptyComponents::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.DressSkelMeshPart
// 0x00A8 (0x00A8 - 0x0000)
struct MannequinBP_Base_C_DressSkelMeshPart final
{
public:
	class USkeletalMesh*                          SkelMesh;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UMaterialInstance*>   Materials;                                         // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USkeletalMeshComponent*                 SkelMeshPart;                                      // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CurrentSkelMeshComp;                               // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_Map_Find_Value;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_Base_C_DressSkelMeshPart) == 0x000008, "Wrong alignment on MannequinBP_Base_C_DressSkelMeshPart");
static_assert(sizeof(MannequinBP_Base_C_DressSkelMeshPart) == 0x0000A8, "Wrong size on MannequinBP_Base_C_DressSkelMeshPart");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, SkelMesh) == 0x000000, "Member 'MannequinBP_Base_C_DressSkelMeshPart::SkelMesh' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, Materials) == 0x000008, "Member 'MannequinBP_Base_C_DressSkelMeshPart::Materials' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, SkelMeshPart) == 0x000058, "Member 'MannequinBP_Base_C_DressSkelMeshPart::SkelMeshPart' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, CurrentSkelMeshComp) == 0x000060, "Member 'MannequinBP_Base_C_DressSkelMeshPart::CurrentSkelMeshComp' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'MannequinBP_Base_C_DressSkelMeshPart::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, Temp_int_Array_Index_Variable) == 0x000078, "Member 'MannequinBP_Base_C_DressSkelMeshPart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'MannequinBP_Base_C_DressSkelMeshPart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, CallFunc_Array_Get_Item) == 0x000080, "Member 'MannequinBP_Base_C_DressSkelMeshPart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'MannequinBP_Base_C_DressSkelMeshPart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'MannequinBP_Base_C_DressSkelMeshPart::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'MannequinBP_Base_C_DressSkelMeshPart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'MannequinBP_Base_C_DressSkelMeshPart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, CallFunc_Map_Find_Value) == 0x000098, "Member 'MannequinBP_Base_C_DressSkelMeshPart::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressSkelMeshPart, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'MannequinBP_Base_C_DressSkelMeshPart::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.DressMannequin
// 0x01E8 (0x01E8 - 0x0000)
struct MannequinBP_Base_C_DressMannequin final
{
public:
	int32                                         CurrentSkelMeshIndex;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 UsedSkelMeshAccessories;                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	TMap<class FName, class UMaterialInstance*>   CurrentMaterials;                                  // 0x0018(0x0050)(Edit, BlueprintVisible)
	class USkeletalMesh*                          CurrentSkelMesh;                                   // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMannequinStaticMeshAssetStruct        CallFunc_Array_Get_Item;                           // 0x00A0(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMannequinSkeletonMeshAssetStruct      CallFunc_Array_Get_Item_2;                         // 0x0128(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue;                 // 0x0188(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item_3;                         // 0x01A0(0x0028)(NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_4;                   // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_5;                   // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_6;                   // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_7;                   // 0x01E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MannequinBP_Base_C_DressMannequin) == 0x000008, "Wrong alignment on MannequinBP_Base_C_DressMannequin");
static_assert(sizeof(MannequinBP_Base_C_DressMannequin) == 0x0001E8, "Wrong size on MannequinBP_Base_C_DressMannequin");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CurrentSkelMeshIndex) == 0x000000, "Member 'MannequinBP_Base_C_DressMannequin::CurrentSkelMeshIndex' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, UsedSkelMeshAccessories) == 0x000008, "Member 'MannequinBP_Base_C_DressMannequin::UsedSkelMeshAccessories' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CurrentMaterials) == 0x000018, "Member 'MannequinBP_Base_C_DressMannequin::CurrentMaterials' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CurrentSkelMesh) == 0x000068, "Member 'MannequinBP_Base_C_DressMannequin::CurrentSkelMesh' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, Temp_int_Array_Index_Variable) == 0x000070, "Member 'MannequinBP_Base_C_DressMannequin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'MannequinBP_Base_C_DressMannequin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, Temp_bool_True_if_break_was_hit_Variable) == 0x00007C, "Member 'MannequinBP_Base_C_DressMannequin::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'MannequinBP_Base_C_DressMannequin::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Not_PreBool_ReturnValue) == 0x000084, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'MannequinBP_Base_C_DressMannequin::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, Temp_int_Array_Index_Variable_2) == 0x000090, "Member 'MannequinBP_Base_C_DressMannequin::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, Temp_int_Loop_Counter_Variable_2) == 0x000094, "Member 'MannequinBP_Base_C_DressMannequin::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Add_IntInt_ReturnValue_2) == 0x000098, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_IsValid_ReturnValue) == 0x00009C, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_IsValid_ReturnValue_1) == 0x00009D, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Array_Add_ReturnValue) == 0x000108, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Array_Contains_ReturnValue) == 0x00010C, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Less_IntInt_ReturnValue_1) == 0x00011C, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_BooleanAND_ReturnValue) == 0x00011D, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Array_Length_ReturnValue_2) == 0x000120, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Less_IntInt_ReturnValue_2) == 0x000180, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_GetMaterials_ReturnValue) == 0x000188, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_IsValid_ReturnValue_2) == 0x000198, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Array_Get_Item_3) == 0x0001A0, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0001C8, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_GetObjectName_ReturnValue) == 0x0001D0, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Contains_ReturnValue) == 0x0001E0, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Contains_ReturnValue_1) == 0x0001E1, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Contains_ReturnValue_2) == 0x0001E2, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Contains_ReturnValue_3) == 0x0001E3, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Contains_ReturnValue_4) == 0x0001E4, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Contains_ReturnValue_5) == 0x0001E5, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Contains_ReturnValue_6) == 0x0001E6, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Contains_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_DressMannequin, CallFunc_Contains_ReturnValue_7) == 0x0001E7, "Member 'MannequinBP_Base_C_DressMannequin::CallFunc_Contains_ReturnValue_7' has a wrong offset!");

// Function MannequinBP_Base.MannequinBP_Base_C.ExecuteUbergraph_MannequinBP_Base
// 0x0038 (0x0038 - 0x0000)
struct MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAssociatedAkEvent_ReturnValue;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_StopAssociatedAkEvent_ReturnValue;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base) == 0x000008, "Wrong alignment on MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base");
static_assert(sizeof(MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base) == 0x000038, "Wrong size on MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base");
static_assert(offsetof(MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base, EntryPoint) == 0x000000, "Member 'MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base, Temp_struct_Variable) == 0x000008, "Member 'MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base, Temp_delegate_Variable) == 0x000018, "Member 'MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base, CallFunc_IsDedicatedServer_ReturnValue) == 0x000028, "Member 'MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000029, "Member 'MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base, CallFunc_PostAssociatedAkEvent_ReturnValue) == 0x00002C, "Member 'MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base::CallFunc_PostAssociatedAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base, CallFunc_StopAssociatedAkEvent_ReturnValue) == 0x000030, "Member 'MannequinBP_Base_C_ExecuteUbergraph_MannequinBP_Base::CallFunc_StopAssociatedAkEvent_ReturnValue' has a wrong offset!");

}

