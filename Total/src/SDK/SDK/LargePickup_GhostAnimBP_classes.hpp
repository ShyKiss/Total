#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LargePickup_GhostAnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass LargePickup_GhostAnimBP.LargePickup_GhostAnimBP_C
// 0x1240 (0x15A0 - 0x0360)
class ULargePickup_GhostAnimBP_C : public URBLargeObjectGhostAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0398(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x03C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0440(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x04C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0540(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x05C0(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x0668(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x0710(0x00A8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x07B8(0x00B8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0870(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x08F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0970(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x09F0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x0A70(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x0B18(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0BC0(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0C68(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0C98(0x00E8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0D80(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E00(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0E80(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0F00(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0F80(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1028(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x10D0(0x00A8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1178(0x00B8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1230(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1260(0x00B0)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x1310(0x00F8)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x1408(0x00F8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1500(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1520(0x0020)()
	bool                                          IsFirstPerson;                                     // 0x1540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ESpecialMove                                  Special_Move;                                      // 0x1541(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1542[0x2];                                     // 0x1542(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InteractHeight;                                    // 0x1544(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HandIK;                                            // 0x1548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCrouched;                                         // 0x1549(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFirstPickup;                                      // 0x154A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_154B[0x5];                                     // 0x154B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            PickUpBlendSpace;                                  // 0x1550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            FirstPickup_Crouch_1P;                             // 0x1558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            FirstPickup_Crouch_3P;                             // 0x1560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            FirstPickup_Stand_1P;                              // 0x1568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            FirstPickup_Stand_3P;                              // 0x1570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            Pickup_Crouch_1P;                                  // 0x1578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            Pickup_Crouch_3P;                                  // 0x1580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            Pickup_Stand_1P;                                   // 0x1588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            Pickup_Stand_3P;                                   // 0x1590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void SelectPickupBlendSpace();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_LargePickup_GhostAnimBP_AnimGraphNode_LegIK_E98240F441211473222A158DAE0A50FF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_LargePickup_GhostAnimBP_AnimGraphNode_LegIK_EA167A134F8883EFFE09F782FD3DB38B();
	void AnimNotify_DoneAction();
	void BP_InitializeGhost();
	void ExecuteUbergraph_LargePickup_GhostAnimBP(int32 EntryPoint);

	void IsPickupCrouched(bool* bCrouched_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LargePickup_GhostAnimBP_C">();
	}
	static class ULargePickup_GhostAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULargePickup_GhostAnimBP_C>();
	}
};
static_assert(alignof(ULargePickup_GhostAnimBP_C) == 0x000010, "Wrong alignment on ULargePickup_GhostAnimBP_C");
static_assert(sizeof(ULargePickup_GhostAnimBP_C) == 0x0015A0, "Wrong size on ULargePickup_GhostAnimBP_C");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, UberGraphFrame) == 0x000360, "Member 'ULargePickup_GhostAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_Root) == 0x000368, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_TransitionResult) == 0x000398, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x0003C0, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x000440, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x0004C0, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x000540, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByBool_8) == 0x0005C0, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByBool_7) == 0x000668, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByBool_6) == 0x000710, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByEnum_1) == 0x0007B8, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000870, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0008F0, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000970, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0009F0, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByBool_5) == 0x000A70, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByBool_4) == 0x000B18, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x000BC0, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_StateResult_1) == 0x000C68, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000C98, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000D80, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000E00, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000E80, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_SequencePlayer) == 0x000F00, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x000F80, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x001028, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByBool) == 0x0010D0, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_BlendListByEnum) == 0x001178, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_StateResult) == 0x001230, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_StateMachine) == 0x001260, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_LegIK_1) == 0x001310, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_LegIK) == 0x001408, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x001500, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x001520, "Member 'ULargePickup_GhostAnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, IsFirstPerson) == 0x001540, "Member 'ULargePickup_GhostAnimBP_C::IsFirstPerson' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, Special_Move) == 0x001541, "Member 'ULargePickup_GhostAnimBP_C::Special_Move' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, InteractHeight) == 0x001544, "Member 'ULargePickup_GhostAnimBP_C::InteractHeight' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, HandIK) == 0x001548, "Member 'ULargePickup_GhostAnimBP_C::HandIK' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, bCrouched) == 0x001549, "Member 'ULargePickup_GhostAnimBP_C::bCrouched' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, bFirstPickup) == 0x00154A, "Member 'ULargePickup_GhostAnimBP_C::bFirstPickup' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, PickUpBlendSpace) == 0x001550, "Member 'ULargePickup_GhostAnimBP_C::PickUpBlendSpace' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, FirstPickup_Crouch_1P) == 0x001558, "Member 'ULargePickup_GhostAnimBP_C::FirstPickup_Crouch_1P' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, FirstPickup_Crouch_3P) == 0x001560, "Member 'ULargePickup_GhostAnimBP_C::FirstPickup_Crouch_3P' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, FirstPickup_Stand_1P) == 0x001568, "Member 'ULargePickup_GhostAnimBP_C::FirstPickup_Stand_1P' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, FirstPickup_Stand_3P) == 0x001570, "Member 'ULargePickup_GhostAnimBP_C::FirstPickup_Stand_3P' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, Pickup_Crouch_1P) == 0x001578, "Member 'ULargePickup_GhostAnimBP_C::Pickup_Crouch_1P' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, Pickup_Crouch_3P) == 0x001580, "Member 'ULargePickup_GhostAnimBP_C::Pickup_Crouch_3P' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, Pickup_Stand_1P) == 0x001588, "Member 'ULargePickup_GhostAnimBP_C::Pickup_Stand_1P' has a wrong offset!");
static_assert(offsetof(ULargePickup_GhostAnimBP_C, Pickup_Stand_3P) == 0x001590, "Member 'ULargePickup_GhostAnimBP_C::Pickup_Stand_3P' has a wrong offset!");

}

