#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SPMinusDocumentMinusSurface_BP

#include "Basic.hpp"

#include "SPMinusDocumentMinusSurface_BP_classes.hpp"
#include "SPMinusDocumentMinusSurface_BP_parameters.hpp"


namespace SDK
{

// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ASPMinusDocumentMinusSurface_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.RefreshRadioIconVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ASPMinusDocumentMinusSurface_BP_C::RefreshRadioIconVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "RefreshRadioIconVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.TestPawnClearanceFromBox
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UPrimitiveComponent*>      Clearances                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bClear                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASPMinusDocumentMinusSurface_BP_C::TestPawnClearanceFromBox(TArray<class UPrimitiveComponent*>& Clearances, bool* bClear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "TestPawnClearanceFromBox");

	Params::SPMinusDocumentMinusSurface_BP_C_TestPawnClearanceFromBox Parms{};

	Parms.Clearances = std::move(Clearances);

	UObject::ProcessEvent(Func, &Parms);

	Clearances = std::move(Parms.Clearances);

	if (bClear != nullptr)
		*bClear = Parms.bClear;
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.BndEvt__SP-Document-Surface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bClearancePassed                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASPMinusDocumentMinusSurface_BP_C::BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature(bool bClearancePassed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "BndEvt__SP-Document-Surface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature");

	Params::SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearancePerpendicular_K2Node_ComponentBoundEvent_0_OnClearanceTriggered__DelegateSignature Parms{};

	Parms.bClearancePassed = bClearancePassed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.BndEvt__SP-Document-Surface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bClearancePassed                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASPMinusDocumentMinusSurface_BP_C::BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature(bool bClearancePassed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "BndEvt__SP-Document-Surface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature");

	Params::SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceForward_K2Node_ComponentBoundEvent_1_OnClearanceTriggered__DelegateSignature Parms{};

	Parms.bClearancePassed = bClearancePassed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.BndEvt__SP-Document-Surface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bClearancePassed                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASPMinusDocumentMinusSurface_BP_C::BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature(bool bClearancePassed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "BndEvt__SP-Document-Surface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature");

	Params::SPMinusDocumentMinusSurface_BP_C_BndEvt__SPMinusDocumentMinusSurface_BP_RadioBoxClearanceLeft_K2Node_ComponentBoundEvent_2_OnClearanceTriggered__DelegateSignature Parms{};

	Parms.bClearancePassed = bClearancePassed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.OnEditorPostLoad
// (Event, Public, BlueprintEvent)

void ASPMinusDocumentMinusSurface_BP_C::OnEditorPostLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "OnEditorPostLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.ExecuteUbergraph_SP-Document-Surface_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASPMinusDocumentMinusSurface_BP_C::ExecuteUbergraph_SPMinusDocumentMinusSurface_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "ExecuteUbergraph_SP-Document-Surface_BP");

	Params::SPMinusDocumentMinusSurface_BP_C_ExecuteUbergraph_SPMinusDocumentMinusSurface_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.ShouldPingFollowActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    OutShouldFollow                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ASPMinusDocumentMinusSurface_BP_C::ShouldPingFollowActor(bool* OutShouldFollow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "ShouldPingFollowActor");

	Params::SPMinusDocumentMinusSurface_BP_C_ShouldPingFollowActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutShouldFollow != nullptr)
		*OutShouldFollow = Parms.OutShouldFollow;

	return Parms.ReturnValue;
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.GetPingItemName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             OutName                                                (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ASPMinusDocumentMinusSurface_BP_C::GetPingItemName(class FText* OutName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "GetPingItemName");

	Params::SPMinusDocumentMinusSurface_BP_C_GetPingItemName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);

	return Parms.ReturnValue;
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.GetPingEnabled
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    OutIsEnabled                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ASPMinusDocumentMinusSurface_BP_C::GetPingEnabled(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, bool* OutIsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "GetPingEnabled");

	Params::SPMinusDocumentMinusSurface_BP_C_GetPingEnabled Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutIsEnabled != nullptr)
		*OutIsEnabled = Parms.OutIsEnabled;

	return Parms.ReturnValue;
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.GetPlayerPingData
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FPlayerPingData                  OutData                                                (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ASPMinusDocumentMinusSurface_BP_C::GetPlayerPingData(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FPlayerPingData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "GetPlayerPingData");

	Params::SPMinusDocumentMinusSurface_BP_C_GetPlayerPingData Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function SP-Document-Surface_BP.SP-Document-Surface_BP_C.GetPlayerPingWorldLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ASPMinusDocumentMinusSurface_BP_C::GetPlayerPingWorldLocation(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FVector* OutLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP-Document-Surface_BP_C", "GetPlayerPingWorldLocation");

	Params::SPMinusDocumentMinusSurface_BP_C_GetPlayerPingWorldLocation Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}

}

