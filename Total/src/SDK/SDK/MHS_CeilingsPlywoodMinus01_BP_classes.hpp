#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MHS_CeilingsPlywoodMinus01_BP

#include "Basic.hpp"

#include "GrayBoxMat_ENU_structs.hpp"
#include "MeshPopulate_Parent_classes.hpp"
#include "ModuleMeshDataMinus02_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MHS_CeilingsPlywood-01_BP.MHS_CeilingsPlywood-01_BP_C
// 0x0030 (0x0400 - 0x03D0)
class AMHS_CeilingsPlywoodMinus01_BP_C final : public AMeshPopulate_Parent_C
{
public:
	EGrayBoxMat_ENU                               FloorMaterials;                                    // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGrayBoxMat_ENU                               CeilingMaterials;                                  // 0x03D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseOverwriteMaterials;                             // 0x03D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D3[0x1];                                      // 0x03D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewSize;                                           // 0x03D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FModuleMeshDataMinus02>         Meshes;                                            // 0x03E0(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Offset;                                            // 0x03F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MHS_CeilingsPlywood-01_BP_C">();
	}
	static class AMHS_CeilingsPlywoodMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMHS_CeilingsPlywoodMinus01_BP_C>();
	}
};
static_assert(alignof(AMHS_CeilingsPlywoodMinus01_BP_C) == 0x000008, "Wrong alignment on AMHS_CeilingsPlywoodMinus01_BP_C");
static_assert(sizeof(AMHS_CeilingsPlywoodMinus01_BP_C) == 0x000400, "Wrong size on AMHS_CeilingsPlywoodMinus01_BP_C");
static_assert(offsetof(AMHS_CeilingsPlywoodMinus01_BP_C, FloorMaterials) == 0x0003D0, "Member 'AMHS_CeilingsPlywoodMinus01_BP_C::FloorMaterials' has a wrong offset!");
static_assert(offsetof(AMHS_CeilingsPlywoodMinus01_BP_C, CeilingMaterials) == 0x0003D1, "Member 'AMHS_CeilingsPlywoodMinus01_BP_C::CeilingMaterials' has a wrong offset!");
static_assert(offsetof(AMHS_CeilingsPlywoodMinus01_BP_C, UseOverwriteMaterials) == 0x0003D2, "Member 'AMHS_CeilingsPlywoodMinus01_BP_C::UseOverwriteMaterials' has a wrong offset!");
static_assert(offsetof(AMHS_CeilingsPlywoodMinus01_BP_C, NewSize) == 0x0003D4, "Member 'AMHS_CeilingsPlywoodMinus01_BP_C::NewSize' has a wrong offset!");
static_assert(offsetof(AMHS_CeilingsPlywoodMinus01_BP_C, Meshes) == 0x0003E0, "Member 'AMHS_CeilingsPlywoodMinus01_BP_C::Meshes' has a wrong offset!");
static_assert(offsetof(AMHS_CeilingsPlywoodMinus01_BP_C, Offset) == 0x0003F0, "Member 'AMHS_CeilingsPlywoodMinus01_BP_C::Offset' has a wrong offset!");

}

