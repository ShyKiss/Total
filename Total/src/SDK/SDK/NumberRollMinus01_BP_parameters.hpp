#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NumberRollMinus01_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function NumberRoll-01_BP.NumberRoll-01_BP_C.ExecuteUbergraph_NumberRoll-01_BP
// 0x0110 (0x0110 - 0x0000)
struct NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClient_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder_1;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_1;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateActualNumber_NewActualNumber;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateActualNumber_NewActualNumber_1;     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateActualNumber_NewActualNumber_2;     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder_2;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_2;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder_3;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_3;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TargetNumber;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Lit;                            // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_3;                   // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ChangeColor;                    // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_1;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClient_ReturnValue_1;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_4;                   // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClient_ReturnValue_2;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP) == 0x000004, "Wrong alignment on NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP");
static_assert(sizeof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP) == 0x000110, "Wrong size on NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, EntryPoint) == 0x000000, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_IsClient_ReturnValue) == 0x000004, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_IsClient_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, Temp_bool_Variable) == 0x000005, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, Temp_float_Variable) == 0x000008, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, Temp_float_Variable_1) == 0x00000C, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, Temp_bool_Variable_1) == 0x000010, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, Temp_float_Variable_2) == 0x000014, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, Temp_float_Variable_3) == 0x000018, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_MakeStruct_LinearColor) == 0x000020, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_FMod_Remainder) == 0x000030, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_FMod_ReturnValue) == 0x000034, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_FMod_Remainder_1) == 0x00003C, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_FMod_Remainder_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_FMod_ReturnValue_1) == 0x000040, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_FMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_UpdateActualNumber_NewActualNumber) == 0x000044, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_UpdateActualNumber_NewActualNumber' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000048, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_UpdateActualNumber_NewActualNumber_1) == 0x00004C, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_UpdateActualNumber_NewActualNumber_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_UpdateActualNumber_NewActualNumber_2) == 0x000050, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_UpdateActualNumber_NewActualNumber_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_FMod_Remainder_2) == 0x000054, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_FMod_Remainder_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_FMod_ReturnValue_2) == 0x000058, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_FMod_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00005C, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000060, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_FMod_Remainder_3) == 0x000064, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_FMod_Remainder_3' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_FMod_ReturnValue_3) == 0x000068, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_FMod_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x00006C, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000070, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_MakeStruct_LinearColor_1) == 0x000074, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_MakeStruct_LinearColor_2) == 0x000084, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Lerp_ReturnValue) == 0x000094, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Lerp_ReturnValue_1) == 0x000098, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Lerp_ReturnValue_2) == 0x00009C, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_CustomEvent_TargetNumber) == 0x0000A0, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_CustomEvent_TargetNumber' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x0000A4, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A8, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Abs_ReturnValue) == 0x0000AC, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B4, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Abs_ReturnValue_1) == 0x0000B8, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000C0, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_BooleanAND_ReturnValue) == 0x0000C4, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Abs_ReturnValue_2) == 0x0000C8, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0000CC, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000D0, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D4, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_CustomEvent_Lit) == 0x0000D5, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_CustomEvent_Lit' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_FMax_ReturnValue) == 0x0000D8, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_Select_Default) == 0x0000DC, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_MakeStruct_LinearColor_3) == 0x0000E0, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_MakeStruct_LinearColor_3' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000F0, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_Not_PreBool_ReturnValue) == 0x0000F1, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_BooleanAND_ReturnValue_2) == 0x0000F2, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_CustomEvent_ChangeColor) == 0x0000F3, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_CustomEvent_ChangeColor' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_Select_Default_1) == 0x0000F4, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_IsClient_ReturnValue_1) == 0x0000F8, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_IsClient_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, K2Node_MakeStruct_LinearColor_4) == 0x0000FC, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::K2Node_MakeStruct_LinearColor_4' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP, CallFunc_IsClient_ReturnValue_2) == 0x00010C, "Member 'NumberRollMinus01_BP_C_ExecuteUbergraph_NumberRollMinus01_BP::CallFunc_IsClient_ReturnValue_2' has a wrong offset!");

// Function NumberRoll-01_BP.NumberRoll-01_BP_C.SetColor
// 0x0001 (0x0001 - 0x0000)
struct NumberRollMinus01_BP_C_SetColor final
{
public:
	bool                                          ChangeColor;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NumberRollMinus01_BP_C_SetColor) == 0x000001, "Wrong alignment on NumberRollMinus01_BP_C_SetColor");
static_assert(sizeof(NumberRollMinus01_BP_C_SetColor) == 0x000001, "Wrong size on NumberRollMinus01_BP_C_SetColor");
static_assert(offsetof(NumberRollMinus01_BP_C_SetColor, ChangeColor) == 0x000000, "Member 'NumberRollMinus01_BP_C_SetColor::ChangeColor' has a wrong offset!");

// Function NumberRoll-01_BP.NumberRoll-01_BP_C.SetLit
// 0x0001 (0x0001 - 0x0000)
struct NumberRollMinus01_BP_C_SetLit final
{
public:
	bool                                          Lit;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NumberRollMinus01_BP_C_SetLit) == 0x000001, "Wrong alignment on NumberRollMinus01_BP_C_SetLit");
static_assert(sizeof(NumberRollMinus01_BP_C_SetLit) == 0x000001, "Wrong size on NumberRollMinus01_BP_C_SetLit");
static_assert(offsetof(NumberRollMinus01_BP_C_SetLit, Lit) == 0x000000, "Member 'NumberRollMinus01_BP_C_SetLit::Lit' has a wrong offset!");

// Function NumberRoll-01_BP.NumberRoll-01_BP_C.PushNumberRoll
// 0x0004 (0x0004 - 0x0000)
struct NumberRollMinus01_BP_C_PushNumberRoll final
{
public:
	int32                                         TargetNumber_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumberRollMinus01_BP_C_PushNumberRoll) == 0x000004, "Wrong alignment on NumberRollMinus01_BP_C_PushNumberRoll");
static_assert(sizeof(NumberRollMinus01_BP_C_PushNumberRoll) == 0x000004, "Wrong size on NumberRollMinus01_BP_C_PushNumberRoll");
static_assert(offsetof(NumberRollMinus01_BP_C_PushNumberRoll, TargetNumber_0) == 0x000000, "Member 'NumberRollMinus01_BP_C_PushNumberRoll::TargetNumber_0' has a wrong offset!");

// Function NumberRoll-01_BP.NumberRoll-01_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct NumberRollMinus01_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NumberRollMinus01_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on NumberRollMinus01_BP_C_ReceiveTick");
static_assert(sizeof(NumberRollMinus01_BP_C_ReceiveTick) == 0x000004, "Wrong size on NumberRollMinus01_BP_C_ReceiveTick");
static_assert(offsetof(NumberRollMinus01_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'NumberRollMinus01_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function NumberRoll-01_BP.NumberRoll-01_BP_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct NumberRollMinus01_BP_C_UserConstructionScript final
{
public:
	float                                         _Distance;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NumberRollMinus01_BP_C_UserConstructionScript) == 0x000004, "Wrong alignment on NumberRollMinus01_BP_C_UserConstructionScript");
static_assert(sizeof(NumberRollMinus01_BP_C_UserConstructionScript) == 0x000008, "Wrong size on NumberRollMinus01_BP_C_UserConstructionScript");
static_assert(offsetof(NumberRollMinus01_BP_C_UserConstructionScript, _Distance) == 0x000000, "Member 'NumberRollMinus01_BP_C_UserConstructionScript::_Distance' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'NumberRollMinus01_BP_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function NumberRoll-01_BP.NumberRoll-01_BP_C.UpdateActualNumber
// 0x0040 (0x0040 - 0x0000)
struct NumberRollMinus01_BP_C_UpdateActualNumber final
{
public:
	float                                         ActualNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetNumber_0;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewActualNumber;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _TargetNumber;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _NewActualNumber;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _ActualNumber;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _SmallestDistance;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NumberRollMinus01_BP_C_UpdateActualNumber) == 0x000004, "Wrong alignment on NumberRollMinus01_BP_C_UpdateActualNumber");
static_assert(sizeof(NumberRollMinus01_BP_C_UpdateActualNumber) == 0x000040, "Wrong size on NumberRollMinus01_BP_C_UpdateActualNumber");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, ActualNumber) == 0x000000, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::ActualNumber' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, TargetNumber_0) == 0x000004, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::TargetNumber_0' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, NewActualNumber) == 0x000008, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::NewActualNumber' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, _TargetNumber) == 0x00000C, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::_TargetNumber' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, _NewActualNumber) == 0x000010, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::_NewActualNumber' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, _ActualNumber) == 0x000014, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::_ActualNumber' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, _SmallestDistance) == 0x000018, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::_SmallestDistance' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Abs_ReturnValue) == 0x000024, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000028, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Abs_ReturnValue_1) == 0x00002C, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000030, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000034, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Abs_ReturnValue_2) == 0x000038, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003C, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00003D, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NumberRollMinus01_BP_C_UpdateActualNumber, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x00003E, "Member 'NumberRollMinus01_BP_C_UpdateActualNumber::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");

}

