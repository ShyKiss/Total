#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGameMenuOptionWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function InGameMenuOptionWidget.InGameMenuOptionWidget_C.ExecuteUbergraph_InGameMenuOptionWidget
// 0x0010 (0x0010 - 0x0000)
struct InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0008(0x0008)(NoDestructor)
};
static_assert(alignof(InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget) == 0x000004, "Wrong alignment on InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget");
static_assert(sizeof(InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget) == 0x000010, "Wrong size on InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget");
static_assert(offsetof(InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget, EntryPoint) == 0x000000, "Member 'InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget, K2Node_Event_InFocusEvent) == 0x000008, "Member 'InGameMenuOptionWidget_C_ExecuteUbergraph_InGameMenuOptionWidget::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function InGameMenuOptionWidget.InGameMenuOptionWidget_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct InGameMenuOptionWidget_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(InGameMenuOptionWidget_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on InGameMenuOptionWidget_C_OnRemovedFromFocusPath");
static_assert(sizeof(InGameMenuOptionWidget_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on InGameMenuOptionWidget_C_OnRemovedFromFocusPath");
static_assert(offsetof(InGameMenuOptionWidget_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'InGameMenuOptionWidget_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function InGameMenuOptionWidget.InGameMenuOptionWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct InGameMenuOptionWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InGameMenuOptionWidget_C_PreConstruct) == 0x000001, "Wrong alignment on InGameMenuOptionWidget_C_PreConstruct");
static_assert(sizeof(InGameMenuOptionWidget_C_PreConstruct) == 0x000001, "Wrong size on InGameMenuOptionWidget_C_PreConstruct");
static_assert(offsetof(InGameMenuOptionWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'InGameMenuOptionWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function InGameMenuOptionWidget.InGameMenuOptionWidget_C.OnFocusReceived
// 0x01D0 (0x01D0 - 0x0000)
struct InGameMenuOptionWidget_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00F8(0x0018)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0118(0x00B8)()
};
static_assert(alignof(InGameMenuOptionWidget_C_OnFocusReceived) == 0x000008, "Wrong alignment on InGameMenuOptionWidget_C_OnFocusReceived");
static_assert(sizeof(InGameMenuOptionWidget_C_OnFocusReceived) == 0x0001D0, "Wrong size on InGameMenuOptionWidget_C_OnFocusReceived");
static_assert(offsetof(InGameMenuOptionWidget_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'InGameMenuOptionWidget_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'InGameMenuOptionWidget_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'InGameMenuOptionWidget_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_OnFocusReceived, CallFunc_MakeLiteralText_ReturnValue) == 0x0000F8, "Member 'InGameMenuOptionWidget_C_OnFocusReceived::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_OnFocusReceived, CallFunc_MakeLiteralName_ReturnValue) == 0x000110, "Member 'InGameMenuOptionWidget_C_OnFocusReceived::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000118, "Member 'InGameMenuOptionWidget_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function InGameMenuOptionWidget.InGameMenuOptionWidget_C.UpdateHighlightState
// 0x0060 (0x0060 - 0x0000)
struct InGameMenuOptionWidget_C_UpdateHighlightState final
{
public:
	bool                                          Highlight;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0038(0x0028)()
};
static_assert(alignof(InGameMenuOptionWidget_C_UpdateHighlightState) == 0x000008, "Wrong alignment on InGameMenuOptionWidget_C_UpdateHighlightState");
static_assert(sizeof(InGameMenuOptionWidget_C_UpdateHighlightState) == 0x000060, "Wrong size on InGameMenuOptionWidget_C_UpdateHighlightState");
static_assert(offsetof(InGameMenuOptionWidget_C_UpdateHighlightState, Highlight) == 0x000000, "Member 'InGameMenuOptionWidget_C_UpdateHighlightState::Highlight' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_UpdateHighlightState, Temp_bool_Variable) == 0x000001, "Member 'InGameMenuOptionWidget_C_UpdateHighlightState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_UpdateHighlightState, Temp_struct_Variable) == 0x000004, "Member 'InGameMenuOptionWidget_C_UpdateHighlightState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_UpdateHighlightState, Temp_struct_Variable_1) == 0x000014, "Member 'InGameMenuOptionWidget_C_UpdateHighlightState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_UpdateHighlightState, Temp_bool_Variable_1) == 0x000024, "Member 'InGameMenuOptionWidget_C_UpdateHighlightState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_UpdateHighlightState, K2Node_Select_Default) == 0x000028, "Member 'InGameMenuOptionWidget_C_UpdateHighlightState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(InGameMenuOptionWidget_C_UpdateHighlightState, K2Node_Select_Default_1) == 0x000038, "Member 'InGameMenuOptionWidget_C_UpdateHighlightState::K2Node_Select_Default_1' has a wrong offset!");

}

