#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReviveSyringeSpawner_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ReviveSyringeSpawner_BP.ReviveSyringeSpawner_BP_C
// 0x0070 (0x05B0 - 0x0540)
class AReviveSyringeSpawner_BP_C final : public ARBInteractibleContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0540(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UObject*                                InteractableOwnerClearanceBoxComponent_BP;         // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Ngr_GlassBreak;                                    // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PingRef;                                           // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                RBActorPrevis1;                                    // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBContainerSpawnLocationComponent*     SpawnLocationRespawn;                              // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight;                                       // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AnimAnchor;                                        // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BrokenWindow;                                      // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Window;                                            // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                RBActorPrevis;                                     // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBContainerSpawnLocationComponent*     SpawnLocationSeringe;                              // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBroken_Server;                                   // 0x05A8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          IsBroken_Local;                                    // 0x05A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NeedInsideLight;                                   // 0x05AA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	ELightClipPlaneMode                           Clip_Plane;                                        // 0x05AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAllowSoloPills;                                   // 0x05AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void SetupItemLightingChannels();
	void DisableLightOnServer();
	void OnRep_IsBroken_Server();
	void OnRep_NeedInsideLight();
	void UpdateLights();
	void UpdateBrokenState();
	bool PlaySpecialMoveAnimation(class ARBPawn* InteractorPawn, ESpecialMove SpecialMove);
	void UserConstructionScript();
	void OnWorldPopulateFinished();
	void ForceBreak_Server();
	void ReceiveBeginPlay();
	void Break(class AActor* Damager);
	void Event_OnResetStage();
	void PostToggled(bool bToggleEnabled);
	void OnPawnDoSpecialMoveAction(class ARBPawn* Pawn, ESpecialMove SpecialMove);
	void Event_ItemPickedUp(class ARBPawn* Pawn, class ARBPickup* Item);
	void ValidateBroken();
	void BndEvt__ReviveSyringeSpawner_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableEvent__DelegateSignature(class URBDamageableComponent* DamageableComponent_0);
	void ExecuteUbergraph_ReviveSyringeSpawner_BP(int32 EntryPoint);

	void GetLookAtLocation(struct FVector* OutLookAtLocation) const;
	bool IsTogglingStaticShadowComponentAllowed() const;
	bool ShouldSpawnPill() const;
	bool GetPingEnabled(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, bool* OutIsEnabled) const;
	bool GetPlayerPingWorldLocation(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FVector* OutLocation) const;
	bool GetPlayerPingData(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FPlayerPingData* OutData) const;
	bool IsOpen() const;
	bool GetInteractionPawnLocation(const class ARBPawn* Pawn, ESpecialMove SpecialMove, struct FVector* OutLocation, struct FVector* OutDirection) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ReviveSyringeSpawner_BP_C">();
	}
	static class AReviveSyringeSpawner_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReviveSyringeSpawner_BP_C>();
	}
};
static_assert(alignof(AReviveSyringeSpawner_BP_C) == 0x000010, "Wrong alignment on AReviveSyringeSpawner_BP_C");
static_assert(sizeof(AReviveSyringeSpawner_BP_C) == 0x0005B0, "Wrong size on AReviveSyringeSpawner_BP_C");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, UberGraphFrame) == 0x000540, "Member 'AReviveSyringeSpawner_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, InteractableOwnerClearanceBoxComponent_BP) == 0x000548, "Member 'AReviveSyringeSpawner_BP_C::InteractableOwnerClearanceBoxComponent_BP' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, RBSound) == 0x000550, "Member 'AReviveSyringeSpawner_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, Ngr_GlassBreak) == 0x000558, "Member 'AReviveSyringeSpawner_BP_C::Ngr_GlassBreak' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, PingRef) == 0x000560, "Member 'AReviveSyringeSpawner_BP_C::PingRef' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, RBActorPrevis1) == 0x000568, "Member 'AReviveSyringeSpawner_BP_C::RBActorPrevis1' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, SpawnLocationRespawn) == 0x000570, "Member 'AReviveSyringeSpawner_BP_C::SpawnLocationRespawn' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, RBSpotLight) == 0x000578, "Member 'AReviveSyringeSpawner_BP_C::RBSpotLight' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, AnimAnchor) == 0x000580, "Member 'AReviveSyringeSpawner_BP_C::AnimAnchor' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, BrokenWindow) == 0x000588, "Member 'AReviveSyringeSpawner_BP_C::BrokenWindow' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, Window) == 0x000590, "Member 'AReviveSyringeSpawner_BP_C::Window' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, RBActorPrevis) == 0x000598, "Member 'AReviveSyringeSpawner_BP_C::RBActorPrevis' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, SpawnLocationSeringe) == 0x0005A0, "Member 'AReviveSyringeSpawner_BP_C::SpawnLocationSeringe' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, IsBroken_Server) == 0x0005A8, "Member 'AReviveSyringeSpawner_BP_C::IsBroken_Server' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, IsBroken_Local) == 0x0005A9, "Member 'AReviveSyringeSpawner_BP_C::IsBroken_Local' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, NeedInsideLight) == 0x0005AA, "Member 'AReviveSyringeSpawner_BP_C::NeedInsideLight' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, Clip_Plane) == 0x0005AB, "Member 'AReviveSyringeSpawner_BP_C::Clip_Plane' has a wrong offset!");
static_assert(offsetof(AReviveSyringeSpawner_BP_C, bAllowSoloPills) == 0x0005AC, "Member 'AReviveSyringeSpawner_BP_C::bAllowSoloPills' has a wrong offset!");

}

