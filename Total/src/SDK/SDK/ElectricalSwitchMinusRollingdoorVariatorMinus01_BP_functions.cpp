#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElectricalSwitchMinusRollingdoorVariatorMinus01_BP

#include "Basic.hpp"

#include "ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_classes.hpp"
#include "ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_parameters.hpp"


namespace SDK
{

// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.ExecuteUbergraph_ElectricalSwitch-RollingdoorVariator-01_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ExecuteUbergraph_ElectricalSwitchMinusRollingdoorVariatorMinus01_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "ExecuteUbergraph_ElectricalSwitch-RollingdoorVariator-01_BP");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_ExecuteUbergraph_ElectricalSwitchMinusRollingdoorVariatorMinus01_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.Event_OnCompletedOperation
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class ARBPawn*>                  Pawns                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::Event_OnCompletedOperation(const TArray<class ARBPawn*>& Pawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "Event_OnCompletedOperation");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_Event_OnCompletedOperation Parms{};

	Parms.Pawns = std::move(Pawns);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.OnHackStateChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URBHackableComponent*             HackableComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::OnHackStateChanged(class URBHackableComponent* HackableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "OnHackStateChanged");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_OnHackStateChanged Parms{};

	Parms.HackableComponent = HackableComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.SetVariatorEnabled
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::SetVariatorEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "SetVariatorEnabled");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_SetVariatorEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.OnVariatorEnabledChanged
// (BlueprintCallable, BlueprintEvent)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::OnVariatorEnabledChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "OnVariatorEnabledChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.BndEvt__ElectricalSwitch-RollingdoorVariator-01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBHackableComponent*             HackableComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::BndEvt__ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature(class URBHackableComponent* HackableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "BndEvt__ElectricalSwitch-RollingdoorVariator-01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_BndEvt__ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature Parms{};

	Parms.HackableComponent = HackableComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.ClampAngle__UpdateFunc
// (BlueprintEvent)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ClampAngle__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "ClampAngle__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.ClampAngle__FinishedFunc
// (BlueprintEvent)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ClampAngle__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "ClampAngle__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.TryResetSwitch
// (Public, BlueprintCallable, BlueprintEvent)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::TryResetSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "TryResetSwitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.SetLinkedTriggerable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBTriggerable*                   LinkedTriggerable_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::SetLinkedTriggerable(class ARBTriggerable* LinkedTriggerable_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "SetLinkedTriggerable");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_SetLinkedTriggerable Parms{};

	Parms.LinkedTriggerable_0 = LinkedTriggerable_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.OnHackedDisableStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHackedDisabled                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::OnHackedDisableStateChanged(bool bHackedDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "OnHackedDisableStateChanged");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_OnHackedDisableStateChanged Parms{};

	Parms.bHackedDisabled = bHackedDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.OnRep_bVariatorEnabled
// (BlueprintCallable, BlueprintEvent)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::OnRep_bVariatorEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "OnRep_bVariatorEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.SetHaveClamps
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::SetHaveClamps(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "SetHaveClamps");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_SetHaveClamps Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.RefreshHackedVisualState
// (Public, BlueprintCallable, BlueprintEvent)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::RefreshHackedVisualState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "RefreshHackedVisualState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.IsConsideredActivelyBeingHacked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::IsConsideredActivelyBeingHacked(bool* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "IsConsideredActivelyBeingHacked");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_IsConsideredActivelyBeingHacked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.ShouldAllLightBeOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bAllLightOn                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::ShouldAllLightBeOn(bool* bAllLightOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "ShouldAllLightBeOn");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_ShouldAllLightBeOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAllLightOn != nullptr)
		*bAllLightOn = Parms.bAllLightOn;
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.GetLinkedTriggerable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBTriggerable*                   Triggerable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::GetLinkedTriggerable(class ARBTriggerable** Triggerable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "GetLinkedTriggerable");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_GetLinkedTriggerable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Triggerable != nullptr)
		*Triggerable = Parms.Triggerable;
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.BP_ShouldProgressShowMaxedOut
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::BP_ShouldProgressShowMaxedOut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "BP_ShouldProgressShowMaxedOut");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_BP_ShouldProgressShowMaxedOut Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ElectricalSwitch-RollingdoorVariator-01_BP.ElectricalSwitch-RollingdoorVariator-01_BP_C.GetVariatorEnabled
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C::GetVariatorEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ElectricalSwitch-RollingdoorVariator-01_BP_C", "GetVariatorEnabled");

	Params::ElectricalSwitchMinusRollingdoorVariatorMinus01_BP_C_GetVariatorEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

