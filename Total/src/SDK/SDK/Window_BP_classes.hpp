#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Window_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MeshPopulate_Parent_classes.hpp"
#include "ModuleMeshDataMinus02_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Window_BP.Window_BP_C
// 0x0028 (0x03F8 - 0x03D0)
class AWindow_BP_C final : public AMeshPopulate_Parent_C
{
public:
	TArray<struct FModuleMeshDataMinus02>         WindowsMeshes;                                     // 0x03D0(0x0010)(Edit, BlueprintVisible)
	bool                                          Use2sided;                                         // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x03E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WindowThickness;                                   // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Window_BP_C">();
	}
	static class AWindow_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWindow_BP_C>();
	}
};
static_assert(alignof(AWindow_BP_C) == 0x000008, "Wrong alignment on AWindow_BP_C");
static_assert(sizeof(AWindow_BP_C) == 0x0003F8, "Wrong size on AWindow_BP_C");
static_assert(offsetof(AWindow_BP_C, WindowsMeshes) == 0x0003D0, "Member 'AWindow_BP_C::WindowsMeshes' has a wrong offset!");
static_assert(offsetof(AWindow_BP_C, Use2sided) == 0x0003E0, "Member 'AWindow_BP_C::Use2sided' has a wrong offset!");
static_assert(offsetof(AWindow_BP_C, Offset) == 0x0003E4, "Member 'AWindow_BP_C::Offset' has a wrong offset!");
static_assert(offsetof(AWindow_BP_C, WindowThickness) == 0x0003F0, "Member 'AWindow_BP_C::WindowThickness' has a wrong offset!");

}

