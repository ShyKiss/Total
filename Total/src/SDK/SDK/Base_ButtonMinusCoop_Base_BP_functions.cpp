#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_ButtonMinusCoop_Base_BP

#include "Basic.hpp"

#include "Base_ButtonMinusCoop_Base_BP_classes.hpp"
#include "Base_ButtonMinusCoop_Base_BP_parameters.hpp"


namespace SDK
{

// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.GetStateName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           StateA                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           StateB                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::GetStateName(class FString* StateA, class FString* StateB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "GetStateName");

	Params::Base_ButtonMinusCoop_Base_BP_C_GetStateName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StateA != nullptr)
		*StateA = std::move(Parms.StateA);

	if (StateB != nullptr)
		*StateB = std::move(Parms.StateB);

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.FixUp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::FixUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "FixUp");

	Params::Base_ButtonMinusCoop_Base_BP_C_FixUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABase_ButtonMinusCoop_Base_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.ButtonTimeline__FinishedFunc
// (BlueprintEvent)

void ABase_ButtonMinusCoop_Base_BP_C::ButtonTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "ButtonTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.ButtonTimeline__UpdateFunc
// (BlueprintEvent)

void ABase_ButtonMinusCoop_Base_BP_C::ButtonTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "ButtonTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.PrepareState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStateA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           RandomOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_ButtonMinusCoop_Base_BP_C::PrepareState(bool bStateA, class AActor* RandomOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "PrepareState");

	Params::Base_ButtonMinusCoop_Base_BP_C_PrepareState Parms{};

	Parms.bStateA = bStateA;
	Parms.RandomOwner = RandomOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.OnEditorPostLoad
// (Event, Public, BlueprintEvent)

void ABase_ButtonMinusCoop_Base_BP_C::OnEditorPostLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "OnEditorPostLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.OnPostActorsPasted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   PastedActors                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABase_ButtonMinusCoop_Base_BP_C::OnPostActorsPasted(const TArray<class AActor*>& PastedActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "OnPostActorsPasted");

	Params::Base_ButtonMinusCoop_Base_BP_C_OnPostActorsPasted Parms{};

	Parms.PastedActors = std::move(PastedActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.PostAddedToLevel
// (Event, Public, BlueprintEvent)

void ABase_ButtonMinusCoop_Base_BP_C::PostAddedToLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "PostAddedToLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.PostDuplicated
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           DuplicationParent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_ButtonMinusCoop_Base_BP_C::PostDuplicated(class AActor* DuplicationParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "PostDuplicated");

	Params::Base_ButtonMinusCoop_Base_BP_C_PostDuplicated Parms{};

	Parms.DuplicationParent = DuplicationParent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.PostEditChange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             PropertyName                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_ButtonMinusCoop_Base_BP_C::PostEditChange(const class FName& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "PostEditChange");

	Params::Base_ButtonMinusCoop_Base_BP_C_PostEditChange Parms{};

	Parms.PropertyName = PropertyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.PostEditMove
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFinished                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABase_ButtonMinusCoop_Base_BP_C::PostEditMove(bool bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "PostEditMove");

	Params::Base_ButtonMinusCoop_Base_BP_C_PostEditMove Parms{};

	Parms.bFinished = bFinished;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.TickSelected
// (Event, Public, BlueprintEvent)

void ABase_ButtonMinusCoop_Base_BP_C::TickSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "TickSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.OnTriggerableActivated
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBTriggerable*                   Triggerable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_ButtonMinusCoop_Base_BP_C::OnTriggerableActivated(class ARBTriggerable* Triggerable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "OnTriggerableActivated");

	Params::Base_ButtonMinusCoop_Base_BP_C_OnTriggerableActivated Parms{};

	Parms.Triggerable = Triggerable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.OnTriggerableDeactivated
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBTriggerable*                   Triggerable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_ButtonMinusCoop_Base_BP_C::OnTriggerableDeactivated(class ARBTriggerable* Triggerable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "OnTriggerableDeactivated");

	Params::Base_ButtonMinusCoop_Base_BP_C_OnTriggerableDeactivated Parms{};

	Parms.Triggerable = Triggerable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.BndEvt__Base_Button-Coop_Base_BP_OperatableComponent_K2Node_ComponentBoundEvent_1_OnCoopOperatableEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBCoopOperatableComponent*       Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_ButtonMinusCoop_Base_BP_C::BndEvt__Base_ButtonMinusCoop_Base_BP_OperatableComponent_K2Node_ComponentBoundEvent_1_OnCoopOperatableEvent__DelegateSignature(class URBCoopOperatableComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "BndEvt__Base_Button-Coop_Base_BP_OperatableComponent_K2Node_ComponentBoundEvent_1_OnCoopOperatableEvent__DelegateSignature");

	Params::Base_ButtonMinusCoop_Base_BP_C_BndEvt__Base_ButtonMinusCoop_Base_BP_OperatableComponent_K2Node_ComponentBoundEvent_1_OnCoopOperatableEvent__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.BndEvt__Base_Button-Coop_Base_BP_OperatableComponent_K2Node_ComponentBoundEvent_0_OnEnabledChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBInteractionZoneComponent*      Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_ButtonMinusCoop_Base_BP_C::BndEvt__Base_ButtonMinusCoop_Base_BP_OperatableComponent_K2Node_ComponentBoundEvent_0_OnEnabledChanged__DelegateSignature(class URBInteractionZoneComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "BndEvt__Base_Button-Coop_Base_BP_OperatableComponent_K2Node_ComponentBoundEvent_0_OnEnabledChanged__DelegateSignature");

	Params::Base_ButtonMinusCoop_Base_BP_C_BndEvt__Base_ButtonMinusCoop_Base_BP_OperatableComponent_K2Node_ComponentBoundEvent_0_OnEnabledChanged__DelegateSignature Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.ChangeButtonState
// (BlueprintCallable, BlueprintEvent)

void ABase_ButtonMinusCoop_Base_BP_C::ChangeButtonState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "ChangeButtonState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.SetState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStateA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABase_ButtonMinusCoop_Base_BP_C::SetState(bool bStateA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "SetState");

	Params::Base_ButtonMinusCoop_Base_BP_C_SetState Parms{};

	Parms.bStateA = bStateA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.SetShouldBeIgnoredForLots
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABase_ButtonMinusCoop_Base_BP_C::SetShouldBeIgnoredForLots(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "SetShouldBeIgnoredForLots");

	Params::Base_ButtonMinusCoop_Base_BP_C_SetShouldBeIgnoredForLots Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.ExecuteUbergraph_Base_Button-Coop_Base_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABase_ButtonMinusCoop_Base_BP_C::ExecuteUbergraph_Base_ButtonMinusCoop_Base_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "ExecuteUbergraph_Base_Button-Coop_Base_BP");

	Params::Base_ButtonMinusCoop_Base_BP_C_ExecuteUbergraph_Base_ButtonMinusCoop_Base_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.GetPingItemName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             OutName                                                (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::GetPingItemName(class FText* OutName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "GetPingItemName");

	Params::Base_ButtonMinusCoop_Base_BP_C_GetPingItemName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.ShouldPingFollowActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    OutShouldFollow                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::ShouldPingFollowActor(bool* OutShouldFollow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "ShouldPingFollowActor");

	Params::Base_ButtonMinusCoop_Base_BP_C_ShouldPingFollowActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutShouldFollow != nullptr)
		*OutShouldFollow = Parms.OutShouldFollow;

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.GetPingEnabled
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    OutIsEnabled                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::GetPingEnabled(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, bool* OutIsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "GetPingEnabled");

	Params::Base_ButtonMinusCoop_Base_BP_C_GetPingEnabled Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutIsEnabled != nullptr)
		*OutIsEnabled = Parms.OutIsEnabled;

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.GetPlayerPingData
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FPlayerPingData                  OutData                                                (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::GetPlayerPingData(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FPlayerPingData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "GetPlayerPingData");

	Params::Base_ButtonMinusCoop_Base_BP_C_GetPlayerPingData Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.GetPlayerPingWorldLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::GetPlayerPingWorldLocation(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FVector* OutLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "GetPlayerPingWorldLocation");

	Params::Base_ButtonMinusCoop_Base_BP_C_GetPlayerPingWorldLocation Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.IsRandomStateSet
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::IsRandomStateSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "IsRandomStateSet");

	Params::Base_ButtonMinusCoop_Base_BP_C_IsRandomStateSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.IsStateA
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::IsStateA() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "IsStateA");

	Params::Base_ButtonMinusCoop_Base_BP_C_IsStateA Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.ShouldBeIgnoredForLots
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABase_ButtonMinusCoop_Base_BP_C::ShouldBeIgnoredForLots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "ShouldBeIgnoredForLots");

	Params::Base_ButtonMinusCoop_Base_BP_C_ShouldBeIgnoredForLots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.GetProgressionRatio
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABase_ButtonMinusCoop_Base_BP_C::GetProgressionRatio() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "GetProgressionRatio");

	Params::Base_ButtonMinusCoop_Base_BP_C_GetProgressionRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Base_Button-Coop_Base_BP.Base_Button-Coop_Base_BP_C.GetTriggerActionBehavior
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ETriggerableActionBehavior              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ETriggerableActionBehavior ABase_ButtonMinusCoop_Base_BP_C::GetTriggerActionBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Button-Coop_Base_BP_C", "GetTriggerActionBehavior");

	Params::Base_ButtonMinusCoop_Base_BP_C_GetTriggerActionBehavior Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

