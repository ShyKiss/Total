#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HiddenSpectre_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HiddenSpectre_BP.HiddenSpectre_BP_C.SetVisibility
// 0x0003 (0x0003 - 0x0000)
struct HiddenSpectre_BP_C_SetVisibility final
{
public:
	bool                                          Spectre_00;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Spectre_01;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Spectre_02;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HiddenSpectre_BP_C_SetVisibility) == 0x000001, "Wrong alignment on HiddenSpectre_BP_C_SetVisibility");
static_assert(sizeof(HiddenSpectre_BP_C_SetVisibility) == 0x000003, "Wrong size on HiddenSpectre_BP_C_SetVisibility");
static_assert(offsetof(HiddenSpectre_BP_C_SetVisibility, Spectre_00) == 0x000000, "Member 'HiddenSpectre_BP_C_SetVisibility::Spectre_00' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_SetVisibility, Spectre_01) == 0x000001, "Member 'HiddenSpectre_BP_C_SetVisibility::Spectre_01' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_SetVisibility, Spectre_02) == 0x000002, "Member 'HiddenSpectre_BP_C_SetVisibility::Spectre_02' has a wrong offset!");

// Function HiddenSpectre_BP.HiddenSpectre_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct HiddenSpectre_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HiddenSpectre_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on HiddenSpectre_BP_C_ReceiveTick");
static_assert(sizeof(HiddenSpectre_BP_C_ReceiveTick) == 0x000004, "Wrong size on HiddenSpectre_BP_C_ReceiveTick");
static_assert(offsetof(HiddenSpectre_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'HiddenSpectre_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function HiddenSpectre_BP.HiddenSpectre_BP_C.MotionBlurByBones
// 0x0030 (0x0030 - 0x0000)
struct HiddenSpectre_BP_C_MotionBlurByBones final
{
public:
	TArray<class FName>                           ListOfBones;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class USkeletalMeshComponent*>         Array;                                             // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                Rotation;                                          // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HiddenSpectre_BP_C_MotionBlurByBones) == 0x000008, "Wrong alignment on HiddenSpectre_BP_C_MotionBlurByBones");
static_assert(sizeof(HiddenSpectre_BP_C_MotionBlurByBones) == 0x000030, "Wrong size on HiddenSpectre_BP_C_MotionBlurByBones");
static_assert(offsetof(HiddenSpectre_BP_C_MotionBlurByBones, ListOfBones) == 0x000000, "Member 'HiddenSpectre_BP_C_MotionBlurByBones::ListOfBones' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_MotionBlurByBones, Array) == 0x000010, "Member 'HiddenSpectre_BP_C_MotionBlurByBones::Array' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_MotionBlurByBones, Rotation) == 0x000020, "Member 'HiddenSpectre_BP_C_MotionBlurByBones::Rotation' has a wrong offset!");

// Function HiddenSpectre_BP.HiddenSpectre_BP_C.MotionBlurSwap
// 0x0008 (0x0008 - 0x0000)
struct HiddenSpectre_BP_C_MotionBlurSwap final
{
public:
	float                                         blurIntensity;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsing3Anims;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HiddenSpectre_BP_C_MotionBlurSwap) == 0x000004, "Wrong alignment on HiddenSpectre_BP_C_MotionBlurSwap");
static_assert(sizeof(HiddenSpectre_BP_C_MotionBlurSwap) == 0x000008, "Wrong size on HiddenSpectre_BP_C_MotionBlurSwap");
static_assert(offsetof(HiddenSpectre_BP_C_MotionBlurSwap, blurIntensity) == 0x000000, "Member 'HiddenSpectre_BP_C_MotionBlurSwap::blurIntensity' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_MotionBlurSwap, IsUsing3Anims) == 0x000004, "Member 'HiddenSpectre_BP_C_MotionBlurSwap::IsUsing3Anims' has a wrong offset!");

// Function HiddenSpectre_BP.HiddenSpectre_BP_C.OnAnimationStart
// 0x0008 (0x0008 - 0x0000)
struct HiddenSpectre_BP_C_OnAnimationStart final
{
public:
	bool                                          bIsUsing3Anims;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EffectDelay;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HiddenSpectre_BP_C_OnAnimationStart) == 0x000004, "Wrong alignment on HiddenSpectre_BP_C_OnAnimationStart");
static_assert(sizeof(HiddenSpectre_BP_C_OnAnimationStart) == 0x000008, "Wrong size on HiddenSpectre_BP_C_OnAnimationStart");
static_assert(offsetof(HiddenSpectre_BP_C_OnAnimationStart, bIsUsing3Anims) == 0x000000, "Member 'HiddenSpectre_BP_C_OnAnimationStart::bIsUsing3Anims' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_OnAnimationStart, EffectDelay) == 0x000004, "Member 'HiddenSpectre_BP_C_OnAnimationStart::EffectDelay' has a wrong offset!");

// Function HiddenSpectre_BP.HiddenSpectre_BP_C.ExecuteUbergraph_HiddenSpectre_BP
// 0x0108 (0x0108 - 0x0000)
struct HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_CustomEvent_ListOfBones;                    // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<class USkeletalMeshComponent*>         K2Node_CustomEvent_Array;                          // 0x0040(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                K2Node_CustomEvent_Rotation;                       // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_blurIntensity;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsUsing3Anims;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_2;                          // 0x00E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_Event_bIsUsing3Anims;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_effectDelay;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APPManager_BP_C*                        CallFunc_GetPPFXManager_Manager;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP) == 0x000008, "Wrong alignment on HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP");
static_assert(sizeof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP) == 0x000108, "Wrong size on HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, EntryPoint) == 0x000000, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_MakeStruct_LinearColor) == 0x000004, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, Temp_int_Array_Index_Variable) == 0x000014, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_IsPlaying_ReturnValue) == 0x000024, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_CustomEvent_ListOfBones) == 0x000030, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_CustomEvent_ListOfBones' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_CustomEvent_Array) == 0x000040, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_CustomEvent_Array' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_CustomEvent_Rotation) == 0x000050, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_CustomEvent_blurIntensity) == 0x00005C, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_CustomEvent_blurIntensity' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_CustomEvent_IsUsing3Anims) == 0x000060, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_CustomEvent_IsUsing3Anims' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_BreakVector_X) == 0x000064, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_BreakVector_Y) == 0x000068, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_BreakVector_Z) == 0x00006C, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00007C, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00008C, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Array_Get_Item) == 0x000098, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_IsVisible_ReturnValue) == 0x0000A4, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Less_IntInt_ReturnValue) == 0x0000A5, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_MakeArray_Array) == 0x0000B8, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, Temp_int_Loop_Counter_Variable_1) == 0x0000C8, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_MakeArray_Array_2) == 0x0000E8, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_Event_bIsUsing3Anims) == 0x0000F8, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_Event_bIsUsing3Anims' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, K2Node_Event_effectDelay) == 0x0000FC, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::K2Node_Event_effectDelay' has a wrong offset!");
static_assert(offsetof(HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP, CallFunc_GetPPFXManager_Manager) == 0x000100, "Member 'HiddenSpectre_BP_C_ExecuteUbergraph_HiddenSpectre_BP::CallFunc_GetPPFXManager_Manager' has a wrong offset!");

}

