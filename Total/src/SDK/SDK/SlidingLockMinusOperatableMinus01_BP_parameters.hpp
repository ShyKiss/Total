#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingLockMinusOperatableMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SlidingLock-Operatable-01_BP.SlidingLock-Operatable-01_BP_C.ExecuteUbergraph_SlidingLock-Operatable-01_BP
// 0x0170 (0x0170 - 0x0000)
struct SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x00B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBDamageableComponent*                 K2Node_ComponentBoundEvent_DamageableComponent;    // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInFront_ReturnValue;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsInFront_ReturnValue_1;               // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsLocked_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable_3;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        K2Node_Select_Default_1;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP) == 0x000010, "Wrong alignment on SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP");
static_assert(sizeof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP) == 0x000170, "Wrong size on SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, EntryPoint) == 0x000000, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, Temp_object_Variable) == 0x000008, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, Temp_bool_Variable) == 0x000010, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, Temp_object_Variable_1) == 0x000018, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, Temp_object_Variable_2) == 0x000020, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_SetStaticMesh_ReturnValue) == 0x000061, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_GetActorForwardVector_ReturnValue) == 0x000064, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00007C, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, Temp_bool_Variable_1) == 0x00007D, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000B0, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0000B4, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, K2Node_ComponentBoundEvent_DamageableComponent) == 0x000140, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::K2Node_ComponentBoundEvent_DamageableComponent' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_BP_IsInFront_ReturnValue) == 0x000148, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_BP_IsInFront_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_BP_IsInFront_ReturnValue_1) == 0x000149, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_BP_IsInFront_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, K2Node_Select_Default) == 0x000150, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_BP_IsLocked_ReturnValue) == 0x000158, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_BP_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000159, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, Temp_object_Variable_3) == 0x000160, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP, K2Node_Select_Default_1) == 0x000168, "Member 'SlidingLockMinusOperatableMinus01_BP_C_ExecuteUbergraph_SlidingLockMinusOperatableMinus01_BP::K2Node_Select_Default_1' has a wrong offset!");

// Function SlidingLock-Operatable-01_BP.SlidingLock-Operatable-01_BP_C.BndEvt__Damageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct SlidingLockMinusOperatableMinus01_BP_C_BndEvt__Damageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature final
{
public:
	class URBDamageableComponent*                 DamageableComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SlidingLockMinusOperatableMinus01_BP_C_BndEvt__Damageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on SlidingLockMinusOperatableMinus01_BP_C_BndEvt__Damageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature");
static_assert(sizeof(SlidingLockMinusOperatableMinus01_BP_C_BndEvt__Damageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature) == 0x000008, "Wrong size on SlidingLockMinusOperatableMinus01_BP_C_BndEvt__Damageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BndEvt__Damageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature, DamageableComponent) == 0x000000, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BndEvt__Damageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature::DamageableComponent' has a wrong offset!");

// Function SlidingLock-Operatable-01_BP.SlidingLock-Operatable-01_BP_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsLocked_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript");
static_assert(sizeof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript) == 0x000040, "Wrong size on SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript, Temp_object_Variable) == 0x000008, "Member 'SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript, Temp_object_Variable_1) == 0x000010, "Member 'SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000018, "Member 'SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript, CallFunc_BP_IsLocked_ReturnValue) == 0x000019, "Member 'SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript::CallFunc_BP_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000020, "Member 'SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript, K2Node_Select_Default) == 0x000030, "Member 'SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'SlidingLockMinusOperatableMinus01_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SlidingLock-Operatable-01_BP.SlidingLock-Operatable-01_BP_C.BP_OverrideEditorCompTranform
// 0x0170 (0x0170 - 0x0000)
struct SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform final
{
public:
	class FName                                   CompName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FTransform                             ReturnValue;                                       // 0x0040(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FTransform                             EditorCompTransform;                               // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0xF];                                       // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform) == 0x000010, "Wrong alignment on SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform");
static_assert(sizeof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform) == 0x000170, "Wrong size on SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, CompName) == 0x000000, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::CompName' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, bLocked) == 0x000008, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::bLocked' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, Transform) == 0x000010, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::Transform' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, ReturnValue) == 0x000040, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, EditorCompTransform) == 0x000070, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::EditorCompTransform' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000D0, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, CallFunc_MakeTransform_ReturnValue_1) == 0x0000E0, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, CallFunc_ComposeTransforms_ReturnValue) == 0x000110, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000140, "Member 'SlidingLockMinusOperatableMinus01_BP_C_BP_OverrideEditorCompTranform::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");

// Function SlidingLock-Operatable-01_BP.SlidingLock-Operatable-01_BP_C.TakePhysicsComponentsSnapshot
// 0x0060 (0x0060 - 0x0000)
struct SlidingLockMinusOperatableMinus01_BP_C_TakePhysicsComponentsSnapshot final
{
public:
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlidingLockMinusOperatableMinus01_BP_C_TakePhysicsComponentsSnapshot) == 0x000010, "Wrong alignment on SlidingLockMinusOperatableMinus01_BP_C_TakePhysicsComponentsSnapshot");
static_assert(sizeof(SlidingLockMinusOperatableMinus01_BP_C_TakePhysicsComponentsSnapshot) == 0x000060, "Wrong size on SlidingLockMinusOperatableMinus01_BP_C_TakePhysicsComponentsSnapshot");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_TakePhysicsComponentsSnapshot, CallFunc_GetRelativeTransform_ReturnValue) == 0x000000, "Member 'SlidingLockMinusOperatableMinus01_BP_C_TakePhysicsComponentsSnapshot::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_TakePhysicsComponentsSnapshot, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x000030, "Member 'SlidingLockMinusOperatableMinus01_BP_C_TakePhysicsComponentsSnapshot::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");

// Function SlidingLock-Operatable-01_BP.SlidingLock-Operatable-01_BP_C.RestorePhysicsComponentsSnapshot
// 0x01A0 (0x01A0 - 0x0000)
struct SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0004(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0118(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot) == 0x000004, "Wrong alignment on SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot");
static_assert(sizeof(SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot) == 0x0001A0, "Wrong size on SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000004, "Member 'SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00008C, "Member 'SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x00008D, "Member 'SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000090, "Member 'SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000118, "Member 'SlidingLockMinusOperatableMinus01_BP_C_RestorePhysicsComponentsSnapshot::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");

// Function SlidingLock-Operatable-01_BP.SlidingLock-Operatable-01_BP_C.OnRep_FrameMetalWorldTransform
// 0x0088 (0x0088 - 0x0000)
struct SlidingLockMinusOperatableMinus01_BP_C_OnRep_FrameMetalWorldTransform final
{
public:
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SlidingLockMinusOperatableMinus01_BP_C_OnRep_FrameMetalWorldTransform) == 0x000004, "Wrong alignment on SlidingLockMinusOperatableMinus01_BP_C_OnRep_FrameMetalWorldTransform");
static_assert(sizeof(SlidingLockMinusOperatableMinus01_BP_C_OnRep_FrameMetalWorldTransform) == 0x000088, "Wrong size on SlidingLockMinusOperatableMinus01_BP_C_OnRep_FrameMetalWorldTransform");
static_assert(offsetof(SlidingLockMinusOperatableMinus01_BP_C_OnRep_FrameMetalWorldTransform, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000000, "Member 'SlidingLockMinusOperatableMinus01_BP_C_OnRep_FrameMetalWorldTransform::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

}

