#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBGameState_BP

#include "Basic.hpp"

#include "OPP_classes.hpp"
#include "GameVar_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass RBGameState_BP.RBGameState_BP_C
// 0x0088 (0x0948 - 0x08C0)
class ARBGameState_BP_C final : public ARBGameState
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnGameVarActivated__Client_;                       // 0x08C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnGameVarActivated__Server_;                       // 0x08D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnGameVarDeactivated__Client_;                     // 0x08E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnGameVarDeactivated__Server_;                     // 0x08F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             LevelVisibleForAllClients;                         // 0x0908(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             AllClientsLoadedAndVisible;                        // 0x0918(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             LevelListUpdated;                                  // 0x0928(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         NumObjectives;                                     // 0x0938(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentLevelIndex;                                 // 0x093C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FastTravelMode;                                    // 0x0940(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ReadyForNextLevel;                                 // 0x0941(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnRep_LevelList();
	void CreateLevelList();
	void LevelListUpdated__DelegateSignature();
	void AllClientsLoadedAndVisible__DelegateSignature();
	void LevelVisibleForAllClients__DelegateSignature();
	void OnGameVarDeactivated__Server___DelegateSignature(EGameVar GameVar);
	void OnGameVarDeactivated__Client___DelegateSignature(EGameVar GameVar);
	void OnGameVarActivated__Server___DelegateSignature(EGameVar GameVar);
	void OnGameVarActivated__Client___DelegateSignature(EGameVar GameVar);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RBGameState_BP_C">();
	}
	static class ARBGameState_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARBGameState_BP_C>();
	}
};
static_assert(alignof(ARBGameState_BP_C) == 0x000008, "Wrong alignment on ARBGameState_BP_C");
static_assert(sizeof(ARBGameState_BP_C) == 0x000948, "Wrong size on ARBGameState_BP_C");
static_assert(offsetof(ARBGameState_BP_C, DefaultSceneRoot) == 0x0008C0, "Member 'ARBGameState_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, OnGameVarActivated__Client_) == 0x0008C8, "Member 'ARBGameState_BP_C::OnGameVarActivated__Client_' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, OnGameVarActivated__Server_) == 0x0008D8, "Member 'ARBGameState_BP_C::OnGameVarActivated__Server_' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, OnGameVarDeactivated__Client_) == 0x0008E8, "Member 'ARBGameState_BP_C::OnGameVarDeactivated__Client_' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, OnGameVarDeactivated__Server_) == 0x0008F8, "Member 'ARBGameState_BP_C::OnGameVarDeactivated__Server_' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, LevelVisibleForAllClients) == 0x000908, "Member 'ARBGameState_BP_C::LevelVisibleForAllClients' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, AllClientsLoadedAndVisible) == 0x000918, "Member 'ARBGameState_BP_C::AllClientsLoadedAndVisible' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, LevelListUpdated) == 0x000928, "Member 'ARBGameState_BP_C::LevelListUpdated' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, NumObjectives) == 0x000938, "Member 'ARBGameState_BP_C::NumObjectives' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, CurrentLevelIndex) == 0x00093C, "Member 'ARBGameState_BP_C::CurrentLevelIndex' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, FastTravelMode) == 0x000940, "Member 'ARBGameState_BP_C::FastTravelMode' has a wrong offset!");
static_assert(offsetof(ARBGameState_BP_C, ReadyForNextLevel) == 0x000941, "Member 'ARBGameState_BP_C::ReadyForNextLevel' has a wrong offset!");

}

