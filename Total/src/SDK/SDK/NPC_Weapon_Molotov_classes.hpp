#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_Weapon_Molotov

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass NPC_Weapon_Molotov.NPC_Weapon_Molotov_C
// 0x0030 (0x0458 - 0x0428)
class ANPC_Weapon_Molotov_C final : public ARBNPCWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0428(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      MolotovBottleFireMinus01_NS;                       // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLightNear;                                    // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PitcherMinusThrowableMinus01;                      // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void Event_ActivateEffects();
	void Event_DeactivateEffects();
	void ExecuteUbergraph_NPC_Weapon_Molotov(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NPC_Weapon_Molotov_C">();
	}
	static class ANPC_Weapon_Molotov_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANPC_Weapon_Molotov_C>();
	}
};
static_assert(alignof(ANPC_Weapon_Molotov_C) == 0x000008, "Wrong alignment on ANPC_Weapon_Molotov_C");
static_assert(sizeof(ANPC_Weapon_Molotov_C) == 0x000458, "Wrong size on ANPC_Weapon_Molotov_C");
static_assert(offsetof(ANPC_Weapon_Molotov_C, UberGraphFrame) == 0x000428, "Member 'ANPC_Weapon_Molotov_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ANPC_Weapon_Molotov_C, MolotovBottleFireMinus01_NS) == 0x000430, "Member 'ANPC_Weapon_Molotov_C::MolotovBottleFireMinus01_NS' has a wrong offset!");
static_assert(offsetof(ANPC_Weapon_Molotov_C, PointLightNear) == 0x000438, "Member 'ANPC_Weapon_Molotov_C::PointLightNear' has a wrong offset!");
static_assert(offsetof(ANPC_Weapon_Molotov_C, PointLight) == 0x000440, "Member 'ANPC_Weapon_Molotov_C::PointLight' has a wrong offset!");
static_assert(offsetof(ANPC_Weapon_Molotov_C, PitcherMinusThrowableMinus01) == 0x000448, "Member 'ANPC_Weapon_Molotov_C::PitcherMinusThrowableMinus01' has a wrong offset!");
static_assert(offsetof(ANPC_Weapon_Molotov_C, RBSound) == 0x000450, "Member 'ANPC_Weapon_Molotov_C::RBSound' has a wrong offset!");

}

