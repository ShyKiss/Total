#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputBindingsMenu

#include "Basic.hpp"

#include "InputBindingsMenu_classes.hpp"
#include "InputBindingsMenu_parameters.hpp"


namespace SDK
{

// Function InputBindingsMenu.InputBindingsMenu_C.ExecuteUbergraph_InputBindingsMenu
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInputBindingsMenu_C::ExecuteUbergraph_InputBindingsMenu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "ExecuteUbergraph_InputBindingsMenu");

	Params::InputBindingsMenu_C_ExecuteUbergraph_InputBindingsMenu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InputBindingsMenu.InputBindingsMenu_C.Event_UpdateRemappingStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsRemappingInProgress                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsRemappingPrimaryKey                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInputBindingsMenu_C::Event_UpdateRemappingStatus(bool IsRemappingInProgress, bool bIsRemappingPrimaryKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "Event_UpdateRemappingStatus");

	Params::InputBindingsMenu_C_Event_UpdateRemappingStatus Parms{};

	Parms.IsRemappingInProgress = IsRemappingInProgress;
	Parms.bIsRemappingPrimaryKey = bIsRemappingPrimaryKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InputBindingsMenu.InputBindingsMenu_C.Event_DuplicateMappingFound
// (Event, Public, BlueprintEvent)
// Parameters:
// class URBMenuControlMappingEntry*       DuplicateEntry                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bReplacingPrimaryKey                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInputBindingsMenu_C::Event_DuplicateMappingFound(class URBMenuControlMappingEntry* DuplicateEntry, bool bReplacingPrimaryKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "Event_DuplicateMappingFound");

	Params::InputBindingsMenu_C_Event_DuplicateMappingFound Parms{};

	Parms.DuplicateEntry = DuplicateEntry;
	Parms.bReplacingPrimaryKey = bReplacingPrimaryKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InputBindingsMenu.InputBindingsMenu_C.OnResetKeyPressed
// (BlueprintCallable, BlueprintEvent)

void UInputBindingsMenu_C::OnResetKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "OnResetKeyPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InputBindingsMenu.InputBindingsMenu_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInputBindingsMenu_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "PreConstruct");

	Params::InputBindingsMenu_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InputBindingsMenu.InputBindingsMenu_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UInputBindingsMenu_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InputBindingsMenu.InputBindingsMenu_C.BndEvt__ResetDefaultsBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBMenuButton_C*                  Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInputBindingsMenu_C::BndEvt__ResetDefaultsBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(class URBMenuButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "BndEvt__ResetDefaultsBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	Params::InputBindingsMenu_C_BndEvt__ResetDefaultsBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InputBindingsMenu.InputBindingsMenu_C.BndEvt__ExitBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBMenuButton_C*                  Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInputBindingsMenu_C::BndEvt__ExitBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(class URBMenuButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "BndEvt__ExitBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	Params::InputBindingsMenu_C_BndEvt__ExitBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InputBindingsMenu.InputBindingsMenu_C.RefreshDisplay
// (Public, BlueprintCallable, BlueprintEvent)

void UInputBindingsMenu_C::RefreshDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "RefreshDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InputBindingsMenu.InputBindingsMenu_C.Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UInputBindingsMenu_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InputBindingsMenu.InputBindingsMenu_C.UpdateNavigationButtons
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UInputBindingsMenu_C::UpdateNavigationButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "UpdateNavigationButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InputBindingsMenu.InputBindingsMenu_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UInputBindingsMenu_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InputBindingsMenu_C", "OnMouseButtonDown");

	Params::InputBindingsMenu_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

