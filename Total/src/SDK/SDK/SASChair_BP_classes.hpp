#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SASChair_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "OPP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SASChair_BP.SASChair_BP_C
// 0x0070 (0x02A0 - 0x0230)
class ASASChair_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USASChairPanelComponent_BP_C*           SASChairPanelComponent_BP;                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ForceSitTeleportRef;                               // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AnimAnchor;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MurkoffChair;                                      // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TurnRate;                                          // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPlayerTVReady;                                   // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          InvertedAngle;                                     // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnChairStartedTurning;                             // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ASASWagon_NarrativeScreen_BP_C*         LinkedNarrativeScreen;                             // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateSkeletonTick();
	void IsChairRotating(bool* Value);
	void UserConstructionScript();
	void BndEvt__SASChair_BP_SASChairPanelComponent_BP_K2Node_ComponentBoundEvent_0_OnPanelEvent__DelegateSignature(class URBInteractiblePanelComponent* Panel, class ARBPawn* PawnInteracting);
	void BndEvt__SASChair_BP_SASChairPanelComponent_BP_K2Node_ComponentBoundEvent_1_OnPanelEvent__DelegateSignature(class URBInteractiblePanelComponent* Panel, class ARBPawn* PawnInteracting);
	void BndEvt__SASChair_BP_SASChairPanelComponent_BP_K2Node_ComponentBoundEvent_2_OnPanelEvent__DelegateSignature(class URBInteractiblePanelComponent* Panel, class ARBPawn* PawnInteracting);
	void BndEvt__SASChair_BP_SASChairPanelComponent_BP_K2Node_ComponentBoundEvent_3_OnEnabledChanged__DelegateSignature(class URBInteractionZoneComponent* Component);
	void TestTVDownAnimation();
	void ReceiveBeginPlay();
	void BndEvt__SASChair_BP_SASChairPanelComponent_BP_K2Node_ComponentBoundEvent_4_OnPanelEvent__DelegateSignature(class URBInteractiblePanelComponent* Panel, const class ARBPawn* PawnInteracting);
	void BndEvt__SASChair_BP_SASChairPanelComponent_BP_K2Node_ComponentBoundEvent_5_OnPanelEvent__DelegateSignature(class URBInteractiblePanelComponent* Panel, class ARBPawn* PawnInteracting);
	void ExecuteUbergraph_SASChair_BP(int32 EntryPoint);
	void OnChairStartedTurning__DelegateSignature(class ASASChair_BP_C* Chair, bool TurnTowardTV);
	void OnPlayerTVReady__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SASChair_BP_C">();
	}
	static class ASASChair_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASASChair_BP_C>();
	}
};
static_assert(alignof(ASASChair_BP_C) == 0x000008, "Wrong alignment on ASASChair_BP_C");
static_assert(sizeof(ASASChair_BP_C) == 0x0002A0, "Wrong size on ASASChair_BP_C");
static_assert(offsetof(ASASChair_BP_C, UberGraphFrame) == 0x000230, "Member 'ASASChair_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, SASChairPanelComponent_BP) == 0x000238, "Member 'ASASChair_BP_C::SASChairPanelComponent_BP' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, ForceSitTeleportRef) == 0x000240, "Member 'ASASChair_BP_C::ForceSitTeleportRef' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, AnimAnchor) == 0x000248, "Member 'ASASChair_BP_C::AnimAnchor' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, Capsule) == 0x000250, "Member 'ASASChair_BP_C::Capsule' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, MurkoffChair) == 0x000258, "Member 'ASASChair_BP_C::MurkoffChair' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, Root) == 0x000260, "Member 'ASASChair_BP_C::Root' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, TurnRate) == 0x000268, "Member 'ASASChair_BP_C::TurnRate' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, OnPlayerTVReady) == 0x000270, "Member 'ASASChair_BP_C::OnPlayerTVReady' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, InvertedAngle) == 0x000280, "Member 'ASASChair_BP_C::InvertedAngle' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, OnChairStartedTurning) == 0x000288, "Member 'ASASChair_BP_C::OnChairStartedTurning' has a wrong offset!");
static_assert(offsetof(ASASChair_BP_C, LinkedNarrativeScreen) == 0x000298, "Member 'ASASChair_BP_C::LinkedNarrativeScreen' has a wrong offset!");

}

