#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBNPC_GroundPitcher

#include "Basic.hpp"

#include "RBNPC_GroundPitcher_classes.hpp"
#include "RBNPC_GroundPitcher_parameters.hpp"


namespace SDK
{

// Function RBNPC_GroundPitcher.RBNPC_GroundPitcher_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARBNPC_GroundPitcher_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_GroundPitcher_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBNPC_GroundPitcher.RBNPC_GroundPitcher_C.SetNormalMeshVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBNPC_GroundPitcher_C::SetNormalMeshVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_GroundPitcher_C", "SetNormalMeshVisibility");

	Params::RBNPC_GroundPitcher_C_SetNormalMeshVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBNPC_GroundPitcher.RBNPC_GroundPitcher_C.ExecuteUbergraph_RBNPC_GroundPitcher
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBNPC_GroundPitcher_C::ExecuteUbergraph_RBNPC_GroundPitcher(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBNPC_GroundPitcher_C", "ExecuteUbergraph_RBNPC_GroundPitcher");

	Params::RBNPC_GroundPitcher_C_ExecuteUbergraph_RBNPC_GroundPitcher Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

