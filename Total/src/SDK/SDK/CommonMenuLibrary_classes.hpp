#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonMenuLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "OPP_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CommonMenuLibrary.CommonMenuLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UCommonMenuLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetNPCColors(EMetaNPCType NPCType, class UObject* __WorldContext, struct FUIColors* Colors);
	static void ShowMenuTutorial(class FName TutorialId, const class FText& TutorialText, class UWidget* PopUpAnchorInfo, EMenuPlacement PopupPlacement, class UWidget* FocusAnchorInfo, bool ShowBorder, class UObject* __WorldContext, class UMenuTutorials_C** CreatedWidget);
	static void GetScreenPosition(class UWidget* Widget, class UObject* __WorldContext, struct FVector2D* Position);
	static void HideMenuTutorial(class UObject* __WorldContext);
	static void IsShowingMenuTutorial(class UObject* __WorldContext, bool* IsShowingTutorial);
	static void GetNPCBlason(EMetaNPCType Type, class UObject* __WorldContext, class UTexture2D** blason);
	static void GetRecipeCategoryIcon(uint8 RecipeCategory, class UObject* __WorldContext, class UTexture2D** Icon);
	static void GetRecipeCategoryColor(uint8 RecipeCategory, class UObject* __WorldContext, struct FSlateColor* Color);
	static void GetRankTextFromLevel(int32 Level, class UObject* __WorldContext, class FText* RankText);
	static void GetNPCName(EMetaNPCType NPCType, class UObject* __WorldContext, class FText* Colors);
	static class FText GetImageStringForCurrency(ECurrencyType Type, class UObject* __WorldContext);
	static void FormatPlayerDisplayName(const class FString& DisplayName, int32 MaxLength, class UObject* __WorldContext, class FString* FormatedDisplayName);
	static void FocusNavTestCheck(class UObject* __WorldContext, bool* FocusCheck);
	static class UWidget* GamepadNav_HandleUniformGridNavigation(class UUniformGridPanel* InputGrid, EUINavigation Navigation, int32 InputItemsPerRow, int32 InputItemCount, class UObject* __WorldContext);
	static void GetPlatformIconTexture(EProfilePlatform Platform, class UObject* __WorldContext, class UTexture2D** Texture);
	static void TryLoadSyncSoftRef(TSoftObjectPtr<class UObject> AssetSoftRef, class UObject* __WorldContext, class UObject** NewParam);

	void ButtonScrollUp(class UScrollBox* ScrollBox, float AmountToScroll, class UObject* __WorldContext);
	void ButtonScrollDown(class UScrollBox* ScrollBox, float AmountToScroll, class UObject* __WorldContext);
	void HandleScrollOnAnalogInputEvent(const struct FAnalogInputEvent& AnalogInputEvent, class UScrollBox* ScrollBoxWidget, float BaseMultiplier, float& SpeedAccumulator, class UObject* __WorldContext, bool* Handled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CommonMenuLibrary_C">();
	}
	static class UCommonMenuLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonMenuLibrary_C>();
	}
};
static_assert(alignof(UCommonMenuLibrary_C) == 0x000008, "Wrong alignment on UCommonMenuLibrary_C");
static_assert(sizeof(UCommonMenuLibrary_C) == 0x000028, "Wrong size on UCommonMenuLibrary_C");

}

