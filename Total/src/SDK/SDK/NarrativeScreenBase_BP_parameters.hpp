#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NarrativeScreenBase_BP

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.BeginComponents
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenBase_BP_C_BeginComponents final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_BeginComponents) == 0x000001, "Wrong alignment on NarrativeScreenBase_BP_C_BeginComponents");
static_assert(sizeof(NarrativeScreenBase_BP_C_BeginComponents) == 0x000001, "Wrong size on NarrativeScreenBase_BP_C_BeginComponents");
static_assert(offsetof(NarrativeScreenBase_BP_C_BeginComponents, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'NarrativeScreenBase_BP_C_BeginComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.RefreshHackEnabledState
// 0x000C (0x000C - 0x0000)
struct NarrativeScreenBase_BP_C_RefreshHackEnabledState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDurability_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_RefreshHackEnabledState) == 0x000004, "Wrong alignment on NarrativeScreenBase_BP_C_RefreshHackEnabledState");
static_assert(sizeof(NarrativeScreenBase_BP_C_RefreshHackEnabledState) == 0x00000C, "Wrong size on NarrativeScreenBase_BP_C_RefreshHackEnabledState");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshHackEnabledState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'NarrativeScreenBase_BP_C_RefreshHackEnabledState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshHackEnabledState, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'NarrativeScreenBase_BP_C_RefreshHackEnabledState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshHackEnabledState, CallFunc_GetDurability_ReturnValue) == 0x000004, "Member 'NarrativeScreenBase_BP_C_RefreshHackEnabledState::CallFunc_GetDurability_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshHackEnabledState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'NarrativeScreenBase_BP_C_RefreshHackEnabledState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshHackEnabledState, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'NarrativeScreenBase_BP_C_RefreshHackEnabledState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.RefreshMultiPositionGroup
// 0x0028 (0x0028 - 0x0000)
struct NarrativeScreenBase_BP_C_RefreshMultiPositionGroup final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenBase_BP_C_RefreshMultiPositionGroup) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_RefreshMultiPositionGroup");
static_assert(sizeof(NarrativeScreenBase_BP_C_RefreshMultiPositionGroup) == 0x000028, "Wrong size on NarrativeScreenBase_BP_C_RefreshMultiPositionGroup");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshMultiPositionGroup, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'NarrativeScreenBase_BP_C_RefreshMultiPositionGroup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshMultiPositionGroup, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'NarrativeScreenBase_BP_C_RefreshMultiPositionGroup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshMultiPositionGroup, CallFunc_GetObjectName_ReturnValue) == 0x000008, "Member 'NarrativeScreenBase_BP_C_RefreshMultiPositionGroup::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshMultiPositionGroup, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'NarrativeScreenBase_BP_C_RefreshMultiPositionGroup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_RefreshMultiPositionGroup, CallFunc_Conv_StringToName_ReturnValue) == 0x00001C, "Member 'NarrativeScreenBase_BP_C_RefreshMultiPositionGroup::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.SnapScreenMeshesVisibility
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenBase_BP_C_SnapScreenMeshesVisibility final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_SnapScreenMeshesVisibility) == 0x000001, "Wrong alignment on NarrativeScreenBase_BP_C_SnapScreenMeshesVisibility");
static_assert(sizeof(NarrativeScreenBase_BP_C_SnapScreenMeshesVisibility) == 0x000001, "Wrong size on NarrativeScreenBase_BP_C_SnapScreenMeshesVisibility");
static_assert(offsetof(NarrativeScreenBase_BP_C_SnapScreenMeshesVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'NarrativeScreenBase_BP_C_SnapScreenMeshesVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.BreakOnServer
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenBase_BP_C_BreakOnServer final
{
public:
	bool                                          CallFunc_AllowScreenExplosion_bAllowScreenExplosion; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_BreakOnServer) == 0x000001, "Wrong alignment on NarrativeScreenBase_BP_C_BreakOnServer");
static_assert(sizeof(NarrativeScreenBase_BP_C_BreakOnServer) == 0x000001, "Wrong size on NarrativeScreenBase_BP_C_BreakOnServer");
static_assert(offsetof(NarrativeScreenBase_BP_C_BreakOnServer, CallFunc_AllowScreenExplosion_bAllowScreenExplosion) == 0x000000, "Member 'NarrativeScreenBase_BP_C_BreakOnServer::CallFunc_AllowScreenExplosion_bAllowScreenExplosion' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.OnRep_bScreenCracked
// 0x0038 (0x0038 - 0x0000)
struct NarrativeScreenBase_BP_C_OnRep_bScreenCracked final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_OnRep_bScreenCracked) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_OnRep_bScreenCracked");
static_assert(sizeof(NarrativeScreenBase_BP_C_OnRep_bScreenCracked) == 0x000038, "Wrong size on NarrativeScreenBase_BP_C_OnRep_bScreenCracked");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenCracked, Temp_delegate_Variable) == 0x000000, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenCracked::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenCracked, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenCracked::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenCracked, Temp_struct_Variable) == 0x000018, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenCracked::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenCracked, CallFunc_PostAkEvent_ReturnValue) == 0x000028, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenCracked::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenCracked, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenCracked::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenCracked, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenCracked::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.OnRep_bScreenExploded
// 0x0030 (0x0030 - 0x0000)
struct NarrativeScreenBase_BP_C_OnRep_bScreenExploded final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenBase_BP_C_OnRep_bScreenExploded) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_OnRep_bScreenExploded");
static_assert(sizeof(NarrativeScreenBase_BP_C_OnRep_bScreenExploded) == 0x000030, "Wrong size on NarrativeScreenBase_BP_C_OnRep_bScreenExploded");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenExploded, Temp_delegate_Variable) == 0x000000, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenExploded::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenExploded, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenExploded::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenExploded, Temp_struct_Variable) == 0x000018, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenExploded::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_OnRep_bScreenExploded, CallFunc_PostAkEvent_ReturnValue) == 0x000028, "Member 'NarrativeScreenBase_BP_C_OnRep_bScreenExploded::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.AllowScreenExplosion
// 0x0038 (0x0038 - 0x0000)
struct NarrativeScreenBase_BP_C_AllowScreenExplosion final
{
public:
	bool                                          bAllowScreenExplosion;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ANarrativeScreenBase_BP_C*>      CallFunc_GetSimilarTVInRadius_TVs;                 // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANarrativeScreenBase_BP_C*              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDestroyed_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_AllowScreenExplosion) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_AllowScreenExplosion");
static_assert(sizeof(NarrativeScreenBase_BP_C_AllowScreenExplosion) == 0x000038, "Wrong size on NarrativeScreenBase_BP_C_AllowScreenExplosion");
static_assert(offsetof(NarrativeScreenBase_BP_C_AllowScreenExplosion, bAllowScreenExplosion) == 0x000000, "Member 'NarrativeScreenBase_BP_C_AllowScreenExplosion::bAllowScreenExplosion' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_AllowScreenExplosion, Temp_int_Array_Index_Variable) == 0x000004, "Member 'NarrativeScreenBase_BP_C_AllowScreenExplosion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_AllowScreenExplosion, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'NarrativeScreenBase_BP_C_AllowScreenExplosion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_AllowScreenExplosion, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'NarrativeScreenBase_BP_C_AllowScreenExplosion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_AllowScreenExplosion, CallFunc_GetSimilarTVInRadius_TVs) == 0x000010, "Member 'NarrativeScreenBase_BP_C_AllowScreenExplosion::CallFunc_GetSimilarTVInRadius_TVs' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_AllowScreenExplosion, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'NarrativeScreenBase_BP_C_AllowScreenExplosion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_AllowScreenExplosion, CallFunc_Array_Get_Item) == 0x000028, "Member 'NarrativeScreenBase_BP_C_AllowScreenExplosion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_AllowScreenExplosion, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'NarrativeScreenBase_BP_C_AllowScreenExplosion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_AllowScreenExplosion, CallFunc_IsDestroyed_ReturnValue) == 0x000031, "Member 'NarrativeScreenBase_BP_C_AllowScreenExplosion::CallFunc_IsDestroyed_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.HandleDamageCountChanged_Cosmetic
// 0x0004 (0x0004 - 0x0000)
struct NarrativeScreenBase_BP_C_HandleDamageCountChanged_Cosmetic final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenBase_BP_C_HandleDamageCountChanged_Cosmetic) == 0x000004, "Wrong alignment on NarrativeScreenBase_BP_C_HandleDamageCountChanged_Cosmetic");
static_assert(sizeof(NarrativeScreenBase_BP_C_HandleDamageCountChanged_Cosmetic) == 0x000004, "Wrong size on NarrativeScreenBase_BP_C_HandleDamageCountChanged_Cosmetic");
static_assert(offsetof(NarrativeScreenBase_BP_C_HandleDamageCountChanged_Cosmetic, Count) == 0x000000, "Member 'NarrativeScreenBase_BP_C_HandleDamageCountChanged_Cosmetic::Count' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ResetScreenBreakEffects
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenBase_BP_C_ResetScreenBreakEffects final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_ResetScreenBreakEffects) == 0x000001, "Wrong alignment on NarrativeScreenBase_BP_C_ResetScreenBreakEffects");
static_assert(sizeof(NarrativeScreenBase_BP_C_ResetScreenBreakEffects) == 0x000001, "Wrong size on NarrativeScreenBase_BP_C_ResetScreenBreakEffects");
static_assert(offsetof(NarrativeScreenBase_BP_C_ResetScreenBreakEffects, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'NarrativeScreenBase_BP_C_ResetScreenBreakEffects::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.Update Screens MDD
// 0x0060 (0x0060 - 0x0000)
struct NarrativeScreenBase_BP_C_Update_Screens_MDD final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_Update_Screens_MDD) == 0x000010, "Wrong alignment on NarrativeScreenBase_BP_C_Update_Screens_MDD");
static_assert(sizeof(NarrativeScreenBase_BP_C_Update_Screens_MDD) == 0x000060, "Wrong size on NarrativeScreenBase_BP_C_Update_Screens_MDD");
static_assert(offsetof(NarrativeScreenBase_BP_C_Update_Screens_MDD, Temp_int_Array_Index_Variable) == 0x000000, "Member 'NarrativeScreenBase_BP_C_Update_Screens_MDD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_Update_Screens_MDD, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'NarrativeScreenBase_BP_C_Update_Screens_MDD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_Update_Screens_MDD, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'NarrativeScreenBase_BP_C_Update_Screens_MDD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_Update_Screens_MDD, K2Node_MakeStruct_LinearColor) == 0x00000C, "Member 'NarrativeScreenBase_BP_C_Update_Screens_MDD::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_Update_Screens_MDD, CallFunc_MakeVector4_ReturnValue) == 0x000020, "Member 'NarrativeScreenBase_BP_C_Update_Screens_MDD::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_Update_Screens_MDD, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000030, "Member 'NarrativeScreenBase_BP_C_Update_Screens_MDD::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_Update_Screens_MDD, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'NarrativeScreenBase_BP_C_Update_Screens_MDD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_Update_Screens_MDD, CallFunc_Array_Get_Item) == 0x000048, "Member 'NarrativeScreenBase_BP_C_Update_Screens_MDD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_Update_Screens_MDD, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'NarrativeScreenBase_BP_C_Update_Screens_MDD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.TurnOnLight
// 0x0028 (0x0028 - 0x0000)
struct NarrativeScreenBase_BP_C_TurnOnLight final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALight*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_TurnOnLight) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_TurnOnLight");
static_assert(sizeof(NarrativeScreenBase_BP_C_TurnOnLight) == 0x000028, "Wrong size on NarrativeScreenBase_BP_C_TurnOnLight");
static_assert(offsetof(NarrativeScreenBase_BP_C_TurnOnLight, Condition) == 0x000000, "Member 'NarrativeScreenBase_BP_C_TurnOnLight::Condition' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_TurnOnLight, Temp_int_Array_Index_Variable) == 0x000004, "Member 'NarrativeScreenBase_BP_C_TurnOnLight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_TurnOnLight, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'NarrativeScreenBase_BP_C_TurnOnLight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_TurnOnLight, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'NarrativeScreenBase_BP_C_TurnOnLight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_TurnOnLight, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'NarrativeScreenBase_BP_C_TurnOnLight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_TurnOnLight, CallFunc_Array_Get_Item) == 0x000018, "Member 'NarrativeScreenBase_BP_C_TurnOnLight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_TurnOnLight, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'NarrativeScreenBase_BP_C_TurnOnLight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_TurnOnLight, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'NarrativeScreenBase_BP_C_TurnOnLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.SpawnLight
// 0x01D0 (0x01D0 - 0x0000)
struct NarrativeScreenBase_BP_C_SpawnLight final
{
public:
	class ASpotLight*                             NewSpotLight;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASpotLight*                             CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorLocalRotation_SweepHitResult;  // 0x00B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorLocalOffset_SweepHitResult;    // 0x013C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(NarrativeScreenBase_BP_C_SpawnLight) == 0x000010, "Wrong alignment on NarrativeScreenBase_BP_C_SpawnLight");
static_assert(sizeof(NarrativeScreenBase_BP_C_SpawnLight) == 0x0001D0, "Wrong size on NarrativeScreenBase_BP_C_SpawnLight");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, NewSpotLight) == 0x000000, "Member 'NarrativeScreenBase_BP_C_SpawnLight::NewSpotLight' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_BreakTransform_Location) == 0x000040, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_K2_AddActorLocalRotation_SweepHitResult) == 0x0000B0, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_K2_AddActorLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SpawnLight, CallFunc_K2_AddActorLocalOffset_SweepHitResult) == 0x00013C, "Member 'NarrativeScreenBase_BP_C_SpawnLight::CallFunc_K2_AddActorLocalOffset_SweepHitResult' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.LinkTextureToChannel
// 0x0010 (0x0010 - 0x0000)
struct NarrativeScreenBase_BP_C_LinkTextureToChannel final
{
public:
	class ATvChannel_BP_C*                        K2Node_DynamicCast_AsTv_Channel_BP;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_LinkTextureToChannel) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_LinkTextureToChannel");
static_assert(sizeof(NarrativeScreenBase_BP_C_LinkTextureToChannel) == 0x000010, "Wrong size on NarrativeScreenBase_BP_C_LinkTextureToChannel");
static_assert(offsetof(NarrativeScreenBase_BP_C_LinkTextureToChannel, K2Node_DynamicCast_AsTv_Channel_BP) == 0x000000, "Member 'NarrativeScreenBase_BP_C_LinkTextureToChannel::K2Node_DynamicCast_AsTv_Channel_BP' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_LinkTextureToChannel, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'NarrativeScreenBase_BP_C_LinkTextureToChannel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_LinkTextureToChannel, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'NarrativeScreenBase_BP_C_LinkTextureToChannel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.UpdateTVOn
// 0x0058 (0x0058 - 0x0000)
struct NarrativeScreenBase_BP_C_UpdateTVOn final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0038(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayLoopingSoundOnActor_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_UpdateTVOn) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_UpdateTVOn");
static_assert(sizeof(NarrativeScreenBase_BP_C_UpdateTVOn) == 0x000058, "Wrong size on NarrativeScreenBase_BP_C_UpdateTVOn");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, Force) == 0x000000, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::Force' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, Temp_struct_Variable) == 0x000008, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, Temp_delegate_Variable) == 0x000018, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, Temp_struct_Variable_1) == 0x000028, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, Temp_delegate_Variable_1) == 0x000038, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, CallFunc_PostAkEvent_ReturnValue) == 0x000048, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, CallFunc_PostAkEvent_ReturnValue_1) == 0x00004C, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, CallFunc_PlayLoopingSoundOnActor_ReturnValue) == 0x000050, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::CallFunc_PlayLoopingSoundOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000054, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOn, CallFunc_BooleanOR_ReturnValue) == 0x000055, "Member 'NarrativeScreenBase_BP_C_UpdateTVOn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.SetScreenMaterial
// 0x0028 (0x0028 - 0x0000)
struct NarrativeScreenBase_BP_C_SetScreenMaterial final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_SetScreenMaterial) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_SetScreenMaterial");
static_assert(sizeof(NarrativeScreenBase_BP_C_SetScreenMaterial) == 0x000028, "Wrong size on NarrativeScreenBase_BP_C_SetScreenMaterial");
static_assert(offsetof(NarrativeScreenBase_BP_C_SetScreenMaterial, Material) == 0x000000, "Member 'NarrativeScreenBase_BP_C_SetScreenMaterial::Material' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SetScreenMaterial, Temp_int_Array_Index_Variable) == 0x000008, "Member 'NarrativeScreenBase_BP_C_SetScreenMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SetScreenMaterial, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'NarrativeScreenBase_BP_C_SetScreenMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SetScreenMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'NarrativeScreenBase_BP_C_SetScreenMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SetScreenMaterial, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'NarrativeScreenBase_BP_C_SetScreenMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SetScreenMaterial, CallFunc_Array_Get_Item) == 0x000018, "Member 'NarrativeScreenBase_BP_C_SetScreenMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_SetScreenMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'NarrativeScreenBase_BP_C_SetScreenMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.UserConstructionScript
// 0x0070 (0x0070 - 0x0000)
struct NarrativeScreenBase_BP_C_UserConstructionScript final
{
public:
	class ALight*                                 NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTimelineComponent*>             K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenBase_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_UserConstructionScript");
static_assert(sizeof(NarrativeScreenBase_BP_C_UserConstructionScript) == 0x000070, "Wrong size on NarrativeScreenBase_BP_C_UserConstructionScript");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, NewLocalVar_0) == 0x000000, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000008, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000018, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00002C, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000040, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_FindSubstring_ReturnValue) == 0x000064, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'NarrativeScreenBase_BP_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.UpdateTVOnVisuals_Internal
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenBase_BP_C_UpdateTVOnVisuals_Internal final
{
public:
	bool                                          IsOn;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_UpdateTVOnVisuals_Internal) == 0x000001, "Wrong alignment on NarrativeScreenBase_BP_C_UpdateTVOnVisuals_Internal");
static_assert(sizeof(NarrativeScreenBase_BP_C_UpdateTVOnVisuals_Internal) == 0x000001, "Wrong size on NarrativeScreenBase_BP_C_UpdateTVOnVisuals_Internal");
static_assert(offsetof(NarrativeScreenBase_BP_C_UpdateTVOnVisuals_Internal, IsOn) == 0x000000, "Member 'NarrativeScreenBase_BP_C_UpdateTVOnVisuals_Internal::IsOn' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.Event_OnDamageCountChanged
// 0x0004 (0x0004 - 0x0000)
struct NarrativeScreenBase_BP_C_Event_OnDamageCountChanged final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenBase_BP_C_Event_OnDamageCountChanged) == 0x000004, "Wrong alignment on NarrativeScreenBase_BP_C_Event_OnDamageCountChanged");
static_assert(sizeof(NarrativeScreenBase_BP_C_Event_OnDamageCountChanged) == 0x000004, "Wrong size on NarrativeScreenBase_BP_C_Event_OnDamageCountChanged");
static_assert(offsetof(NarrativeScreenBase_BP_C_Event_OnDamageCountChanged, Count) == 0x000000, "Member 'NarrativeScreenBase_BP_C_Event_OnDamageCountChanged::Count' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature final
{
public:
	class URBDamageableComponent*                 DamageableComponent_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature");
static_assert(sizeof(NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature) == 0x000008, "Wrong size on NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature");
static_assert(offsetof(NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature, DamageableComponent_0) == 0x000000, "Member 'NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature::DamageableComponent_0' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.PostToggled
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenBase_BP_C_PostToggled final
{
public:
	bool                                          bToggleEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_PostToggled) == 0x000001, "Wrong alignment on NarrativeScreenBase_BP_C_PostToggled");
static_assert(sizeof(NarrativeScreenBase_BP_C_PostToggled) == 0x000001, "Wrong size on NarrativeScreenBase_BP_C_PostToggled");
static_assert(offsetof(NarrativeScreenBase_BP_C_PostToggled, bToggleEnabled) == 0x000000, "Member 'NarrativeScreenBase_BP_C_PostToggled::bToggleEnabled' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature final
{
public:
	class URBHackableComponent*                   HackableComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature");
static_assert(sizeof(NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong size on NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature");
static_assert(offsetof(NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature, HackableComponent) == 0x000000, "Member 'NarrativeScreenBase_BP_C_BndEvt__NarrativeScreenBase_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature::HackableComponent' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.ExecuteUbergraph_NarrativeScreenBase_BP
// 0x00A8 (0x00A8 - 0x0000)
struct NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0028(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsOn;                           // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayLoopingSoundOnActor_ReturnValue;      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_count;                                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBDamageableComponent*                 K2Node_ComponentBoundEvent_DamageableComponent;    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AllowScreenExplosion_bAllowScreenExplosion; // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDestroyed_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bToggleEnabled;                       // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URBHackableComponent*                   K2Node_ComponentBoundEvent_hackableComponent;      // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetPlayerHacker_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHackState                                    CallFunc_GetCurrentHackState_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP");
static_assert(sizeof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP) == 0x0000A8, "Wrong size on NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, EntryPoint) == 0x000000, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, Temp_delegate_Variable) == 0x000004, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, Temp_struct_Variable) == 0x000018, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, Temp_delegate_Variable_1) == 0x000028, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_HasAuthority_ReturnValue_1) == 0x000039, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x00003A, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, K2Node_CustomEvent_IsOn) == 0x00003B, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::K2Node_CustomEvent_IsOn' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_Lerp_ReturnValue) == 0x00003C, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_PlayLoopingSoundOnActor_ReturnValue) == 0x000040, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_PlayLoopingSoundOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_HasAuthority_ReturnValue_2) == 0x000044, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_Lerp_ReturnValue_1) == 0x000048, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000050, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000054, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_RandomBool_ReturnValue) == 0x000058, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000060, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_SelectFloat_ReturnValue) == 0x000064, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000068, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, K2Node_Event_count) == 0x00006C, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::K2Node_Event_count' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, K2Node_ComponentBoundEvent_DamageableComponent) == 0x000078, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::K2Node_ComponentBoundEvent_DamageableComponent' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000080, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000081, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000082, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_AllowScreenExplosion_bAllowScreenExplosion) == 0x000083, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_AllowScreenExplosion_bAllowScreenExplosion' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_IsDestroyed_ReturnValue) == 0x000084, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_IsDestroyed_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, K2Node_Event_bToggleEnabled) == 0x000085, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::K2Node_Event_bToggleEnabled' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, K2Node_ComponentBoundEvent_hackableComponent) == 0x000088, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::K2Node_ComponentBoundEvent_hackableComponent' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x000090, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_GetPlayerHacker_ReturnValue) == 0x000098, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_GetPlayerHacker_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_GetCurrentHackState_ReturnValue) == 0x0000A0, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_GetCurrentHackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A2, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000A3, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP, CallFunc_PostAkEvent_ReturnValue) == 0x0000A4, "Member 'NarrativeScreenBase_BP_C_ExecuteUbergraph_NarrativeScreenBase_BP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.IsTogglingStaticShadowComponentAllowed
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenBase_BP_C_IsTogglingStaticShadowComponentAllowed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_IsTogglingStaticShadowComponentAllowed) == 0x000001, "Wrong alignment on NarrativeScreenBase_BP_C_IsTogglingStaticShadowComponentAllowed");
static_assert(sizeof(NarrativeScreenBase_BP_C_IsTogglingStaticShadowComponentAllowed) == 0x000001, "Wrong size on NarrativeScreenBase_BP_C_IsTogglingStaticShadowComponentAllowed");
static_assert(offsetof(NarrativeScreenBase_BP_C_IsTogglingStaticShadowComponentAllowed, ReturnValue) == 0x000000, "Member 'NarrativeScreenBase_BP_C_IsTogglingStaticShadowComponentAllowed::ReturnValue' has a wrong offset!");

// Function NarrativeScreenBase_BP.NarrativeScreenBase_BP_C.GetSimilarTVInRadius
// 0x00C8 (0x00C8 - 0x0000)
struct NarrativeScreenBase_BP_C_GetSimilarTVInRadius final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ANarrativeScreenBase_BP_C*>      TVs;                                               // 0x0008(0x0010)(Parm, OutParm)
	struct FVector                                Forward;                                           // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ANarrativeScreenBase_BP_C*>      CloseTVs;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                Location;                                          // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusSqr;                                         // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBWorld*                               CallFunc_GetRBWorld_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBNarrativeScreen*                     CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANarrativeScreenBase_BP_C*              K2Node_DynamicCast_AsNarrative_Screen_Base_BP;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius) == 0x000008, "Wrong alignment on NarrativeScreenBase_BP_C_GetSimilarTVInRadius");
static_assert(sizeof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius) == 0x0000C8, "Wrong size on NarrativeScreenBase_BP_C_GetSimilarTVInRadius");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, Radius) == 0x000000, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::Radius' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, TVs) == 0x000008, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::TVs' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, Forward) == 0x000018, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::Forward' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CloseTVs) == 0x000028, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CloseTVs' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, Location) == 0x000038, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::Location' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, RadiusSqr) == 0x000044, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::RadiusSqr' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_Square_ReturnValue) == 0x000048, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_GetForwardVector_ReturnValue) == 0x000058, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_GetRBWorld_ReturnValue) == 0x000070, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_GetRBWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_Array_Get_Item) == 0x000080, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, K2Node_DynamicCast_AsNarrative_Screen_Base_BP) == 0x000090, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::K2Node_DynamicCast_AsNarrative_Screen_Base_BP' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x0000A0, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000A4, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B0, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000BC, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0000C0, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C4, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C5, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenBase_BP_C_GetSimilarTVInRadius, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000C6, "Member 'NarrativeScreenBase_BP_C_GetSimilarTVInRadius::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

