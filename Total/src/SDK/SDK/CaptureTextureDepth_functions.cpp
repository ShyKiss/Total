#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CaptureTextureDepth

#include "Basic.hpp"

#include "CaptureTextureDepth_classes.hpp"
#include "CaptureTextureDepth_parameters.hpp"


namespace SDK
{

// Function captureTextureDepth.captureTextureDepth_C.Hide Actors
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHidden_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<TSoftObjectPtr<class AActor>>    Actors1                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ACaptureTextureDepth_C::Hide_Actors(bool bHidden_0, TArray<TSoftObjectPtr<class AActor>>& Actors1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("captureTextureDepth_C", "Hide Actors");

	Params::CaptureTextureDepth_C_Hide_Actors Parms{};

	Parms.bHidden_0 = bHidden_0;
	Parms.Actors1 = std::move(Actors1);

	UObject::ProcessEvent(Func, &Parms);

	Actors1 = std::move(Parms.Actors1);
}


// Function captureTextureDepth.captureTextureDepth_C.checkoutfile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PathName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACaptureTextureDepth_C::Checkoutfile(const class FString& PathName, const class FString& Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("captureTextureDepth_C", "checkoutfile");

	Params::CaptureTextureDepth_C_Checkoutfile Parms{};

	Parms.PathName = std::move(PathName);
	Parms.Texture = std::move(Texture);

	UObject::ProcessEvent(Func, &Parms);
}


// Function captureTextureDepth.captureTextureDepth_C.Export Depth Texture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Custom_Near_Clipping_Plane                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Custom_Far_Clipping_Plane                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Ortho_Width_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           TexturePath_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           TextureName_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<TSoftObjectPtr<class AActor>>    Actors1                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACaptureTextureDepth_C::Export_Depth_Texture(float Custom_Near_Clipping_Plane, float Custom_Far_Clipping_Plane, float Ortho_Width_0, const class FString& TexturePath_0, const class FString& TextureName_0, TArray<TSoftObjectPtr<class AActor>>& Actors1, float FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("captureTextureDepth_C", "Export Depth Texture");

	Params::CaptureTextureDepth_C_Export_Depth_Texture Parms{};

	Parms.Custom_Near_Clipping_Plane = Custom_Near_Clipping_Plane;
	Parms.Custom_Far_Clipping_Plane = Custom_Far_Clipping_Plane;
	Parms.Ortho_Width_0 = Ortho_Width_0;
	Parms.TexturePath_0 = std::move(TexturePath_0);
	Parms.TextureName_0 = std::move(TextureName_0);
	Parms.Actors1 = std::move(Actors1);
	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);

	Actors1 = std::move(Parms.Actors1);
}

}

