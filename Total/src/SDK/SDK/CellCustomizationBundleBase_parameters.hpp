#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CellCustomizationBundleBase

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CellCustomizationBundleBase.CellCustomizationBundleBase_C.ExecuteUbergraph_CellCustomizationBundleBase
// 0x0004 (0x0004 - 0x0000)
struct CellCustomizationBundleBase_C_ExecuteUbergraph_CellCustomizationBundleBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CellCustomizationBundleBase_C_ExecuteUbergraph_CellCustomizationBundleBase) == 0x000004, "Wrong alignment on CellCustomizationBundleBase_C_ExecuteUbergraph_CellCustomizationBundleBase");
static_assert(sizeof(CellCustomizationBundleBase_C_ExecuteUbergraph_CellCustomizationBundleBase) == 0x000004, "Wrong size on CellCustomizationBundleBase_C_ExecuteUbergraph_CellCustomizationBundleBase");
static_assert(offsetof(CellCustomizationBundleBase_C_ExecuteUbergraph_CellCustomizationBundleBase, EntryPoint) == 0x000000, "Member 'CellCustomizationBundleBase_C_ExecuteUbergraph_CellCustomizationBundleBase::EntryPoint' has a wrong offset!");

// Function CellCustomizationBundleBase.CellCustomizationBundleBase_C.UserConstructionScript
// 0x0038 (0x0038 - 0x0000)
struct CellCustomizationBundleBase_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CellCustomizationBundleBase_C_UserConstructionScript) == 0x000008, "Wrong alignment on CellCustomizationBundleBase_C_UserConstructionScript");
static_assert(sizeof(CellCustomizationBundleBase_C_UserConstructionScript) == 0x000038, "Wrong size on CellCustomizationBundleBase_C_UserConstructionScript");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000020, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, CallFunc_GetCollisionEnabled_ReturnValue) == 0x00002E, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002F, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'CellCustomizationBundleBase_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function CellCustomizationBundleBase.CellCustomizationBundleBase_C.SetupCollisions
// 0x0030 (0x0030 - 0x0000)
struct CellCustomizationBundleBase_C_SetupCollisions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CellCustomizationBundleBase_C_SetupCollisions) == 0x000008, "Wrong alignment on CellCustomizationBundleBase_C_SetupCollisions");
static_assert(sizeof(CellCustomizationBundleBase_C_SetupCollisions) == 0x000030, "Wrong size on CellCustomizationBundleBase_C_SetupCollisions");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CellCustomizationBundleBase_C_SetupCollisions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CellCustomizationBundleBase_C_SetupCollisions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CellCustomizationBundleBase_C_SetupCollisions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'CellCustomizationBundleBase_C_SetupCollisions::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, CallFunc_Array_Get_Item) == 0x000020, "Member 'CellCustomizationBundleBase_C_SetupCollisions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'CellCustomizationBundleBase_C_SetupCollisions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'CellCustomizationBundleBase_C_SetupCollisions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, CallFunc_GetCollisionEnabled_ReturnValue) == 0x00002D, "Member 'CellCustomizationBundleBase_C_SetupCollisions::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002E, "Member 'CellCustomizationBundleBase_C_SetupCollisions::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CellCustomizationBundleBase_C_SetupCollisions, CallFunc_Not_PreBool_ReturnValue) == 0x00002F, "Member 'CellCustomizationBundleBase_C_SetupCollisions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

