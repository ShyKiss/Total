#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DestructibleWallBase_BP

#include "Basic.hpp"

#include "DestructibleWallBase_BP_classes.hpp"
#include "DestructibleWallBase_BP_parameters.hpp"


namespace SDK
{

// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.BreakAllPlanks
// (Public, BlueprintCallable, BlueprintEvent)

void ADestructibleWallBase_BP_C::BreakAllPlanks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "BreakAllPlanks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.BreakPlanks
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     BoneNames                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ADestructibleWallBase_BP_C::BreakPlanks(TArray<class FName>& BoneNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "BreakPlanks");

	Params::DestructibleWallBase_BP_C_BreakPlanks Parms{};

	Parms.BoneNames = std::move(BoneNames);

	UObject::ProcessEvent(Func, &Parms);

	BoneNames = std::move(Parms.BoneNames);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.BreakPlank
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADestructibleWallBase_BP_C::BreakPlank(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "BreakPlank");

	Params::DestructibleWallBase_BP_C_BreakPlank Parms{};

	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.ResetLigthingSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ADestructibleWallBase_BP_C::ResetLigthingSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "ResetLigthingSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ADestructibleWallBase_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ADestructibleWallBase_BP_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ADestructibleWallBase_BP_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.SecondHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADestructibleWallBase_BP_C::SecondHit(const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "SecondHit");

	Params::DestructibleWallBase_BP_C_SecondHit Parms{};

	Parms.Vector = std::move(Vector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.Shake
// (BlueprintCallable, BlueprintEvent)

void ADestructibleWallBase_BP_C::Shake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "Shake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.ThirdHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADestructibleWallBase_BP_C::ThirdHit(const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "ThirdHit");

	Params::DestructibleWallBase_BP_C_ThirdHit Parms{};

	Parms.Vector = std::move(Vector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.FourthHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADestructibleWallBase_BP_C::FourthHit(const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "FourthHit");

	Params::DestructibleWallBase_BP_C_FourthHit Parms{};

	Parms.Vector = std::move(Vector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.forceBreak
// (BlueprintCallable, BlueprintEvent)

void ADestructibleWallBase_BP_C::ForceBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "forceBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBDamageableComponent*           DamageableComponent_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDestroyed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADestructibleWallBase_BP_C::BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature(class URBDamageableComponent* DamageableComponent_0, bool IsDestroyed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature");

	Params::DestructibleWallBase_BP_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnDamageableDamaged__DelegateSignature Parms{};

	Parms.DamageableComponent_0 = DamageableComponent_0;
	Parms.IsDestroyed = IsDestroyed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.Event_SnapToState
// (Event, Public, BlueprintEvent)

void ADestructibleWallBase_BP_C::Event_SnapToState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "Event_SnapToState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.UpdateDuratility
// (BlueprintCallable, BlueprintEvent)

void ADestructibleWallBase_BP_C::UpdateDuratility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "UpdateDuratility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.Event_OnResetStage
// (Event, Public, BlueprintEvent)

void ADestructibleWallBase_BP_C::Event_OnResetStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "Event_OnResetStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.Event_OnBreakObject
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADestructibleWallBase_BP_C::Event_OnBreakObject(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "Event_OnBreakObject");

	Params::DestructibleWallBase_BP_C_Event_OnBreakObject Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADestructibleWallBase_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.plankHit
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     PlankToMove                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     PlanksToBreak                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADestructibleWallBase_BP_C::PlankHit(const TArray<class FName>& PlankToMove, const TArray<class FName>& PlanksToBreak, const struct FVector& A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "plankHit");

	Params::DestructibleWallBase_BP_C_PlankHit Parms{};

	Parms.PlankToMove = std::move(PlankToMove);
	Parms.PlanksToBreak = std::move(PlanksToBreak);
	Parms.A = std::move(A);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.FirsHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADestructibleWallBase_BP_C::FirsHit(const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "FirsHit");

	Params::DestructibleWallBase_BP_C_FirsHit Parms{};

	Parms.Vector = std::move(Vector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.ExecuteUbergraph_DestructibleWallBase_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADestructibleWallBase_BP_C::ExecuteUbergraph_DestructibleWallBase_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "ExecuteUbergraph_DestructibleWallBase_BP");

	Params::DestructibleWallBase_BP_C_ExecuteUbergraph_DestructibleWallBase_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DestructibleWallBase_BP.DestructibleWallBase_BP_C.Broken__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ADestructibleWallBase_BP_C::Broken__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DestructibleWallBase_BP_C", "Broken__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}

}

