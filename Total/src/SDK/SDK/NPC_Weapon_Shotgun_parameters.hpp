#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_Weapon_Shotgun

#include "Basic.hpp"

#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function NPC_Weapon_Shotgun.NPC_Weapon_Shotgun_C.ExecuteUbergraph_NPC_Weapon_Shotgun
// 0x0080 (0x0080 - 0x0000)
struct NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimSequence* AnimSequence)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class USkeletalMeshComponent* MeshComp, class URBAnimNotify_SpecialMove* AnimNotify, class UAnimSequenceBase* AnimSequenceBase)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESpecialMoveNotifyType                        K2Node_CustomEvent_Notify;                         // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpecialMove                                  K2Node_CustomEvent_SpecialMove;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBNPC*                                 K2Node_DynamicCast_AsRB_NPC;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBNPC*                                 K2Node_Event_npc;                                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_CustomEvent_animSequence;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_meshComp;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class URBAnimNotify_SpecialMove*        K2Node_CustomEvent_animNotify;                     // 0x0068(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_CustomEvent_animSequenceBase;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpecialMove                                  CallFunc_BP_GetSpecialMove_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun) == 0x000008, "Wrong alignment on NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun");
static_assert(sizeof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun) == 0x000080, "Wrong size on NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, EntryPoint) == 0x000000, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::EntryPoint' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_IsDedicatedServer_ReturnValue) == 0x000024, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_CustomEvent_Notify) == 0x000026, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_CustomEvent_Notify' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_CustomEvent_SpecialMove) == 0x000027, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_CustomEvent_SpecialMove' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_DynamicCast_AsRB_NPC) == 0x000028, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_DynamicCast_AsRB_NPC' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000040, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_Event_npc) == 0x000048, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_Event_npc' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_CustomEvent_animSequence) == 0x000050, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_CustomEvent_animSequence' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000058, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_CustomEvent_meshComp) == 0x000060, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_CustomEvent_meshComp' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_CustomEvent_animNotify) == 0x000068, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_CustomEvent_animNotify' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, K2Node_CustomEvent_animSequenceBase) == 0x000070, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::K2Node_CustomEvent_animSequenceBase' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_BP_GetSpecialMove_ReturnValue) == 0x000078, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_BP_GetSpecialMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00007A, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00007B, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_BooleanOR_ReturnValue) == 0x00007C, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'NPC_Weapon_Shotgun_C_ExecuteUbergraph_NPC_Weapon_Shotgun::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function NPC_Weapon_Shotgun.NPC_Weapon_Shotgun_C.OnSpecialMoveNotify
// 0x0018 (0x0018 - 0x0000)
struct NPC_Weapon_Shotgun_C_OnSpecialMoveNotify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class URBAnimNotify_SpecialMove*        AnimNotify;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AnimSequenceBase;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Weapon_Shotgun_C_OnSpecialMoveNotify) == 0x000008, "Wrong alignment on NPC_Weapon_Shotgun_C_OnSpecialMoveNotify");
static_assert(sizeof(NPC_Weapon_Shotgun_C_OnSpecialMoveNotify) == 0x000018, "Wrong size on NPC_Weapon_Shotgun_C_OnSpecialMoveNotify");
static_assert(offsetof(NPC_Weapon_Shotgun_C_OnSpecialMoveNotify, MeshComp) == 0x000000, "Member 'NPC_Weapon_Shotgun_C_OnSpecialMoveNotify::MeshComp' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_OnSpecialMoveNotify, AnimNotify) == 0x000008, "Member 'NPC_Weapon_Shotgun_C_OnSpecialMoveNotify::AnimNotify' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_OnSpecialMoveNotify, AnimSequenceBase) == 0x000010, "Member 'NPC_Weapon_Shotgun_C_OnSpecialMoveNotify::AnimSequenceBase' has a wrong offset!");

// Function NPC_Weapon_Shotgun.NPC_Weapon_Shotgun_C.PlayWeaponAnimation
// 0x0008 (0x0008 - 0x0000)
struct NPC_Weapon_Shotgun_C_PlayWeaponAnimation final
{
public:
	class UAnimSequence*                          AnimSequence;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Weapon_Shotgun_C_PlayWeaponAnimation) == 0x000008, "Wrong alignment on NPC_Weapon_Shotgun_C_PlayWeaponAnimation");
static_assert(sizeof(NPC_Weapon_Shotgun_C_PlayWeaponAnimation) == 0x000008, "Wrong size on NPC_Weapon_Shotgun_C_PlayWeaponAnimation");
static_assert(offsetof(NPC_Weapon_Shotgun_C_PlayWeaponAnimation, AnimSequence) == 0x000000, "Member 'NPC_Weapon_Shotgun_C_PlayWeaponAnimation::AnimSequence' has a wrong offset!");

// Function NPC_Weapon_Shotgun.NPC_Weapon_Shotgun_C.EquippedBy
// 0x0008 (0x0008 - 0x0000)
struct NPC_Weapon_Shotgun_C_EquippedBy final
{
public:
	class ARBNPC*                                 NPC;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Weapon_Shotgun_C_EquippedBy) == 0x000008, "Wrong alignment on NPC_Weapon_Shotgun_C_EquippedBy");
static_assert(sizeof(NPC_Weapon_Shotgun_C_EquippedBy) == 0x000008, "Wrong size on NPC_Weapon_Shotgun_C_EquippedBy");
static_assert(offsetof(NPC_Weapon_Shotgun_C_EquippedBy, NPC) == 0x000000, "Member 'NPC_Weapon_Shotgun_C_EquippedBy::NPC' has a wrong offset!");

// Function NPC_Weapon_Shotgun.NPC_Weapon_Shotgun_C.Special Move Notify
// 0x0002 (0x0002 - 0x0000)
struct NPC_Weapon_Shotgun_C_Special_Move_Notify final
{
public:
	ESpecialMoveNotifyType                        Notify;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpecialMove                                  SpecialMove;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Weapon_Shotgun_C_Special_Move_Notify) == 0x000001, "Wrong alignment on NPC_Weapon_Shotgun_C_Special_Move_Notify");
static_assert(sizeof(NPC_Weapon_Shotgun_C_Special_Move_Notify) == 0x000002, "Wrong size on NPC_Weapon_Shotgun_C_Special_Move_Notify");
static_assert(offsetof(NPC_Weapon_Shotgun_C_Special_Move_Notify, Notify) == 0x000000, "Member 'NPC_Weapon_Shotgun_C_Special_Move_Notify::Notify' has a wrong offset!");
static_assert(offsetof(NPC_Weapon_Shotgun_C_Special_Move_Notify, SpecialMove) == 0x000001, "Member 'NPC_Weapon_Shotgun_C_Special_Move_Notify::SpecialMove' has a wrong offset!");

}

