#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AmeliaGraffitis_BP

#include "Basic.hpp"

#include "RBGraffitisFeatureSwitchBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AmeliaGraffitis_BP.AmeliaGraffitis_BP_C
// 0x0020 (0x02C8 - 0x02A8)
class AAmeliaGraffitis_BP_C final : public ARBGraffitisFeatureSwitchBase_C
{
public:
	class UDecalComponent*                        Decal_Splatter_02;                                 // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_Splatter_01;                                 // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal_A;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void SetColorParameters_A();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AmeliaGraffitis_BP_C">();
	}
	static class AAmeliaGraffitis_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAmeliaGraffitis_BP_C>();
	}
};
static_assert(alignof(AAmeliaGraffitis_BP_C) == 0x000008, "Wrong alignment on AAmeliaGraffitis_BP_C");
static_assert(sizeof(AAmeliaGraffitis_BP_C) == 0x0002C8, "Wrong size on AAmeliaGraffitis_BP_C");
static_assert(offsetof(AAmeliaGraffitis_BP_C, Decal_Splatter_02) == 0x0002A8, "Member 'AAmeliaGraffitis_BP_C::Decal_Splatter_02' has a wrong offset!");
static_assert(offsetof(AAmeliaGraffitis_BP_C, Decal_Splatter_01) == 0x0002B0, "Member 'AAmeliaGraffitis_BP_C::Decal_Splatter_01' has a wrong offset!");
static_assert(offsetof(AAmeliaGraffitis_BP_C, Decal_A) == 0x0002B8, "Member 'AAmeliaGraffitis_BP_C::Decal_A' has a wrong offset!");
static_assert(offsetof(AAmeliaGraffitis_BP_C, Arrow) == 0x0002C0, "Member 'AAmeliaGraffitis_BP_C::Arrow' has a wrong offset!");

}

