#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBPlayer_BP

#include "Basic.hpp"

#include "RBPlayer_BP_classes.hpp"
#include "RBPlayer_BP_parameters.hpp"


namespace SDK
{

// Function RBPlayer_BP.RBPlayer_BP_C.Deleteme__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::Deleteme__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Deleteme__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ShadowMeshCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::ShadowMeshCompleted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ShadowMeshCompleted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ExecuteUbergraph_RBPlayer_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::ExecuteUbergraph_RBPlayer_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ExecuteUbergraph_RBPlayer_BP");

	Params::RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.StopBlinkStimuli
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::StopBlinkStimuli()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "StopBlinkStimuli");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.StartBlinkStimuli
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::StartBlinkStimuli()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "StartBlinkStimuli");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ActivateAIDisturbanceLight_Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FullLoudnessRange                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxHearingDistance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::ActivateAIDisturbanceLight_Server(float Duration, float FullLoudnessRange, float MaxHearingDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ActivateAIDisturbanceLight_Server");

	Params::RBPlayer_BP_C_ActivateAIDisturbanceLight_Server Parms{};

	Parms.Duration = Duration;
	Parms.FullLoudnessRange = FullLoudnessRange;
	Parms.MaxHearingDistance = MaxHearingDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.TurnAIDisturbanceLightOff_Delayed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::TurnAIDisturbanceLightOff_Delayed(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "TurnAIDisturbanceLightOff_Delayed");

	Params::RBPlayer_BP_C_TurnAIDisturbanceLightOff_Delayed Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.OnHackStateChanged
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::OnHackStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "OnHackStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnActiveSkillRestrictionFinished
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_OnActiveSkillRestrictionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnActiveSkillRestrictionFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnActiveSkillRestrictionStarted
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_OnActiveSkillRestrictionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnActiveSkillRestrictionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.SkinnerMan
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::SkinnerMan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "SkinnerMan");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnRemainingRespawnIncreased
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_OnRemainingRespawnIncreased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnRemainingRespawnIncreased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnActiveSkillActorChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           ActiveSkillActor_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::Event_OnActiveSkillActorChanged(class AActor* ActiveSkillActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnActiveSkillActorChanged");

	Params::RBPlayer_BP_C_Event_OnActiveSkillActorChanged Parms{};

	Parms.ActiveSkillActor_0 = ActiveSkillActor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnHealthRestored
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_OnHealthRestored()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnHealthRestored");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UnderwaterStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsUnderwater                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBPlayer_BP_C::UnderwaterStateChanged(bool bIsUnderwater)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UnderwaterStateChanged");

	Params::RBPlayer_BP_C_UnderwaterStateChanged Parms{};

	Parms.bIsUnderwater = bIsUnderwater;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ApplyDefaultNV
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::ApplyDefaultNV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ApplyDefaultNV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.SetProxylightEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBPlayer_BP_C::SetProxylightEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "SetProxylightEnabled");

	Params::RBPlayer_BP_C_SetProxylightEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnNVAnimationNotify
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bWantsNvOn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ENightVisionAnimNotifyType              Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::Event_OnNVAnimationNotify(bool bWantsNvOn, ENightVisionAnimNotifyType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnNVAnimationNotify");

	Params::RBPlayer_BP_C_Event_OnNVAnimationNotify Parms{};

	Parms.bWantsNvOn = bWantsNvOn;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.NVAnimationDone
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::NVAnimationDone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "NVAnimationDone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.OnNVAnimationDone_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNvActive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBPlayer_BP_C::OnNVAnimationDone_Event(bool IsNvActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "OnNVAnimationDone_Event");

	Params::RBPlayer_BP_C_OnNVAnimationDone_Event Parms{};

	Parms.IsNvActive = IsNvActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Broadcast2DSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkAudioEvent*                    Event                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::Broadcast2DSound(class UAkAudioEvent* Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Broadcast2DSound");

	Params::RBPlayer_BP_C_Broadcast2DSound Parms{};

	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ShowProxyLight
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::ShowProxyLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ShowProxyLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ReceiveTick");

	Params::RBPlayer_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateShadowPickupEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBPickup*                        OldItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARBPickup*                        NewItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::UpdateShadowPickupEvent(class ARBPickup* OldItem, class ARBPickup* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateShadowPickupEvent");

	Params::RBPlayer_BP_C_UpdateShadowPickupEvent Parms{};

	Parms.OldItem = OldItem;
	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.OnAffectedByPsychosisGas_BP
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::OnAffectedByPsychosisGas_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "OnAffectedByPsychosisGas_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.OnExtraCustomizationMeshesAddedForSlot
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USkeletalMeshComponent*>   AddedExtraMeshes                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// EPlayerCustomizationSlot                Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::OnExtraCustomizationMeshesAddedForSlot(const TArray<class USkeletalMeshComponent*>& AddedExtraMeshes, EPlayerCustomizationSlot Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "OnExtraCustomizationMeshesAddedForSlot");

	Params::RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot Parms{};

	Parms.AddedExtraMeshes = std::move(AddedExtraMeshes);
	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateCustomization
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateCustomization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateCustomization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdatePerspective
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdatePerspective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdatePerspective");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnFootstep
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFootstepData                    FootstepData                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ARBPlayer_BP_C::Event_OnFootstep(const struct FFootstepData& FootstepData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnFootstep");

	Params::RBPlayer_BP_C_Event_OnFootstep Parms{};

	Parms.FootstepData = std::move(FootstepData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnLastConsumedBatteryTypeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemType                               batteryType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::Event_OnLastConsumedBatteryTypeChanged(EItemType batteryType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnLastConsumedBatteryTypeChanged");

	Params::RBPlayer_BP_C_Event_OnLastConsumedBatteryTypeChanged Parms{};

	Parms.batteryType = batteryType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.BP_OnTrapRoomFailed
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::BP_OnTrapRoomFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "BP_OnTrapRoomFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ARBPlayer_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.PlaySoundOnPlayer
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAkAudioEvent*                    AkEvent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::PlaySoundOnPlayer(class UAkAudioEvent* AkEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "PlaySoundOnPlayer");

	Params::RBPlayer_BP_C_PlaySoundOnPlayer Parms{};

	Parms.AkEvent = AkEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_InitReplicated
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_InitReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_InitReplicated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ReceiveEndPlay");

	Params::RBPlayer_BP_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_StopSpectatingLocally
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_StopSpectatingLocally()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_StopSpectatingLocally");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_StartSpectatingLocally
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_StartSpectatingLocally()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_StartSpectatingLocally");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnCustomizationChanged
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_OnCustomizationChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnCustomizationChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bOn                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBPlayer_BP_C::BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature");

	Params::RBPlayer_BP_C_BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature Parms{};

	Parms.bOn = bOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnTakeDamage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FDamageInfo                      Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ARBPlayer_BP_C::Event_OnTakeDamage(const struct FDamageInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnTakeDamage");

	Params::RBPlayer_BP_C_Event_OnTakeDamage Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnDie
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_OnDie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnDie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnPlayerPerspectiveChanged
// (Event, Public, BlueprintEvent)

void ARBPlayer_BP_C::Event_OnPlayerPerspectiveChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_OnPlayerPerspectiveChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.OnLoaded_E32B3EA245CB7B65286791842D20B97F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::OnLoaded_E32B3EA245CB7B65286791842D20B97F(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "OnLoaded_E32B3EA245CB7B65286791842D20B97F");

	Params::RBPlayer_BP_C_OnLoaded_E32B3EA245CB7B65286791842D20B97F Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.BlinkStimuli__UpdateFunc
// (BlueprintEvent)

void ARBPlayer_BP_C::BlinkStimuli__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "BlinkStimuli__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.BlinkStimuli__FinishedFunc
// (BlueprintEvent)

void ARBPlayer_BP_C::BlinkStimuli__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "BlinkStimuli__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.SetInitialPlayerSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::SetInitialPlayerSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "SetInitialPlayerSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Event_PlayHitReactionEffects
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerHitReactionParams         HitReaction                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FVector                          AttackLoc                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HitRelativeAngle                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::Event_PlayHitReactionEffects(const struct FPlayerHitReactionParams& HitReaction, const struct FVector& AttackLoc, float HitRelativeAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Event_PlayHitReactionEffects");

	Params::RBPlayer_BP_C_Event_PlayHitReactionEffects Parms{};

	Parms.HitReaction = std::move(HitReaction);
	Parms.AttackLoc = std::move(AttackLoc);
	Parms.HitRelativeAngle = HitRelativeAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.CustomizeCharacterModel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URBCustomizationOutfit*           OutfitOverride                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::CustomizeCharacterModel(class URBCustomizationOutfit* OutfitOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "CustomizeCharacterModel");

	Params::RBPlayer_BP_C_CustomizeCharacterModel Parms{};

	Parms.OutfitOverride = OutfitOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateESOPBatteryType
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateESOPBatteryType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateESOPBatteryType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Update Shadow Mesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceClean                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBPlayer_BP_C::Update_Shadow_Mesh(bool ForceClean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Update Shadow Mesh");

	Params::RBPlayer_BP_C_Update_Shadow_Mesh Parms{};

	Parms.ForceClean = ForceClean;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.CreateShadowmeshCopyOfSkeletalMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           InVisibleMesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  InParent                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           InAnimInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           OutShadowMeshComponent                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::CreateShadowmeshCopyOfSkeletalMesh(class USkeletalMeshComponent*& InVisibleMesh, class USceneComponent*& InParent, class UClass* InAnimInstance, class USkeletalMeshComponent** OutShadowMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "CreateShadowmeshCopyOfSkeletalMesh");

	Params::RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh Parms{};

	Parms.InVisibleMesh = InVisibleMesh;
	Parms.InParent = InParent;
	Parms.InAnimInstance = InAnimInstance;

	UObject::ProcessEvent(Func, &Parms);

	InVisibleMesh = Parms.InVisibleMesh;
	InParent = Parms.InParent;

	if (OutShadowMeshComponent != nullptr)
		*OutShadowMeshComponent = Parms.OutShadowMeshComponent;
}


// Function RBPlayer_BP.RBPlayer_BP_C.Remove Shadow Meshes
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::Remove_Shadow_Meshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Remove Shadow Meshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.CreateSkeletalMeshForShadow
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           InVisibleMesh                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  InParent                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bKeepRelativeTransform                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USkeletalMeshComponent*           Out                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::CreateSkeletalMeshForShadow(class USkeletalMeshComponent* InVisibleMesh, class USceneComponent* InParent, bool bKeepRelativeTransform, class USkeletalMeshComponent** Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "CreateSkeletalMeshForShadow");

	Params::RBPlayer_BP_C_CreateSkeletalMeshForShadow Parms{};

	Parms.InVisibleMesh = InVisibleMesh;
	Parms.InParent = InParent;
	Parms.bKeepRelativeTransform = bKeepRelativeTransform;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function RBPlayer_BP.RBPlayer_BP_C.CreateShadowmeshCopyOfStaticMesh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             InVisualMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMeshComponent*             OutNewComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::CreateShadowmeshCopyOfStaticMesh(class UStaticMeshComponent*& InVisualMesh, class USkeletalMeshComponent*& Parent, class UStaticMeshComponent** OutNewComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "CreateShadowmeshCopyOfStaticMesh");

	Params::RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh Parms{};

	Parms.InVisualMesh = InVisualMesh;
	Parms.Parent = Parent;

	UObject::ProcessEvent(Func, &Parms);

	InVisualMesh = Parms.InVisualMesh;
	Parent = Parms.Parent;

	if (OutNewComponent != nullptr)
		*OutNewComponent = Parms.OutNewComponent;
}


// Function RBPlayer_BP.RBPlayer_BP_C.ClearExtraCustomizationMeshes
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::ClearExtraCustomizationMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ClearExtraCustomizationMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.Should Hide Customization Slot in 1P
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerCustomizationSlot                Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldHide                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBPlayer_BP_C::Should_Hide_Customization_Slot_in_1P(EPlayerCustomizationSlot Slot, bool* ShouldHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "Should Hide Customization Slot in 1P");

	Params::RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldHide != nullptr)
		*ShouldHide = Parms.ShouldHide;
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateHeadCapMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateHeadCapMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateHeadCapMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.RefreshHeadCapVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::RefreshHeadCapVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "RefreshHeadCapVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateCharacterBloodDamageMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateCharacterBloodDamageMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateCharacterBloodDamageMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateBloodDrippingParticle
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateBloodDrippingParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateBloodDrippingParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateShadowPickup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBPickup*                        Old                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARBPickup*                        New                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::UpdateShadowPickup(class ARBPickup* Old, class ARBPickup* New)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateShadowPickup");

	Params::RBPlayer_BP_C_UpdateShadowPickup Parms{};

	Parms.Old = Old;
	Parms.New = New;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetFacePoseAsset
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPoseAsset*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UPoseAsset* ARBPlayer_BP_C::GetFacePoseAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetFacePoseAsset");

	Params::RBPlayer_BP_C_GetFacePoseAsset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateBloodHand
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::UpdateBloodHand(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateBloodHand");

	Params::RBPlayer_BP_C_UpdateBloodHand Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ApplyBloodOnRightHand
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::ApplyBloodOnRightHand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ApplyBloodOnRightHand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetRelevantForDamageExtraMeshes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class USkeletalMeshComponent*>   SkeletalMeshes_                                        (Parm, OutParm, ContainsInstancedReference)

void ARBPlayer_BP_C::GetRelevantForDamageExtraMeshes(TArray<class USkeletalMeshComponent*>* SkeletalMeshes_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetRelevantForDamageExtraMeshes");

	Params::RBPlayer_BP_C_GetRelevantForDamageExtraMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkeletalMeshes_ != nullptr)
		*SkeletalMeshes_ = std::move(Parms.SkeletalMeshes_);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ApplyDamageVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDamageType                             InfoType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENPCWeapon                              NPCWeapon                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DmdAmount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DmgLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DmgDirection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBloodParticles                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBPlayer_BP_C::ApplyDamageVFX(EDamageType InfoType, ENPCWeapon NPCWeapon, float DmdAmount, const struct FVector& DmgLocation, const struct FVector& DmgDirection, class AActor* SourceActor, bool bBloodParticles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ApplyDamageVFX");

	Params::RBPlayer_BP_C_ApplyDamageVFX Parms{};

	Parms.InfoType = InfoType;
	Parms.NPCWeapon = NPCWeapon;
	Parms.DmdAmount = DmdAmount;
	Parms.DmgLocation = std::move(DmgLocation);
	Parms.DmgDirection = std::move(DmgDirection);
	Parms.SourceActor = SourceActor;
	Parms.bBloodParticles = bBloodParticles;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.ApplyBloodDecal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceConstant*        MatDecal                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotate                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARBPlayer_BP_C::ApplyBloodDecal(class UMaterialInstanceConstant* MatDecal, float Scale, bool Rotate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "ApplyBloodDecal");

	Params::RBPlayer_BP_C_ApplyBloodDecal Parms{};

	Parms.MatDecal = MatDecal;
	Parms.Scale = Scale;
	Parms.Rotate = Rotate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetNextBloodSplatterShuffledMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInstanceConstant*        NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::GetNextBloodSplatterShuffledMaterial(class UMaterialInstanceConstant** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetNextBloodSplatterShuffledMaterial");

	Params::RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateBloodSmearInDownedState
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateBloodSmearInDownedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateBloodSmearInDownedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateBloodEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::UpdateBloodEffects(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateBloodEffects");

	Params::RBPlayer_BP_C_UpdateBloodEffects Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateESOPVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateESOPVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateESOPVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateShadowActiveSkill
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateShadowActiveSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateShadowActiveSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.CopyMaterialsToShadowMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   PlayerMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   ShadowMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::CopyMaterialsToShadowMesh(class UMeshComponent* PlayerMesh, class UMeshComponent* ShadowMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "CopyMaterialsToShadowMesh");

	Params::RBPlayer_BP_C_CopyMaterialsToShadowMesh Parms{};

	Parms.PlayerMesh = PlayerMesh;
	Parms.ShadowMesh = ShadowMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.CopyPrimitiveDataToShadowMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   PlayerMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMeshComponent*                   ShadowMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARBPlayer_BP_C::CopyPrimitiveDataToShadowMesh(class UMeshComponent* PlayerMesh, class UMeshComponent* ShadowMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "CopyPrimitiveDataToShadowMesh");

	Params::RBPlayer_BP_C_CopyPrimitiveDataToShadowMesh Parms{};

	Parms.PlayerMesh = PlayerMesh;
	Parms.ShadowMesh = ShadowMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateUnderwaterFX
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateUnderwaterFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateUnderwaterFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.DebugShadowMesh
// (Public, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::DebugShadowMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "DebugShadowMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.OnRep_DamagedBones
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::OnRep_DamagedBones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "OnRep_DamagedBones");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.UpdateReleventComponentsForBloodMaterial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::UpdateReleventComponentsForBloodMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "UpdateReleventComponentsForBloodMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.OnRep_bAIDisturbanceItemActive
// (BlueprintCallable, BlueprintEvent)

void ARBPlayer_BP_C::OnRep_bAIDisturbanceItemActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "OnRep_bAIDisturbanceItemActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetMainShadowMesh
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USkeletalMeshComponent* ARBPlayer_BP_C::GetMainShadowMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetMainShadowMesh");

	Params::RBPlayer_BP_C_GetMainShadowMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetAllShadowMeshes
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UPrimitiveComponent*>      ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference)

TArray<class UPrimitiveComponent*> ARBPlayer_BP_C::GetAllShadowMeshes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetAllShadowMeshes");

	Params::RBPlayer_BP_C_GetAllShadowMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetFaceFXSkeletalMeshComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USkeletalMeshComponent* ARBPlayer_BP_C::GetFaceFXSkeletalMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetFaceFXSkeletalMeshComponent");

	Params::RBPlayer_BP_C_GetFaceFXSkeletalMeshComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetSkeletalMeshComponentForSlot
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EPlayerCustomizationSlot                Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USkeletalMeshComponent* ARBPlayer_BP_C::GetSkeletalMeshComponentForSlot(EPlayerCustomizationSlot Slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetSkeletalMeshComponentForSlot");

	Params::RBPlayer_BP_C_GetSkeletalMeshComponentForSlot Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetPlayerCustomizationInfo
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRBPlayerCustomizationInfo       ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FRBPlayerCustomizationInfo ARBPlayer_BP_C::GetPlayerCustomizationInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetPlayerCustomizationInfo");

	Params::RBPlayer_BP_C_GetPlayerCustomizationInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetWatchComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UStaticMeshComponent* ARBPlayer_BP_C::GetWatchComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetWatchComponent");

	Params::RBPlayer_BP_C_GetWatchComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetMainParentSkeletalMesh
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USkeletalMeshComponent* ARBPlayer_BP_C::GetMainParentSkeletalMesh() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetMainParentSkeletalMesh");

	Params::RBPlayer_BP_C_GetMainParentSkeletalMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RBPlayer_BP.RBPlayer_BP_C.GetShadowSkeletalMeshComponentForSlot
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EPlayerCustomizationSlot                Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USkeletalMeshComponent*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USkeletalMeshComponent* ARBPlayer_BP_C::GetShadowSkeletalMeshComponentForSlot(EPlayerCustomizationSlot Slot, bool* OutFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBPlayer_BP_C", "GetShadowSkeletalMeshComponentForSlot");

	Params::RBPlayer_BP_C_GetShadowSkeletalMeshComponentForSlot Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (OutFound != nullptr)
		*OutFound = Parms.OutFound;

	return Parms.ReturnValue;
}

}

