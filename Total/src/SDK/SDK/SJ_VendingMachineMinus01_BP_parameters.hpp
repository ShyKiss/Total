#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SJ_VendingMachineMinus01_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SJ_VendingMachine-01_BP.SJ_VendingMachine-01_BP_C.ExecuteUbergraph_SJ_VendingMachine-01_BP
// 0x00A4 (0x00A4 - 0x0000)
struct SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP) == 0x000004, "Wrong alignment on SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP");
static_assert(sizeof(SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP) == 0x0000A4, "Wrong size on SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP");
static_assert(offsetof(SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP, EntryPoint) == 0x000000, "Member 'SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP, CallFunc_Lerp_ReturnValue_1) == 0x00000C, "Member 'SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00001C, "Member 'SJ_VendingMachineMinus01_BP_C_ExecuteUbergraph_SJ_VendingMachineMinus01_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

}

