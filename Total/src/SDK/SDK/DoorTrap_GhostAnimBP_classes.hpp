#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DoorTrap_GhostAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass DoorTrap_GhostAnimBP.DoorTrap_GhostAnimBP_C
// 0x0640 (0x0930 - 0x02F0)
class UDoorTrap_GhostAnimBP_C final : public URBGhostAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02F8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0328(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0350(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0378(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x03C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x03F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0418(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0440(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x04C0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x04F0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0570(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05A0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0620(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0650(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x06D0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0700(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0780(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07B0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0830(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0860(0x00B0)()
	class URBHackPanelComponent*                  HackPanel;                                         // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0918(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDone;                                            // 0x0919(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91A[0x6];                                      // 0x091A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATriggerTrap_BatteryPowered_Right_BP_C* ElectricTrapContainer;                             // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsInterrupted;                                     // 0x0928(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	bool FinishGhost(EGhostFinishReason FinishReason, int32 GhostFinishCustomReason);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DoorTrap_GhostAnimBP_AnimGraphNode_TransitionResult_9F1093994A9181A8611176AC74423FB2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DoorTrap_GhostAnimBP_AnimGraphNode_TransitionResult_577D8F8D41BB1F9DD0D661A410CCD875();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DoorTrap_GhostAnimBP_AnimGraphNode_TransitionResult_9CD9F7154AA6629B65EA898BF8FAAF4B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DoorTrap_GhostAnimBP_AnimGraphNode_TransitionResult_DAD92257416CBE228F3739A9F16B6B0B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_DoorTrap_GhostAnimBP_AnimGraphNode_TransitionResult_BB6F6C3A4C989E1ADEF73A98D2E8978C();
	void BP_InitializeGhost();
	void AnimNotify_Finish();
	void AnimNotify_SuccessDone();
	void AnimNotify_EntryDone();
	void ExecuteUbergraph_DoorTrap_GhostAnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DoorTrap_GhostAnimBP_C">();
	}
	static class UDoorTrap_GhostAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDoorTrap_GhostAnimBP_C>();
	}
};
static_assert(alignof(UDoorTrap_GhostAnimBP_C) == 0x000010, "Wrong alignment on UDoorTrap_GhostAnimBP_C");
static_assert(sizeof(UDoorTrap_GhostAnimBP_C) == 0x000930, "Wrong size on UDoorTrap_GhostAnimBP_C");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, UberGraphFrame) == 0x0002F0, "Member 'UDoorTrap_GhostAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_Root) == 0x0002F8, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000328, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000350, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000378, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0003A0, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x0003C8, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x0003F0, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_TransitionResult) == 0x000418, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000440, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_StateResult_5) == 0x0004C0, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0004F0, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_StateResult_4) == 0x000570, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0005A0, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_StateResult_3) == 0x000620, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000650, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_StateResult_2) == 0x0006D0, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000700, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_StateResult_1) == 0x000780, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_SequencePlayer) == 0x0007B0, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_StateResult) == 0x000830, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, AnimGraphNode_StateMachine) == 0x000860, "Member 'UDoorTrap_GhostAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, HackPanel) == 0x000910, "Member 'UDoorTrap_GhostAnimBP_C::HackPanel' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, IsSuccess) == 0x000918, "Member 'UDoorTrap_GhostAnimBP_C::IsSuccess' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, IsDone) == 0x000919, "Member 'UDoorTrap_GhostAnimBP_C::IsDone' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, ElectricTrapContainer) == 0x000920, "Member 'UDoorTrap_GhostAnimBP_C::ElectricTrapContainer' has a wrong offset!");
static_assert(offsetof(UDoorTrap_GhostAnimBP_C, IsInterrupted) == 0x000928, "Member 'UDoorTrap_GhostAnimBP_C::IsInterrupted' has a wrong offset!");

}

