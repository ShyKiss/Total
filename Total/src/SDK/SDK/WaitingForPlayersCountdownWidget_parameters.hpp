#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WaitingForPlayersCountdownWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.ExecuteUbergraph_WaitingForPlayersCountdownWidget
// 0x00A0 (0x00A0 - 0x0000)
struct WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameState*                           CallFunc_GetRBGameState_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDrugSequenceCompleted_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGamePhase                                    K2Node_CustomEvent_gamePhase;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameState*                           CallFunc_GetRBGameState_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EGamePhase GamePhase)>         K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0048(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameState*                           CallFunc_GetRBGameState_ReturnValue_2;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDrugSequenceCompleted_ReturnValue_1;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShowWaitingForInstall_ShouldShow;   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ShouldShowWaitingForInstall_DownloadPercent; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget) == 0x000008, "Wrong alignment on WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget");
static_assert(sizeof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget) == 0x0000A0, "Wrong size on WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, EntryPoint) == 0x000000, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_GetRBGameState_ReturnValue) == 0x000008, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_GetRBGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_IsDrugSequenceCompleted_ReturnValue) == 0x000021, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_IsDrugSequenceCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, K2Node_CustomEvent_gamePhase) == 0x000022, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::K2Node_CustomEvent_gamePhase' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_GetRBGameState_ReturnValue_1) == 0x000028, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_GetRBGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, K2Node_Event_IsDesignTime) == 0x000044, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, K2Node_Event_MyGeometry) == 0x000048, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, K2Node_Event_InDeltaTime) == 0x000080, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_GetRBGameState_ReturnValue_2) == 0x000088, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_GetRBGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_IsDrugSequenceCompleted_ReturnValue_1) == 0x000090, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_IsDrugSequenceCompleted_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_ShouldShowWaitingForInstall_ShouldShow) == 0x000091, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_ShouldShowWaitingForInstall_ShouldShow' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_ShouldShowWaitingForInstall_DownloadPercent) == 0x000094, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_ShouldShowWaitingForInstall_DownloadPercent' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct WaitingForPlayersCountdownWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaitingForPlayersCountdownWidget_C_Tick) == 0x000004, "Wrong alignment on WaitingForPlayersCountdownWidget_C_Tick");
static_assert(sizeof(WaitingForPlayersCountdownWidget_C_Tick) == 0x00003C, "Wrong size on WaitingForPlayersCountdownWidget_C_Tick");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_Tick, MyGeometry) == 0x000000, "Member 'WaitingForPlayersCountdownWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'WaitingForPlayersCountdownWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WaitingForPlayersCountdownWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WaitingForPlayersCountdownWidget_C_PreConstruct) == 0x000001, "Wrong alignment on WaitingForPlayersCountdownWidget_C_PreConstruct");
static_assert(sizeof(WaitingForPlayersCountdownWidget_C_PreConstruct) == 0x000001, "Wrong size on WaitingForPlayersCountdownWidget_C_PreConstruct");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WaitingForPlayersCountdownWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.OnGamePhaseUpdatedEvent
// 0x0001 (0x0001 - 0x0000)
struct WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdatedEvent final
{
public:
	EGamePhase                                    GamePhase;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdatedEvent) == 0x000001, "Wrong alignment on WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdatedEvent");
static_assert(sizeof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdatedEvent) == 0x000001, "Wrong size on WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdatedEvent");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdatedEvent, GamePhase) == 0x000000, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdatedEvent::GamePhase' has a wrong offset!");

// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.OnGamePhaseUpdated
// 0x0020 (0x0020 - 0x0000)
struct WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated final
{
public:
	EGamePhase                                    GamePhase;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDrugSequenceCompleted;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldShowWaitingForInstall_ShouldShow;   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ShouldShowWaitingForInstall_DownloadPercent; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameState*                           CallFunc_GetRBGameState_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSoloGame_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated) == 0x000008, "Wrong alignment on WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated");
static_assert(sizeof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated) == 0x000020, "Wrong size on WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, GamePhase) == 0x000000, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::GamePhase' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, bDrugSequenceCompleted) == 0x000001, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::bDrugSequenceCompleted' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_ShouldShowWaitingForInstall_ShouldShow) == 0x000002, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_ShouldShowWaitingForInstall_ShouldShow' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_ShouldShowWaitingForInstall_DownloadPercent) == 0x000004, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_ShouldShowWaitingForInstall_DownloadPercent' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000A, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_GetRBGameState_ReturnValue) == 0x000010, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_GetRBGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_IsSoloGame_ReturnValue) == 0x000019, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_IsSoloGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated, CallFunc_BooleanAND_ReturnValue_1) == 0x00001B, "Member 'WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.UpdateGameInstallText
// 0x0120 (0x0120 - 0x0000)
struct WaitingForPlayersCountdownWidget_C_UpdateGameInstallText final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0018)()
};
static_assert(alignof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText) == 0x000008, "Wrong alignment on WaitingForPlayersCountdownWidget_C_UpdateGameInstallText");
static_assert(sizeof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText) == 0x000120, "Wrong size on WaitingForPlayersCountdownWidget_C_UpdateGameInstallText");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, Percent) == 0x000000, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::Percent' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, CallFunc_FFloor_ReturnValue) == 0x000004, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000050, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, K2Node_MakeArray_Array) == 0x000090, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000B8, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_UpdateGameInstallText, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'WaitingForPlayersCountdownWidget_C_UpdateGameInstallText::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.ShouldShowWaitingForInstall
// 0x0020 (0x0020 - 0x0000)
struct WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall final
{
public:
	bool                                          ShouldShow_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DownloadPercent;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBChunkInstallManager*                 CallFunc_GetChunkInstallManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBGameState*                           CallFunc_GetRBGameState_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetChunkInstallationStatus_Percent;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChunkInstallationStatus_ReturnValue;   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall) == 0x000008, "Wrong alignment on WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall");
static_assert(sizeof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall) == 0x000020, "Wrong size on WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall, ShouldShow_0) == 0x000000, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall::ShouldShow_0' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall, DownloadPercent) == 0x000004, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall::DownloadPercent' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall, CallFunc_GetChunkInstallManager_ReturnValue) == 0x000008, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall::CallFunc_GetChunkInstallManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall, CallFunc_GetRBGameState_ReturnValue) == 0x000010, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall::CallFunc_GetRBGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall, CallFunc_GetChunkInstallationStatus_Percent) == 0x000018, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall::CallFunc_GetChunkInstallationStatus_Percent' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall, CallFunc_GetChunkInstallationStatus_ReturnValue) == 0x00001C, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall::CallFunc_GetChunkInstallationStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001E, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall, CallFunc_BooleanAND_ReturnValue) == 0x00001F, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.ShouldShow
// 0x0001 (0x0001 - 0x0000)
struct WaitingForPlayersCountdownWidget_C_ShouldShow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WaitingForPlayersCountdownWidget_C_ShouldShow) == 0x000001, "Wrong alignment on WaitingForPlayersCountdownWidget_C_ShouldShow");
static_assert(sizeof(WaitingForPlayersCountdownWidget_C_ShouldShow) == 0x000001, "Wrong size on WaitingForPlayersCountdownWidget_C_ShouldShow");
static_assert(offsetof(WaitingForPlayersCountdownWidget_C_ShouldShow, ReturnValue) == 0x000000, "Member 'WaitingForPlayersCountdownWidget_C_ShouldShow::ReturnValue' has a wrong offset!");

}

