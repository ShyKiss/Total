#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CoopButton_OperatableComponent_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CoopButton_OperatableComponent_BP.CoopButton_OperatableComponent_BP_C
// 0x0030 (0x0900 - 0x08D0)
class UCoopButton_OperatableComponent_BP_C final : public URBCoopOperatableComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bButtonPressed;                                    // 0x08D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          SoloPressStart;                                    // 0x08E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SoloPressStop;                                     // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class AValveUnlockingMinusButton_BP_C>> ValveUnlockingButtons;                             // 0x08F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnRep_OperatedActive();
	void OnTriggerableActivated(class ARBTriggerable* Triggerable);
	void OnPawnDoSpecialMoveAction(class ARBPawn* Pawn, ESpecialMove SpecialMove);
	void Event_OnEnabledChanged();
	void Event_DelayedReleaseButtonServerTimestampChanged();
	void ExecuteUbergraph_CoopButton_OperatableComponent_BP(int32 EntryPoint);

	float GetProgressionRatio() const;
	class UAnimSequence* GetOperatorStopAnimation(const class ARBPawn* Pawn, bool bFirstPerson) const;
	class UAnimSequence* GetOperatorLoopAnimation(const class ARBPawn* Pawn, bool bFirstPerson) const;
	class UAnimSequence* GetOperatorStartAnimation(const class ARBPawn* Pawn, bool bFirstPerson) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CoopButton_OperatableComponent_BP_C">();
	}
	static class UCoopButton_OperatableComponent_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoopButton_OperatableComponent_BP_C>();
	}
};
static_assert(alignof(UCoopButton_OperatableComponent_BP_C) == 0x000010, "Wrong alignment on UCoopButton_OperatableComponent_BP_C");
static_assert(sizeof(UCoopButton_OperatableComponent_BP_C) == 0x000900, "Wrong size on UCoopButton_OperatableComponent_BP_C");
static_assert(offsetof(UCoopButton_OperatableComponent_BP_C, UberGraphFrame) == 0x0008D0, "Member 'UCoopButton_OperatableComponent_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCoopButton_OperatableComponent_BP_C, bButtonPressed) == 0x0008D8, "Member 'UCoopButton_OperatableComponent_BP_C::bButtonPressed' has a wrong offset!");
static_assert(offsetof(UCoopButton_OperatableComponent_BP_C, SoloPressStart) == 0x0008E0, "Member 'UCoopButton_OperatableComponent_BP_C::SoloPressStart' has a wrong offset!");
static_assert(offsetof(UCoopButton_OperatableComponent_BP_C, SoloPressStop) == 0x0008E8, "Member 'UCoopButton_OperatableComponent_BP_C::SoloPressStop' has a wrong offset!");
static_assert(offsetof(UCoopButton_OperatableComponent_BP_C, ValveUnlockingButtons) == 0x0008F0, "Member 'UCoopButton_OperatableComponent_BP_C::ValveUnlockingButtons' has a wrong offset!");

}

