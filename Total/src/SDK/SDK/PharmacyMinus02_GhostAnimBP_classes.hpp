#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PharmacyMinus02_GhostAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Pharmacy-02_GhostAnimBP.Pharmacy-02_GhostAnimBP_C
// 0x07F0 (0x0AE0 - 0x02F0)
class UPharmacyMinus02_GhostAnimBP_C final : public URBGhostAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02F8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0328(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0350(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0378(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0420(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x04C8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0548(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x05C8(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0648(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x06F0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0770(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x07A0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0820(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x08C8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0948(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0978(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x09F8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0A28(0x00B0)()
	float                                         InteractHeight;                                    // 0x0AD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstPerson;                                     // 0x0ADC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PharmacyMinus02_GhostAnimBP(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void AnimNotify_Done();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PharmacyMinus02_GhostAnimBP_AnimGraphNode_BlendListByBool_432BDEDF47245BEFAD345FA60856A0B9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PharmacyMinus02_GhostAnimBP_AnimGraphNode_BlendListByBool_FE8880EC4ECF4F461C671E875912E741();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Pharmacy-02_GhostAnimBP_C">();
	}
	static class UPharmacyMinus02_GhostAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPharmacyMinus02_GhostAnimBP_C>();
	}
};
static_assert(alignof(UPharmacyMinus02_GhostAnimBP_C) == 0x000010, "Wrong alignment on UPharmacyMinus02_GhostAnimBP_C");
static_assert(sizeof(UPharmacyMinus02_GhostAnimBP_C) == 0x000AE0, "Wrong size on UPharmacyMinus02_GhostAnimBP_C");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, UberGraphFrame) == 0x0002F0, "Member 'UPharmacyMinus02_GhostAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_Root) == 0x0002F8, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000328, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_TransitionResult) == 0x000350, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x000378, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x000420, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0004C8, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000548, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0005C8, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000648, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0006F0, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_StateResult_2) == 0x000770, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0007A0, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_BlendListByBool) == 0x000820, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0008C8, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_StateResult_1) == 0x000948, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_SequencePlayer) == 0x000978, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_StateResult) == 0x0009F8, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, AnimGraphNode_StateMachine) == 0x000A28, "Member 'UPharmacyMinus02_GhostAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, InteractHeight) == 0x000AD8, "Member 'UPharmacyMinus02_GhostAnimBP_C::InteractHeight' has a wrong offset!");
static_assert(offsetof(UPharmacyMinus02_GhostAnimBP_C, IsFirstPerson) == 0x000ADC, "Member 'UPharmacyMinus02_GhostAnimBP_C::IsFirstPerson' has a wrong offset!");

}

