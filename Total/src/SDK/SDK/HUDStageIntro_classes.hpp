#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUDStageIntro

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUDStageIntro.HUDStageIntro_C
// 0x0090 (0x0378 - 0x02E8)
class UHUDStageIntro_C final : public URBHUDElementWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hide;                                              // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Show;                                              // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             AdditionalInfoText;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStageIntroVariatorEntry_C*             StageIntroVariatorEntry;                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStageIntroVariatorEntry_C*             StageIntroVariatorEntry_1;                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStageIntroVariatorEntry_C*             StageIntroVariatorEntry_2;                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStageIntroVariatorEntry_C*             StageIntroVariatorEntry_3;                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStageIntroVariatorEntry_C*             StageIntroVariatorEntry_4;                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStageIntroVariatorEntry_C*             StageIntroVariatorEntry_5;                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StageName;                                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TrialName;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         VariatorList;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsHiding;                                          // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentVariatorIndex;                              // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShownAllVariators;                                // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAkAudioEvent*>                  AvailableVariatorSounds;                           // 0x0368(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_HUDStageIntro(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Event_Show();
	void Finished_5005AE6A43210FC2510BF2B1AF634AB5();
	void InitVariators();
	void ShowNextVariator();
	void GetStageName(class FText* StageName_0);
	void GetTrialName(class FText* StageName_0);
	void UpdateAdditionalInfoText();
	void UpdateTrialName();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUDStageIntro_C">();
	}
	static class UHUDStageIntro_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUDStageIntro_C>();
	}
};
static_assert(alignof(UHUDStageIntro_C) == 0x000008, "Wrong alignment on UHUDStageIntro_C");
static_assert(sizeof(UHUDStageIntro_C) == 0x000378, "Wrong size on UHUDStageIntro_C");
static_assert(offsetof(UHUDStageIntro_C, UberGraphFrame) == 0x0002E8, "Member 'UHUDStageIntro_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, Hide) == 0x0002F0, "Member 'UHUDStageIntro_C::Hide' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, Show) == 0x0002F8, "Member 'UHUDStageIntro_C::Show' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, AdditionalInfoText) == 0x000300, "Member 'UHUDStageIntro_C::AdditionalInfoText' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, Background) == 0x000308, "Member 'UHUDStageIntro_C::Background' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, StageIntroVariatorEntry) == 0x000310, "Member 'UHUDStageIntro_C::StageIntroVariatorEntry' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, StageIntroVariatorEntry_1) == 0x000318, "Member 'UHUDStageIntro_C::StageIntroVariatorEntry_1' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, StageIntroVariatorEntry_2) == 0x000320, "Member 'UHUDStageIntro_C::StageIntroVariatorEntry_2' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, StageIntroVariatorEntry_3) == 0x000328, "Member 'UHUDStageIntro_C::StageIntroVariatorEntry_3' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, StageIntroVariatorEntry_4) == 0x000330, "Member 'UHUDStageIntro_C::StageIntroVariatorEntry_4' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, StageIntroVariatorEntry_5) == 0x000338, "Member 'UHUDStageIntro_C::StageIntroVariatorEntry_5' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, StageName) == 0x000340, "Member 'UHUDStageIntro_C::StageName' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, TrialName) == 0x000348, "Member 'UHUDStageIntro_C::TrialName' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, VariatorList) == 0x000350, "Member 'UHUDStageIntro_C::VariatorList' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, IsHiding) == 0x000358, "Member 'UHUDStageIntro_C::IsHiding' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, CurrentVariatorIndex) == 0x00035C, "Member 'UHUDStageIntro_C::CurrentVariatorIndex' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, bShownAllVariators) == 0x000360, "Member 'UHUDStageIntro_C::bShownAllVariators' has a wrong offset!");
static_assert(offsetof(UHUDStageIntro_C, AvailableVariatorSounds) == 0x000368, "Member 'UHUDStageIntro_C::AvailableVariatorSounds' has a wrong offset!");

}

