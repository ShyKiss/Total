#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseMinusPsychosisMine_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Base-PsychosisMine_BP.Base-PsychosisMine_BP_C
// 0x0128 (0x04A8 - 0x0380)
class ABaseMinusPsychosisMine_BP_C : public ARBPsychosisMine
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDecalComponent*                        Decal;                                             // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPropOptimizerComponent*              RBPropOptimizer;                                   // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActiveSkillVisionComponent*          RBActiveSkillVision1;                              // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ActiveSkillWaveSphere;                             // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PingCollisionBox;                                  // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Ngr_MineMarkerRed;                                 // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_Trap_Gas_Activated;                             // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          StartMineDeployed;                                 // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          StopMineDeployed;                                  // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          GasMineExplosionSound;                             // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LightColor;                                        // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LightIsOn;                                         // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LightIntensity;                                    // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlashState;                                        // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delay;                                             // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_Trap_Gas_Broken;                                // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          BreakSound;                                        // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastBlinkTimestamp;                                // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalBlinkSpeed;                                  // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_Trap_Explosion_Activated;                       // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_Trap_Explosion_Broken;                          // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ExplosiveMineExplosionSound;                       // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_Trap_Gas_Disabled;                              // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_Trap_Explosion_Disabled;                        // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HackedLightColor;                                  // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHacked;                                           // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMarkerNeedReinitialize;                           // 0x0459(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45A[0x2];                                      // 0x045A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HackedBlinkSpeed;                                  // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bActivelyHacking;                                  // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        FX_Trap_Cold_Disabled;                             // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_Trap_Cold_Broken;                               // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_Trap_Cold_Activated;                            // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ColdMineExplosionSound;                            // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FX_Trap_Cold_Disabled_NS;                          // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FX_Trap_Cold_Broken_NS;                            // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         FX_Trap_Cold_Activated_NS;                         // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ColdMineExplosionExtraSound;                       // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetLightColor(struct FLinearColor* LightColor_0);
	void UpdateActiveSkillEffectEnabled();
	void BlinkLight();
	void UpdateMeshVisibility();
	void Activate_Light(const struct FLinearColor& LightColor_0, bool On, bool Blink);
	void Event_OnActivate();
	void LightFlash();
	void Event_OnDeployed();
	void Event_OnResetStage();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Event_OnBreak();
	void Event_OnExpiredUnactivated();
	void OnHackStateChanged(class URBHackableComponent* HackableComponent);
	void ExecuteUbergraph_BaseMinusPsychosisMine_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Base-PsychosisMine_BP_C">();
	}
	static class ABaseMinusPsychosisMine_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABaseMinusPsychosisMine_BP_C>();
	}
};
static_assert(alignof(ABaseMinusPsychosisMine_BP_C) == 0x000008, "Wrong alignment on ABaseMinusPsychosisMine_BP_C");
static_assert(sizeof(ABaseMinusPsychosisMine_BP_C) == 0x0004A8, "Wrong size on ABaseMinusPsychosisMine_BP_C");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, UberGraphFrame) == 0x000380, "Member 'ABaseMinusPsychosisMine_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, Decal) == 0x000388, "Member 'ABaseMinusPsychosisMine_BP_C::Decal' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, RBPropOptimizer) == 0x000390, "Member 'ABaseMinusPsychosisMine_BP_C::RBPropOptimizer' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, RBActiveSkillVision1) == 0x000398, "Member 'ABaseMinusPsychosisMine_BP_C::RBActiveSkillVision1' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, ActiveSkillWaveSphere) == 0x0003A0, "Member 'ABaseMinusPsychosisMine_BP_C::ActiveSkillWaveSphere' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, PingCollisionBox) == 0x0003A8, "Member 'ABaseMinusPsychosisMine_BP_C::PingCollisionBox' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, Ngr_MineMarkerRed) == 0x0003B0, "Member 'ABaseMinusPsychosisMine_BP_C::Ngr_MineMarkerRed' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, PointLight) == 0x0003B8, "Member 'ABaseMinusPsychosisMine_BP_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, RBSound) == 0x0003C0, "Member 'ABaseMinusPsychosisMine_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Gas_Activated) == 0x0003C8, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Gas_Activated' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, StartMineDeployed) == 0x0003D0, "Member 'ABaseMinusPsychosisMine_BP_C::StartMineDeployed' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, StopMineDeployed) == 0x0003D8, "Member 'ABaseMinusPsychosisMine_BP_C::StopMineDeployed' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, GasMineExplosionSound) == 0x0003E0, "Member 'ABaseMinusPsychosisMine_BP_C::GasMineExplosionSound' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, LightColor) == 0x0003E8, "Member 'ABaseMinusPsychosisMine_BP_C::LightColor' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, LightIsOn) == 0x0003F8, "Member 'ABaseMinusPsychosisMine_BP_C::LightIsOn' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, LightIntensity) == 0x0003FC, "Member 'ABaseMinusPsychosisMine_BP_C::LightIntensity' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FlashState) == 0x000400, "Member 'ABaseMinusPsychosisMine_BP_C::FlashState' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, Delay) == 0x000404, "Member 'ABaseMinusPsychosisMine_BP_C::Delay' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Gas_Broken) == 0x000408, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Gas_Broken' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, BreakSound) == 0x000410, "Member 'ABaseMinusPsychosisMine_BP_C::BreakSound' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, LastBlinkTimestamp) == 0x000418, "Member 'ABaseMinusPsychosisMine_BP_C::LastBlinkTimestamp' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, NormalBlinkSpeed) == 0x00041C, "Member 'ABaseMinusPsychosisMine_BP_C::NormalBlinkSpeed' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Explosion_Activated) == 0x000420, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Explosion_Activated' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Explosion_Broken) == 0x000428, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Explosion_Broken' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, ExplosiveMineExplosionSound) == 0x000430, "Member 'ABaseMinusPsychosisMine_BP_C::ExplosiveMineExplosionSound' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Gas_Disabled) == 0x000438, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Gas_Disabled' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Explosion_Disabled) == 0x000440, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Explosion_Disabled' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, HackedLightColor) == 0x000448, "Member 'ABaseMinusPsychosisMine_BP_C::HackedLightColor' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, bHacked) == 0x000458, "Member 'ABaseMinusPsychosisMine_BP_C::bHacked' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, bMarkerNeedReinitialize) == 0x000459, "Member 'ABaseMinusPsychosisMine_BP_C::bMarkerNeedReinitialize' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, HackedBlinkSpeed) == 0x00045C, "Member 'ABaseMinusPsychosisMine_BP_C::HackedBlinkSpeed' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, bActivelyHacking) == 0x000460, "Member 'ABaseMinusPsychosisMine_BP_C::bActivelyHacking' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Cold_Disabled) == 0x000468, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Cold_Disabled' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Cold_Broken) == 0x000470, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Cold_Broken' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Cold_Activated) == 0x000478, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Cold_Activated' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, ColdMineExplosionSound) == 0x000480, "Member 'ABaseMinusPsychosisMine_BP_C::ColdMineExplosionSound' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Cold_Disabled_NS) == 0x000488, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Cold_Disabled_NS' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Cold_Broken_NS) == 0x000490, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Cold_Broken_NS' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, FX_Trap_Cold_Activated_NS) == 0x000498, "Member 'ABaseMinusPsychosisMine_BP_C::FX_Trap_Cold_Activated_NS' has a wrong offset!");
static_assert(offsetof(ABaseMinusPsychosisMine_BP_C, ColdMineExplosionExtraSound) == 0x0004A0, "Member 'ABaseMinusPsychosisMine_BP_C::ColdMineExplosionExtraSound' has a wrong offset!");

}

