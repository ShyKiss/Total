#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DoorBase_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DoorBase_BP.DoorBase_BP_C.ExecuteUbergraph_DoorBase_BP
// 0x0170 (0x0170 - 0x0000)
struct DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x002C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0040(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0054(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                K2Node_Event_pawn_1;                               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSuccess;                             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bApplyVisualDoorDamage;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBashDoorType                                 K2Node_Event_bashType;                             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0078(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bLocking;                             // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                K2Node_Event_pawn;                                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_actor;                                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTrapped;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFromFront;                           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_Map_Values_Values;                        // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetChildComponentByTag_outComponent;      // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsLinkedTrapTriggered_ReturnValue;     // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsLinkedTrapArmed_ReturnValue;         // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsLinkedTrapTriggered_ReturnValue_1;   // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UPointLightComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bToggleEnabled;                       // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_1;           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_2;           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_3;           // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AParent_DestructibleDoor_BP_C*          K2Node_DynamicCast_AsParent_Destructible_Door_BP;  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP) == 0x000008, "Wrong alignment on DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP");
static_assert(sizeof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP) == 0x000170, "Wrong size on DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, EntryPoint) == 0x000000, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Array_Index_Variable) == 0x000004, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_delegate_Variable) == 0x000010, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_delegate_Variable_1) == 0x00002C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_HasAuthority_ReturnValue) == 0x00003C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_delegate_Variable_2) == 0x000040, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000050, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_delegate_Variable_3) == 0x000054, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000064, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_pawn_1) == 0x000068, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_pawn_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bSuccess) == 0x000070, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bApplyVisualDoorDamage) == 0x000071, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bApplyVisualDoorDamage' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bashType) == 0x000072, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bashType' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_GetAttachedActors_OutActors) == 0x000078, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Loop_Counter_Variable_2) == 0x000088, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bLocking) == 0x000095, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bLocking' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_pawn) == 0x000098, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_pawn' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_actor) == 0x0000A0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bTrapped) == 0x0000A8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bTrapped' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bFromFront) == 0x0000A9, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bFromFront' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Map_Values_Values) == 0x0000B0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_GetChildComponentByTag_outComponent) == 0x0000D0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_GetChildComponentByTag_outComponent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x0000E0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_GetRightVector_ReturnValue) == 0x0000EC, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BP_IsLinkedTrapTriggered_ReturnValue) == 0x000104, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BP_IsLinkedTrapTriggered_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BP_IsLinkedTrapArmed_ReturnValue) == 0x000105, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BP_IsLinkedTrapArmed_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BP_IsLinkedTrapTriggered_ReturnValue_1) == 0x000106, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BP_IsLinkedTrapTriggered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Not_PreBool_ReturnValue) == 0x000107, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000108, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BooleanOR_ReturnValue) == 0x000118, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_ComponentHasTag_ReturnValue) == 0x000128, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Length_ReturnValue_2) == 0x00012C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Less_IntInt_ReturnValue_2) == 0x000130, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bToggleEnabled) == 0x000131, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bToggleEnabled' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x000134, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventOnActor_ReturnValue_1) == 0x000138, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventOnActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventOnActor_ReturnValue_2) == 0x00013C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventOnActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventOnActor_ReturnValue_3) == 0x000140, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventOnActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Variable) == 0x000144, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000148, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Add_IntInt_ReturnValue_3) == 0x00014C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Array_Index_Variable_2) == 0x000150, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Get_Item_2) == 0x000158, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_AsParent_Destructible_Door_BP) == 0x000160, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_AsParent_Destructible_Door_BP' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.PostToggled
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_PostToggled final
{
public:
	bool                                          bToggleEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_PostToggled) == 0x000001, "Wrong alignment on DoorBase_BP_C_PostToggled");
static_assert(sizeof(DoorBase_BP_C_PostToggled) == 0x000001, "Wrong size on DoorBase_BP_C_PostToggled");
static_assert(offsetof(DoorBase_BP_C_PostToggled, bToggleEnabled) == 0x000000, "Member 'DoorBase_BP_C_PostToggled::bToggleEnabled' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnDoorTrappedStateChanged
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_BP_OnDoorTrappedStateChanged final
{
public:
	bool                                          bTrapped;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFromFront;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_BP_OnDoorTrappedStateChanged) == 0x000001, "Wrong alignment on DoorBase_BP_C_BP_OnDoorTrappedStateChanged");
static_assert(sizeof(DoorBase_BP_C_BP_OnDoorTrappedStateChanged) == 0x000002, "Wrong size on DoorBase_BP_C_BP_OnDoorTrappedStateChanged");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorTrappedStateChanged, bTrapped) == 0x000000, "Member 'DoorBase_BP_C_BP_OnDoorTrappedStateChanged::bTrapped' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorTrappedStateChanged, bFromFront) == 0x000001, "Member 'DoorBase_BP_C_BP_OnDoorTrappedStateChanged::bFromFront' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnActorAttachedToDoor
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BP_OnActorAttachedToDoor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BP_OnActorAttachedToDoor) == 0x000008, "Wrong alignment on DoorBase_BP_C_BP_OnActorAttachedToDoor");
static_assert(sizeof(DoorBase_BP_C_BP_OnActorAttachedToDoor) == 0x000008, "Wrong size on DoorBase_BP_C_BP_OnActorAttachedToDoor");
static_assert(offsetof(DoorBase_BP_C_BP_OnActorAttachedToDoor, Actor) == 0x000000, "Member 'DoorBase_BP_C_BP_OnActorAttachedToDoor::Actor' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnDoorUnhingeEvent
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BP_OnDoorUnhingeEvent final
{
public:
	class ARBPawn*                                Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BP_OnDoorUnhingeEvent) == 0x000008, "Wrong alignment on DoorBase_BP_C_BP_OnDoorUnhingeEvent");
static_assert(sizeof(DoorBase_BP_C_BP_OnDoorUnhingeEvent) == 0x000008, "Wrong size on DoorBase_BP_C_BP_OnDoorUnhingeEvent");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorUnhingeEvent, Pawn) == 0x000000, "Member 'DoorBase_BP_C_BP_OnDoorUnhingeEvent::Pawn' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnDoorBarsLockingEvent
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_BP_OnDoorBarsLockingEvent final
{
public:
	bool                                          bLocking;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_BP_OnDoorBarsLockingEvent) == 0x000001, "Wrong alignment on DoorBase_BP_C_BP_OnDoorBarsLockingEvent");
static_assert(sizeof(DoorBase_BP_C_BP_OnDoorBarsLockingEvent) == 0x000001, "Wrong size on DoorBase_BP_C_BP_OnDoorBarsLockingEvent");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBarsLockingEvent, bLocking) == 0x000000, "Member 'DoorBase_BP_C_BP_OnDoorBarsLockingEvent::bLocking' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnDoorBashEvent
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_BP_OnDoorBashEvent final
{
public:
	class ARBPawn*                                Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bApplyVisualDoorDamage;                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBashDoorType                                 bashType;                                          // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BP_OnDoorBashEvent) == 0x000008, "Wrong alignment on DoorBase_BP_C_BP_OnDoorBashEvent");
static_assert(sizeof(DoorBase_BP_C_BP_OnDoorBashEvent) == 0x000010, "Wrong size on DoorBase_BP_C_BP_OnDoorBashEvent");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBashEvent, Pawn) == 0x000000, "Member 'DoorBase_BP_C_BP_OnDoorBashEvent::Pawn' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBashEvent, bSuccess) == 0x000008, "Member 'DoorBase_BP_C_BP_OnDoorBashEvent::bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBashEvent, bApplyVisualDoorDamage) == 0x000009, "Member 'DoorBase_BP_C_BP_OnDoorBashEvent::bApplyVisualDoorDamage' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBashEvent, bashType) == 0x00000A, "Member 'DoorBase_BP_C_BP_OnDoorBashEvent::bashType' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.DisableDestructibleDoorCollision
// 0x0040 (0x0040 - 0x0000)
struct DoorBase_BP_C_DisableDestructibleDoorCollision final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumChildrenComponents_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   K2Node_DynamicCast_AsChild_Actor_Component;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AParent_DestructibleDoor_BP_C*          K2Node_DynamicCast_AsParent_Destructible_Door_BP;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_DisableDestructibleDoorCollision) == 0x000008, "Wrong alignment on DoorBase_BP_C_DisableDestructibleDoorCollision");
static_assert(sizeof(DoorBase_BP_C_DisableDestructibleDoorCollision) == 0x000040, "Wrong size on DoorBase_BP_C_DisableDestructibleDoorCollision");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, Temp_int_Variable) == 0x000000, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_GetChildComponent_ReturnValue) == 0x000008, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_GetNumChildrenComponents_ReturnValue) == 0x000010, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_GetNumChildrenComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, K2Node_DynamicCast_AsChild_Actor_Component) == 0x000018, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::K2Node_DynamicCast_AsChild_Actor_Component' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, K2Node_DynamicCast_AsParent_Destructible_Door_BP) == 0x000030, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::K2Node_DynamicCast_AsParent_Destructible_Door_BP' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.SetLockBarsVisibility
// 0x0040 (0x0040 - 0x0000)
struct DoorBase_BP_C_SetLockBarsVisibility final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_SetLockBarsVisibility) == 0x000008, "Wrong alignment on DoorBase_BP_C_SetLockBarsVisibility");
static_assert(sizeof(DoorBase_BP_C_SetLockBarsVisibility) == 0x000040, "Wrong size on DoorBase_BP_C_SetLockBarsVisibility");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'DoorBase_BP_C_SetLockBarsVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, Temp_int_Array_Index_Variable) == 0x000008, "Member 'DoorBase_BP_C_SetLockBarsVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, Temp_name_Variable) == 0x00000C, "Member 'DoorBase_BP_C_SetLockBarsVisibility::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Array_Get_Item) == 0x000030, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Array_Contains_ReturnValue) == 0x00003E, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.InitializeSettings
// 0x00C0 (0x00C0 - 0x0000)
struct DoorBase_BP_C_InitializeSettings final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0008(0x0010)(ReferenceParm)
	TArray<class UChildActorComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_2;    // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AllowDecals_bAllowDecals;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_3;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AllowDecals_bAllowDecals_1;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_InitializeSettings) == 0x000008, "Wrong alignment on DoorBase_BP_C_InitializeSettings");
static_assert(sizeof(DoorBase_BP_C_InitializeSettings) == 0x0000C0, "Wrong size on DoorBase_BP_C_InitializeSettings");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Actor) == 0x000000, "Member 'DoorBase_BP_C_InitializeSettings::Actor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_GetAttachedActors_OutActors) == 0x000008, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000030, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_K2_GetComponentsByClass_ReturnValue_2) == 0x000040, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_K2_GetComponentsByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Length_ReturnValue_3) == 0x000054, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Array_Index_Variable) == 0x000058, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Get_Item) == 0x000060, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_AllowDecals_bAllowDecals) == 0x000091, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_AllowDecals_bAllowDecals' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Less_IntInt_ReturnValue_1) == 0x000092, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Loop_Counter_Variable_2) == 0x000098, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Less_IntInt_ReturnValue_2) == 0x00009C, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Array_Index_Variable_3) == 0x0000A4, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Loop_Counter_Variable_3) == 0x0000A8, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Get_Item_3) == 0x0000B0, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_IsValid_ReturnValue_3) == 0x0000B8, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_AllowDecals_bAllowDecals_1) == 0x0000B9, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_AllowDecals_bAllowDecals_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000BA, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000BC, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.GetRandomTrapIndicator
// 0x0140 (0x0140 - 0x0000)
struct DoorBase_BP_C_GetRandomTrapIndicator final
{
public:
	int32                                         TellIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Mesh;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RelativeTransform;                                 // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	int32                                         Retries;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomTellIndex;                                   // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTrapTellMaxIndex_TrapTellMaxIndex;     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelRandomInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LevelRandomFloatRange_ReturnValue;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue_1;                      // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue_2;                      // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelRandomInt_ReturnValue_1;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_GetRandomTrapIndicator) == 0x000010, "Wrong alignment on DoorBase_BP_C_GetRandomTrapIndicator");
static_assert(sizeof(DoorBase_BP_C_GetRandomTrapIndicator) == 0x000140, "Wrong size on DoorBase_BP_C_GetRandomTrapIndicator");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, TellIndex) == 0x000000, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::TellIndex' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Mesh) == 0x000008, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Mesh' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, RelativeTransform) == 0x000010, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::RelativeTransform' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Retries) == 0x000040, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Retries' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, RandomTellIndex) == 0x000044, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::RandomTellIndex' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_GetTrapTellMaxIndex_TrapTellMaxIndex) == 0x000048, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_GetTrapTellMaxIndex_TrapTellMaxIndex' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, K2Node_SwitchInteger_CmpSuccess) == 0x000050, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Map_Contains_ReturnValue) == 0x000051, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Map_Length_ReturnValue) == 0x000054, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Temp_object_Variable) == 0x000058, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Temp_object_Variable_1) == 0x000068, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_LevelRandomInt_ReturnValue) == 0x000070, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_LevelRandomInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Temp_int_Variable) == 0x000074, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_LevelRandomFloatRange_ReturnValue) == 0x000080, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_LevelRandomFloatRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_TLerp_ReturnValue) == 0x000090, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_TLerp_ReturnValue_1) == 0x0000C0, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_TLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_TLerp_ReturnValue_2) == 0x0000F0, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_TLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Temp_int_Variable_1) == 0x000120, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_3) == 0x000124, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, K2Node_Select_Default) == 0x000128, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_4) == 0x000130, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_5) == 0x000134, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_LevelRandomInt_ReturnValue_1) == 0x000138, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_LevelRandomInt_ReturnValue_1' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.TryAddNewTrapTell
// 0x0520 (0x0520 - 0x0000)
struct DoorBase_BP_C_TryAddNewTrapTell final
{
public:
	bool                                          bFromFront;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TrapTellTransform;                                 // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable;                              // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0240(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x0270(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  CallFunc_AddComponent_ReturnValue_1;               // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0280(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetRandomTrapIndicator_TellIndex;         // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_GetRandomTrapIndicator_Mesh;              // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRandomTrapIndicator_RelativeTransform; // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_2;               // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0400(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_2;          // 0x0430(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ApplyDoorframeOffsetToTransform_ReturnValue; // 0x0460(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x0494(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x051D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_3;       // 0x051E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x051F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_TryAddNewTrapTell) == 0x000010, "Wrong alignment on DoorBase_BP_C_TryAddNewTrapTell");
static_assert(sizeof(DoorBase_BP_C_TryAddNewTrapTell) == 0x000520, "Wrong size on DoorBase_BP_C_TryAddNewTrapTell");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, bFromFront) == 0x000000, "Member 'DoorBase_BP_C_TryAddNewTrapTell::bFromFront' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, TrapTellTransform) == 0x000010, "Member 'DoorBase_BP_C_TryAddNewTrapTell::TrapTellTransform' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, Temp_name_Variable) == 0x000040, "Member 'DoorBase_BP_C_TryAddNewTrapTell::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, Temp_struct_Variable) == 0x000080, "Member 'DoorBase_BP_C_TryAddNewTrapTell::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_AddComponent_ReturnValue) == 0x0000B0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000B8, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_Array_Add_ReturnValue) == 0x0000BC, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_SetStaticMesh_ReturnValue) == 0x0000C0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0000C4, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue_1) == 0x000150, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_InvertTransform_ReturnValue) == 0x000180, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_GetRelativeTransform_ReturnValue) == 0x0001B0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue_2) == 0x0001E0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_ComposeTransforms_ReturnValue) == 0x000210, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, Temp_struct_Variable_1) == 0x000240, "Member 'DoorBase_BP_C_TryAddNewTrapTell::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, Temp_name_Variable_1) == 0x000270, "Member 'DoorBase_BP_C_TryAddNewTrapTell::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_AddComponent_ReturnValue_1) == 0x000278, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000280, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_Array_Add_ReturnValue_1) == 0x000308, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00030C, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeVector_ReturnValue) == 0x000310, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue_3) == 0x000320, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue_4) == 0x000350, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_GetRandomTrapIndicator_TellIndex) == 0x000380, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_GetRandomTrapIndicator_TellIndex' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_GetRandomTrapIndicator_Mesh) == 0x000388, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_GetRandomTrapIndicator_Mesh' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_GetRandomTrapIndicator_RelativeTransform) == 0x000390, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_GetRandomTrapIndicator_RelativeTransform' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_SelectTransform_ReturnValue) == 0x0003C0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_AddComponent_ReturnValue_2) == 0x0003F0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000400, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_ComposeTransforms_ReturnValue_2) == 0x000430, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_ComposeTransforms_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_ApplyDoorframeOffsetToTransform_ReturnValue) == 0x000460, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_ApplyDoorframeOffsetToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000490, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x000494, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x00051C, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_SetStaticMesh_ReturnValue_1) == 0x00051D, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_AttachToComponent_ReturnValue_3) == 0x00051E, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_AttachToComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_IsValid_ReturnValue) == 0x00051F, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.ClearAllTrapTells
// 0x0098 (0x0098 - 0x0000)
struct DoorBase_BP_C_ClearAllTrapTells final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USpotLightComponent*>            CallFunc_Map_Values_Values;                        // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USpotLightComponent*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_Map_Values_Values_1;                      // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_Map_Values_Values_2;                      // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_ClearAllTrapTells) == 0x000008, "Wrong alignment on DoorBase_BP_C_ClearAllTrapTells");
static_assert(sizeof(DoorBase_BP_C_ClearAllTrapTells) == 0x000098, "Wrong size on DoorBase_BP_C_ClearAllTrapTells");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Array_Index_Variable_1) == 0x000004, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Array_Index_Variable_2) == 0x000010, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Map_Values_Values) == 0x000028, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Get_Item) == 0x000038, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Map_Values_Values_1) == 0x000040, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Map_Values_Values_2) == 0x000070, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Map_Values_Values_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Less_IntInt_ReturnValue_2) == 0x000090, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.GetTrapTellMaxIndex
// 0x0004 (0x0004 - 0x0000)
struct DoorBase_BP_C_GetTrapTellMaxIndex final
{
public:
	int32                                         TrapTellMaxIndex;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_GetTrapTellMaxIndex) == 0x000004, "Wrong alignment on DoorBase_BP_C_GetTrapTellMaxIndex");
static_assert(sizeof(DoorBase_BP_C_GetTrapTellMaxIndex) == 0x000004, "Wrong size on DoorBase_BP_C_GetTrapTellMaxIndex");
static_assert(offsetof(DoorBase_BP_C_GetTrapTellMaxIndex, TrapTellMaxIndex) == 0x000000, "Member 'DoorBase_BP_C_GetTrapTellMaxIndex::TrapTellMaxIndex' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.ApplyDoorCollisionTypeToDoor
// 0x0030 (0x0030 - 0x0000)
struct DoorBase_BP_C_ApplyDoorCollisionTypeToDoor final
{
public:
	bool                                          CallFunc_HasDestructibleDoor_NewParam;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_GetPhysMaterialOverride_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor) == 0x000008, "Wrong alignment on DoorBase_BP_C_ApplyDoorCollisionTypeToDoor");
static_assert(sizeof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor) == 0x000030, "Wrong size on DoorBase_BP_C_ApplyDoorCollisionTypeToDoor");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_HasDestructibleDoor_NewParam) == 0x000000, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_HasDestructibleDoor_NewParam' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_GetPhysMaterialOverride_ReturnValue) == 0x000008, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_GetPhysMaterialOverride_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_SetStaticMesh_ReturnValue) == 0x000028, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000029, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_SetStaticMesh_ReturnValue_2) == 0x00002A, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.HasDestructibleDoor
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_HasDestructibleDoor final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_HasDestructibleDoor) == 0x000001, "Wrong alignment on DoorBase_BP_C_HasDestructibleDoor");
static_assert(sizeof(DoorBase_BP_C_HasDestructibleDoor) == 0x000001, "Wrong size on DoorBase_BP_C_HasDestructibleDoor");
static_assert(offsetof(DoorBase_BP_C_HasDestructibleDoor, NewParam) == 0x000000, "Member 'DoorBase_BP_C_HasDestructibleDoor::NewParam' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.AddWindowCollision
// 0x0050 (0x0050 - 0x0000)
struct DoorBase_BP_C_AddWindowCollision final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachBase;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_AddWindowCollision) == 0x000010, "Wrong alignment on DoorBase_BP_C_AddWindowCollision");
static_assert(sizeof(DoorBase_BP_C_AddWindowCollision) == 0x000050, "Wrong size on DoorBase_BP_C_AddWindowCollision");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, Actor) == 0x000000, "Member 'DoorBase_BP_C_AddWindowCollision::Actor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, AttachBase) == 0x000008, "Member 'DoorBase_BP_C_AddWindowCollision::AttachBase' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, Temp_struct_Variable) == 0x000010, "Member 'DoorBase_BP_C_AddWindowCollision::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'DoorBase_BP_C_AddWindowCollision::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000048, "Member 'DoorBase_BP_C_AddWindowCollision::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, CallFunc_SetStaticMesh_ReturnValue) == 0x000049, "Member 'DoorBase_BP_C_AddWindowCollision::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.UpdatePostLoadDoorLightingSettings
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_UpdatePostLoadDoorLightingSettings final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_UpdatePostLoadDoorLightingSettings) == 0x000001, "Wrong alignment on DoorBase_BP_C_UpdatePostLoadDoorLightingSettings");
static_assert(sizeof(DoorBase_BP_C_UpdatePostLoadDoorLightingSettings) == 0x000002, "Wrong size on DoorBase_BP_C_UpdatePostLoadDoorLightingSettings");
static_assert(offsetof(DoorBase_BP_C_UpdatePostLoadDoorLightingSettings, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'DoorBase_BP_C_UpdatePostLoadDoorLightingSettings::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdatePostLoadDoorLightingSettings, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'DoorBase_BP_C_UpdatePostLoadDoorLightingSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.ApplyDoorLightingSettings
// 0x0040 (0x0040 - 0x0000)
struct DoorBase_BP_C_ApplyDoorLightingSettings final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_ApplyDoorLightingSettings) == 0x000008, "Wrong alignment on DoorBase_BP_C_ApplyDoorLightingSettings");
static_assert(sizeof(DoorBase_BP_C_ApplyDoorLightingSettings) == 0x000040, "Wrong size on DoorBase_BP_C_ApplyDoorLightingSettings");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_GetChildrenComponents_Children) == 0x000010, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_Array_Get_Item) == 0x000020, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000030, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.UpdateCollision
// 0x0006 (0x0006 - 0x0000)
struct DoorBase_BP_C_UpdateCollision final
{
public:
	bool                                          bToggledOn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_UpdateCollision) == 0x000001, "Wrong alignment on DoorBase_BP_C_UpdateCollision");
static_assert(sizeof(DoorBase_BP_C_UpdateCollision) == 0x000006, "Wrong size on DoorBase_BP_C_UpdateCollision");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, bToggledOn) == 0x000000, "Member 'DoorBase_BP_C_UpdateCollision::bToggledOn' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, Temp_bool_Variable) == 0x000001, "Member 'DoorBase_BP_C_UpdateCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, Temp_byte_Variable) == 0x000002, "Member 'DoorBase_BP_C_UpdateCollision::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, Temp_byte_Variable_1) == 0x000003, "Member 'DoorBase_BP_C_UpdateCollision::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'DoorBase_BP_C_UpdateCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, K2Node_Select_Default) == 0x000005, "Member 'DoorBase_BP_C_UpdateCollision::K2Node_Select_Default' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.AllowDecals
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_AllowDecals final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAllowDecals;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_AllowDecals) == 0x000008, "Wrong alignment on DoorBase_BP_C_AllowDecals");
static_assert(sizeof(DoorBase_BP_C_AllowDecals) == 0x000010, "Wrong size on DoorBase_BP_C_AllowDecals");
static_assert(offsetof(DoorBase_BP_C_AllowDecals, Component) == 0x000000, "Member 'DoorBase_BP_C_AllowDecals::Component' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AllowDecals, bAllowDecals) == 0x000008, "Member 'DoorBase_BP_C_AllowDecals::bAllowDecals' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AllowDecals, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'DoorBase_BP_C_AllowDecals::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.ApplyColorOverrides
// 0x00B8 (0x00B8 - 0x0000)
struct DoorBase_BP_C_ApplyColorOverrides final
{
public:
	bool                                          bConstScript;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           DoorFrames;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADestructible_DoorBase_BP_C*            K2Node_DynamicCast_AsDestructible_Door_Base_BP;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AParent_DestructibleDoor_BP_C*          K2Node_DynamicCast_AsParent_Destructible_Door_BP;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AParent_DestructibleDoor_BP_C*          K2Node_DynamicCast_AsParent_Destructible_Door_BP_1; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(DoorBase_BP_C_ApplyColorOverrides) == 0x000008, "Wrong alignment on DoorBase_BP_C_ApplyColorOverrides");
static_assert(sizeof(DoorBase_BP_C_ApplyColorOverrides) == 0x0000B8, "Wrong size on DoorBase_BP_C_ApplyColorOverrides");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, bConstScript) == 0x000000, "Member 'DoorBase_BP_C_ApplyColorOverrides::bConstScript' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, DoorFrames) == 0x000008, "Member 'DoorBase_BP_C_ApplyColorOverrides::DoorFrames' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'DoorBase_BP_C_ApplyColorOverrides::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, Temp_int_Array_Index_Variable) == 0x000020, "Member 'DoorBase_BP_C_ApplyColorOverrides::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_BreakColor_R) == 0x000024, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_BreakColor_G) == 0x000028, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_BreakColor_B) == 0x00002C, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_BreakColor_A) == 0x000030, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000034, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_BreakColor_R_1) == 0x000044, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_BreakColor_G_1) == 0x000048, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_BreakColor_B_1) == 0x00004C, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_BreakColor_A_1) == 0x000050, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, K2Node_DynamicCast_AsDestructible_Door_Base_BP) == 0x000058, "Member 'DoorBase_BP_C_ApplyColorOverrides::K2Node_DynamicCast_AsDestructible_Door_Base_BP' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'DoorBase_BP_C_ApplyColorOverrides::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000064, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_IsValid_ReturnValue_1) == 0x000075, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, K2Node_DynamicCast_AsParent_Destructible_Door_BP) == 0x000078, "Member 'DoorBase_BP_C_ApplyColorOverrides::K2Node_DynamicCast_AsParent_Destructible_Door_BP' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'DoorBase_BP_C_ApplyColorOverrides::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, K2Node_DynamicCast_AsParent_Destructible_Door_BP_1) == 0x000088, "Member 'DoorBase_BP_C_ApplyColorOverrides::K2Node_DynamicCast_AsParent_Destructible_Door_BP_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'DoorBase_BP_C_ApplyColorOverrides::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_IsValid_ReturnValue_2) == 0x000091, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_IsValid_ReturnValue_3) == 0x000092, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_Array_Get_Item) == 0x000098, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_IsValid_ReturnValue_4) == 0x0000A4, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_Less_IntInt_ReturnValue) == 0x0000A5, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyColorOverrides, CallFunc_GetComponentsByTag_ReturnValue) == 0x0000A8, "Member 'DoorBase_BP_C_ApplyColorOverrides::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.FixUp
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_FixUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_FixUp) == 0x000001, "Wrong alignment on DoorBase_BP_C_FixUp");
static_assert(sizeof(DoorBase_BP_C_FixUp) == 0x000001, "Wrong size on DoorBase_BP_C_FixUp");
static_assert(offsetof(DoorBase_BP_C_FixUp, ReturnValue) == 0x000000, "Member 'DoorBase_BP_C_FixUp::ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.OnRep_bTrapIsConverted
// 0x0080 (0x0080 - 0x0000)
struct DoorBase_BP_C_OnRep_bTrapIsConverted final
{
public:
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBHUD*                                 CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsLinkedTrapArmed_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_Map_Values_Values;                        // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_OnRep_bTrapIsConverted) == 0x000008, "Wrong alignment on DoorBase_BP_C_OnRep_bTrapIsConverted");
static_assert(sizeof(DoorBase_BP_C_OnRep_bTrapIsConverted) == 0x000080, "Wrong size on DoorBase_BP_C_OnRep_bTrapIsConverted");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, Temp_object_Variable) == 0x000000, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, Temp_object_Variable_1) == 0x000008, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, Temp_int_Array_Index_Variable) == 0x000010, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, Temp_bool_Variable) == 0x000014, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_IsDedicatedServer_ReturnValue) == 0x000015, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_BP_IsLinkedTrapArmed_ReturnValue) == 0x000020, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_BP_IsLinkedTrapArmed_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, K2Node_Select_Default) == 0x000028, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_SelectColor_ReturnValue) == 0x000034, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_SelectColor_ReturnValue_1) == 0x000044, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_Map_Values_Values) == 0x000058, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_Array_Get_Item) == 0x000070, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnRep_bTrapIsConverted, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'DoorBase_BP_C_OnRep_bTrapIsConverted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.SetTrapIsConverted
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_SetTrapIsConverted final
{
public:
	bool                                          bConverted;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_SetTrapIsConverted) == 0x000001, "Wrong alignment on DoorBase_BP_C_SetTrapIsConverted");
static_assert(sizeof(DoorBase_BP_C_SetTrapIsConverted) == 0x000002, "Wrong size on DoorBase_BP_C_SetTrapIsConverted");
static_assert(offsetof(DoorBase_BP_C_SetTrapIsConverted, bConverted) == 0x000000, "Member 'DoorBase_BP_C_SetTrapIsConverted::bConverted' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetTrapIsConverted, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'DoorBase_BP_C_SetTrapIsConverted::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.OnHackStateChanged
// 0x0004 (0x0004 - 0x0000)
struct DoorBase_BP_C_OnHackStateChanged final
{
public:
	EHackState                                    State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_OnHackStateChanged) == 0x000001, "Wrong alignment on DoorBase_BP_C_OnHackStateChanged");
static_assert(sizeof(DoorBase_BP_C_OnHackStateChanged) == 0x000004, "Wrong size on DoorBase_BP_C_OnHackStateChanged");
static_assert(offsetof(DoorBase_BP_C_OnHackStateChanged, State) == 0x000000, "Member 'DoorBase_BP_C_OnHackStateChanged::State' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnHackStateChanged, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'DoorBase_BP_C_OnHackStateChanged::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnHackStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'DoorBase_BP_C_OnHackStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_OnHackStateChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'DoorBase_BP_C_OnHackStateChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.GetFriendlyDeviceIconLocation
// 0x0070 (0x0070 - 0x0000)
struct DoorBase_BP_C_GetFriendlyDeviceIconLocation final
{
public:
	struct FVector                                Out_location;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_GetFriendlyDeviceIconLocation) == 0x000008, "Wrong alignment on DoorBase_BP_C_GetFriendlyDeviceIconLocation");
static_assert(sizeof(DoorBase_BP_C_GetFriendlyDeviceIconLocation) == 0x000070, "Wrong size on DoorBase_BP_C_GetFriendlyDeviceIconLocation");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, Out_location) == 0x000000, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::Out_location' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, ReturnValue) == 0x00000C, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, CallFunc_Map_Values_Values) == 0x000010, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, CallFunc_Array_Get_Item) == 0x000028, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, CallFunc_GetRightVector_ReturnValue) == 0x000030, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00003C, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000054, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetFriendlyDeviceIconLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000060, "Member 'DoorBase_BP_C_GetFriendlyDeviceIconLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

}

