#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IndustrialFanMinus01_BP

#include "Basic.hpp"

#include "IndustrialFanMinus01_BP_classes.hpp"
#include "IndustrialFanMinus01_BP_parameters.hpp"


namespace SDK
{

// Function IndustrialFan-01_BP.IndustrialFan-01_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIndustrialFanMinus01_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IndustrialFan-01_BP_C", "ReceiveTick");

	Params::IndustrialFanMinus01_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function IndustrialFan-01_BP.IndustrialFan-01_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AIndustrialFanMinus01_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IndustrialFan-01_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function IndustrialFan-01_BP.IndustrialFan-01_BP_C.ExecuteUbergraph_IndustrialFan-01_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AIndustrialFanMinus01_BP_C::ExecuteUbergraph_IndustrialFanMinus01_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IndustrialFan-01_BP_C", "ExecuteUbergraph_IndustrialFan-01_BP");

	Params::IndustrialFanMinus01_BP_C_ExecuteUbergraph_IndustrialFanMinus01_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

