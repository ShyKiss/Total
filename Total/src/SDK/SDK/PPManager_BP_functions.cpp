#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PPManager_BP

#include "Basic.hpp"

#include "PPManager_BP_classes.hpp"
#include "PPManager_BP_parameters.hpp"


namespace SDK
{

// Function PPManager_BP.PPManager_BP_C.ExecuteUbergraph_PPManager_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APPManager_BP_C::ExecuteUbergraph_PPManager_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "ExecuteUbergraph_PPManager_BP");

	Params::PPManager_BP_C_ExecuteUbergraph_PPManager_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PPManager_BP.PPManager_BP_C.FX_SetMansionDOFDisabled
// (BlueprintCallable, BlueprintEvent)

void APPManager_BP_C::FX_SetMansionDOFDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_SetMansionDOFDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.FX_Hit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxExp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APPManager_BP_C::FX_Hit(float MaxExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_Hit");

	Params::PPManager_BP_C_FX_Hit Parms{};

	Parms.MaxExp = MaxExp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PPManager_BP.PPManager_BP_C.FX_PlayMansionDOFEaseOut
// (BlueprintCallable, BlueprintEvent)

void APPManager_BP_C::FX_PlayMansionDOFEaseOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_PlayMansionDOFEaseOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.FX_SetMansionDOFEnabled
// (BlueprintCallable, BlueprintEvent)

void APPManager_BP_C::FX_SetMansionDOFEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_SetMansionDOFEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.FX_InFocus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   blendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MinFocalDistance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxFocalDistance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MinFOVScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxFOVScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NearBlurSize                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FarBlurSize                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MinFocalRegion                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxFocalRegion                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APPManager_BP_C::FX_InFocus(float Delay, float blendTime, float MinFocalDistance, float MaxFocalDistance, float MinFOVScale, float MaxFOVScale, float NearBlurSize, float FarBlurSize, float MinFocalRegion, float MaxFocalRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_InFocus");

	Params::PPManager_BP_C_FX_InFocus Parms{};

	Parms.Delay = Delay;
	Parms.blendTime = blendTime;
	Parms.MinFocalDistance = MinFocalDistance;
	Parms.MaxFocalDistance = MaxFocalDistance;
	Parms.MinFOVScale = MinFOVScale;
	Parms.MaxFOVScale = MaxFOVScale;
	Parms.NearBlurSize = NearBlurSize;
	Parms.FarBlurSize = FarBlurSize;
	Parms.MinFocalRegion = MinFocalRegion;
	Parms.MaxFocalRegion = MaxFocalRegion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PPManager_BP.PPManager_BP_C.OnEnterNightVision
// (Event, Public, BlueprintEvent)

void APPManager_BP_C::OnEnterNightVision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "OnEnterNightVision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.OnExitNightVision
// (Event, Public, BlueprintEvent)

void APPManager_BP_C::OnExitNightVision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "OnExitNightVision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.FX_WhiteFlash
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MaxExp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeFadeIn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeFadeOut                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DelayTimeOut                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APPManager_BP_C::FX_WhiteFlash(float MaxExp, float TimeFadeIn, float TimeFadeOut, float DelayTimeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_WhiteFlash");

	Params::PPManager_BP_C_FX_WhiteFlash Parms{};

	Parms.MaxExp = MaxExp;
	Parms.TimeFadeIn = TimeFadeIn;
	Parms.TimeFadeOut = TimeFadeOut;
	Parms.DelayTimeOut = DelayTimeOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PPManager_BP.PPManager_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APPManager_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "ReceiveTick");

	Params::PPManager_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PPManager_BP.PPManager_BP_C.FX_GetGas
// (BlueprintCallable, BlueprintEvent)

void APPManager_BP_C::FX_GetGas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_GetGas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.FX_PsySpook
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SpookTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          PP_Material                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APPManager_BP_C::FX_PsySpook(float SpookTime, class UObject* PP_Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_PsySpook");

	Params::PPManager_BP_C_FX_PsySpook Parms{};

	Parms.SpookTime = SpookTime;
	Parms.PP_Material = PP_Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PPManager_BP.PPManager_BP_C.FX_FadeWhiteIn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MinExp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxExp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeFadeIn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APPManager_BP_C::FX_FadeWhiteIn(float MinExp, float MaxExp, float TimeFadeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_FadeWhiteIn");

	Params::PPManager_BP_C_FX_FadeWhiteIn Parms{};

	Parms.MinExp = MinExp;
	Parms.MaxExp = MaxExp;
	Parms.TimeFadeIn = TimeFadeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PPManager_BP.PPManager_BP_C.FX_FadeWhiteOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MinExp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxExp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeFadeOut                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APPManager_BP_C::FX_FadeWhiteOut(float MinExp, float MaxExp, float TimeFadeOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_FadeWhiteOut");

	Params::PPManager_BP_C_FX_FadeWhiteOut Parms{};

	Parms.MinExp = MinExp;
	Parms.MaxExp = MaxExp;
	Parms.TimeFadeOut = TimeFadeOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PPManager_BP.PPManager_BP_C.FX_Hit_TL__UpdateFunc
// (BlueprintEvent)

void APPManager_BP_C::FX_Hit_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_Hit_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.FX_Hit_TL__FinishedFunc
// (BlueprintEvent)

void APPManager_BP_C::FX_Hit_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_Hit_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.FX_WakeUp_TL__UpdateFunc
// (BlueprintEvent)

void APPManager_BP_C::FX_WakeUp_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_WakeUp_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.FX_WakeUp_TL__FinishedFunc
// (BlueprintEvent)

void APPManager_BP_C::FX_WakeUp_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "FX_WakeUp_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.TL_inFocus__UpdateFunc
// (BlueprintEvent)

void APPManager_BP_C::TL_inFocus__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "TL_inFocus__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.TL_inFocus__FinishedFunc
// (BlueprintEvent)

void APPManager_BP_C::TL_inFocus__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "TL_inFocus__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.nvExit_TL__UpdateFunc
// (BlueprintEvent)

void APPManager_BP_C::NvExit_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "nvExit_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.nvExit_TL__FinishedFunc
// (BlueprintEvent)

void APPManager_BP_C::NvExit_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "nvExit_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.nvEnter_TL__UpdateFunc
// (BlueprintEvent)

void APPManager_BP_C::NvEnter_TL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "nvEnter_TL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.nvEnter_TL__FinishedFunc
// (BlueprintEvent)

void APPManager_BP_C::NvEnter_TL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "nvEnter_TL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void APPManager_BP_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void APPManager_BP_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.TL_Spook01__UpdateFunc
// (BlueprintEvent)

void APPManager_BP_C::TL_Spook01__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "TL_Spook01__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.TL_Spook01__FinishedFunc
// (BlueprintEvent)

void APPManager_BP_C::TL_Spook01__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "TL_Spook01__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.TL_WhiteFadeOut__UpdateFunc
// (BlueprintEvent)

void APPManager_BP_C::TL_WhiteFadeOut__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "TL_WhiteFadeOut__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.TL_WhiteFadeOut__FinishedFunc
// (BlueprintEvent)

void APPManager_BP_C::TL_WhiteFadeOut__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "TL_WhiteFadeOut__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.TL_WhiteFadeIn__UpdateFunc
// (BlueprintEvent)

void APPManager_BP_C::TL_WhiteFadeIn__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "TL_WhiteFadeIn__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.TL_WhiteFadeIn__FinishedFunc
// (BlueprintEvent)

void APPManager_BP_C::TL_WhiteFadeIn__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "TL_WhiteFadeIn__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.OverridePP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPostProcessSettings             PP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void APPManager_BP_C::OverridePP(struct FPostProcessSettings& PP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "OverridePP");

	Params::PPManager_BP_C_OverridePP Parms{};

	Parms.PP = std::move(PP);

	UObject::ProcessEvent(Func, &Parms);

	PP = std::move(Parms.PP);
}


// Function PPManager_BP.PPManager_BP_C.Remove PP Override
// (Public, BlueprintCallable, BlueprintEvent)

void APPManager_BP_C::Remove_PP_Override()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "Remove PP Override");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PPManager_BP.PPManager_BP_C.debug
// (Public, BlueprintCallable, BlueprintEvent)

void APPManager_BP_C::Debug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPManager_BP_C", "debug");

	UObject::ProcessEvent(Func, nullptr);
}

}

