#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgramTrialRewardWidget

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.UpdateRarity
// 0x00D0 (0x00D0 - 0x0000)
struct ProgramTrialRewardWidget_C_UpdateRarity final
{
public:
	EPlayerCustomizationRarity                    Rarity;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	class URBPlayerCustomizationConfig*           CallFunc_GetPlayerCustomizationConfig_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCustomizationRarityUIInfo             CallFunc_Map_Find_Value;                           // 0x0038(0x0068)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00A8(0x0028)()
};
static_assert(alignof(ProgramTrialRewardWidget_C_UpdateRarity) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_UpdateRarity");
static_assert(sizeof(ProgramTrialRewardWidget_C_UpdateRarity) == 0x0000D0, "Wrong size on ProgramTrialRewardWidget_C_UpdateRarity");
static_assert(offsetof(ProgramTrialRewardWidget_C_UpdateRarity, Rarity) == 0x000000, "Member 'ProgramTrialRewardWidget_C_UpdateRarity::Rarity' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_UpdateRarity, Temp_bool_Variable) == 0x000001, "Member 'ProgramTrialRewardWidget_C_UpdateRarity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_UpdateRarity, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'ProgramTrialRewardWidget_C_UpdateRarity::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_UpdateRarity, CallFunc_GetPlayerCustomizationConfig_ReturnValue) == 0x000030, "Member 'ProgramTrialRewardWidget_C_UpdateRarity::CallFunc_GetPlayerCustomizationConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_UpdateRarity, CallFunc_Map_Find_Value) == 0x000038, "Member 'ProgramTrialRewardWidget_C_UpdateRarity::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_UpdateRarity, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'ProgramTrialRewardWidget_C_UpdateRarity::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_UpdateRarity, K2Node_Select_Default) == 0x0000A8, "Member 'ProgramTrialRewardWidget_C_UpdateRarity::K2Node_Select_Default' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.MergeWith
// 0x0028 (0x0028 - 0x0000)
struct ProgramTrialRewardWidget_C_MergeWith final
{
public:
	struct FRewardUIData                          RewardUIData;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialRewardWidget_C_MergeWith) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_MergeWith");
static_assert(sizeof(ProgramTrialRewardWidget_C_MergeWith) == 0x000028, "Wrong size on ProgramTrialRewardWidget_C_MergeWith");
static_assert(offsetof(ProgramTrialRewardWidget_C_MergeWith, RewardUIData) == 0x000000, "Member 'ProgramTrialRewardWidget_C_MergeWith::RewardUIData' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_MergeWith, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'ProgramTrialRewardWidget_C_MergeWith::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.CanMergeWith
// 0x0028 (0x0028 - 0x0000)
struct ProgramTrialRewardWidget_C_CanMergeWith final
{
public:
	struct FRewardUIData                          RewardUIData;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          bCanMergeWith;                                     // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialRewardWidget_C_CanMergeWith) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_CanMergeWith");
static_assert(sizeof(ProgramTrialRewardWidget_C_CanMergeWith) == 0x000028, "Wrong size on ProgramTrialRewardWidget_C_CanMergeWith");
static_assert(offsetof(ProgramTrialRewardWidget_C_CanMergeWith, RewardUIData) == 0x000000, "Member 'ProgramTrialRewardWidget_C_CanMergeWith::RewardUIData' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_CanMergeWith, bCanMergeWith) == 0x000020, "Member 'ProgramTrialRewardWidget_C_CanMergeWith::bCanMergeWith' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_CanMergeWith, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'ProgramTrialRewardWidget_C_CanMergeWith::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_CanMergeWith, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'ProgramTrialRewardWidget_C_CanMergeWith::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_CanMergeWith, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000023, "Member 'ProgramTrialRewardWidget_C_CanMergeWith::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_CanMergeWith, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'ProgramTrialRewardWidget_C_CanMergeWith::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.InitFromRewardUIData
// 0x0208 (0x0208 - 0x0000)
struct ProgramTrialRewardWidget_C_InitFromRewardUIData final
{
public:
	bool                                          bAcquired_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPerfect;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRewardUIData                          RewardUIData;                                      // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerIconCustomizationOption*       K2Node_DynamicCast_AsRB_Player_Icon_Customization_Option; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerCellItemDefinition*            K2Node_DynamicCast_AsRB_Player_Cell_Item_Definition; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBCustomizationOutfit*                 K2Node_DynamicCast_AsRB_Customization_Outfit;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerCustomizationOption*           K2Node_DynamicCast_AsRB_Player_Customization_Option; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0080(0x0028)()
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00C8(0x0028)()
	class URBSettings_Gameplay*                   CallFunc_GetRBSettings_Gameplay_ReturnValue;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurencySettings                       CallFunc_Map_Find_Value;                           // 0x00F8(0x0060)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomRewardPoolDisplayDetails        CallFunc_GetRandomRewardPoolDisplayDetails_ReturnValue; // 0x0168(0x0030)(ConstParm, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0198(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x01C0(0x0028)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialRewardWidget_C_InitFromRewardUIData) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_InitFromRewardUIData");
static_assert(sizeof(ProgramTrialRewardWidget_C_InitFromRewardUIData) == 0x000208, "Wrong size on ProgramTrialRewardWidget_C_InitFromRewardUIData");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, bAcquired_0) == 0x000000, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::bAcquired_0' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, bPerfect) == 0x000001, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::bPerfect' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, RewardUIData) == 0x000008, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::RewardUIData' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, Temp_bool_Variable) == 0x000028, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_DynamicCast_AsRB_Player_Icon_Customization_Option) == 0x000030, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_DynamicCast_AsRB_Player_Icon_Customization_Option' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_DynamicCast_AsRB_Player_Cell_Item_Definition) == 0x000040, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_DynamicCast_AsRB_Player_Cell_Item_Definition' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_DynamicCast_AsRB_Customization_Outfit) == 0x000050, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_DynamicCast_AsRB_Customization_Outfit' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_DynamicCast_AsRB_Player_Customization_Option) == 0x000060, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_DynamicCast_AsRB_Player_Customization_Option' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_SwitchEnum_CmpSuccess) == 0x000069, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, Temp_byte_Variable) == 0x00006A, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, Temp_byte_Variable_1) == 0x00006B, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_MakeStruct_Margin) == 0x00006C, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_MakeStruct_SlateColor) == 0x000080, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_MakeStruct_Margin_1) == 0x0000A8, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_MakeStruct_Margin_2) == 0x0000B8, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_MakeStruct_SlateColor_1) == 0x0000C8, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, CallFunc_GetRBSettings_Gameplay_ReturnValue) == 0x0000F0, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::CallFunc_GetRBSettings_Gameplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, CallFunc_Map_Find_Value) == 0x0000F8, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, CallFunc_Map_Find_ReturnValue) == 0x000158, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000160, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, CallFunc_GetRandomRewardPoolDisplayDetails_ReturnValue) == 0x000168, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::CallFunc_GetRandomRewardPoolDisplayDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_MakeStruct_SlateColor_2) == 0x000198, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_MakeStruct_SlateColor_3) == 0x0001C0, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, K2Node_Select_Default) == 0x0001E8, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0001F0, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x0001F8, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_InitFromRewardUIData, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x000200, "Member 'ProgramTrialRewardWidget_C_InitFromRewardUIData::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.PlayNewRewardAnimation
// 0x0008 (0x0008 - 0x0000)
struct ProgramTrialRewardWidget_C_PlayNewRewardAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialRewardWidget_C_PlayNewRewardAnimation) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_PlayNewRewardAnimation");
static_assert(sizeof(ProgramTrialRewardWidget_C_PlayNewRewardAnimation) == 0x000008, "Wrong size on ProgramTrialRewardWidget_C_PlayNewRewardAnimation");
static_assert(offsetof(ProgramTrialRewardWidget_C_PlayNewRewardAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'ProgramTrialRewardWidget_C_PlayNewRewardAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.Init
// 0x0050 (0x0050 - 0x0000)
struct ProgramTrialRewardWidget_C_Init final
{
public:
	bool                                          bAcquired_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bPerfect;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Amount_0;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture_0;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            IconColor;                                         // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ForcedText_0;                                      // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(ProgramTrialRewardWidget_C_Init) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_Init");
static_assert(sizeof(ProgramTrialRewardWidget_C_Init) == 0x000050, "Wrong size on ProgramTrialRewardWidget_C_Init");
static_assert(offsetof(ProgramTrialRewardWidget_C_Init, bAcquired_0) == 0x000000, "Member 'ProgramTrialRewardWidget_C_Init::bAcquired_0' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Init, bPerfect) == 0x000001, "Member 'ProgramTrialRewardWidget_C_Init::bPerfect' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Init, Amount_0) == 0x000004, "Member 'ProgramTrialRewardWidget_C_Init::Amount_0' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Init, IconTexture_0) == 0x000008, "Member 'ProgramTrialRewardWidget_C_Init::IconTexture_0' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Init, IconColor) == 0x000010, "Member 'ProgramTrialRewardWidget_C_Init::IconColor' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Init, ForcedText_0) == 0x000038, "Member 'ProgramTrialRewardWidget_C_Init::ForcedText_0' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.Setup
// 0x00C8 (0x00C8 - 0x0000)
struct ProgramTrialRewardWidget_C_Setup final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x00A8(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialRewardWidget_C_Setup) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_Setup");
static_assert(sizeof(ProgramTrialRewardWidget_C_Setup) == 0x0000C8, "Wrong size on ProgramTrialRewardWidget_C_Setup");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_bool_Variable) == 0x000000, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_byte_Variable) == 0x000001, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_byte_Variable_1) == 0x000002, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_bool_Variable_1) == 0x000003, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_bool_Variable_2) == 0x000004, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_byte_Variable_2) == 0x000005, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_byte_Variable_3) == 0x000006, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_bool_Variable_3) == 0x000007, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_byte_Variable_4) == 0x000008, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_byte_Variable_5) == 0x000009, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_bool_Variable_4) == 0x00000A, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_byte_Variable_6) == 0x00000B, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, Temp_byte_Variable_7) == 0x00000C, "Member 'ProgramTrialRewardWidget_C_Setup::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, K2Node_Select_Default) == 0x00000D, "Member 'ProgramTrialRewardWidget_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, CallFunc_TextIsEmpty_ReturnValue) == 0x00000E, "Member 'ProgramTrialRewardWidget_C_Setup::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, CallFunc_Not_PreBool_ReturnValue) == 0x00000F, "Member 'ProgramTrialRewardWidget_C_Setup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'ProgramTrialRewardWidget_C_Setup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'ProgramTrialRewardWidget_C_Setup::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'ProgramTrialRewardWidget_C_Setup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'ProgramTrialRewardWidget_C_Setup::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, K2Node_MakeArray_Array) == 0x000078, "Member 'ProgramTrialRewardWidget_C_Setup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, K2Node_Select_Default_1) == 0x000088, "Member 'ProgramTrialRewardWidget_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, CallFunc_Format_ReturnValue) == 0x000090, "Member 'ProgramTrialRewardWidget_C_Setup::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, K2Node_Select_Default_2) == 0x0000A8, "Member 'ProgramTrialRewardWidget_C_Setup::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, K2Node_Select_Default_3) == 0x0000C0, "Member 'ProgramTrialRewardWidget_C_Setup::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_Setup, K2Node_Select_Default_4) == 0x0000C1, "Member 'ProgramTrialRewardWidget_C_Setup::K2Node_Select_Default_4' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.OnLoaded_A87C4866469F6493BA837AA40651E406
// 0x0008 (0x0008 - 0x0000)
struct ProgramTrialRewardWidget_C_OnLoaded_A87C4866469F6493BA837AA40651E406 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialRewardWidget_C_OnLoaded_A87C4866469F6493BA837AA40651E406) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_OnLoaded_A87C4866469F6493BA837AA40651E406");
static_assert(sizeof(ProgramTrialRewardWidget_C_OnLoaded_A87C4866469F6493BA837AA40651E406) == 0x000008, "Wrong size on ProgramTrialRewardWidget_C_OnLoaded_A87C4866469F6493BA837AA40651E406");
static_assert(offsetof(ProgramTrialRewardWidget_C_OnLoaded_A87C4866469F6493BA837AA40651E406, Loaded) == 0x000000, "Member 'ProgramTrialRewardWidget_C_OnLoaded_A87C4866469F6493BA837AA40651E406::Loaded' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ProgramTrialRewardWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialRewardWidget_C_PreConstruct) == 0x000001, "Wrong alignment on ProgramTrialRewardWidget_C_PreConstruct");
static_assert(sizeof(ProgramTrialRewardWidget_C_PreConstruct) == 0x000001, "Wrong size on ProgramTrialRewardWidget_C_PreConstruct");
static_assert(offsetof(ProgramTrialRewardWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ProgramTrialRewardWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.LoadThumbnail
// 0x0028 (0x0028 - 0x0000)
struct ProgramTrialRewardWidget_C_LoadThumbnail final
{
public:
	TSoftObjectPtr<class UTexture2D>              ThumbnailSoftRef;                                  // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialRewardWidget_C_LoadThumbnail) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_LoadThumbnail");
static_assert(sizeof(ProgramTrialRewardWidget_C_LoadThumbnail) == 0x000028, "Wrong size on ProgramTrialRewardWidget_C_LoadThumbnail");
static_assert(offsetof(ProgramTrialRewardWidget_C_LoadThumbnail, ThumbnailSoftRef) == 0x000000, "Member 'ProgramTrialRewardWidget_C_LoadThumbnail::ThumbnailSoftRef' has a wrong offset!");

// Function ProgramTrialRewardWidget.ProgramTrialRewardWidget_C.ExecuteUbergraph_ProgramTrialRewardWidget
// 0x0060 (0x0060 - 0x0000)
struct ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_thumbnailSoftref;               // 0x0038(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget) == 0x000008, "Wrong alignment on ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget");
static_assert(sizeof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget) == 0x000060, "Wrong size on ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget");
static_assert(offsetof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget, EntryPoint) == 0x000000, "Member 'ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget, Temp_object_Variable) == 0x000020, "Member 'ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget, K2Node_DynamicCast_AsTexture_2D) == 0x000028, "Member 'ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget, K2Node_Event_IsDesignTime) == 0x000031, "Member 'ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget, K2Node_CustomEvent_thumbnailSoftref) == 0x000038, "Member 'ProgramTrialRewardWidget_C_ExecuteUbergraph_ProgramTrialRewardWidget::K2Node_CustomEvent_thumbnailSoftref' has a wrong offset!");

}

