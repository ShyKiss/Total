#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_ItemConsume_Heal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FX_ItemConsume_Heal.BP_FX_ItemConsume_Heal_C
// 0x0040 (0x0270 - 0x0230)
class ABP_FX_ItemConsume_Heal_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Heal02_Smooth_Depth_AEE0181E49033649DF2B4380EAB8474E; // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Heal02_Smooth_StretchDistance_AEE0181E49033649DF2B4380EAB8474E; // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Heal02_Smooth_StretchMulti_AEE0181E49033649DF2B4380EAB8474E; // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Heal02_Smooth__Direction_AEE0181E49033649DF2B4380EAB8474E; // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Heal02_Smooth;                                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Heal01_Depth_8F9E003B47CEC232C974F28F12769A0D;     // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Heal01_StratchDistance_8F9E003B47CEC232C974F28F12769A0D; // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Heal01_OpacityMulti_8F9E003B47CEC232C974F28F12769A0D; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Heal01__Direction_8F9E003B47CEC232C974F28F12769A0D; // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Heal01;                                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FX_ItemConsume_Heal(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Heal02_Smooth__UpdateFunc();
	void Heal02_Smooth__FinishedFunc();
	void Heal01__UpdateFunc();
	void Heal01__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FX_ItemConsume_Heal_C">();
	}
	static class ABP_FX_ItemConsume_Heal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FX_ItemConsume_Heal_C>();
	}
};
static_assert(alignof(ABP_FX_ItemConsume_Heal_C) == 0x000008, "Wrong alignment on ABP_FX_ItemConsume_Heal_C");
static_assert(sizeof(ABP_FX_ItemConsume_Heal_C) == 0x000270, "Wrong size on ABP_FX_ItemConsume_Heal_C");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, UberGraphFrame) == 0x000230, "Member 'ABP_FX_ItemConsume_Heal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_FX_ItemConsume_Heal_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal02_Smooth_Depth_AEE0181E49033649DF2B4380EAB8474E) == 0x000240, "Member 'ABP_FX_ItemConsume_Heal_C::Heal02_Smooth_Depth_AEE0181E49033649DF2B4380EAB8474E' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal02_Smooth_StretchDistance_AEE0181E49033649DF2B4380EAB8474E) == 0x000244, "Member 'ABP_FX_ItemConsume_Heal_C::Heal02_Smooth_StretchDistance_AEE0181E49033649DF2B4380EAB8474E' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal02_Smooth_StretchMulti_AEE0181E49033649DF2B4380EAB8474E) == 0x000248, "Member 'ABP_FX_ItemConsume_Heal_C::Heal02_Smooth_StretchMulti_AEE0181E49033649DF2B4380EAB8474E' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal02_Smooth__Direction_AEE0181E49033649DF2B4380EAB8474E) == 0x00024C, "Member 'ABP_FX_ItemConsume_Heal_C::Heal02_Smooth__Direction_AEE0181E49033649DF2B4380EAB8474E' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal02_Smooth) == 0x000250, "Member 'ABP_FX_ItemConsume_Heal_C::Heal02_Smooth' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal01_Depth_8F9E003B47CEC232C974F28F12769A0D) == 0x000258, "Member 'ABP_FX_ItemConsume_Heal_C::Heal01_Depth_8F9E003B47CEC232C974F28F12769A0D' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal01_StratchDistance_8F9E003B47CEC232C974F28F12769A0D) == 0x00025C, "Member 'ABP_FX_ItemConsume_Heal_C::Heal01_StratchDistance_8F9E003B47CEC232C974F28F12769A0D' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal01_OpacityMulti_8F9E003B47CEC232C974F28F12769A0D) == 0x000260, "Member 'ABP_FX_ItemConsume_Heal_C::Heal01_OpacityMulti_8F9E003B47CEC232C974F28F12769A0D' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal01__Direction_8F9E003B47CEC232C974F28F12769A0D) == 0x000264, "Member 'ABP_FX_ItemConsume_Heal_C::Heal01__Direction_8F9E003B47CEC232C974F28F12769A0D' has a wrong offset!");
static_assert(offsetof(ABP_FX_ItemConsume_Heal_C, Heal01) == 0x000268, "Member 'ABP_FX_ItemConsume_Heal_C::Heal01' has a wrong offset!");

}

