#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TalkWheelSlice_V2

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function TalkWheelSlice_V2.TalkWheelSlice_V2_C.ExecuteUbergraph_TalkWheelSlice_V2
// 0x0008 (0x0008 - 0x0000)
struct TalkWheelSlice_V2_C_ExecuteUbergraph_TalkWheelSlice_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TalkWheelSlice_V2_C_ExecuteUbergraph_TalkWheelSlice_V2) == 0x000004, "Wrong alignment on TalkWheelSlice_V2_C_ExecuteUbergraph_TalkWheelSlice_V2");
static_assert(sizeof(TalkWheelSlice_V2_C_ExecuteUbergraph_TalkWheelSlice_V2) == 0x000008, "Wrong size on TalkWheelSlice_V2_C_ExecuteUbergraph_TalkWheelSlice_V2");
static_assert(offsetof(TalkWheelSlice_V2_C_ExecuteUbergraph_TalkWheelSlice_V2, EntryPoint) == 0x000000, "Member 'TalkWheelSlice_V2_C_ExecuteUbergraph_TalkWheelSlice_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(TalkWheelSlice_V2_C_ExecuteUbergraph_TalkWheelSlice_V2, K2Node_Event_IsDesignTime) == 0x000004, "Member 'TalkWheelSlice_V2_C_ExecuteUbergraph_TalkWheelSlice_V2::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function TalkWheelSlice_V2.TalkWheelSlice_V2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct TalkWheelSlice_V2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TalkWheelSlice_V2_C_PreConstruct) == 0x000001, "Wrong alignment on TalkWheelSlice_V2_C_PreConstruct");
static_assert(sizeof(TalkWheelSlice_V2_C_PreConstruct) == 0x000001, "Wrong size on TalkWheelSlice_V2_C_PreConstruct");
static_assert(offsetof(TalkWheelSlice_V2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'TalkWheelSlice_V2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function TalkWheelSlice_V2.TalkWheelSlice_V2_C.Highlight
// 0x0058 (0x0058 - 0x0000)
struct TalkWheelSlice_V2_C_Highlight final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TalkWheelSlice_V2_C_Highlight) == 0x000008, "Wrong alignment on TalkWheelSlice_V2_C_Highlight");
static_assert(sizeof(TalkWheelSlice_V2_C_Highlight) == 0x000058, "Wrong size on TalkWheelSlice_V2_C_Highlight");
static_assert(offsetof(TalkWheelSlice_V2_C_Highlight, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'TalkWheelSlice_V2_C_Highlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(TalkWheelSlice_V2_C_Highlight, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'TalkWheelSlice_V2_C_Highlight::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(TalkWheelSlice_V2_C_Highlight, CallFunc_PlayAnimationForward_ReturnValue) == 0x000050, "Member 'TalkWheelSlice_V2_C_Highlight::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function TalkWheelSlice_V2.TalkWheelSlice_V2_C.Downlight
// 0x0058 (0x0058 - 0x0000)
struct TalkWheelSlice_V2_C_Downlight final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TalkWheelSlice_V2_C_Downlight) == 0x000008, "Wrong alignment on TalkWheelSlice_V2_C_Downlight");
static_assert(sizeof(TalkWheelSlice_V2_C_Downlight) == 0x000058, "Wrong size on TalkWheelSlice_V2_C_Downlight");
static_assert(offsetof(TalkWheelSlice_V2_C_Downlight, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'TalkWheelSlice_V2_C_Downlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(TalkWheelSlice_V2_C_Downlight, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'TalkWheelSlice_V2_C_Downlight::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(TalkWheelSlice_V2_C_Downlight, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000050, "Member 'TalkWheelSlice_V2_C_Downlight::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

}

