#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuCharacter_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MenuCharacter_AnimBP.MenuCharacter_AnimBP_C
// 0x1570 (0x1830 - 0x02C0)
class UMenuCharacter_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03E8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x0410(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0490(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x04C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0540(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x0570(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x05F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x0670(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x06F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0770(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x07F0(0x00B8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x08A8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x08D8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0958(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0988(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0A08(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x0A38(0x00B0)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0AE8(0x00A8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0B90(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0BB8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0C38(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0CB8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0D38(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0DB8(0x00B8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0E70(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0EF0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0F20(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0FA0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0FD0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1050(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x1080(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1130(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1158(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1180(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1200(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1230(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x12B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x12E0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1360(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x1390(0x00B0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1440(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x14E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1568(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1598(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1648(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x16C8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x16F8(0x00B0)()
	class AMenuCharacter_C*                       MenuCharacter;                                     // 0x17A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECustomizationMenuCategory                    CurrentMenuCategory;                               // 0x17B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x17B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B2[0x2];                                     // 0x17B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendSpeed;                                        // 0x17B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Posture;                                           // 0x17B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GoToMark;                                          // 0x17BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17BD[0x3];                                     // 0x17BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ToMainPosition;                                    // 0x17C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ReachedMainPosition;                               // 0x17D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ESocialMenuSceneActorSlot                     PlayerSlot;                                        // 0x17E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GoToMain;                                          // 0x17E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E2[0x6];                                     // 0x17E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          IdleAnim;                                          // 0x17E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          TerminalIntoAnim;                                  // 0x17F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPreview;                                        // 0x17F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17F9[0x3];                                     // 0x17F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WhichAnimStyle;                                    // 0x17FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTrialFailed;                                      // 0x1800(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1801[0x3];                                     // 0x1801(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TerminalAnimOffset;                                // 0x1804(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          ThumbnailGenerationAnim;                           // 0x1808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ThumbnailPoseLoaded;                               // 0x1810(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         PodiumAnimDelay;                                   // 0x1820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PodiumDelayDone;                                   // 0x1824(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ToMainPosition__DelegateSignature();
	void ReachedMainPosition__DelegateSignature();
	void ThumbnailPoseLoaded__DelegateSignature();
	void ExecuteUbergraph_MenuCharacter_AnimBP(int32 EntryPoint);
	void Update_Emote(int32 AnimStyle, class URBEmoteCustomizationOption* EmoteCustomizationOption, bool bIsPreview_0, float TerminalAnimOffset_0, float PodiumAnimDelay_0);
	void AnimNotify_GoingToNeutral();
	void AnimNotify_ImOut();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintBeginPlay();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_MenuCharacter_AnimBP_AnimGraphNode_TransitionResult_D288AF2643BE67F8C5440383C35C5A81();
	void OnLoaded_85E309BE415E2A414D16D3A74151BA86(class UObject* Loaded);
	void OnLoaded_7752107C41CD4BF270485A89F7FFAF51(class UObject* Loaded);
	void OnLoaded_E30C2BAF458C1CC00689BF8A9B4CB90D(class UObject* Loaded);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuCharacter_AnimBP_C">();
	}
	static class UMenuCharacter_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuCharacter_AnimBP_C>();
	}
};
static_assert(alignof(UMenuCharacter_AnimBP_C) == 0x000010, "Wrong alignment on UMenuCharacter_AnimBP_C");
static_assert(sizeof(UMenuCharacter_AnimBP_C) == 0x001830, "Wrong size on UMenuCharacter_AnimBP_C");
static_assert(offsetof(UMenuCharacter_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UMenuCharacter_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x0002F8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000320, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000348, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000370, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000398, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0003C0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0003E8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_20) == 0x000410, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_12) == 0x000490, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_19) == 0x0004C0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_11) == 0x000540, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_18) == 0x000570, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_17) == 0x0005F0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_16) == 0x000670, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_15) == 0x0006F0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_14) == 0x000770, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_BlendListByEnum_1) == 0x0007F0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_10) == 0x0008A8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_13) == 0x0008D8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_9) == 0x000958, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_12) == 0x000988, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_8) == 0x000A08, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateMachine_4) == 0x000A38, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_BlendListByInt) == 0x000AE8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000B90, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x000BB8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x000C38, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x000CB8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x000D38, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_BlendListByEnum) == 0x000DB8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000E70, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_7) == 0x000EF0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000F20, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_6) == 0x000FA0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000FD0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_5) == 0x001050, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateMachine_3) == 0x001080, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x001130, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult) == 0x001158, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x001180, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_4) == 0x001200, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x001230, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_3) == 0x0012B0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0012E0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_2) == 0x001360, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateMachine_2) == 0x001390, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x001440, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0014E8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_1) == 0x001568, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x001598, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x001648, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult) == 0x0016C8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateMachine) == 0x0016F8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, MenuCharacter) == 0x0017A8, "Member 'UMenuCharacter_AnimBP_C::MenuCharacter' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, CurrentMenuCategory) == 0x0017B0, "Member 'UMenuCharacter_AnimBP_C::CurrentMenuCategory' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, Active) == 0x0017B1, "Member 'UMenuCharacter_AnimBP_C::Active' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, BlendSpeed) == 0x0017B4, "Member 'UMenuCharacter_AnimBP_C::BlendSpeed' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, Posture) == 0x0017B8, "Member 'UMenuCharacter_AnimBP_C::Posture' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, GoToMark) == 0x0017BC, "Member 'UMenuCharacter_AnimBP_C::GoToMark' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, ToMainPosition) == 0x0017C0, "Member 'UMenuCharacter_AnimBP_C::ToMainPosition' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, ReachedMainPosition) == 0x0017D0, "Member 'UMenuCharacter_AnimBP_C::ReachedMainPosition' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, PlayerSlot) == 0x0017E0, "Member 'UMenuCharacter_AnimBP_C::PlayerSlot' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, GoToMain) == 0x0017E1, "Member 'UMenuCharacter_AnimBP_C::GoToMain' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, IdleAnim) == 0x0017E8, "Member 'UMenuCharacter_AnimBP_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, TerminalIntoAnim) == 0x0017F0, "Member 'UMenuCharacter_AnimBP_C::TerminalIntoAnim' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, bIsPreview) == 0x0017F8, "Member 'UMenuCharacter_AnimBP_C::bIsPreview' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, WhichAnimStyle) == 0x0017FC, "Member 'UMenuCharacter_AnimBP_C::WhichAnimStyle' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, bTrialFailed) == 0x001800, "Member 'UMenuCharacter_AnimBP_C::bTrialFailed' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, TerminalAnimOffset) == 0x001804, "Member 'UMenuCharacter_AnimBP_C::TerminalAnimOffset' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, ThumbnailGenerationAnim) == 0x001808, "Member 'UMenuCharacter_AnimBP_C::ThumbnailGenerationAnim' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, ThumbnailPoseLoaded) == 0x001810, "Member 'UMenuCharacter_AnimBP_C::ThumbnailPoseLoaded' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, PodiumAnimDelay) == 0x001820, "Member 'UMenuCharacter_AnimBP_C::PodiumAnimDelay' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, PodiumDelayDone) == 0x001824, "Member 'UMenuCharacter_AnimBP_C::PodiumDelayDone' has a wrong offset!");

}

