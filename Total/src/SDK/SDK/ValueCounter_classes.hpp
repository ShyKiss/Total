#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValueCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ValueCounter.ValueCounter_C
// 0x0098 (0x02F8 - 0x0260)
class UValueCounter_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUniformGridPanel*                      BarsGrid;                                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_56;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         LastHighlightedBarIndex;                           // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            NormalTint;                                        // 0x02A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            HighlightedTint;                                   // 0x02D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_ValueCounter(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Setup(int32 BarCount);
	void Refresh(int32 NewIndex);
	void RefreshBar(bool Highlight, int32 BarIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ValueCounter_C">();
	}
	static class UValueCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UValueCounter_C>();
	}
};
static_assert(alignof(UValueCounter_C) == 0x000008, "Wrong alignment on UValueCounter_C");
static_assert(sizeof(UValueCounter_C) == 0x0002F8, "Wrong size on UValueCounter_C");
static_assert(offsetof(UValueCounter_C, UberGraphFrame) == 0x000260, "Member 'UValueCounter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, BarsGrid) == 0x000268, "Member 'UValueCounter_C::BarsGrid' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, Image) == 0x000270, "Member 'UValueCounter_C::Image' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, Image_1) == 0x000278, "Member 'UValueCounter_C::Image_1' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, Image_2) == 0x000280, "Member 'UValueCounter_C::Image_2' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, Image_3) == 0x000288, "Member 'UValueCounter_C::Image_3' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, Image_4) == 0x000290, "Member 'UValueCounter_C::Image_4' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, Image_56) == 0x000298, "Member 'UValueCounter_C::Image_56' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, LastHighlightedBarIndex) == 0x0002A0, "Member 'UValueCounter_C::LastHighlightedBarIndex' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, NormalTint) == 0x0002A8, "Member 'UValueCounter_C::NormalTint' has a wrong offset!");
static_assert(offsetof(UValueCounter_C, HighlightedTint) == 0x0002D0, "Member 'UValueCounter_C::HighlightedTint' has a wrong offset!");

}

