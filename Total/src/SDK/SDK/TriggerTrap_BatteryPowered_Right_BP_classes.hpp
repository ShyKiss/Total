#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TriggerTrap_BatteryPowered_Right_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TriggerTrap_BatteryPowered_Right_BP.TriggerTrap_BatteryPowered_Right_BP_C
// 0x00D0 (0x07F0 - 0x0720)
class ATriggerTrap_BatteryPowered_Right_BP_C : public ARBWireTriggerTrap
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0720(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      OnRewireVFX;                                       // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      DisabledVFX;                                       // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FriendlyDeviceIconLocation;                        // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBHackableComponent*                   DoorHackZone;                                      // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBHackableComponent*                   DeviceHackZone;                                    // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActiveSkillVisionComponent*          RBActiveSkillVision;                               // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PingZone;                                          // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPingComponent*                       RBPing;                                            // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DisarmAnimAnchorRef;                               // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               BatterySpark;                                      // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                BatterySpawnerActor;                               // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AnimationAnchorRef;                                // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BatteryAnchor_SKM;                                 // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AS_WaveSphere;                                     // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ActiveDiode;                                       // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBOutlineComponent*                    RBOutline;                                         // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorRef;                                           // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpen;                                             // 0x07C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_7C1[0x3];                                      // 0x07C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ArmedTrappedColor;                                 // 0x07C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ArmedFriendlyColor;                                // 0x07D4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void RefreshConvertedVisuals();
	void DestroyedSpawnedBattery();
	bool PlaySpecialMoveAnimation(class ARBPawn* InteractorPawn, ESpecialMove SpecialMove);
	void OnRep_bOpen();
	void SetSpawnedItemsInteractible(bool IsInteractibe);
	void UserConstructionScript();
	void BP_OnArmed();
	void BP_OnDisarmed();
	void Event_OnCompletedOperation(const TArray<class ARBPawn*>& Pawns);
	void OpenTrap();
	void OnRep_Open();
	void BndEvt__BatterySpawnerActor_K2Node_ComponentBoundEvent_0_OnActorPrevisRuntimeChildActorChanged__DelegateSignature(class URBActorPrevisComponent* ActorPrevis, class AActor* RuntimeChildActor);
	void Event_SnapToState();
	void OnDisarmed_Internal(bool bSnapToState);
	void BP_OnTrapBatteryStateChanged();
	void BndEvt__TriggerTrap_BatteryPowered_Right_BP_DeviceHackZone_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature(class URBHackableComponent* HackableComponent);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_TriggerTrap_BatteryPowered_Right_BP(int32 EntryPoint);

	bool GetFriendlyDeviceIconLocation(struct FVector* Out_location) const;
	void GetLookAtLocation(struct FVector* OutLookAtLocation) const;
	bool GetInteractionPawnLocation(const class ARBPawn* Pawn, ESpecialMove SpecialMove, struct FVector* OutLocation, struct FVector* OutDirection) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TriggerTrap_BatteryPowered_Right_BP_C">();
	}
	static class ATriggerTrap_BatteryPowered_Right_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATriggerTrap_BatteryPowered_Right_BP_C>();
	}
};
static_assert(alignof(ATriggerTrap_BatteryPowered_Right_BP_C) == 0x000010, "Wrong alignment on ATriggerTrap_BatteryPowered_Right_BP_C");
static_assert(sizeof(ATriggerTrap_BatteryPowered_Right_BP_C) == 0x0007F0, "Wrong size on ATriggerTrap_BatteryPowered_Right_BP_C");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, UberGraphFrame) == 0x000720, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, OnRewireVFX) == 0x000728, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::OnRewireVFX' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, DisabledVFX) == 0x000730, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::DisabledVFX' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, FriendlyDeviceIconLocation) == 0x000738, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::FriendlyDeviceIconLocation' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, DoorHackZone) == 0x000740, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::DoorHackZone' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, DeviceHackZone) == 0x000748, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::DeviceHackZone' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, RBActiveSkillVision) == 0x000750, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::RBActiveSkillVision' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, PingZone) == 0x000758, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::PingZone' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, RBPing) == 0x000760, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::RBPing' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, DisarmAnimAnchorRef) == 0x000768, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::DisarmAnimAnchorRef' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, PointLight) == 0x000770, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::PointLight' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, BatterySpark) == 0x000778, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::BatterySpark' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, BatterySpawnerActor) == 0x000780, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::BatterySpawnerActor' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, AnimationAnchorRef) == 0x000788, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::AnimationAnchorRef' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, BatteryAnchor_SKM) == 0x000790, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::BatteryAnchor_SKM' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, AS_WaveSphere) == 0x000798, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::AS_WaveSphere' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, RBSound) == 0x0007A0, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, ActiveDiode) == 0x0007A8, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::ActiveDiode' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, RBOutline) == 0x0007B0, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::RBOutline' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, DoorRef) == 0x0007B8, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::DoorRef' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, bOpen) == 0x0007C0, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::bOpen' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, ArmedTrappedColor) == 0x0007C4, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::ArmedTrappedColor' has a wrong offset!");
static_assert(offsetof(ATriggerTrap_BatteryPowered_Right_BP_C, ArmedFriendlyColor) == 0x0007D4, "Member 'ATriggerTrap_BatteryPowered_Right_BP_C::ArmedFriendlyColor' has a wrong offset!");

}

