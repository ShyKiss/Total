#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExperimentBoardActionButton

#include "Basic.hpp"

#include "ExperimentBoardActionButton_classes.hpp"
#include "ExperimentBoardActionButton_parameters.hpp"


namespace SDK
{

// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnPressed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnReleased__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::OnReleased__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnReleased__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.ExecuteUbergraph_ExperimentBoardActionButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UExperimentBoardActionButton_C::ExecuteUbergraph_ExperimentBoardActionButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "ExecuteUbergraph_ExperimentBoardActionButton");

	Params::ExperimentBoardActionButton_C_ExecuteUbergraph_ExperimentBoardActionButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.BndEvt__ExperimentBoardActionButton_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature
// (BlueprintEvent)

void UExperimentBoardActionButton_C::BndEvt__ExperimentBoardActionButton_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "BndEvt__ExperimentBoardActionButton_SelectButton_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.BndEvt__ExperimentBoardActionButton_SelectButton_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UExperimentBoardActionButton_C::BndEvt__ExperimentBoardActionButton_SelectButton_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "BndEvt__ExperimentBoardActionButton_SelectButton_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UExperimentBoardActionButton_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnMenuInputSourceChanged
// (BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::OnMenuInputSourceChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnMenuInputSourceChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UExperimentBoardActionButton_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnRemovedFromFocusPath");

	Params::ExperimentBoardActionButton_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.Event_InputSourceChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsGamepad                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UExperimentBoardActionButton_C::Event_InputSourceChanged(bool bIsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "Event_InputSourceChanged");

	Params::ExperimentBoardActionButton_C_Event_InputSourceChanged Parms{};

	Parms.bIsGamepad = bIsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UExperimentBoardActionButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.BndEvt__SelectButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UExperimentBoardActionButton_C::BndEvt__SelectButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "BndEvt__SelectButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UExperimentBoardActionButton_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnMouseLeave");

	Params::ExperimentBoardActionButton_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UExperimentBoardActionButton_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnMouseEnter");

	Params::ExperimentBoardActionButton_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UExperimentBoardActionButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "PreConstruct");

	Params::ExperimentBoardActionButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.UpdateState
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::UpdateState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "UpdateState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.SetEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UExperimentBoardActionButton_C::SetEnabled(bool bInEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "SetEnabled");

	Params::ExperimentBoardActionButton_C_SetEnabled Parms{};

	Parms.bInEnabled = bInEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.SetButtonText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ButtonText_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UExperimentBoardActionButton_C::SetButtonText(const class FText& ButtonText_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "SetButtonText");

	Params::ExperimentBoardActionButton_C_SetButtonText Parms{};

	Parms.ButtonText_0 = std::move(ButtonText_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UExperimentBoardActionButton_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnFocusReceived");

	Params::ExperimentBoardActionButton_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.SetHovered
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hovered_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UExperimentBoardActionButton_C::SetHovered(bool Hovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "SetHovered");

	Params::ExperimentBoardActionButton_C_SetHovered Parms{};

	Parms.Hovered_0 = Hovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.GamepadNav_MenuConfirm
// (Public, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::GamepadNav_MenuConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "GamepadNav_MenuConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.GamepadNav_MenuConfirm_Release
// (Public, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::GamepadNav_MenuConfirm_Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "GamepadNav_MenuConfirm_Release");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnButtonClicked
// (Public, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::OnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnButtonPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::OnButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnButtonPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.OnButtonReleased
// (Public, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::OnButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "OnButtonReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.Setup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UExperimentBoardActionButton_C::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExperimentBoardActionButton.ExperimentBoardActionButton_C.SetIsNew
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNew                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UExperimentBoardActionButton_C::SetIsNew(bool IsNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExperimentBoardActionButton_C", "SetIsNew");

	Params::ExperimentBoardActionButton_C_SetIsNew Parms{};

	Parms.IsNew = IsNew;

	UObject::ProcessEvent(Func, &Parms);
}

}

