#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CineSpectre_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CineSpectre_BP.CineSpectre_BP_C.Hidding Chid
// 0x0048 (0x0048 - 0x0000)
struct CineSpectre_BP_C_Hidding_Chid final
{
public:
	class USkeletalMeshComponent*                 Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewVisibility;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineSpectre_BP_C_Hidding_Chid) == 0x000008, "Wrong alignment on CineSpectre_BP_C_Hidding_Chid");
static_assert(sizeof(CineSpectre_BP_C_Hidding_Chid) == 0x000048, "Wrong size on CineSpectre_BP_C_Hidding_Chid");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, Parent) == 0x000000, "Member 'CineSpectre_BP_C_Hidding_Chid::Parent' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, bNewVisibility) == 0x000008, "Member 'CineSpectre_BP_C_Hidding_Chid::bNewVisibility' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, NewLocalVar_0) == 0x000010, "Member 'CineSpectre_BP_C_Hidding_Chid::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, CallFunc_GetChildrenComponents_Children) == 0x000018, "Member 'CineSpectre_BP_C_Hidding_Chid::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, Temp_int_Array_Index_Variable) == 0x000028, "Member 'CineSpectre_BP_C_Hidding_Chid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'CineSpectre_BP_C_Hidding_Chid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, CallFunc_Array_Get_Item) == 0x000030, "Member 'CineSpectre_BP_C_Hidding_Chid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'CineSpectre_BP_C_Hidding_Chid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'CineSpectre_BP_C_Hidding_Chid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_Hidding_Chid, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'CineSpectre_BP_C_Hidding_Chid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function CineSpectre_BP.CineSpectre_BP_C.MotionBlurByBones
// 0x0030 (0x0030 - 0x0000)
struct CineSpectre_BP_C_MotionBlurByBones final
{
public:
	TArray<class FName>                           ListOfBones;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class USkeletalMeshComponent*>         Array_0;                                           // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                Rotation;                                          // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineSpectre_BP_C_MotionBlurByBones) == 0x000008, "Wrong alignment on CineSpectre_BP_C_MotionBlurByBones");
static_assert(sizeof(CineSpectre_BP_C_MotionBlurByBones) == 0x000030, "Wrong size on CineSpectre_BP_C_MotionBlurByBones");
static_assert(offsetof(CineSpectre_BP_C_MotionBlurByBones, ListOfBones) == 0x000000, "Member 'CineSpectre_BP_C_MotionBlurByBones::ListOfBones' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_MotionBlurByBones, Array_0) == 0x000010, "Member 'CineSpectre_BP_C_MotionBlurByBones::Array_0' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_MotionBlurByBones, Rotation) == 0x000020, "Member 'CineSpectre_BP_C_MotionBlurByBones::Rotation' has a wrong offset!");

// Function CineSpectre_BP.CineSpectre_BP_C.MotionBlurSwap
// 0x0004 (0x0004 - 0x0000)
struct CineSpectre_BP_C_MotionBlurSwap final
{
public:
	float                                         blurIntensity;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineSpectre_BP_C_MotionBlurSwap) == 0x000004, "Wrong alignment on CineSpectre_BP_C_MotionBlurSwap");
static_assert(sizeof(CineSpectre_BP_C_MotionBlurSwap) == 0x000004, "Wrong size on CineSpectre_BP_C_MotionBlurSwap");
static_assert(offsetof(CineSpectre_BP_C_MotionBlurSwap, blurIntensity) == 0x000000, "Member 'CineSpectre_BP_C_MotionBlurSwap::blurIntensity' has a wrong offset!");

// Function CineSpectre_BP.CineSpectre_BP_C.SetVisibility
// 0x0003 (0x0003 - 0x0000)
struct CineSpectre_BP_C_SetVisibility final
{
public:
	bool                                          Spectre01;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Spectre02;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Spectre03;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CineSpectre_BP_C_SetVisibility) == 0x000001, "Wrong alignment on CineSpectre_BP_C_SetVisibility");
static_assert(sizeof(CineSpectre_BP_C_SetVisibility) == 0x000003, "Wrong size on CineSpectre_BP_C_SetVisibility");
static_assert(offsetof(CineSpectre_BP_C_SetVisibility, Spectre01) == 0x000000, "Member 'CineSpectre_BP_C_SetVisibility::Spectre01' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_SetVisibility, Spectre02) == 0x000001, "Member 'CineSpectre_BP_C_SetVisibility::Spectre02' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_SetVisibility, Spectre03) == 0x000002, "Member 'CineSpectre_BP_C_SetVisibility::Spectre03' has a wrong offset!");

// Function CineSpectre_BP.CineSpectre_BP_C.MotionBlurHold
// 0x0004 (0x0004 - 0x0000)
struct CineSpectre_BP_C_MotionBlurHold final
{
public:
	float                                         Blur_Intensity;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CineSpectre_BP_C_MotionBlurHold) == 0x000004, "Wrong alignment on CineSpectre_BP_C_MotionBlurHold");
static_assert(sizeof(CineSpectre_BP_C_MotionBlurHold) == 0x000004, "Wrong size on CineSpectre_BP_C_MotionBlurHold");
static_assert(offsetof(CineSpectre_BP_C_MotionBlurHold, Blur_Intensity) == 0x000000, "Member 'CineSpectre_BP_C_MotionBlurHold::Blur_Intensity' has a wrong offset!");

// Function CineSpectre_BP.CineSpectre_BP_C.ExecuteUbergraph_CineSpectre_BP
// 0x00F8 (0x00F8 - 0x0000)
struct CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_CustomEvent_ListOfBones;                    // 0x0018(0x0010)(ConstParm, ReferenceParm)
	TArray<class USkeletalMeshComponent*>         K2Node_CustomEvent_Array;                          // 0x0028(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                K2Node_CustomEvent_Rotation;                       // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_blurIntensity;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_Spectre01;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Spectre02;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Spectre03;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_1;                          // 0x00A8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Blur_Intensity;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_3;                          // 0x00E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP) == 0x000008, "Wrong alignment on CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP");
static_assert(sizeof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP) == 0x0000F8, "Wrong size on CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, EntryPoint) == 0x000000, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, Temp_int_Array_Index_Variable) == 0x000004, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_CustomEvent_ListOfBones) == 0x000018, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_CustomEvent_ListOfBones' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_CustomEvent_Array) == 0x000028, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_CustomEvent_Array' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_CustomEvent_Rotation) == 0x000038, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_CustomEvent_blurIntensity) == 0x000044, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_CustomEvent_blurIntensity' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_BreakVector_X) == 0x000048, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_BreakVector_Y) == 0x00004C, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_BreakVector_Z) == 0x000050, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Array_Get_Item) == 0x000058, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_IsVisible_ReturnValue) == 0x00006C, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_MakeArray_Array) == 0x000088, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_CustomEvent_Spectre01) == 0x000098, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_CustomEvent_Spectre01' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_CustomEvent_Spectre02) == 0x000099, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_CustomEvent_Spectre02' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_CustomEvent_Spectre03) == 0x00009A, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_CustomEvent_Spectre03' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_MakeArray_Array_1) == 0x0000A8, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_CustomEvent_Blur_Intensity) == 0x0000C4, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_CustomEvent_Blur_Intensity' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C8, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_MakeArray_Array_2) == 0x0000D8, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP, K2Node_MakeArray_Array_3) == 0x0000E8, "Member 'CineSpectre_BP_C_ExecuteUbergraph_CineSpectre_BP::K2Node_MakeArray_Array_3' has a wrong offset!");

}

