#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PPManager_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PPManager_BP.PPManager_BP_C.ExecuteUbergraph_PPManager_BP
// 0x0760 (0x0760 - 0x0000)
struct PPManager_BP_C_ExecuteUbergraph_PPManager_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MinExp_1;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxExp_2;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeFadeOut_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MinExp;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxExp_1;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeFadeIn_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_SpookTime;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_PP_Material;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0048(0x0010)(NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_1;             // 0x0060(0x0010)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_2;             // 0x0078(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_3;             // 0x0088(0x0010)(NoDestructor)
	float                                         K2Node_CustomEvent_MaxExp;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeFadeIn;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeFadeOut;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DelayTimeOut;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_4;             // 0x00B0(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_5;             // 0x00C0(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_6;             // 0x00D0(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_7;             // 0x00E0(0x0010)(NoDestructor)
	float                                         K2Node_CustomEvent_Delay;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BlendTime;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MinFocalDistance;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxFocalDistance;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MinFOVScale;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxFOVScale;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NearBlurSize;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FarBlurSize;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MinFocalRegion;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxFocalRegion;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_maxExp;                               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_137[0x1];                                      // 0x0137(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     CallFunc_Array_Get_Item;                           // 0x0150(0x0010)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_5;                       // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_6;                       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_7;                       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0198(0x0010)()
	float                                         CallFunc_FMax_ReturnValue_8;                       // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x01B0(0x05B0)()
};
static_assert(alignof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP) == 0x000010, "Wrong alignment on PPManager_BP_C_ExecuteUbergraph_PPManager_BP");
static_assert(sizeof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP) == 0x000760, "Wrong size on PPManager_BP_C_ExecuteUbergraph_PPManager_BP");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, EntryPoint) == 0x000000, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MinExp_1) == 0x000014, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MinExp_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MaxExp_2) == 0x000018, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MaxExp_2' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_TimeFadeOut_1) == 0x00001C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_TimeFadeOut_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Lerp_ReturnValue_2) == 0x000024, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MinExp) == 0x000028, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MinExp' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MaxExp_1) == 0x00002C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MaxExp_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_TimeFadeIn_1) == 0x000030, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_TimeFadeIn_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000034, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Lerp_ReturnValue_3) == 0x000038, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_SpookTime) == 0x00003C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_SpookTime' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_PP_Material) == 0x000040, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_PP_Material' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_WeightedBlendable) == 0x000048, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000058, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_Event_DeltaSeconds) == 0x00005C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_WeightedBlendable_1) == 0x000060, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_WeightedBlendable_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, Temp_int_Array_Index_Variable) == 0x000070, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_WeightedBlendable_2) == 0x000078, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_WeightedBlendable_2' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_WeightedBlendable_3) == 0x000088, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_WeightedBlendable_3' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MaxExp) == 0x000098, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MaxExp' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_TimeFadeIn) == 0x00009C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_TimeFadeIn' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_TimeFadeOut) == 0x0000A0, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_TimeFadeOut' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_DelayTimeOut) == 0x0000A4, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_DelayTimeOut' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_WeightedBlendable_4) == 0x0000B0, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_WeightedBlendable_4' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_WeightedBlendable_5) == 0x0000C0, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_WeightedBlendable_5' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_WeightedBlendable_6) == 0x0000D0, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_WeightedBlendable_6' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_WeightedBlendable_7) == 0x0000E0, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_WeightedBlendable_7' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_Delay) == 0x0000F0, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_BlendTime) == 0x0000F4, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_BlendTime' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MinFocalDistance) == 0x0000F8, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MinFocalDistance' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MaxFocalDistance) == 0x0000FC, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MaxFocalDistance' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MinFOVScale) == 0x000100, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MinFOVScale' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MaxFOVScale) == 0x000104, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MaxFOVScale' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_NearBlurSize) == 0x000108, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_NearBlurSize' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_FarBlurSize) == 0x00010C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_FarBlurSize' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MinFocalRegion) == 0x000110, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MinFocalRegion' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_CustomEvent_MaxFocalRegion) == 0x000114, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_CustomEvent_MaxFocalRegion' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Lerp_ReturnValue_4) == 0x000118, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Lerp_ReturnValue_5) == 0x00011C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000120, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_Event_maxExp) == 0x000124, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_Event_maxExp' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Lerp_ReturnValue_6) == 0x000128, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, Temp_int_Loop_Counter_Variable) == 0x00012C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_BooleanOR_ReturnValue) == 0x000134, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_BooleanOR_ReturnValue_1) == 0x000135, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_BooleanOR_ReturnValue_2) == 0x000136, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeArray_Array) == 0x000138, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_BooleanOR_ReturnValue_3) == 0x000148, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Array_Get_Item) == 0x000150, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_BooleanOR_ReturnValue_4) == 0x000160, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Array_Add_ReturnValue) == 0x000164, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_BooleanOR_ReturnValue_5) == 0x000168, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_IsValid_ReturnValue) == 0x000169, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Array_Length_ReturnValue) == 0x00016C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_FMax_ReturnValue) == 0x000174, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_FMax_ReturnValue_1) == 0x000178, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_FMax_ReturnValue_2) == 0x00017C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_FMax_ReturnValue_3) == 0x000180, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_FMax_ReturnValue_4) == 0x000184, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_FMax_ReturnValue_5) == 0x000188, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_FMax_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_FMax_ReturnValue_6) == 0x00018C, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_FMax_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_FMax_ReturnValue_7) == 0x000190, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_FMax_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_WeightedBlendables) == 0x000198, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, CallFunc_FMax_ReturnValue_8) == 0x0001A8, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::CallFunc_FMax_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_ExecuteUbergraph_PPManager_BP, K2Node_MakeStruct_PostProcessSettings) == 0x0001B0, "Member 'PPManager_BP_C_ExecuteUbergraph_PPManager_BP::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.FX_Hit
// 0x0004 (0x0004 - 0x0000)
struct PPManager_BP_C_FX_Hit final
{
public:
	float                                         MaxExp;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_FX_Hit) == 0x000004, "Wrong alignment on PPManager_BP_C_FX_Hit");
static_assert(sizeof(PPManager_BP_C_FX_Hit) == 0x000004, "Wrong size on PPManager_BP_C_FX_Hit");
static_assert(offsetof(PPManager_BP_C_FX_Hit, MaxExp) == 0x000000, "Member 'PPManager_BP_C_FX_Hit::MaxExp' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.FX_InFocus
// 0x0028 (0x0028 - 0x0000)
struct PPManager_BP_C_FX_InFocus final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         blendTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinFocalDistance;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFocalDistance;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinFOVScale;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFOVScale;                                       // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NearBlurSize;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FarBlurSize;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinFocalRegion;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFocalRegion;                                    // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_FX_InFocus) == 0x000004, "Wrong alignment on PPManager_BP_C_FX_InFocus");
static_assert(sizeof(PPManager_BP_C_FX_InFocus) == 0x000028, "Wrong size on PPManager_BP_C_FX_InFocus");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, Delay) == 0x000000, "Member 'PPManager_BP_C_FX_InFocus::Delay' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, blendTime) == 0x000004, "Member 'PPManager_BP_C_FX_InFocus::blendTime' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, MinFocalDistance) == 0x000008, "Member 'PPManager_BP_C_FX_InFocus::MinFocalDistance' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, MaxFocalDistance) == 0x00000C, "Member 'PPManager_BP_C_FX_InFocus::MaxFocalDistance' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, MinFOVScale) == 0x000010, "Member 'PPManager_BP_C_FX_InFocus::MinFOVScale' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, MaxFOVScale) == 0x000014, "Member 'PPManager_BP_C_FX_InFocus::MaxFOVScale' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, NearBlurSize) == 0x000018, "Member 'PPManager_BP_C_FX_InFocus::NearBlurSize' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, FarBlurSize) == 0x00001C, "Member 'PPManager_BP_C_FX_InFocus::FarBlurSize' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, MinFocalRegion) == 0x000020, "Member 'PPManager_BP_C_FX_InFocus::MinFocalRegion' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_InFocus, MaxFocalRegion) == 0x000024, "Member 'PPManager_BP_C_FX_InFocus::MaxFocalRegion' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.FX_WhiteFlash
// 0x0010 (0x0010 - 0x0000)
struct PPManager_BP_C_FX_WhiteFlash final
{
public:
	float                                         MaxExp;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeFadeIn;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeFadeOut;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayTimeOut;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_FX_WhiteFlash) == 0x000004, "Wrong alignment on PPManager_BP_C_FX_WhiteFlash");
static_assert(sizeof(PPManager_BP_C_FX_WhiteFlash) == 0x000010, "Wrong size on PPManager_BP_C_FX_WhiteFlash");
static_assert(offsetof(PPManager_BP_C_FX_WhiteFlash, MaxExp) == 0x000000, "Member 'PPManager_BP_C_FX_WhiteFlash::MaxExp' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_WhiteFlash, TimeFadeIn) == 0x000004, "Member 'PPManager_BP_C_FX_WhiteFlash::TimeFadeIn' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_WhiteFlash, TimeFadeOut) == 0x000008, "Member 'PPManager_BP_C_FX_WhiteFlash::TimeFadeOut' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_WhiteFlash, DelayTimeOut) == 0x00000C, "Member 'PPManager_BP_C_FX_WhiteFlash::DelayTimeOut' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PPManager_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on PPManager_BP_C_ReceiveTick");
static_assert(sizeof(PPManager_BP_C_ReceiveTick) == 0x000004, "Wrong size on PPManager_BP_C_ReceiveTick");
static_assert(offsetof(PPManager_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PPManager_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.FX_PsySpook
// 0x0010 (0x0010 - 0x0000)
struct PPManager_BP_C_FX_PsySpook final
{
public:
	float                                         SpookTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                PP_Material;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_FX_PsySpook) == 0x000008, "Wrong alignment on PPManager_BP_C_FX_PsySpook");
static_assert(sizeof(PPManager_BP_C_FX_PsySpook) == 0x000010, "Wrong size on PPManager_BP_C_FX_PsySpook");
static_assert(offsetof(PPManager_BP_C_FX_PsySpook, SpookTime) == 0x000000, "Member 'PPManager_BP_C_FX_PsySpook::SpookTime' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_PsySpook, PP_Material) == 0x000008, "Member 'PPManager_BP_C_FX_PsySpook::PP_Material' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.FX_FadeWhiteIn
// 0x000C (0x000C - 0x0000)
struct PPManager_BP_C_FX_FadeWhiteIn final
{
public:
	float                                         MinExp;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxExp;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeFadeIn;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_FX_FadeWhiteIn) == 0x000004, "Wrong alignment on PPManager_BP_C_FX_FadeWhiteIn");
static_assert(sizeof(PPManager_BP_C_FX_FadeWhiteIn) == 0x00000C, "Wrong size on PPManager_BP_C_FX_FadeWhiteIn");
static_assert(offsetof(PPManager_BP_C_FX_FadeWhiteIn, MinExp) == 0x000000, "Member 'PPManager_BP_C_FX_FadeWhiteIn::MinExp' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_FadeWhiteIn, MaxExp) == 0x000004, "Member 'PPManager_BP_C_FX_FadeWhiteIn::MaxExp' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_FadeWhiteIn, TimeFadeIn) == 0x000008, "Member 'PPManager_BP_C_FX_FadeWhiteIn::TimeFadeIn' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.FX_FadeWhiteOut
// 0x000C (0x000C - 0x0000)
struct PPManager_BP_C_FX_FadeWhiteOut final
{
public:
	float                                         MinExp;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxExp;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeFadeOut;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_FX_FadeWhiteOut) == 0x000004, "Wrong alignment on PPManager_BP_C_FX_FadeWhiteOut");
static_assert(sizeof(PPManager_BP_C_FX_FadeWhiteOut) == 0x00000C, "Wrong size on PPManager_BP_C_FX_FadeWhiteOut");
static_assert(offsetof(PPManager_BP_C_FX_FadeWhiteOut, MinExp) == 0x000000, "Member 'PPManager_BP_C_FX_FadeWhiteOut::MinExp' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_FadeWhiteOut, MaxExp) == 0x000004, "Member 'PPManager_BP_C_FX_FadeWhiteOut::MaxExp' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_FX_FadeWhiteOut, TimeFadeOut) == 0x000008, "Member 'PPManager_BP_C_FX_FadeWhiteOut::TimeFadeOut' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.OverridePP
// 0x05C0 (0x05C0 - 0x0000)
struct PPManager_BP_C_OverridePP final
{
public:
	struct FPostProcessSettings                   PP;                                                // 0x0000(0x05B0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class URBFXManager*                           CallFunc_GetFXManager_ReturnValue;                 // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_OverridePP) == 0x000010, "Wrong alignment on PPManager_BP_C_OverridePP");
static_assert(sizeof(PPManager_BP_C_OverridePP) == 0x0005C0, "Wrong size on PPManager_BP_C_OverridePP");
static_assert(offsetof(PPManager_BP_C_OverridePP, PP) == 0x000000, "Member 'PPManager_BP_C_OverridePP::PP' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_OverridePP, CallFunc_GetFXManager_ReturnValue) == 0x0005B0, "Member 'PPManager_BP_C_OverridePP::CallFunc_GetFXManager_ReturnValue' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.Remove PP Override
// 0x0008 (0x0008 - 0x0000)
struct PPManager_BP_C_Remove_PP_Override final
{
public:
	class URBFXManager*                           CallFunc_GetFXManager_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_Remove_PP_Override) == 0x000008, "Wrong alignment on PPManager_BP_C_Remove_PP_Override");
static_assert(sizeof(PPManager_BP_C_Remove_PP_Override) == 0x000008, "Wrong size on PPManager_BP_C_Remove_PP_Override");
static_assert(offsetof(PPManager_BP_C_Remove_PP_Override, CallFunc_GetFXManager_ReturnValue) == 0x000000, "Member 'PPManager_BP_C_Remove_PP_Override::CallFunc_GetFXManager_ReturnValue' has a wrong offset!");

// Function PPManager_BP.PPManager_BP_C.debug
// 0x01E0 (0x01E0 - 0x0000)
struct PPManager_BP_C_Debug final
{
public:
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_4;         // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_5;         // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_6;         // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_7;         // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_8;         // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_9;         // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PPManager_BP_C_Debug) == 0x000008, "Wrong alignment on PPManager_BP_C_Debug");
static_assert(sizeof(PPManager_BP_C_Debug) == 0x0001E0, "Wrong size on PPManager_BP_C_Debug");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue) == 0x000000, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000020, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000030, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x000040, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue_4) == 0x000050, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue_5) == 0x000060, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue_6) == 0x000070, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue_7) == 0x000080, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue_8) == 0x0000A0, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C0, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Conv_FloatToString_ReturnValue_9) == 0x0000D0, "Member 'PPManager_BP_C_Debug::CallFunc_Conv_FloatToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E0, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000F0, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000100, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000110, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000120, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000130, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000140, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000150, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000160, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000170, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000180, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000190, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_16) == 0x0001A0, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_17) == 0x0001B0, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_18) == 0x0001C0, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(PPManager_BP_C_Debug, CallFunc_Concat_StrStr_ReturnValue_19) == 0x0001D0, "Member 'PPManager_BP_C_Debug::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");

}

