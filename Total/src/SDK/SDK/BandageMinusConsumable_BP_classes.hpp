#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BandageMinusConsumable_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Bandage-Consumable_BP.Bandage-Consumable_BP_C
// 0x0040 (0x0AF0 - 0x0AB0)
class ABandageMinusConsumable_BP_C final : public ARBBandagePickup
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   InHandStaticMesh;                                  // 0x0AB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InWorldStaticMesh;                                 // 0x0AC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0AC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBObjectiveActorComponent*             RBObjectiveActor;                                  // 0x0AD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBObjectiveProximityComponent*         RBObjectiveProximity;                              // 0x0AD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      BandageIdleAnimation;                              // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTearOpen;                                         // 0x0AE8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          Should_be_Hidden;                                  // 0x0AE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Event_OnUpdateVisibility(bool bShouldBeHidden);
	void ExecuteUbergraph_BandageMinusConsumable_BP(int32 EntryPoint);
	void BP_OnStartHoldConsumeAction(class ARBPawn* Pawn);
	void BP_OnBloodyRatioChanged(float bloodyRatio);
	void ResetToIdle();
	void BP_OnPlayItemAnimation(class UAnimSequenceBase* Sequence);
	void OnConsumeItemCancelledNotify(class ARBPawn* Pawn);
	void UserConstructionScript();
	void ResetBandageToIdle();
	void OnRep_bTearOpen();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Bandage-Consumable_BP_C">();
	}
	static class ABandageMinusConsumable_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABandageMinusConsumable_BP_C>();
	}
};
static_assert(alignof(ABandageMinusConsumable_BP_C) == 0x000010, "Wrong alignment on ABandageMinusConsumable_BP_C");
static_assert(sizeof(ABandageMinusConsumable_BP_C) == 0x000AF0, "Wrong size on ABandageMinusConsumable_BP_C");
static_assert(offsetof(ABandageMinusConsumable_BP_C, UberGraphFrame) == 0x000AB0, "Member 'ABandageMinusConsumable_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABandageMinusConsumable_BP_C, InHandStaticMesh) == 0x000AB8, "Member 'ABandageMinusConsumable_BP_C::InHandStaticMesh' has a wrong offset!");
static_assert(offsetof(ABandageMinusConsumable_BP_C, InWorldStaticMesh) == 0x000AC0, "Member 'ABandageMinusConsumable_BP_C::InWorldStaticMesh' has a wrong offset!");
static_assert(offsetof(ABandageMinusConsumable_BP_C, SkeletalMesh) == 0x000AC8, "Member 'ABandageMinusConsumable_BP_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABandageMinusConsumable_BP_C, RBObjectiveActor) == 0x000AD0, "Member 'ABandageMinusConsumable_BP_C::RBObjectiveActor' has a wrong offset!");
static_assert(offsetof(ABandageMinusConsumable_BP_C, RBObjectiveProximity) == 0x000AD8, "Member 'ABandageMinusConsumable_BP_C::RBObjectiveProximity' has a wrong offset!");
static_assert(offsetof(ABandageMinusConsumable_BP_C, BandageIdleAnimation) == 0x000AE0, "Member 'ABandageMinusConsumable_BP_C::BandageIdleAnimation' has a wrong offset!");
static_assert(offsetof(ABandageMinusConsumable_BP_C, bTearOpen) == 0x000AE8, "Member 'ABandageMinusConsumable_BP_C::bTearOpen' has a wrong offset!");
static_assert(offsetof(ABandageMinusConsumable_BP_C, Should_be_Hidden) == 0x000AE9, "Member 'ABandageMinusConsumable_BP_C::Should_be_Hidden' has a wrong offset!");

}

