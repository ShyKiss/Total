#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Placeable_PsychosisMine_BP

#include "Basic.hpp"

#include "Placeable_PsychosisMine_BP_classes.hpp"
#include "Placeable_PsychosisMine_BP_parameters.hpp"


namespace SDK
{

// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.BP_MapCheck
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMapCheckType                           CheckType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           OutErrorMsg                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APlaceable_PsychosisMine_BP_C::BP_MapCheck(EMapCheckType CheckType, class FString* OutErrorMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "BP_MapCheck");

	Params::Placeable_PsychosisMine_BP_C_BP_MapCheck Parms{};

	Parms.CheckType = CheckType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutErrorMsg != nullptr)
		*OutErrorMsg = std::move(Parms.OutErrorMsg);

	return Parms.ReturnValue;
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.FixUp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APlaceable_PsychosisMine_BP_C::FixUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "FixUp");

	Params::Placeable_PsychosisMine_BP_C_FixUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.GetStateName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           StateA                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           StateB                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APlaceable_PsychosisMine_BP_C::GetStateName(class FString* StateA, class FString* StateB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "GetStateName");

	Params::Placeable_PsychosisMine_BP_C_GetStateName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StateA != nullptr)
		*StateA = std::move(Parms.StateA);

	if (StateB != nullptr)
		*StateB = std::move(Parms.StateB);

	return Parms.ReturnValue;
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.Editor_DrawOverlap
// (Public, BlueprintCallable, BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::Editor_DrawOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "Editor_DrawOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.Editor_CheckOverlap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Overlaps                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           OutOverlapList                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void APlaceable_PsychosisMine_BP_C::Editor_CheckOverlap(bool* Overlaps, class FString* OutOverlapList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "Editor_CheckOverlap");

	Params::Placeable_PsychosisMine_BP_C_Editor_CheckOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Overlaps != nullptr)
		*Overlaps = Parms.Overlaps;

	if (OutOverlapList != nullptr)
		*OutOverlapList = std::move(Parms.OutOverlapList);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.UpdateMeshVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::UpdateMeshVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "UpdateMeshVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.BP_PrepareMapCheck
// (Event, Public, BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::BP_PrepareMapCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "BP_PrepareMapCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.OnEditorPostLoad
// (Event, Public, BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::OnEditorPostLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "OnEditorPostLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.OnPostActorsPasted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   PastedActors                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void APlaceable_PsychosisMine_BP_C::OnPostActorsPasted(const TArray<class AActor*>& PastedActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "OnPostActorsPasted");

	Params::Placeable_PsychosisMine_BP_C_OnPostActorsPasted Parms{};

	Parms.PastedActors = std::move(PastedActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.PostAddedToLevel
// (Event, Public, BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::PostAddedToLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "PostAddedToLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.PostDuplicated
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           DuplicationParent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlaceable_PsychosisMine_BP_C::PostDuplicated(class AActor* DuplicationParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "PostDuplicated");

	Params::Placeable_PsychosisMine_BP_C_PostDuplicated Parms{};

	Parms.DuplicationParent = DuplicationParent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.PostEditChange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             PropertyName                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlaceable_PsychosisMine_BP_C::PostEditChange(const class FName& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "PostEditChange");

	Params::Placeable_PsychosisMine_BP_C_PostEditChange Parms{};

	Parms.PropertyName = PropertyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.PostEditMove
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFinished                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlaceable_PsychosisMine_BP_C::PostEditMove(bool bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "PostEditMove");

	Params::Placeable_PsychosisMine_BP_C_PostEditMove Parms{};

	Parms.bFinished = bFinished;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.PrepareState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStateA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           RandomOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlaceable_PsychosisMine_BP_C::PrepareState(bool bStateA, class AActor* RandomOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "PrepareState");

	Params::Placeable_PsychosisMine_BP_C_PrepareState Parms{};

	Parms.bStateA = bStateA;
	Parms.RandomOwner = RandomOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.SetState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStateA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlaceable_PsychosisMine_BP_C::SetState(bool bStateA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "SetState");

	Params::Placeable_PsychosisMine_BP_C_SetState Parms{};

	Parms.bStateA = bStateA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.SetShouldBeIgnoredForLots
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlaceable_PsychosisMine_BP_C::SetShouldBeIgnoredForLots(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "SetShouldBeIgnoredForLots");

	Params::Placeable_PsychosisMine_BP_C_SetShouldBeIgnoredForLots Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.BndEvt__Placeable_PsychosisMine_BP_Randomizable Helper_K2Node_ComponentBoundEvent_0_OnRandomStateChangedEvent__DelegateSignature
// (BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::BndEvt__Placeable_PsychosisMine_BP_Randomizable_Helper_K2Node_ComponentBoundEvent_0_OnRandomStateChangedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "BndEvt__Placeable_PsychosisMine_BP_Randomizable Helper_K2Node_ComponentBoundEvent_0_OnRandomStateChangedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.TickSelected
// (Event, Public, BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::TickSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "TickSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.Event_OnActivate
// (Event, Public, BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::Event_OnActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "Event_OnActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.Event_OnBreak
// (Event, Public, BlueprintEvent)

void APlaceable_PsychosisMine_BP_C::Event_OnBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "Event_OnBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.BndEvt__Placeable_PsychosisMine_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBHackableComponent*             HackableComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlaceable_PsychosisMine_BP_C::BndEvt__Placeable_PsychosisMine_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature(class URBHackableComponent* HackableComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "BndEvt__Placeable_PsychosisMine_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature");

	Params::Placeable_PsychosisMine_BP_C_BndEvt__Placeable_PsychosisMine_BP_RBHackable_K2Node_ComponentBoundEvent_1_OnCurrentHackStateChanged__DelegateSignature Parms{};

	Parms.HackableComponent = HackableComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.ExecuteUbergraph_Placeable_PsychosisMine_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlaceable_PsychosisMine_BP_C::ExecuteUbergraph_Placeable_PsychosisMine_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "ExecuteUbergraph_Placeable_PsychosisMine_BP");

	Params::Placeable_PsychosisMine_BP_C_ExecuteUbergraph_Placeable_PsychosisMine_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.IsRandomStateSet
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APlaceable_PsychosisMine_BP_C::IsRandomStateSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "IsRandomStateSet");

	Params::Placeable_PsychosisMine_BP_C_IsRandomStateSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.IsStateA
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APlaceable_PsychosisMine_BP_C::IsStateA() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "IsStateA");

	Params::Placeable_PsychosisMine_BP_C_IsStateA Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.ShouldBeIgnoredForLots
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APlaceable_PsychosisMine_BP_C::ShouldBeIgnoredForLots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "ShouldBeIgnoredForLots");

	Params::Placeable_PsychosisMine_BP_C_ShouldBeIgnoredForLots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Placeable_PsychosisMine_BP.Placeable_PsychosisMine_BP_C.GetPlayerPingData
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FPlayerPingData                  OutData                                                (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APlaceable_PsychosisMine_BP_C::GetPlayerPingData(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FPlayerPingData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Placeable_PsychosisMine_BP_C", "GetPlayerPingData");

	Params::Placeable_PsychosisMine_BP_C_GetPlayerPingData Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}

}

