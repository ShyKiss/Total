#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MessageLineWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function MessageLineWidget.MessageLineWidget_C.ExecuteUbergraph_MessageLineWidget
// 0x0020 (0x0020 - 0x0000)
struct MessageLineWidget_C_ExecuteUbergraph_MessageLineWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_MessageText;                    // 0x0008(0x0018)()
};
static_assert(alignof(MessageLineWidget_C_ExecuteUbergraph_MessageLineWidget) == 0x000008, "Wrong alignment on MessageLineWidget_C_ExecuteUbergraph_MessageLineWidget");
static_assert(sizeof(MessageLineWidget_C_ExecuteUbergraph_MessageLineWidget) == 0x000020, "Wrong size on MessageLineWidget_C_ExecuteUbergraph_MessageLineWidget");
static_assert(offsetof(MessageLineWidget_C_ExecuteUbergraph_MessageLineWidget, EntryPoint) == 0x000000, "Member 'MessageLineWidget_C_ExecuteUbergraph_MessageLineWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(MessageLineWidget_C_ExecuteUbergraph_MessageLineWidget, K2Node_CustomEvent_MessageText) == 0x000008, "Member 'MessageLineWidget_C_ExecuteUbergraph_MessageLineWidget::K2Node_CustomEvent_MessageText' has a wrong offset!");

// Function MessageLineWidget.MessageLineWidget_C.SendTemporaryText
// 0x0018 (0x0018 - 0x0000)
struct MessageLineWidget_C_SendTemporaryText final
{
public:
	class FText                                   MessageText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MessageLineWidget_C_SendTemporaryText) == 0x000008, "Wrong alignment on MessageLineWidget_C_SendTemporaryText");
static_assert(sizeof(MessageLineWidget_C_SendTemporaryText) == 0x000018, "Wrong size on MessageLineWidget_C_SendTemporaryText");
static_assert(offsetof(MessageLineWidget_C_SendTemporaryText, MessageText) == 0x000000, "Member 'MessageLineWidget_C_SendTemporaryText::MessageText' has a wrong offset!");

// Function MessageLineWidget.MessageLineWidget_C.SetMessage
// 0x0030 (0x0030 - 0x0000)
struct MessageLineWidget_C_SetMessage final
{
public:
	class FText                                   MessageText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_FormatTextForDecorator_ReturnValue;       // 0x0018(0x0018)()
};
static_assert(alignof(MessageLineWidget_C_SetMessage) == 0x000008, "Wrong alignment on MessageLineWidget_C_SetMessage");
static_assert(sizeof(MessageLineWidget_C_SetMessage) == 0x000030, "Wrong size on MessageLineWidget_C_SetMessage");
static_assert(offsetof(MessageLineWidget_C_SetMessage, MessageText) == 0x000000, "Member 'MessageLineWidget_C_SetMessage::MessageText' has a wrong offset!");
static_assert(offsetof(MessageLineWidget_C_SetMessage, CallFunc_FormatTextForDecorator_ReturnValue) == 0x000018, "Member 'MessageLineWidget_C_SetMessage::CallFunc_FormatTextForDecorator_ReturnValue' has a wrong offset!");

// Function MessageLineWidget.MessageLineWidget_C.SetDefaultColor
// 0x0038 (0x0038 - 0x0000)
struct MessageLineWidget_C_SetDefaultColor final
{
public:
	struct FLinearColor                           DefaultColor;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
};
static_assert(alignof(MessageLineWidget_C_SetDefaultColor) == 0x000008, "Wrong alignment on MessageLineWidget_C_SetDefaultColor");
static_assert(sizeof(MessageLineWidget_C_SetDefaultColor) == 0x000038, "Wrong size on MessageLineWidget_C_SetDefaultColor");
static_assert(offsetof(MessageLineWidget_C_SetDefaultColor, DefaultColor) == 0x000000, "Member 'MessageLineWidget_C_SetDefaultColor::DefaultColor' has a wrong offset!");
static_assert(offsetof(MessageLineWidget_C_SetDefaultColor, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'MessageLineWidget_C_SetDefaultColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

