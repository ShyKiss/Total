#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NightVision_Goggle_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass NightVision_Goggle_AnimBP.NightVision_Goggle_AnimBP_C
// 0x0350 (0x0610 - 0x02C0)
class UNightVision_Goggle_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0320(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x0348(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x0398(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x03E8(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0490(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x04C0(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0510(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0540(0x00B0)()
	class ARBPlayer_BP_C*                         Player;                                            // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NVAnimTime;                                        // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      AnimSequence;                                      // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMoving;                                           // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsDown;                                           // 0x0609(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShadowMesh;                                       // 0x060A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_NightVision_Goggle_AnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintBeginPlay();
	void CachePlayer();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NightVision_Goggle_AnimBP_C">();
	}
	static class UNightVision_Goggle_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNightVision_Goggle_AnimBP_C>();
	}
};
static_assert(alignof(UNightVision_Goggle_AnimBP_C) == 0x000010, "Wrong alignment on UNightVision_Goggle_AnimBP_C");
static_assert(sizeof(UNightVision_Goggle_AnimBP_C) == 0x000610, "Wrong size on UNightVision_Goggle_AnimBP_C");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UNightVision_Goggle_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x0002F8, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000320, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_SequenceEvaluator_2) == 0x000348, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_SequenceEvaluator_1) == 0x000398, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x0003E8, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000490, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_SequenceEvaluator) == 0x0004C0, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_StateResult) == 0x000510, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimGraphNode_StateMachine) == 0x000540, "Member 'UNightVision_Goggle_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, Player) == 0x0005F0, "Member 'UNightVision_Goggle_AnimBP_C::Player' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, NVAnimTime) == 0x0005F8, "Member 'UNightVision_Goggle_AnimBP_C::NVAnimTime' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, AnimSequence) == 0x000600, "Member 'UNightVision_Goggle_AnimBP_C::AnimSequence' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, bMoving) == 0x000608, "Member 'UNightVision_Goggle_AnimBP_C::bMoving' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, bIsDown) == 0x000609, "Member 'UNightVision_Goggle_AnimBP_C::bIsDown' has a wrong offset!");
static_assert(offsetof(UNightVision_Goggle_AnimBP_C, bShadowMesh) == 0x00060A, "Member 'UNightVision_Goggle_AnimBP_C::bShadowMesh' has a wrong offset!");

}

