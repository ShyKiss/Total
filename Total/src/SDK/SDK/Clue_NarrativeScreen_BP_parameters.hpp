#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Clue_NarrativeScreen_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "OPP_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.GetStateName
// 0x0028 (0x0028 - 0x0000)
struct Clue_NarrativeScreen_BP_C_GetStateName final
{
public:
	class FString                                 StateA;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StateB;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_GetStateName) == 0x000008, "Wrong alignment on Clue_NarrativeScreen_BP_C_GetStateName");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_GetStateName) == 0x000028, "Wrong size on Clue_NarrativeScreen_BP_C_GetStateName");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetStateName, StateA) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_GetStateName::StateA' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetStateName, StateB) == 0x000010, "Member 'Clue_NarrativeScreen_BP_C_GetStateName::StateB' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetStateName, ReturnValue) == 0x000020, "Member 'Clue_NarrativeScreen_BP_C_GetStateName::ReturnValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.GetAssociatedInvestigationComponent
// 0x0008 (0x0008 - 0x0000)
struct Clue_NarrativeScreen_BP_C_GetAssociatedInvestigationComponent final
{
public:
	class URBPlayerInvestigationZoneComponent*    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_GetAssociatedInvestigationComponent) == 0x000008, "Wrong alignment on Clue_NarrativeScreen_BP_C_GetAssociatedInvestigationComponent");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_GetAssociatedInvestigationComponent) == 0x000008, "Wrong size on Clue_NarrativeScreen_BP_C_GetAssociatedInvestigationComponent");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetAssociatedInvestigationComponent, ReturnValue) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_GetAssociatedInvestigationComponent::ReturnValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.GetClue
// 0x0010 (0x0010 - 0x0000)
struct Clue_NarrativeScreen_BP_C_GetClue final
{
public:
	struct FClueData                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor)
	struct FClueData                              CallFunc_GetCluePure_Clue;                         // 0x0008(0x0008)(NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_GetClue) == 0x000004, "Wrong alignment on Clue_NarrativeScreen_BP_C_GetClue");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_GetClue) == 0x000010, "Wrong size on Clue_NarrativeScreen_BP_C_GetClue");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetClue, ReturnValue) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_GetClue::ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetClue, CallFunc_GetCluePure_Clue) == 0x000008, "Member 'Clue_NarrativeScreen_BP_C_GetClue::CallFunc_GetCluePure_Clue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.PrepareState
// 0x0010 (0x0010 - 0x0000)
struct Clue_NarrativeScreen_BP_C_PrepareState final
{
public:
	bool                                          bStateA;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 RandomOwner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_PrepareState) == 0x000008, "Wrong alignment on Clue_NarrativeScreen_BP_C_PrepareState");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_PrepareState) == 0x000010, "Wrong size on Clue_NarrativeScreen_BP_C_PrepareState");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_PrepareState, bStateA) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_PrepareState::bStateA' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_PrepareState, RandomOwner) == 0x000008, "Member 'Clue_NarrativeScreen_BP_C_PrepareState::RandomOwner' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.SetClue
// 0x0008 (0x0008 - 0x0000)
struct Clue_NarrativeScreen_BP_C_SetClue final
{
public:
	struct FClueData                              ClueData;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_SetClue) == 0x000004, "Wrong alignment on Clue_NarrativeScreen_BP_C_SetClue");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_SetClue) == 0x000008, "Wrong size on Clue_NarrativeScreen_BP_C_SetClue");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_SetClue, ClueData) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_SetClue::ClueData' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.SetShouldBeIgnoredForLots
// 0x0001 (0x0001 - 0x0000)
struct Clue_NarrativeScreen_BP_C_SetShouldBeIgnoredForLots final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_SetShouldBeIgnoredForLots) == 0x000001, "Wrong alignment on Clue_NarrativeScreen_BP_C_SetShouldBeIgnoredForLots");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_SetShouldBeIgnoredForLots) == 0x000001, "Wrong size on Clue_NarrativeScreen_BP_C_SetShouldBeIgnoredForLots");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_SetShouldBeIgnoredForLots, bValue) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_SetShouldBeIgnoredForLots::bValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct Clue_NarrativeScreen_BP_C_SetState final
{
public:
	bool                                          bStateA;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_SetState) == 0x000001, "Wrong alignment on Clue_NarrativeScreen_BP_C_SetState");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_SetState) == 0x000001, "Wrong size on Clue_NarrativeScreen_BP_C_SetState");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_SetState, bStateA) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_SetState::bStateA' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.ExecuteUbergraph_Clue_NarrativeScreen_BP
// 0x0020 (0x0020 - 0x0000)
struct Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bStateA;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bStateA_1;                            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_randomOwner;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClueData                              K2Node_Event_clueData;                             // 0x0010(0x0008)(ConstParm, NoDestructor)
	bool                                          K2Node_Event_bValue;                               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP) == 0x000008, "Wrong alignment on Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP) == 0x000020, "Wrong size on Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP, EntryPoint) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP, K2Node_Event_bStateA) == 0x000004, "Member 'Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP::K2Node_Event_bStateA' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP, K2Node_Event_bStateA_1) == 0x000005, "Member 'Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP::K2Node_Event_bStateA_1' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP, K2Node_Event_randomOwner) == 0x000008, "Member 'Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP::K2Node_Event_randomOwner' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP, K2Node_Event_clueData) == 0x000010, "Member 'Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP::K2Node_Event_clueData' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP, K2Node_Event_bValue) == 0x000018, "Member 'Clue_NarrativeScreen_BP_C_ExecuteUbergraph_Clue_NarrativeScreen_BP::K2Node_Event_bValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.ShouldPingFollowActor
// 0x0002 (0x0002 - 0x0000)
struct Clue_NarrativeScreen_BP_C_ShouldPingFollowActor final
{
public:
	bool                                          OutShouldFollow;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_ShouldPingFollowActor) == 0x000001, "Wrong alignment on Clue_NarrativeScreen_BP_C_ShouldPingFollowActor");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_ShouldPingFollowActor) == 0x000002, "Wrong size on Clue_NarrativeScreen_BP_C_ShouldPingFollowActor");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ShouldPingFollowActor, OutShouldFollow) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_ShouldPingFollowActor::OutShouldFollow' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ShouldPingFollowActor, ReturnValue) == 0x000001, "Member 'Clue_NarrativeScreen_BP_C_ShouldPingFollowActor::ReturnValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.GetPingEnabled
// 0x0098 (0x0098 - 0x0000)
struct Clue_NarrativeScreen_BP_C_GetPingEnabled final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          OutIsEnabled;                                      // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0091(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_GetPingEnabled) == 0x000008, "Wrong alignment on Clue_NarrativeScreen_BP_C_GetPingEnabled");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_GetPingEnabled) == 0x000098, "Wrong size on Clue_NarrativeScreen_BP_C_GetPingEnabled");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPingEnabled, PingOwner) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_GetPingEnabled::PingOwner' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPingEnabled, HitResult) == 0x000008, "Member 'Clue_NarrativeScreen_BP_C_GetPingEnabled::HitResult' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPingEnabled, OutIsEnabled) == 0x000090, "Member 'Clue_NarrativeScreen_BP_C_GetPingEnabled::OutIsEnabled' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPingEnabled, ReturnValue) == 0x000091, "Member 'Clue_NarrativeScreen_BP_C_GetPingEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPingEnabled, CallFunc_IsValid_ReturnValue) == 0x000092, "Member 'Clue_NarrativeScreen_BP_C_GetPingEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.GetPingItemName
// 0x0020 (0x0020 - 0x0000)
struct Clue_NarrativeScreen_BP_C_GetPingItemName final
{
public:
	class FText                                   OutName;                                           // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_GetPingItemName) == 0x000008, "Wrong alignment on Clue_NarrativeScreen_BP_C_GetPingItemName");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_GetPingItemName) == 0x000020, "Wrong size on Clue_NarrativeScreen_BP_C_GetPingItemName");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPingItemName, OutName) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_GetPingItemName::OutName' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPingItemName, ReturnValue) == 0x000018, "Member 'Clue_NarrativeScreen_BP_C_GetPingItemName::ReturnValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.GetPlayerPingData
// 0x0228 (0x0228 - 0x0000)
struct Clue_NarrativeScreen_BP_C_GetPlayerPingData final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FPlayerPingData                        OutData;                                           // 0x0090(0x0030)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ClueIcon;                                          // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ClueName;                                          // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetClueTextFromName_ClueText;             // 0x00D8(0x0018)()
	struct FSlateBrush                            CallFunc_GetClueObjectiveIconFromName_ClueObjectiveIcon; // 0x00F0(0x0088)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClueData                              CallFunc_GetCluePure_Clue;                         // 0x01B4(0x0008)(NoDestructor)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01E0(0x0018)()
	struct FPlayerPingData                        K2Node_MakeStruct_PlayerPingData;                  // 0x01F8(0x0030)()
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_GetPlayerPingData) == 0x000008, "Wrong alignment on Clue_NarrativeScreen_BP_C_GetPlayerPingData");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_GetPlayerPingData) == 0x000228, "Wrong size on Clue_NarrativeScreen_BP_C_GetPlayerPingData");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, PingOwner) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::PingOwner' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, HitResult) == 0x000008, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::HitResult' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, OutData) == 0x000090, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::OutData' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, ReturnValue) == 0x0000C0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, ClueIcon) == 0x0000C8, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::ClueIcon' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, ClueName) == 0x0000D0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::ClueName' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_GetClueTextFromName_ClueText) == 0x0000D8, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_GetClueTextFromName_ClueText' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_GetClueObjectiveIconFromName_ClueObjectiveIcon) == 0x0000F0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_GetClueObjectiveIconFromName_ClueObjectiveIcon' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_Conv_TextToString_ReturnValue) == 0x000178, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_FindSubstring_ReturnValue) == 0x000188, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, K2Node_DynamicCast_AsTexture_2D) == 0x000190, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_Subtract_IntInt_ReturnValue) == 0x00019C, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_Left_ReturnValue) == 0x0001A0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_TextIsEmpty_ReturnValue) == 0x0001B0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_GetCluePure_Clue) == 0x0001B4, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_GetCluePure_Clue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0001C0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_Replace_ReturnValue) == 0x0001D0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, CallFunc_Conv_StringToText_ReturnValue) == 0x0001E0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingData, K2Node_MakeStruct_PlayerPingData) == 0x0001F8, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingData::K2Node_MakeStruct_PlayerPingData' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.GetPlayerPingWorldLocation
// 0x0120 (0x0120 - 0x0000)
struct Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                OutLocation;                                       // 0x0090(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x009C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F[0x1];                                       // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation) == 0x000008, "Wrong alignment on Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation) == 0x000120, "Wrong size on Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, PingOwner) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::PingOwner' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, HitResult) == 0x000008, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::HitResult' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, OutLocation) == 0x000090, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::OutLocation' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, ReturnValue) == 0x00009C, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x00009D, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x00009E, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_Time) == 0x0000A0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_Distance) == 0x0000A4, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_Location) == 0x0000A8, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B4, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_Normal) == 0x0000C0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x0000CC, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_ElementIndex) == 0x0000FC, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000100, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_TraceStart) == 0x000104, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000110, "Member 'Clue_NarrativeScreen_BP_C_GetPlayerPingWorldLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.IsRandomStateSet
// 0x0001 (0x0001 - 0x0000)
struct Clue_NarrativeScreen_BP_C_IsRandomStateSet final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_IsRandomStateSet) == 0x000001, "Wrong alignment on Clue_NarrativeScreen_BP_C_IsRandomStateSet");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_IsRandomStateSet) == 0x000001, "Wrong size on Clue_NarrativeScreen_BP_C_IsRandomStateSet");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_IsRandomStateSet, ReturnValue) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_IsRandomStateSet::ReturnValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.IsStateA
// 0x0002 (0x0002 - 0x0000)
struct Clue_NarrativeScreen_BP_C_IsStateA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsStateA_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_IsStateA) == 0x000001, "Wrong alignment on Clue_NarrativeScreen_BP_C_IsStateA");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_IsStateA) == 0x000002, "Wrong size on Clue_NarrativeScreen_BP_C_IsStateA");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_IsStateA, ReturnValue) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_IsStateA::ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_IsStateA, CallFunc_BP_IsStateA_ReturnValue) == 0x000001, "Member 'Clue_NarrativeScreen_BP_C_IsStateA::CallFunc_BP_IsStateA_ReturnValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.ShouldBeIgnoredForLots
// 0x0002 (0x0002 - 0x0000)
struct Clue_NarrativeScreen_BP_C_ShouldBeIgnoredForLots final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_ShouldBeIgnoredForLots) == 0x000001, "Wrong alignment on Clue_NarrativeScreen_BP_C_ShouldBeIgnoredForLots");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_ShouldBeIgnoredForLots) == 0x000002, "Wrong size on Clue_NarrativeScreen_BP_C_ShouldBeIgnoredForLots");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ShouldBeIgnoredForLots, ReturnValue) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_ShouldBeIgnoredForLots::ReturnValue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_ShouldBeIgnoredForLots, CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue) == 0x000001, "Member 'Clue_NarrativeScreen_BP_C_ShouldBeIgnoredForLots::CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue' has a wrong offset!");

// Function Clue_NarrativeScreen_BP.Clue_NarrativeScreen_BP_C.GetCluePure
// 0x0030 (0x0030 - 0x0000)
struct Clue_NarrativeScreen_BP_C_GetCluePure final
{
public:
	struct FClueData                              Clue;                                              // 0x0000(0x0008)(Parm, OutParm, NoDestructor)
	class AClue_TvChannel_BP_C*                   K2Node_DynamicCast_AsClue_Tv_Channel_BP;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRBClueable>           CallFunc_GetClue_self_CastInput;                   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FClueData                              CallFunc_GetClue_ReturnValue;                      // 0x0028(0x0008)(NoDestructor)
};
static_assert(alignof(Clue_NarrativeScreen_BP_C_GetCluePure) == 0x000008, "Wrong alignment on Clue_NarrativeScreen_BP_C_GetCluePure");
static_assert(sizeof(Clue_NarrativeScreen_BP_C_GetCluePure) == 0x000030, "Wrong size on Clue_NarrativeScreen_BP_C_GetCluePure");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetCluePure, Clue) == 0x000000, "Member 'Clue_NarrativeScreen_BP_C_GetCluePure::Clue' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetCluePure, K2Node_DynamicCast_AsClue_Tv_Channel_BP) == 0x000008, "Member 'Clue_NarrativeScreen_BP_C_GetCluePure::K2Node_DynamicCast_AsClue_Tv_Channel_BP' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetCluePure, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Clue_NarrativeScreen_BP_C_GetCluePure::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetCluePure, CallFunc_GetClue_self_CastInput) == 0x000018, "Member 'Clue_NarrativeScreen_BP_C_GetCluePure::CallFunc_GetClue_self_CastInput' has a wrong offset!");
static_assert(offsetof(Clue_NarrativeScreen_BP_C_GetCluePure, CallFunc_GetClue_ReturnValue) == 0x000028, "Member 'Clue_NarrativeScreen_BP_C_GetCluePure::CallFunc_GetClue_ReturnValue' has a wrong offset!");

}

