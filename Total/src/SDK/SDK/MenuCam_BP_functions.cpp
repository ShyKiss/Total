#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuCam_BP

#include "Basic.hpp"

#include "MenuCam_BP_classes.hpp"
#include "MenuCam_BP_parameters.hpp"


namespace SDK
{

// Function MenuCam_BP.MenuCam_BP_C.InitPageMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PageIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMenuCam_BP_C::InitPageMaterial(int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "InitPageMaterial");

	Params::MenuCam_BP_C_InitPageMaterial Parms{};

	Parms.PageIndex = PageIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MenuCam_BP.MenuCam_BP_C.StopCycleSound
// (Public, BlueprintCallable, BlueprintEvent)

void AMenuCam_BP_C::StopCycleSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "StopCycleSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.PlayCycleSound
// (Public, BlueprintCallable, BlueprintEvent)

void AMenuCam_BP_C::PlayCycleSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "PlayCycleSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.SetTickEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMenuCam_BP_C::SetTickEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "SetTickEnabled");

	Params::MenuCam_BP_C_SetTickEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MenuCam_BP.MenuCam_BP_C.Clean
// (Public, BlueprintCallable, BlueprintEvent)

void AMenuCam_BP_C::Clean()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "Clean");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.UpdateMaterialWithRenderTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PageId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMenuCam_BP_C::UpdateMaterialWithRenderTarget(int32 PageId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "UpdateMaterialWithRenderTarget");

	Params::MenuCam_BP_C_UpdateMaterialWithRenderTarget Parms{};

	Parms.PageId = PageId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MenuCam_BP.MenuCam_BP_C.UpdateScene
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FovTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FovAnim_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FovAdd                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InRot                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Base2                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMenuCam_BP_C::UpdateScene(float FovTarget, float FovAnim_, float FovAdd, const struct FRotator& InRot, const struct FVector& Base2, const struct FVector& InVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "UpdateScene");

	Params::MenuCam_BP_C_UpdateScene Parms{};

	Parms.FovTarget = FovTarget;
	Parms.FovAnim_ = FovAnim_;
	Parms.FovAdd = FovAdd;
	Parms.InRot = std::move(InRot);
	Parms.Base2 = std::move(Base2);
	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MenuCam_BP.MenuCam_BP_C.CyclePage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CycleRight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMenuCam_BP_C::CyclePage(bool CycleRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "CyclePage");

	Params::MenuCam_BP_C_CyclePage Parms{};

	Parms.CycleRight = CycleRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MenuCam_BP.MenuCam_BP_C.Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMenuCam_BP_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.ApplyMaterialToUsedPages
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PagesUsed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMenuCam_BP_C::ApplyMaterialToUsedPages(int32 PagesUsed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "ApplyMaterialToUsedPages");

	Params::MenuCam_BP_C_ApplyMaterialToUsedPages Parms{};

	Parms.PagesUsed = PagesUsed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MenuCam_BP.MenuCam_BP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMenuCam_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.BlendCameraTimeline__FinishedFunc
// (BlueprintEvent)

void AMenuCam_BP_C::BlendCameraTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "BlendCameraTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.BlendCameraTimeline__UpdateFunc
// (BlueprintEvent)

void AMenuCam_BP_C::BlendCameraTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "BlendCameraTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void AMenuCam_BP_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void AMenuCam_BP_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.BlendCameraPosition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         TargetRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TargetFOV                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMenuCam_BP_C::BlendCameraPosition(const struct FRotator& TargetRotation, float TargetFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "BlendCameraPosition");

	Params::MenuCam_BP_C_BlendCameraPosition Parms{};

	Parms.TargetRotation = std::move(TargetRotation);
	Parms.TargetFOV = TargetFOV;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MenuCam_BP.MenuCam_BP_C.SelectMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MenuID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMenuCam_BP_C::SelectMenu(int32 MenuID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "SelectMenu");

	Params::MenuCam_BP_C_SelectMenu Parms{};

	Parms.MenuID = MenuID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MenuCam_BP.MenuCam_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMenuCam_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "ReceiveTick");

	Params::MenuCam_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MenuCam_BP.MenuCam_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMenuCam_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MenuCam_BP.MenuCam_BP_C.ExecuteUbergraph_MenuCam_BP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMenuCam_BP_C::ExecuteUbergraph_MenuCam_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuCam_BP_C", "ExecuteUbergraph_MenuCam_BP");

	Params::MenuCam_BP_C_ExecuteUbergraph_MenuCam_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

