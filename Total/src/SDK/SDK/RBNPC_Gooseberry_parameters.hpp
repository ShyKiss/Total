#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBNPC_Gooseberry

#include "Basic.hpp"


namespace SDK::Params
{

// Function RBNPC_Gooseberry.RBNPC_Gooseberry_C.ExecuteUbergraph_RBNPC_Gooseberry
// 0x0014 (0x0014 - 0x0000)
struct RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTime_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry) == 0x000004, "Wrong alignment on RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry");
static_assert(sizeof(RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry) == 0x000014, "Wrong size on RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry");
static_assert(offsetof(RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry, EntryPoint) == 0x000000, "Member 'RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry::EntryPoint' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry, CallFunc_GetGameTime_ReturnValue) == 0x00000C, "Member 'RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry::CallFunc_GetGameTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'RBNPC_Gooseberry_C_ExecuteUbergraph_RBNPC_Gooseberry::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function RBNPC_Gooseberry.RBNPC_Gooseberry_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct RBNPC_Gooseberry_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBNPC_Gooseberry_C_ReceiveTick) == 0x000004, "Wrong alignment on RBNPC_Gooseberry_C_ReceiveTick");
static_assert(sizeof(RBNPC_Gooseberry_C_ReceiveTick) == 0x000004, "Wrong size on RBNPC_Gooseberry_C_ReceiveTick");
static_assert(offsetof(RBNPC_Gooseberry_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'RBNPC_Gooseberry_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function RBNPC_Gooseberry.RBNPC_Gooseberry_C.TryPlayFacialAnim
// 0x0040 (0x0040 - 0x0000)
struct RBNPC_Gooseberry_C_TryPlayFacialAnim final
{
public:
	class FString                                 LineId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPlayFacialAnim_Pawn_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetFaceFXSkeletalMeshComponent_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemyFace_AnimBlueprint_C*             K2Node_DynamicCast_AsEnemy_Face_Anim_Blueprint;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBNPC_Gooseberry_C_TryPlayFacialAnim) == 0x000008, "Wrong alignment on RBNPC_Gooseberry_C_TryPlayFacialAnim");
static_assert(sizeof(RBNPC_Gooseberry_C_TryPlayFacialAnim) == 0x000040, "Wrong size on RBNPC_Gooseberry_C_TryPlayFacialAnim");
static_assert(offsetof(RBNPC_Gooseberry_C_TryPlayFacialAnim, LineId) == 0x000000, "Member 'RBNPC_Gooseberry_C_TryPlayFacialAnim::LineId' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_TryPlayFacialAnim, ReturnValue) == 0x000010, "Member 'RBNPC_Gooseberry_C_TryPlayFacialAnim::ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_TryPlayFacialAnim, CallFunc_TryPlayFacialAnim_Pawn_ReturnValue) == 0x000011, "Member 'RBNPC_Gooseberry_C_TryPlayFacialAnim::CallFunc_TryPlayFacialAnim_Pawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_TryPlayFacialAnim, CallFunc_Contains_ReturnValue) == 0x000012, "Member 'RBNPC_Gooseberry_C_TryPlayFacialAnim::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_TryPlayFacialAnim, CallFunc_GetFaceFXSkeletalMeshComponent_ReturnValue) == 0x000018, "Member 'RBNPC_Gooseberry_C_TryPlayFacialAnim::CallFunc_GetFaceFXSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_TryPlayFacialAnim, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'RBNPC_Gooseberry_C_TryPlayFacialAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_TryPlayFacialAnim, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'RBNPC_Gooseberry_C_TryPlayFacialAnim::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_TryPlayFacialAnim, K2Node_DynamicCast_AsEnemy_Face_Anim_Blueprint) == 0x000030, "Member 'RBNPC_Gooseberry_C_TryPlayFacialAnim::K2Node_DynamicCast_AsEnemy_Face_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_TryPlayFacialAnim, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'RBNPC_Gooseberry_C_TryPlayFacialAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RBNPC_Gooseberry.RBNPC_Gooseberry_C.GetFacePoseAsset
// 0x0008 (0x0008 - 0x0000)
struct RBNPC_Gooseberry_C_GetFacePoseAsset final
{
public:
	class UPoseAsset*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBNPC_Gooseberry_C_GetFacePoseAsset) == 0x000008, "Wrong alignment on RBNPC_Gooseberry_C_GetFacePoseAsset");
static_assert(sizeof(RBNPC_Gooseberry_C_GetFacePoseAsset) == 0x000008, "Wrong size on RBNPC_Gooseberry_C_GetFacePoseAsset");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFacePoseAsset, ReturnValue) == 0x000000, "Member 'RBNPC_Gooseberry_C_GetFacePoseAsset::ReturnValue' has a wrong offset!");

// Function RBNPC_Gooseberry.RBNPC_Gooseberry_C.GetFaceAnimBP
// 0x0020 (0x0020 - 0x0000)
struct RBNPC_Gooseberry_C_GetFaceAnimBP final
{
public:
	class UEnemyFace_AnimBlueprint_C*             EnemyFaceAnimBP;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemyFace_AnimBlueprint_C*             K2Node_DynamicCast_AsEnemy_Face_Anim_Blueprint;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBNPC_Gooseberry_C_GetFaceAnimBP) == 0x000008, "Wrong alignment on RBNPC_Gooseberry_C_GetFaceAnimBP");
static_assert(sizeof(RBNPC_Gooseberry_C_GetFaceAnimBP) == 0x000020, "Wrong size on RBNPC_Gooseberry_C_GetFaceAnimBP");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceAnimBP, EnemyFaceAnimBP) == 0x000000, "Member 'RBNPC_Gooseberry_C_GetFaceAnimBP::EnemyFaceAnimBP' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceAnimBP, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'RBNPC_Gooseberry_C_GetFaceAnimBP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceAnimBP, K2Node_DynamicCast_AsEnemy_Face_Anim_Blueprint) == 0x000010, "Member 'RBNPC_Gooseberry_C_GetFaceAnimBP::K2Node_DynamicCast_AsEnemy_Face_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceAnimBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'RBNPC_Gooseberry_C_GetFaceAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RBNPC_Gooseberry.RBNPC_Gooseberry_C.SetFuttermanDrillValue
// 0x0020 (0x0020 - 0x0000)
struct RBNPC_Gooseberry_C_SetFuttermanDrillValue final
{
public:
	bool                                          DrillValue;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DrillManual;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFutterman_Skeleton_AnimBlueprint_C*    K2Node_DynamicCast_AsFutterman_Skeleton_Anim_Blueprint; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBNPC_Gooseberry_C_SetFuttermanDrillValue) == 0x000008, "Wrong alignment on RBNPC_Gooseberry_C_SetFuttermanDrillValue");
static_assert(sizeof(RBNPC_Gooseberry_C_SetFuttermanDrillValue) == 0x000020, "Wrong size on RBNPC_Gooseberry_C_SetFuttermanDrillValue");
static_assert(offsetof(RBNPC_Gooseberry_C_SetFuttermanDrillValue, DrillValue) == 0x000000, "Member 'RBNPC_Gooseberry_C_SetFuttermanDrillValue::DrillValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_SetFuttermanDrillValue, DrillManual) == 0x000001, "Member 'RBNPC_Gooseberry_C_SetFuttermanDrillValue::DrillManual' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_SetFuttermanDrillValue, Success) == 0x000002, "Member 'RBNPC_Gooseberry_C_SetFuttermanDrillValue::Success' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_SetFuttermanDrillValue, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'RBNPC_Gooseberry_C_SetFuttermanDrillValue::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_SetFuttermanDrillValue, K2Node_DynamicCast_AsFutterman_Skeleton_Anim_Blueprint) == 0x000010, "Member 'RBNPC_Gooseberry_C_SetFuttermanDrillValue::K2Node_DynamicCast_AsFutterman_Skeleton_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_SetFuttermanDrillValue, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'RBNPC_Gooseberry_C_SetFuttermanDrillValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RBNPC_Gooseberry.RBNPC_Gooseberry_C.GetFaceFXSkeletalMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponent final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponent) == 0x000008, "Wrong alignment on RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponent");
static_assert(sizeof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponent) == 0x000008, "Wrong size on RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponent");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponent, ReturnValue) == 0x000000, "Member 'RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponent::ReturnValue' has a wrong offset!");

// Function RBNPC_Gooseberry.RBNPC_Gooseberry_C.GetFaceFXSkeletalMeshComponentWithLineId
// 0x0028 (0x0028 - 0x0000)
struct RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId final
{
public:
	class FString                                 LineId;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId) == 0x000008, "Wrong alignment on RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId");
static_assert(sizeof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId) == 0x000028, "Wrong size on RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId, LineId) == 0x000000, "Member 'RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId::LineId' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId, ReturnValue) == 0x000010, "Member 'RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId::ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId, Temp_bool_Variable) == 0x000018, "Member 'RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId, CallFunc_Contains_ReturnValue) == 0x000019, "Member 'RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId, K2Node_Select_Default) == 0x000020, "Member 'RBNPC_Gooseberry_C_GetFaceFXSkeletalMeshComponentWithLineId::K2Node_Select_Default' has a wrong offset!");

}

