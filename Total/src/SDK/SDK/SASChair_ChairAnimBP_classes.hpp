#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SASChair_ChairAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SASChair_ChairAnimBP.SASChair_ChairAnimBP_C
// 0x0F10 (0x11D0 - 0x02C0)
class USASChair_ChairAnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x04B0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x04D8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0558(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x05D8(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0680(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x06B0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0730(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x07B0(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0858(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0888(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0908(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0938(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x09B8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x09E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0A68(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0A98(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0B18(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0B48(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0BC8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0BF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0C78(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0CF8(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0DA0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0DD0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E50(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0ED0(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0F78(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0FA8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1028(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1058(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x10D8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1108(0x00B0)()
	bool                                          ShouldFaceTV;                                      // 0x11B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTurning;                                         // 0x11B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InvertedAngle;                                     // 0x11BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFacingTV;                                        // 0x11BB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TurnAngle;                                         // 0x11BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPlayerSitting;                                  // 0x11C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInChairIdle;                                     // 0x11C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInChairReady;                                    // 0x11C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void Is_Chair_Done_Rotating(bool* Value);
	void SetShouldFaceTV(bool Value);
	void AnimNotify_OnIdle();
	void AnimNotify_OnFacingTV();
	void AnimNotify_OnExitIdle();
	void AnimNotify_OnReady();
	void AnimNotify_OnExitReady();
	void ExecuteUbergraph_SASChair_ChairAnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SASChair_ChairAnimBP_C">();
	}
	static class USASChair_ChairAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USASChair_ChairAnimBP_C>();
	}
};
static_assert(alignof(USASChair_ChairAnimBP_C) == 0x000010, "Wrong alignment on USASChair_ChairAnimBP_C");
static_assert(sizeof(USASChair_ChairAnimBP_C) == 0x0011D0, "Wrong size on USASChair_ChairAnimBP_C");
static_assert(offsetof(USASChair_ChairAnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'USASChair_ChairAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_11) == 0x0002F8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000320, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000348, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000370, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000398, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x0003C0, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0003E8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000410, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000438, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000460, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000488, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_TransitionResult) == 0x0004B0, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_14) == 0x0004D8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_13) == 0x000558, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x0005D8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_10) == 0x000680, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_12) == 0x0006B0, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x000730, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x0007B0, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_9) == 0x000858, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x000888, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_8) == 0x000908, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x000938, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_7) == 0x0009B8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x0009E8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_6) == 0x000A68, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000A98, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_5) == 0x000B18, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000B48, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_4) == 0x000BC8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000BF8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000C78, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000CF8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_3) == 0x000DA0, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000DD0, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000E50, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_BlendListByBool) == 0x000ED0, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_2) == 0x000F78, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000FA8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult_1) == 0x001028, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_SequencePlayer) == 0x001058, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateResult) == 0x0010D8, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, AnimGraphNode_StateMachine) == 0x001108, "Member 'USASChair_ChairAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, ShouldFaceTV) == 0x0011B8, "Member 'USASChair_ChairAnimBP_C::ShouldFaceTV' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, IsTurning) == 0x0011B9, "Member 'USASChair_ChairAnimBP_C::IsTurning' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, InvertedAngle) == 0x0011BA, "Member 'USASChair_ChairAnimBP_C::InvertedAngle' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, IsFacingTV) == 0x0011BB, "Member 'USASChair_ChairAnimBP_C::IsFacingTV' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, TurnAngle) == 0x0011BC, "Member 'USASChair_ChairAnimBP_C::TurnAngle' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, HasPlayerSitting) == 0x0011C0, "Member 'USASChair_ChairAnimBP_C::HasPlayerSitting' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, IsInChairIdle) == 0x0011C1, "Member 'USASChair_ChairAnimBP_C::IsInChairIdle' has a wrong offset!");
static_assert(offsetof(USASChair_ChairAnimBP_C, IsInChairReady) == 0x0011C2, "Member 'USASChair_ChairAnimBP_C::IsInChairReady' has a wrong offset!");

}

