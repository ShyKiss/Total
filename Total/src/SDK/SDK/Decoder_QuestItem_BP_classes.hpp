#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Decoder_QuestItem_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Decoder_QuestItem_BP.Decoder_QuestItem_BP_C
// 0x00C0 (0x0D50 - 0x0C90)
class ADecoder_QuestItem_BP_C final : public ARBDecoderItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MurkoffDevice_DecoderMinus01;                      // 0x0C98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   FlipNumber_ChildMinus001;                          // 0x0CA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   FlipNumber_ChildMinus010;                          // 0x0CA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   FlipNumber_ChildMinus100;                          // 0x0CB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPingComponent*                       RBPing;                                            // 0x0CB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScapegoatDevice_TriggerMinus01;                    // 0x0CC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0CC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBObjectiveActorComponent*             RBObjectiveActor;                                  // 0x0CD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   InWorldMesh;                                       // 0x0CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBRandomizableHelperComponent*         RBRandomizableHelper;                              // 0x0CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonPressed_ButtonAngle_3C0488D045DB828BEA77EFA71BBFEDF8; // 0x0CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ButtonPressed__Direction_3C0488D045DB828BEA77EFA71BBFEDF8; // 0x0CEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CED[0x3];                                      // 0x0CED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ButtonPressed;                                     // 0x0CF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventButtonPressed;                              // 0x0CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkEventButtonRelease;                              // 0x0D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlipNumberCountDownMinus01_BP_C*       FlipNumberMinus100;                                // 0x0D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlipNumberCountDownMinus01_BP_C*       FlipNumberMinus010;                                // 0x0D10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlipNumberCountDownMinus01_BP_C*       FlipNumberMinus001;                                // 0x0D18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          FlipSFXStart;                                      // 0x0D20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          FilSFXStop;                                        // 0x0D28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCurrentlyLoopingSFX;                              // 0x0D30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D31[0x3];                                      // 0x0D31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentLoopingRTPC;                                // 0x0D34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          FirstNumberDecodedFlipAudioEvent;                  // 0x0D38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          SecondNumberDecodedFlipAudioEvent;                 // 0x0D40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ThirdNumberDecodedFlipAudioEvent;                  // 0x0D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool GetStateName(class FString* StateA, class FString* StateB);
	void FlipToCode(class AFlipNumberCountDownMinus01_BP_C* FlipNumber, int32 Int);
	void OnFlipCompleted(class AActor* FlipNumberCounter);
	void RefreshRTPCState();
	void GetDesiredRTPCValue(float* Value);
	void UpdateSound();
	void OnFlipNumber();
	void SetCode(bool One00, bool Zero10, bool Zero01, bool bInfiniteFlipElse, class UObject* DecodableObject);
	void RefreshVisualState();
	void UserConstructionScript();
	void ButtonPressed__FinishedFunc();
	void ButtonPressed__UpdateFunc();
	void PrepareState(bool bStateA, class AActor* RandomOwner);
	void SetShouldBeIgnoredForLots(bool bValue);
	void SetState(bool bStateA);
	void BP_OnHoldStateChanged();
	void BP_OnProximityLevelChanged();
	void ReceiveBeginPlay();
	void OnFlipNumberMinus100();
	void OnFlipNumberMinus010();
	void OnFlipNumberMinus001();
	void BP_OnClosestDecodableChanged();
	void OnFlipCompletedMinus100();
	void OnFlipCompletedMinus010();
	void OnFlipCompletedMinus001();
	void Event_OnItemHeldInHandChanged(bool bHeldInHand);
	void ExecuteUbergraph_Decoder_QuestItem_BP(int32 EntryPoint);

	bool IsRandomStateSet() const;
	bool IsStateA() const;
	bool ShouldBeIgnoredForLots() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Decoder_QuestItem_BP_C">();
	}
	static class ADecoder_QuestItem_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADecoder_QuestItem_BP_C>();
	}
};
static_assert(alignof(ADecoder_QuestItem_BP_C) == 0x000010, "Wrong alignment on ADecoder_QuestItem_BP_C");
static_assert(sizeof(ADecoder_QuestItem_BP_C) == 0x000D50, "Wrong size on ADecoder_QuestItem_BP_C");
static_assert(offsetof(ADecoder_QuestItem_BP_C, UberGraphFrame) == 0x000C90, "Member 'ADecoder_QuestItem_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, MurkoffDevice_DecoderMinus01) == 0x000C98, "Member 'ADecoder_QuestItem_BP_C::MurkoffDevice_DecoderMinus01' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, FlipNumber_ChildMinus001) == 0x000CA0, "Member 'ADecoder_QuestItem_BP_C::FlipNumber_ChildMinus001' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, FlipNumber_ChildMinus010) == 0x000CA8, "Member 'ADecoder_QuestItem_BP_C::FlipNumber_ChildMinus010' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, FlipNumber_ChildMinus100) == 0x000CB0, "Member 'ADecoder_QuestItem_BP_C::FlipNumber_ChildMinus100' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, RBPing) == 0x000CB8, "Member 'ADecoder_QuestItem_BP_C::RBPing' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, ScapegoatDevice_TriggerMinus01) == 0x000CC0, "Member 'ADecoder_QuestItem_BP_C::ScapegoatDevice_TriggerMinus01' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, RBSound) == 0x000CC8, "Member 'ADecoder_QuestItem_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, RBObjectiveActor) == 0x000CD0, "Member 'ADecoder_QuestItem_BP_C::RBObjectiveActor' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, InWorldMesh) == 0x000CD8, "Member 'ADecoder_QuestItem_BP_C::InWorldMesh' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, RBRandomizableHelper) == 0x000CE0, "Member 'ADecoder_QuestItem_BP_C::RBRandomizableHelper' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, ButtonPressed_ButtonAngle_3C0488D045DB828BEA77EFA71BBFEDF8) == 0x000CE8, "Member 'ADecoder_QuestItem_BP_C::ButtonPressed_ButtonAngle_3C0488D045DB828BEA77EFA71BBFEDF8' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, ButtonPressed__Direction_3C0488D045DB828BEA77EFA71BBFEDF8) == 0x000CEC, "Member 'ADecoder_QuestItem_BP_C::ButtonPressed__Direction_3C0488D045DB828BEA77EFA71BBFEDF8' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, ButtonPressed) == 0x000CF0, "Member 'ADecoder_QuestItem_BP_C::ButtonPressed' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, AkEventButtonPressed) == 0x000CF8, "Member 'ADecoder_QuestItem_BP_C::AkEventButtonPressed' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, AkEventButtonRelease) == 0x000D00, "Member 'ADecoder_QuestItem_BP_C::AkEventButtonRelease' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, FlipNumberMinus100) == 0x000D08, "Member 'ADecoder_QuestItem_BP_C::FlipNumberMinus100' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, FlipNumberMinus010) == 0x000D10, "Member 'ADecoder_QuestItem_BP_C::FlipNumberMinus010' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, FlipNumberMinus001) == 0x000D18, "Member 'ADecoder_QuestItem_BP_C::FlipNumberMinus001' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, FlipSFXStart) == 0x000D20, "Member 'ADecoder_QuestItem_BP_C::FlipSFXStart' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, FilSFXStop) == 0x000D28, "Member 'ADecoder_QuestItem_BP_C::FilSFXStop' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, bCurrentlyLoopingSFX) == 0x000D30, "Member 'ADecoder_QuestItem_BP_C::bCurrentlyLoopingSFX' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, CurrentLoopingRTPC) == 0x000D34, "Member 'ADecoder_QuestItem_BP_C::CurrentLoopingRTPC' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, FirstNumberDecodedFlipAudioEvent) == 0x000D38, "Member 'ADecoder_QuestItem_BP_C::FirstNumberDecodedFlipAudioEvent' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, SecondNumberDecodedFlipAudioEvent) == 0x000D40, "Member 'ADecoder_QuestItem_BP_C::SecondNumberDecodedFlipAudioEvent' has a wrong offset!");
static_assert(offsetof(ADecoder_QuestItem_BP_C, ThirdNumberDecodedFlipAudioEvent) == 0x000D48, "Member 'ADecoder_QuestItem_BP_C::ThirdNumberDecodedFlipAudioEvent' has a wrong offset!");

}

