#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ColorPastille

#include "Basic.hpp"

#include "ColorPastille_classes.hpp"
#include "ColorPastille_parameters.hpp"


namespace SDK
{

// Function ColorPastille.ColorPastille_C.OnClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UColorPastille_C*                 ClickedPastille                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UColorPastille_C::OnClicked__DelegateSignature(class UColorPastille_C* ClickedPastille)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "OnClicked__DelegateSignature");

	Params::ColorPastille_C_OnClicked__DelegateSignature Parms{};

	Parms.ClickedPastille = ClickedPastille;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ColorPastille.ColorPastille_C.OnHovered__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBHairColorOption               HoveredColor                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UColorPastille_C::OnHovered__DelegateSignature(const struct FRBHairColorOption& HoveredColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "OnHovered__DelegateSignature");

	Params::ColorPastille_C_OnHovered__DelegateSignature Parms{};

	Parms.HoveredColor = std::move(HoveredColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ColorPastille.ColorPastille_C.ExecuteUbergraph_ColorPastille
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UColorPastille_C::ExecuteUbergraph_ColorPastille(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "ExecuteUbergraph_ColorPastille");

	Params::ColorPastille_C_ExecuteUbergraph_ColorPastille Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ColorPastille.ColorPastille_C.BndEvt__ColorButton_ColorButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UColorPastille_C::BndEvt__ColorButton_ColorButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "BndEvt__ColorButton_ColorButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ColorPastille.ColorPastille_C.BndEvt__ColorButton_ColorButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UColorPastille_C::BndEvt__ColorButton_ColorButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "BndEvt__ColorButton_ColorButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ColorPastille.ColorPastille_C.BndEvt__ColorButton_ColorButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UColorPastille_C::BndEvt__ColorButton_ColorButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "BndEvt__ColorButton_ColorButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ColorPastille.ColorPastille_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UColorPastille_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ColorPastille.ColorPastille_C.Init
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBHairColorOption               Hair_Color                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UColorPastille_C::Init(const struct FRBHairColorOption& Hair_Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "Init");

	Params::ColorPastille_C_Init Parms{};

	Parms.Hair_Color = std::move(Hair_Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ColorPastille.ColorPastille_C.SetSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UColorPastille_C::SetSelected(bool Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "SetSelected");

	Params::ColorPastille_C_SetSelected Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ColorPastille.ColorPastille_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UColorPastille_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "OnFocusReceived");

	Params::ColorPastille_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ColorPastille.ColorPastille_C.OnFocusLost
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UColorPastille_C::OnFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "OnFocusLost");

	Params::ColorPastille_C_OnFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ColorPastille.ColorPastille_C.SetHovered
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHovered_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UColorPastille_C::SetHovered(bool IsHovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "SetHovered");

	Params::ColorPastille_C_SetHovered Parms{};

	Parms.IsHovered_0 = IsHovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ColorPastille.ColorPastille_C.GamepadNav_MenuConfirm
// (Public, BlueprintCallable, BlueprintEvent)

void UColorPastille_C::GamepadNav_MenuConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "GamepadNav_MenuConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ColorPastille.ColorPastille_C.GamepadNav_MenuConfirm_Released
// (Public, BlueprintCallable, BlueprintEvent)

void UColorPastille_C::GamepadNav_MenuConfirm_Released()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "GamepadNav_MenuConfirm_Released");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ColorPastille.ColorPastille_C.OnAnalogValueChanged
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FAnalogInputEvent                InAnalogInputEvent                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UColorPastille_C::OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "OnAnalogValueChanged");

	Params::ColorPastille_C_OnAnalogValueChanged Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InAnalogInputEvent = std::move(InAnalogInputEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ColorPastille.ColorPastille_C.CreateTooltip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UColorPastille_C::CreateTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ColorPastille_C", "CreateTooltip");

	UObject::ProcessEvent(Func, nullptr);
}

}

