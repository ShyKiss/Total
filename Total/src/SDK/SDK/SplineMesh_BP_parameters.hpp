#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SplineMesh_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SplineMeshData_structs.hpp"
#include "Engine_structs.hpp"
#include "MeshIndex_structs.hpp"


namespace SDK::Params
{

// Function SplineMesh_BP.SplineMesh_BP_C.SnapPointOnGrid
// 0x0070 (0x0070 - 0x0000)
struct SplineMesh_BP_C_SnapPointOnGrid final
{
public:
	class USplineComponent*                       Spline_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector;                       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntVectorToVector_ReturnValue;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SplineMesh_BP_C_SnapPointOnGrid) == 0x000008, "Wrong alignment on SplineMesh_BP_C_SnapPointOnGrid");
static_assert(sizeof(SplineMesh_BP_C_SnapPointOnGrid) == 0x000070, "Wrong size on SplineMesh_BP_C_SnapPointOnGrid");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, Spline_0) == 0x000000, "Member 'SplineMesh_BP_C_SnapPointOnGrid::Spline_0' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, Temp_int_Variable) == 0x00000C, "Member 'SplineMesh_BP_C_SnapPointOnGrid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000018, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000024, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_BreakVector_X) == 0x000030, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_BreakVector_Y) == 0x000034, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_BreakVector_Z) == 0x000038, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_Round_ReturnValue) == 0x00003C, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_Round_ReturnValue_1) == 0x000040, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_Round_ReturnValue_2) == 0x000044, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, K2Node_MakeStruct_IntVector) == 0x000048, "Member 'SplineMesh_BP_C_SnapPointOnGrid::K2Node_MakeStruct_IntVector' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_Conv_IntVectorToVector_ReturnValue) == 0x000054, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_Conv_IntVectorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_SnapPointOnGrid, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'SplineMesh_BP_C_SnapPointOnGrid::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function SplineMesh_BP.SplineMesh_BP_C.FindClosetMeshes
// 0x00A8 (0x00A8 - 0x0000)
struct SplineMesh_BP_C_FindClosetMeshes final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSplineMeshData>                Meshes_0;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _ClosestDistIndex;                                 // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _ClosestDist;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplineMeshData                        CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0060(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SplineMesh_BP_C_FindClosetMeshes) == 0x000008, "Wrong alignment on SplineMesh_BP_C_FindClosetMeshes");
static_assert(sizeof(SplineMesh_BP_C_FindClosetMeshes) == 0x0000A8, "Wrong size on SplineMesh_BP_C_FindClosetMeshes");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, A) == 0x000000, "Member 'SplineMesh_BP_C_FindClosetMeshes::A' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, Target) == 0x000008, "Member 'SplineMesh_BP_C_FindClosetMeshes::Target' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, Meshes_0) == 0x000010, "Member 'SplineMesh_BP_C_FindClosetMeshes::Meshes_0' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, Index_0) == 0x000020, "Member 'SplineMesh_BP_C_FindClosetMeshes::Index_0' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, _ClosestDistIndex) == 0x000024, "Member 'SplineMesh_BP_C_FindClosetMeshes::_ClosestDistIndex' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, _ClosestDist) == 0x000028, "Member 'SplineMesh_BP_C_FindClosetMeshes::_ClosestDist' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, Temp_byte_Variable) == 0x00002C, "Member 'SplineMesh_BP_C_FindClosetMeshes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000034, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x00003C, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, Temp_int_Array_Index_Variable) == 0x000040, "Member 'SplineMesh_BP_C_FindClosetMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_Array_Get_Item) == 0x000048, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_GetBoundingBox_ReturnValue) == 0x000060, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_BreakVector_X) == 0x00007C, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_BreakVector_Y) == 0x000080, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_BreakVector_Z) == 0x000084, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, K2Node_Select_Default) == 0x000088, "Member 'SplineMesh_BP_C_FindClosetMeshes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_Abs_ReturnValue) == 0x000090, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000094, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_Less_FloatFloat_ReturnValue) == 0x000095, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_BooleanOR_ReturnValue) == 0x000096, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'SplineMesh_BP_C_FindClosetMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_FindClosetMeshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'SplineMesh_BP_C_FindClosetMeshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function SplineMesh_BP.SplineMesh_BP_C.AddStaticMesh
// 0x00A0 (0x00A0 - 0x0000)
struct SplineMesh_BP_C_AddStaticMesh final
{
public:
	struct FVector                                StartPos;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartTangent;                                      // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPos;                                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndTangent;                                        // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            NewMesh;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMesh_BP_C_AddStaticMesh) == 0x000010, "Wrong alignment on SplineMesh_BP_C_AddStaticMesh");
static_assert(sizeof(SplineMesh_BP_C_AddStaticMesh) == 0x0000A0, "Wrong size on SplineMesh_BP_C_AddStaticMesh");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, StartPos) == 0x000000, "Member 'SplineMesh_BP_C_AddStaticMesh::StartPos' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, StartTangent) == 0x00000C, "Member 'SplineMesh_BP_C_AddStaticMesh::StartTangent' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, EndPos) == 0x000018, "Member 'SplineMesh_BP_C_AddStaticMesh::EndPos' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, EndTangent) == 0x000024, "Member 'SplineMesh_BP_C_AddStaticMesh::EndTangent' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, NewMesh) == 0x000030, "Member 'SplineMesh_BP_C_AddStaticMesh::NewMesh' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, Temp_int_Array_Index_Variable) == 0x000038, "Member 'SplineMesh_BP_C_AddStaticMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'SplineMesh_BP_C_AddStaticMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'SplineMesh_BP_C_AddStaticMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'SplineMesh_BP_C_AddStaticMesh::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, CallFunc_AddComponent_ReturnValue) == 0x000080, "Member 'SplineMesh_BP_C_AddStaticMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, CallFunc_Array_Get_Item) == 0x000088, "Member 'SplineMesh_BP_C_AddStaticMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'SplineMesh_BP_C_AddStaticMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'SplineMesh_BP_C_AddStaticMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000095, "Member 'SplineMesh_BP_C_AddStaticMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddStaticMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000096, "Member 'SplineMesh_BP_C_AddStaticMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function SplineMesh_BP.SplineMesh_BP_C.AddMiddleMeshe
// 0x00A0 (0x00A0 - 0x0000)
struct SplineMesh_BP_C_AddMiddleMeshe final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Relative_Transform_Rotation;                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMesh_BP_C_AddMiddleMeshe) == 0x000010, "Wrong alignment on SplineMesh_BP_C_AddMiddleMeshe");
static_assert(sizeof(SplineMesh_BP_C_AddMiddleMeshe) == 0x0000A0, "Wrong size on SplineMesh_BP_C_AddMiddleMeshe");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, Distance) == 0x000000, "Member 'SplineMesh_BP_C_AddMiddleMeshe::Distance' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, Location) == 0x000004, "Member 'SplineMesh_BP_C_AddMiddleMeshe::Location' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, Relative_Transform_Rotation) == 0x000010, "Member 'SplineMesh_BP_C_AddMiddleMeshe::Relative_Transform_Rotation' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, Temp_int_Variable) == 0x00001C, "Member 'SplineMesh_BP_C_AddMiddleMeshe::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_FMax_ReturnValue) == 0x000024, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_GetSplineLength_ReturnValue) == 0x000028, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000034, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000044, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x000048, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000054, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_AddComponent_ReturnValue) == 0x000090, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_AddMiddleMeshe, CallFunc_SetStaticMesh_ReturnValue) == 0x000098, "Member 'SplineMesh_BP_C_AddMiddleMeshe::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function SplineMesh_BP.SplineMesh_BP_C.UserConstructionScript
// 0x00C0 (0x00C0 - 0x0000)
struct SplineMesh_BP_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshIndex                             CallFunc_Array_Get_Item_1;                         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FindClosetMeshes_Index;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplineMeshData                        CallFunc_Array_Get_Item_2;                         // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue;      // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue_1;    // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF[0x1];                                       // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMesh_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on SplineMesh_BP_C_UserConstructionScript");
static_assert(sizeof(SplineMesh_BP_C_UserConstructionScript) == 0x0000C0, "Wrong size on SplineMesh_BP_C_UserConstructionScript");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'SplineMesh_BP_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'SplineMesh_BP_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'SplineMesh_BP_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, Temp_int_Variable) == 0x000010, "Member 'SplineMesh_BP_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, Temp_int_Variable_1) == 0x000014, "Member 'SplineMesh_BP_C_UserConstructionScript::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, Temp_int_Variable_2) == 0x000024, "Member 'SplineMesh_BP_C_UserConstructionScript::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000028, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000035, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, Temp_bool_Variable) == 0x000036, "Member 'SplineMesh_BP_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'SplineMesh_BP_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003C, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_3) == 0x000040, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00005C, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005D, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x00005E, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x00005F, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_FindClosetMeshes_Index) == 0x000060, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_FindClosetMeshes_Index' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, K2Node_Select_Default) == 0x000064, "Member 'SplineMesh_BP_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_GetTangentAtSplinePoint_ReturnValue) == 0x000080, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_GetTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00008C, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000090, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_GetTangentAtSplinePoint_ReturnValue_1) == 0x0000A0, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_GetTangentAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000AD, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x0000AE, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x0000B0, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMesh_BP_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BC, "Member 'SplineMesh_BP_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

