#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MannequinBP_SimpleAnimation

#include "Basic.hpp"

#include "MannequinBP_SinglePose_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MannequinBP_SimpleAnimation.MannequinBP_SimpleAnimation_C
// 0x0020 (0x0370 - 0x0350)
class AMannequinBP_SimpleAnimation_C : public AMannequinBP_SinglePose_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_MannequinBP_SimpleAnimation_C;      // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBRandomizableHelperComponent*         RBRandomizableHelper;                              // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPropOptimizerComponent*              RBPropOptimizer;                                   // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bAnimActive;                                       // 0x0368(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void GameStartInit();
	bool OnWorldPopulateFinishedTimeSliced();
	bool GetStateName(class FString* StateA, class FString* StateB);
	void CheckIfShouldPlayIdleSound();
	void UpdateAnimActive();
	void OnRep_bAnimActive();
	void UserConstructionScript();
	void OnWorldFullyLoaded();
	void PrepareState(bool bStateA, class AActor* RandomOwner);
	void ReceiveBeginPlay();
	void OnEditorPostLoad();
	void PostEditMove(bool bFinished);
	void Event_OnResetStage();
	void StopAnimation();
	void StartAnimation();
	void SetShouldBeIgnoredForLots(bool bValue);
	void SetState(bool bStateA);
	void OnWorldPopulateFinished();
	void ExecuteUbergraph_MannequinBP_SimpleAnimation(int32 EntryPoint);

	bool IsRandomStateSet() const;
	bool IsStateA() const;
	bool ShouldBeIgnoredForLots() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MannequinBP_SimpleAnimation_C">();
	}
	static class AMannequinBP_SimpleAnimation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMannequinBP_SimpleAnimation_C>();
	}
};
static_assert(alignof(AMannequinBP_SimpleAnimation_C) == 0x000008, "Wrong alignment on AMannequinBP_SimpleAnimation_C");
static_assert(sizeof(AMannequinBP_SimpleAnimation_C) == 0x000370, "Wrong size on AMannequinBP_SimpleAnimation_C");
static_assert(offsetof(AMannequinBP_SimpleAnimation_C, UberGraphFrame_MannequinBP_SimpleAnimation_C) == 0x000350, "Member 'AMannequinBP_SimpleAnimation_C::UberGraphFrame_MannequinBP_SimpleAnimation_C' has a wrong offset!");
static_assert(offsetof(AMannequinBP_SimpleAnimation_C, RBRandomizableHelper) == 0x000358, "Member 'AMannequinBP_SimpleAnimation_C::RBRandomizableHelper' has a wrong offset!");
static_assert(offsetof(AMannequinBP_SimpleAnimation_C, RBPropOptimizer) == 0x000360, "Member 'AMannequinBP_SimpleAnimation_C::RBPropOptimizer' has a wrong offset!");
static_assert(offsetof(AMannequinBP_SimpleAnimation_C, bAnimActive) == 0x000368, "Member 'AMannequinBP_SimpleAnimation_C::bAnimActive' has a wrong offset!");

}

