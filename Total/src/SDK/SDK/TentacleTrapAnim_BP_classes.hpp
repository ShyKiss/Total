#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TentacleTrapAnim_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass TentacleTrapAnim_BP.TentacleTrapAnim_BP_C
// 0x0530 (0x07F0 - 0x02C0)
class UTentacleTrapAnim_BP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0398(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x03C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0440(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0470(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x04F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0520(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x05A0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x05D0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0650(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0680(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0700(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0730(0x00B0)()
	bool                                          bTriggerAttack;                                    // 0x07E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPendingDestroy;                                 // 0x07E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_EnterIdle();
	void AnimNotify_EnterIdleAfterAttack();
	void AnimNotify_EnterDestroy();
	void ExecuteUbergraph_TentacleTrapAnim_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TentacleTrapAnim_BP_C">();
	}
	static class UTentacleTrapAnim_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTentacleTrapAnim_BP_C>();
	}
};
static_assert(alignof(UTentacleTrapAnim_BP_C) == 0x000010, "Wrong alignment on UTentacleTrapAnim_BP_C");
static_assert(sizeof(UTentacleTrapAnim_BP_C) == 0x0007F0, "Wrong size on UTentacleTrapAnim_BP_C");
static_assert(offsetof(UTentacleTrapAnim_BP_C, UberGraphFrame) == 0x0002C0, "Member 'UTentacleTrapAnim_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_TransitionResult_4) == 0x0002F8, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_TransitionResult_3) == 0x000320, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_TransitionResult_2) == 0x000348, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_TransitionResult_1) == 0x000370, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_TransitionResult) == 0x000398, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_SequencePlayer_4) == 0x0003C0, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_StateResult_4) == 0x000440, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_SequencePlayer_3) == 0x000470, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_StateResult_3) == 0x0004F0, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_SequencePlayer_2) == 0x000520, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_StateResult_2) == 0x0005A0, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_SequencePlayer_1) == 0x0005D0, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_StateResult_1) == 0x000650, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_SequencePlayer) == 0x000680, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_StateResult) == 0x000700, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, AnimGraphNode_StateMachine) == 0x000730, "Member 'UTentacleTrapAnim_BP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, bTriggerAttack) == 0x0007E0, "Member 'UTentacleTrapAnim_BP_C::bTriggerAttack' has a wrong offset!");
static_assert(offsetof(UTentacleTrapAnim_BP_C, bIsPendingDestroy) == 0x0007E1, "Member 'UTentacleTrapAnim_BP_C::bIsPendingDestroy' has a wrong offset!");

}

