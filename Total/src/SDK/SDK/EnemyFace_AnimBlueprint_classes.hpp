#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnemyFace_AnimBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Shared_Face_Expression_Struct_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Face_AllList_Enum_structs.hpp"
#include "Shared_Face_BaseEmotion_Struct_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass enemyFace_AnimBlueprint.enemyFace_AnimBlueprint_C
// 0x2550 (0x28C0 - 0x0370)
class UEnemyFace_AnimBlueprint_C final : public URBFaceAnimInstanceNPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0378(0x0030)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x03A8(0x01D8)(ContainsInstancedReference)
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode_1;                     // 0x0580(0x00A0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0620(0x00C0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x06E0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0838(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0860(0x0028)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x0888(0x00A0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0928(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x09F0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0A18(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x0AC0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x0B40(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0BC0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0C40(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0CC0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0D40(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0DC0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0E40(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0EC0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0F40(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0FC0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1040(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x10C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1140(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x11C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1240(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x12C0(0x00B8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1378(0x00B8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1430(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x14B0(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1558(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1588(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1638(0x0158)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_1;                            // 0x1790(0x01B0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1940(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1960(0x0020)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x1980(0x01B0)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_1;               // 0x1B30(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1B68(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1B90(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1C58(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1C80(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1DD8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1E00(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1EC0(0x0028)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x1EE8(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1F20(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1F48(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1F90(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2010(0x0048)()
	class UPoseAsset*                             PoseAsset;                                         // 0x2058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x2060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookAtAlpha;                                       // 0x206C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          LipSyncAnim;                                       // 0x2070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPoses;                                          // 0x2078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsExpressing;                                      // 0x2079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207A[0x6];                                     // 0x207A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          ScriptedFaceAnim;                                  // 0x2080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFace_AllList_Enum                            WhichFace;                                         // 0x2088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCSpecificGesture                           WhichExpression;                                   // 0x2089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_208A[0x6];                                     // 0x208A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FShared_Face_Expression_Struct         ExpressionList;                                    // 0x2090(0x0500)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FShared_Face_BaseEmotion_Struct        BaseEmotionList;                                   // 0x2590(0x0320)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsFuttermanSpeaking;                               // 0x28B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28B1[0x3];                                     // 0x28B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         JawOpen;                                           // 0x28B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_enemyFace_AnimBlueprint(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ScriptedFaceFeed();
	void LipSyncFeed();
	void PlayFace();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_F1357E904047ED4940669587B172724F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_509C11384A45F62C640DE5A87E6766FC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_20C7AFF042DEC0F98E2F0B8645490843();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_DF05CE0A4249C05B35D36CB7AEF0F8B9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_A5A1839645B48F07545C729D438D6A67();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_BFF6704D4578BFE7AA400C9B66E1768A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_173AF8964E040233FCB6DEB2A65A65C7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_AE1D636A412F0F8EB39B778ACA0FA3B1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_24A3EAC04A0EAD142478AC80D7F3ADBC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_54B2B95F49C4F5A37F499A89A5CF9615();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_C263638840A23B89AE11FD86591B306D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_C58603274E72EDA13918909B7BB686C2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_4D74B86946B86E83ED2456A3EA612ACB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_DAE32BA248BF00ED3FB7EA8D9208FDF1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_83D7CAB442B5DBE52A4EF1AEC23A40DA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_7BA8356F4CAA360D2E147EB1AF54E07D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_enemyFace_AnimBlueprint_AnimGraphNode_SequencePlayer_5FDC01394575B0B712B52D8599B65DA0();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"enemyFace_AnimBlueprint_C">();
	}
	static class UEnemyFace_AnimBlueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnemyFace_AnimBlueprint_C>();
	}
};
static_assert(alignof(UEnemyFace_AnimBlueprint_C) == 0x000010, "Wrong alignment on UEnemyFace_AnimBlueprint_C");
static_assert(sizeof(UEnemyFace_AnimBlueprint_C) == 0x0028C0, "Wrong size on UEnemyFace_AnimBlueprint_C");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, UberGraphFrame) == 0x000370, "Member 'UEnemyFace_AnimBlueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_Root) == 0x000378, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_CopyPoseFromMesh) == 0x0003A8, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_PoseBlendNode_1) == 0x000580, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_PoseBlendNode_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000620, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SaveCachedPose_2) == 0x0006E0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_UseCachedPose_7) == 0x000838, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_UseCachedPose_6) == 0x000860, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_PoseBlendNode) == 0x000888, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_ApplyAdditive_1) == 0x000928, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_UseCachedPose_5) == 0x0009F0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_BlendListByBool_1) == 0x000A18, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_17) == 0x000AC0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_16) == 0x000B40, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_15) == 0x000BC0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_14) == 0x000C40, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_13) == 0x000CC0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_12) == 0x000D40, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_11) == 0x000DC0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_10) == 0x000E40, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_9) == 0x000EC0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_8) == 0x000F40, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_7) == 0x000FC0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_6) == 0x001040, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_5) == 0x0010C0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_4) == 0x001140, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_3) == 0x0011C0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_2) == 0x001240, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_BlendListByEnum_1) == 0x0012C0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_BlendListByEnum) == 0x001378, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer_1) == 0x001430, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_BlendListByBool) == 0x0014B0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_StateResult) == 0x001558, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_StateMachine) == 0x001588, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SaveCachedPose_1) == 0x001638, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_LookAt_1) == 0x001790, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_LookAt_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_LocalToComponentSpace) == 0x001940, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace) == 0x001960, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_LookAt) == 0x001980, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_MakeDynamicAdditive_1) == 0x001B30, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_MakeDynamicAdditive_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_UseCachedPose_4) == 0x001B68, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_ApplyAdditive) == 0x001B90, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_UseCachedPose_3) == 0x001C58, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SaveCachedPose) == 0x001C80, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_UseCachedPose_2) == 0x001DD8, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_LayeredBoneBlend) == 0x001E00, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_UseCachedPose_1) == 0x001EC0, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_MakeDynamicAdditive) == 0x001EE8, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_UseCachedPose) == 0x001F20, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_Slot_1) == 0x001F48, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_SequencePlayer) == 0x001F90, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, AnimGraphNode_Slot) == 0x002010, "Member 'UEnemyFace_AnimBlueprint_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, PoseAsset) == 0x002058, "Member 'UEnemyFace_AnimBlueprint_C::PoseAsset' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, LookAtLocation) == 0x002060, "Member 'UEnemyFace_AnimBlueprint_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, LookAtAlpha) == 0x00206C, "Member 'UEnemyFace_AnimBlueprint_C::LookAtAlpha' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, LipSyncAnim) == 0x002070, "Member 'UEnemyFace_AnimBlueprint_C::LipSyncAnim' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, HasPoses) == 0x002078, "Member 'UEnemyFace_AnimBlueprint_C::HasPoses' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, IsExpressing) == 0x002079, "Member 'UEnemyFace_AnimBlueprint_C::IsExpressing' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, ScriptedFaceAnim) == 0x002080, "Member 'UEnemyFace_AnimBlueprint_C::ScriptedFaceAnim' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, WhichFace) == 0x002088, "Member 'UEnemyFace_AnimBlueprint_C::WhichFace' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, WhichExpression) == 0x002089, "Member 'UEnemyFace_AnimBlueprint_C::WhichExpression' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, ExpressionList) == 0x002090, "Member 'UEnemyFace_AnimBlueprint_C::ExpressionList' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, BaseEmotionList) == 0x002590, "Member 'UEnemyFace_AnimBlueprint_C::BaseEmotionList' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, IsFuttermanSpeaking) == 0x0028B0, "Member 'UEnemyFace_AnimBlueprint_C::IsFuttermanSpeaking' has a wrong offset!");
static_assert(offsetof(UEnemyFace_AnimBlueprint_C, JawOpen) == 0x0028B4, "Member 'UEnemyFace_AnimBlueprint_C::JawOpen' has a wrong offset!");

}

