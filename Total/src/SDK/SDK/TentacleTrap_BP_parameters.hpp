#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TentacleTrap_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TentacleTrap_BP.TentacleTrap_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TentacleTrap_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TentacleTrap_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on TentacleTrap_BP_C_ReceiveTick");
static_assert(sizeof(TentacleTrap_BP_C_ReceiveTick) == 0x000004, "Wrong size on TentacleTrap_BP_C_ReceiveTick");
static_assert(offsetof(TentacleTrap_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TentacleTrap_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function TentacleTrap_BP.TentacleTrap_BP_C.ExecuteUbergraph_TentacleTrap_BP
// 0x0220 (0x0220 - 0x0000)
struct TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTentacleTrapAnim_BP_C*                 K2Node_DynamicCast_AsTentacle_Trap_Anim_BP;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTentacleTrapAnim_BP_C*                 K2Node_DynamicCast_AsTentacle_Trap_Anim_BP_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x006C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_VLerp_ReturnValue_2;                      // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_3;                      // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0194(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP) == 0x000008, "Wrong alignment on TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP");
static_assert(sizeof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP) == 0x000220, "Wrong size on TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, EntryPoint) == 0x000000, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_VLerp_ReturnValue) == 0x000004, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_VLerp_ReturnValue_1) == 0x000024, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x00003C, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, K2Node_Event_DeltaSeconds) == 0x000040, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_GetAnimInstance_ReturnValue) == 0x000048, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, K2Node_DynamicCast_AsTentacle_Trap_Anim_BP) == 0x000050, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::K2Node_DynamicCast_AsTentacle_Trap_Anim_BP' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, K2Node_DynamicCast_AsTentacle_Trap_Anim_BP_1) == 0x000060, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::K2Node_DynamicCast_AsTentacle_Trap_Anim_BP_1' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00006C, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0000F4, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_VLerp_ReturnValue_2) == 0x00017C, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_VLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_VLerp_ReturnValue_3) == 0x000188, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_VLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000194, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00021C, "Member 'TentacleTrap_BP_C_ExecuteUbergraph_TentacleTrap_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");

}

