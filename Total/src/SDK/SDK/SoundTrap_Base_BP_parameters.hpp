#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SoundTrap_Base_BP

#include "Basic.hpp"

#include "SoundTrap_ENU_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SoundTrap_Stuc_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.GetStateName
// 0x0028 (0x0028 - 0x0000)
struct SoundTrap_Base_BP_C_GetStateName final
{
public:
	class FString                                 StateA;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StateB;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_GetStateName) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_GetStateName");
static_assert(sizeof(SoundTrap_Base_BP_C_GetStateName) == 0x000028, "Wrong size on SoundTrap_Base_BP_C_GetStateName");
static_assert(offsetof(SoundTrap_Base_BP_C_GetStateName, StateA) == 0x000000, "Member 'SoundTrap_Base_BP_C_GetStateName::StateA' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_GetStateName, StateB) == 0x000010, "Member 'SoundTrap_Base_BP_C_GetStateName::StateB' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_GetStateName, ReturnValue) == 0x000020, "Member 'SoundTrap_Base_BP_C_GetStateName::ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.ConstructionClearanceBoxSize
// 0x00A8 (0x00A8 - 0x0000)
struct SoundTrap_Base_BP_C_ConstructionClearanceBoxSize final
{
public:
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SoundTrap_Base_BP_C_ConstructionClearanceBoxSize) == 0x000004, "Wrong alignment on SoundTrap_Base_BP_C_ConstructionClearanceBoxSize");
static_assert(sizeof(SoundTrap_Base_BP_C_ConstructionClearanceBoxSize) == 0x0000A8, "Wrong size on SoundTrap_Base_BP_C_ConstructionClearanceBoxSize");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructionClearanceBoxSize, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000000, "Member 'SoundTrap_Base_BP_C_ConstructionClearanceBoxSize::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructionClearanceBoxSize, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000004, "Member 'SoundTrap_Base_BP_C_ConstructionClearanceBoxSize::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructionClearanceBoxSize, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'SoundTrap_Base_BP_C_ConstructionClearanceBoxSize::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructionClearanceBoxSize, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'SoundTrap_Base_BP_C_ConstructionClearanceBoxSize::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructionClearanceBoxSize, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000020, "Member 'SoundTrap_Base_BP_C_ConstructionClearanceBoxSize::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.SnapToCeiling
// 0x0410 (0x0410 - 0x0000)
struct SoundTrap_Base_BP_C_SnapToCeiling final
{
public:
	float                                         SnapDistance;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_EditorLineTraceSingle_OutHit;             // 0x005C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EditorLineTraceSingle_ReturnValue;        // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Acos_ReturnValue;                         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZY_ReturnValue;                // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x01E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0xF];                                      // 0x0271(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0280(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Square_ReturnValue;                       // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x02C0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue_1;                     // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0334(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE[0x2];                                      // 0x03BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumBones_ReturnValue;                  // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue;                  // 0x03EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue;              // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_SnapToCeiling) == 0x000010, "Wrong alignment on SoundTrap_Base_BP_C_SnapToCeiling");
static_assert(sizeof(SoundTrap_Base_BP_C_SnapToCeiling) == 0x000410, "Wrong size on SoundTrap_Base_BP_C_SnapToCeiling");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, SnapDistance) == 0x000000, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::SnapDistance' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, StartLocation) == 0x000004, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::StartLocation' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, Temp_object_Variable) == 0x000040, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_EditorLineTraceSingle_OutHit) == 0x00005C, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_EditorLineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_EditorLineTraceSingle_ReturnValue) == 0x0000E4, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_EditorLineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_GetActorRightVector_ReturnValue) == 0x0000E8, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F4, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F5, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_Time) == 0x0000F8, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_Distance) == 0x0000FC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_Location) == 0x000100, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_ImpactPoint) == 0x00010C, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_Normal) == 0x000118, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_ImpactNormal) == 0x000124, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_PhysMat) == 0x000130, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_HitActor) == 0x000138, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_HitComponent) == 0x000140, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_HitBoneName) == 0x000148, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_HitItem) == 0x000150, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_ElementIndex) == 0x000154, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_FaceIndex) == 0x000158, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_TraceStart) == 0x00015C, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakHitResult_TraceEnd) == 0x000168, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000174, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Dot_VectorVector_ReturnValue) == 0x000180, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_X) == 0x000184, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Y) == 0x000188, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Z) == 0x00018C, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Acos_ReturnValue) == 0x000190, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000194, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Sin_ReturnValue) == 0x0001A0, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_MakeRotFromZY_ReturnValue) == 0x0001A4, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_MakeRotFromZY_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_X_1) == 0x0001B0, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Y_1) == 0x0001B4, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Z_1) == 0x0001B8, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001BC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_X_2) == 0x0001C0, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Y_2) == 0x0001C4, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Z_2) == 0x0001C8, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001CC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_MakeVector_ReturnValue) == 0x0001D0, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_MakeVector_ReturnValue_1) == 0x0001DC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0001E8, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000270, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_GetTransform_ReturnValue) == 0x000280, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_InverseTransformRotation_ReturnValue) == 0x0002B0, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Square_ReturnValue) == 0x0002BC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_MakeTransform_ReturnValue_1) == 0x0002C0, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002F0, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Square_ReturnValue_1) == 0x0002F4, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Square_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0002F8, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Sqrt_ReturnValue) == 0x0002FC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_X_3) == 0x000300, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Y_3) == 0x000304, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Z_3) == 0x000308, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_MakeVector_ReturnValue_2) == 0x00030C, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000318, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00031C, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_MakeVector_ReturnValue_3) == 0x000328, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000334, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0003BC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003BD, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0003C0, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003CC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_X_4) == 0x0003D8, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Y_4) == 0x0003DC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_BreakVector_Z_4) == 0x0003E0, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_GetNumBones_ReturnValue) == 0x0003E4, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_GetNumBones_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_Subtract_IntInt_ReturnValue) == 0x0003E8, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_GetBoneName_ReturnValue) == 0x0003EC, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_GetBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, CallFunc_GetBoneLocation_ReturnValue) == 0x0003F4, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::CallFunc_GetBoneLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToCeiling, K2Node_SwitchEnum_CmpSuccess) == 0x000400, "Member 'SoundTrap_Base_BP_C_SnapToCeiling::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.SnapToGround_Internal
// 0x0250 (0x0250 - 0x0000)
struct SoundTrap_Base_BP_C_SnapToGround_Internal final
{
public:
	float                                         GroundOffset;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxRandom;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TestDistance;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitDistance;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_EditorLineTraceSingle_OutHit;             // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EditorLineTraceSingle_ReturnValue;        // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_127[0x1];                                      // 0x0127(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x01C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_SnapToGround_Internal) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_SnapToGround_Internal");
static_assert(sizeof(SoundTrap_Base_BP_C_SnapToGround_Internal) == 0x000250, "Wrong size on SoundTrap_Base_BP_C_SnapToGround_Internal");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, GroundOffset) == 0x000000, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::GroundOffset' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, MaxRandom) == 0x000004, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::MaxRandom' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, TestDistance) == 0x000008, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::TestDistance' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, HitDistance) == 0x00000C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::HitDistance' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_MakeVector_ReturnValue_1) == 0x000028, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_RandomFloat_ReturnValue) == 0x000034, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, Temp_object_Variable) == 0x000040, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakVector_X) == 0x000050, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakVector_Y) == 0x000054, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakVector_Z) == 0x000058, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000064, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, K2Node_SwitchEnum_CmpSuccess) == 0x00006C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000070, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000074, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_FMin_ReturnValue) == 0x000080, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000084, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_MakeVector_ReturnValue_2) == 0x000090, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_EditorLineTraceSingle_OutHit) == 0x00009C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_EditorLineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_EditorLineTraceSingle_ReturnValue) == 0x000124, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_EditorLineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_bBlockingHit) == 0x000125, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_bInitialOverlap) == 0x000126, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_Time) == 0x000128, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_Distance) == 0x00012C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_Location) == 0x000130, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_ImpactPoint) == 0x00013C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_ImpactNormal) == 0x000154, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_HitItem) == 0x000180, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_ElementIndex) == 0x000184, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_FaceIndex) == 0x000188, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_TraceStart) == 0x00018C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_BreakHitResult_TraceEnd) == 0x000198, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001A4, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_MakeVector_ReturnValue_3) == 0x0001A8, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B4, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001C0, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0001C4, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SnapToGround_Internal, CallFunc_K2_SetActorLocation_ReturnValue) == 0x00024C, "Member 'SoundTrap_Base_BP_C_SnapToGround_Internal::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.Editor_RopeOverlap
// 0x02F8 (0x02F8 - 0x0000)
struct SoundTrap_Base_BP_C_Editor_RopeOverlap final
{
public:
	bool                                          bOverlaps;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutOverlaps;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Overlaps;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<float>                                 TopOffsetByIndex;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x00CC(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Array_Get_Item;                           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleSize_OutRadius;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleSize_OutHalfHeight;       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_CapsuleOverlapComponents_OutComponents;   // 0x0120(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleOverlapComponents_ReturnValue;     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0160(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0178(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0190(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_CanActorCollisionOverlapInEditor_ReturnValue; // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0218(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0230(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0260(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0280(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x02C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_Editor_RopeOverlap) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_Editor_RopeOverlap");
static_assert(sizeof(SoundTrap_Base_BP_C_Editor_RopeOverlap) == 0x0002F8, "Wrong size on SoundTrap_Base_BP_C_Editor_RopeOverlap");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, bOverlaps) == 0x000000, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::bOverlaps' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, OutOverlaps) == 0x000008, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::OutOverlaps' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, Overlaps) == 0x000018, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::Overlaps' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, TopOffsetByIndex) == 0x000028, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::TopOffsetByIndex' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, Temp_object_Variable) == 0x000038, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, K2Node_MakeArray_Array) == 0x000048, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, Temp_int_Array_Index_Variable) == 0x000058, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_IsEmpty_ReturnValue) == 0x000080, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_IsEmpty_ReturnValue_1) == 0x0000C8, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Not_PreBool_ReturnValue) == 0x0000C9, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, Temp_name_Variable) == 0x0000CC, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000EC, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_GetScaledCapsuleSize_OutRadius) == 0x0000F0, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_GetScaledCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_GetScaledCapsuleSize_OutHalfHeight) == 0x0000F4, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_GetScaledCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000104, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000108, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000114, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_CapsuleOverlapComponents_OutComponents) == 0x000120, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_CapsuleOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_CapsuleOverlapComponents_ReturnValue) == 0x000130, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_CapsuleOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Array_Length_ReturnValue) == 0x000134, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Array_Contains_ReturnValue) == 0x000141, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_GetObjectName_ReturnValue) == 0x000148, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_GetOwner_ReturnValue) == 0x000158, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000160, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000178, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, K2Node_MakeStruct_FormatArgumentData_1) == 0x000190, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001D0, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_CanActorCollisionOverlapInEditor_ReturnValue) == 0x000210, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_CanActorCollisionOverlapInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, K2Node_MakeArray_Array_2) == 0x000218, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_BooleanOR_ReturnValue) == 0x000228, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Format_ReturnValue) == 0x000230, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Conv_TextToString_ReturnValue) == 0x000248, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000258, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000260, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000278, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, K2Node_MakeStruct_FormatArgumentData_3) == 0x000280, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, K2Node_MakeArray_Array_3) == 0x0002C0, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Format_ReturnValue_1) == 0x0002D0, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Editor_RopeOverlap, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0002E8, "Member 'SoundTrap_Base_BP_C_Editor_RopeOverlap::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.BP_MapCheck
// 0x00C8 (0x00C8 - 0x0000)
struct SoundTrap_Base_BP_C_BP_MapCheck final
{
public:
	EMapCheckType                                 CheckType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutErrorMsg;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Editor_RopeOverlap_bOverlaps;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Editor_RopeOverlap_outOverlaps;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_BP_MapCheck) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_BP_MapCheck");
static_assert(sizeof(SoundTrap_Base_BP_C_BP_MapCheck) == 0x0000C8, "Wrong size on SoundTrap_Base_BP_C_BP_MapCheck");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, CheckType) == 0x000000, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::CheckType' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, OutErrorMsg) == 0x000008, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::OutErrorMsg' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, ReturnValue) == 0x000018, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, CallFunc_Editor_RopeOverlap_bOverlaps) == 0x000019, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::CallFunc_Editor_RopeOverlap_bOverlaps' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, CallFunc_Editor_RopeOverlap_outOverlaps) == 0x000020, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::CallFunc_Editor_RopeOverlap_outOverlaps' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, K2Node_MakeArray_Array) == 0x000090, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_MapCheck, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B8, "Member 'SoundTrap_Base_BP_C_BP_MapCheck::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.SetAnchor
// 0x00A8 (0x00A8 - 0x0000)
struct SoundTrap_Base_BP_C_SetAnchor final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESoundTrap_ENU                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UStaticMesh*                            K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_SetAnchor) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_SetAnchor");
static_assert(sizeof(SoundTrap_Base_BP_C_SetAnchor) == 0x0000A8, "Wrong size on SoundTrap_Base_BP_C_SetAnchor");
static_assert(offsetof(SoundTrap_Base_BP_C_SetAnchor, Temp_bool_Variable) == 0x000000, "Member 'SoundTrap_Base_BP_C_SetAnchor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetAnchor, Temp_byte_Variable) == 0x000001, "Member 'SoundTrap_Base_BP_C_SetAnchor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetAnchor, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'SoundTrap_Base_BP_C_SetAnchor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetAnchor, K2Node_Select_Default) == 0x000008, "Member 'SoundTrap_Base_BP_C_SetAnchor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetAnchor, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000010, "Member 'SoundTrap_Base_BP_C_SetAnchor::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetAnchor, K2Node_Select_Default_1) == 0x000098, "Member 'SoundTrap_Base_BP_C_SetAnchor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetAnchor, CallFunc_SetStaticMesh_ReturnValue) == 0x0000A0, "Member 'SoundTrap_Base_BP_C_SetAnchor::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.EnableRopePhysics
// 0x0002 (0x0002 - 0x0000)
struct SoundTrap_Base_BP_C_EnableRopePhysics final
{
public:
	bool                                          EnablePhysics;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_EnableRopePhysics) == 0x000001, "Wrong alignment on SoundTrap_Base_BP_C_EnableRopePhysics");
static_assert(sizeof(SoundTrap_Base_BP_C_EnableRopePhysics) == 0x000002, "Wrong size on SoundTrap_Base_BP_C_EnableRopePhysics");
static_assert(offsetof(SoundTrap_Base_BP_C_EnableRopePhysics, EnablePhysics) == 0x000000, "Member 'SoundTrap_Base_BP_C_EnableRopePhysics::EnablePhysics' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_EnableRopePhysics, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'SoundTrap_Base_BP_C_EnableRopePhysics::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.ResetRopeToInitial
// 0x000C (0x000C - 0x0000)
struct SoundTrap_Base_BP_C_ResetRopeToInitial final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_ResetRopeToInitial) == 0x000004, "Wrong alignment on SoundTrap_Base_BP_C_ResetRopeToInitial");
static_assert(sizeof(SoundTrap_Base_BP_C_ResetRopeToInitial) == 0x00000C, "Wrong size on SoundTrap_Base_BP_C_ResetRopeToInitial");
static_assert(offsetof(SoundTrap_Base_BP_C_ResetRopeToInitial, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'SoundTrap_Base_BP_C_ResetRopeToInitial::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.SetScale
// 0x00D0 (0x00D0 - 0x0000)
struct SoundTrap_Base_BP_C_SetScale final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SoundTrap_Base_BP_C_SetScale) == 0x000010, "Wrong alignment on SoundTrap_Base_BP_C_SetScale");
static_assert(sizeof(SoundTrap_Base_BP_C_SetScale) == 0x0000D0, "Wrong size on SoundTrap_Base_BP_C_SetScale");
static_assert(offsetof(SoundTrap_Base_BP_C_SetScale, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'SoundTrap_Base_BP_C_SetScale::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetScale, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'SoundTrap_Base_BP_C_SetScale::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetScale, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000040, "Member 'SoundTrap_Base_BP_C_SetScale::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.SetGizmo
// 0x02B0 (0x02B0 - 0x0000)
struct SoundTrap_Base_BP_C_SetGizmo final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESoundTrap_ENU                                Temp_byte_Variable;                                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsAsset*                          Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          Temp_object_Variable_9;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundTrap_ENU                                Temp_byte_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          Temp_object_Variable_10;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_11;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_12;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_13;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_14;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_15;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_16;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_17;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_18;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_19;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundTrap_ENU                                Temp_byte_Variable_2;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_2;                            // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_3;                            // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_4;                            // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_5;                            // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_6;                            // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_7;                            // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_8;                            // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_9;                            // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0154(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X;                            // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_Array_Get_Item_1;                         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsAsset*                          CallFunc_Array_Get_Item_2;                         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_Array_Get_Item_3;                         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_4;                         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27E[0x2];                                      // 0x027E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_Select_Default;                             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicsAsset*                          K2Node_Select_Default_1;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_Select_Default_2;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESoundTrap_ENU                                Temp_byte_Variable_3;                              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_3;                           // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_SetGizmo) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_SetGizmo");
static_assert(sizeof(SoundTrap_Base_BP_C_SetGizmo) == 0x0002B0, "Wrong size on SoundTrap_Base_BP_C_SetGizmo");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable) == 0x000000, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable_1) == 0x000004, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable_2) == 0x000008, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable_3) == 0x00000C, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable_4) == 0x000010, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable_5) == 0x000014, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable_6) == 0x000018, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_bool_Variable) == 0x00001C, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_byte_Variable) == 0x00001D, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable) == 0x000020, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_1) == 0x000028, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_2) == 0x000030, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_3) == 0x000038, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_4) == 0x000040, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_5) == 0x000048, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_6) == 0x000050, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_7) == 0x000058, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_8) == 0x000060, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_9) == 0x000068, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_byte_Variable_1) == 0x000070, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_10) == 0x000078, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_11) == 0x000080, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_12) == 0x000088, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_13) == 0x000090, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_14) == 0x000098, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_15) == 0x0000A0, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_16) == 0x0000A8, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_17) == 0x0000B0, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_18) == 0x0000B8, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_object_Variable_19) == 0x0000C0, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_byte_Variable_2) == 0x0000C8, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable) == 0x0000CC, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable_1) == 0x0000D8, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable_2) == 0x0000E4, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable_3) == 0x0000F0, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable_4) == 0x0000FC, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable_5) == 0x000108, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable_6) == 0x000114, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable_7) == 0x000120, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable_8) == 0x00012C, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_struct_Variable_9) == 0x000138, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Array_Index_Variable) == 0x000144, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Loop_Counter_Variable) == 0x000148, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Add_IntInt_ReturnValue) == 0x00014C, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable_7) == 0x000150, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000154, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_X) == 0x0001DC, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_Y) == 0x0001E0, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_Z) == 0x0001E4, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_X_1) == 0x0001E8, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_Y_1) == 0x0001EC, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_Z_1) == 0x0001F0, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_FMin_ReturnValue) == 0x0001F4, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001F8, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_FMax_ReturnValue) == 0x0001FC, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Less_FloatFloat_ReturnValue) == 0x000200, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_MakeVector_ReturnValue) == 0x000204, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BooleanOR_ReturnValue) == 0x000210, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_X_2) == 0x000214, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_Y_2) == 0x000218, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_Z_2) == 0x00021C, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Abs_ReturnValue) == 0x000220, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable_8) == 0x000224, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Array_Get_Item) == 0x000228, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Array_Get_Item_1) == 0x000230, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000238, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Array_Get_Item_2) == 0x000240, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_int_Variable_9) == 0x000248, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Array_Get_Item_3) == 0x000250, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Array_Get_Item_4) == 0x000258, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_X_3) == 0x00025C, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_Y_3) == 0x000260, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BreakVector_Z_3) == 0x000264, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Array_Length_ReturnValue) == 0x000268, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00026C, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Less_IntInt_ReturnValue) == 0x000270, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000274, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Abs_ReturnValue_1) == 0x000278, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00027C, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00027D, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, K2Node_Select_Default) == 0x000280, "Member 'SoundTrap_Base_BP_C_SetGizmo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, K2Node_Select_Default_1) == 0x000288, "Member 'SoundTrap_Base_BP_C_SetGizmo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, K2Node_Select_Default_2) == 0x000290, "Member 'SoundTrap_Base_BP_C_SetGizmo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, Temp_byte_Variable_3) == 0x000298, "Member 'SoundTrap_Base_BP_C_SetGizmo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, K2Node_Select_Default_3) == 0x00029C, "Member 'SoundTrap_Base_BP_C_SetGizmo::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, K2Node_Select_Default_4) == 0x0002A8, "Member 'SoundTrap_Base_BP_C_SetGizmo::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002AC, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0002AD, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_SetGizmo, CallFunc_BooleanOR_ReturnValue_1) == 0x0002AE, "Member 'SoundTrap_Base_BP_C_SetGizmo::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.ConstructSound
// 0x0028 (0x0028 - 0x0000)
struct SoundTrap_Base_BP_C_ConstructSound final
{
public:
	const class UAkAudioEvent*                    Temp_object_Variable;                              // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UAkAudioEvent*                    Temp_object_Variable_1;                            // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_ConstructSound) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_ConstructSound");
static_assert(sizeof(SoundTrap_Base_BP_C_ConstructSound) == 0x000028, "Wrong size on SoundTrap_Base_BP_C_ConstructSound");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructSound, Temp_object_Variable) == 0x000000, "Member 'SoundTrap_Base_BP_C_ConstructSound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructSound, Temp_object_Variable_1) == 0x000008, "Member 'SoundTrap_Base_BP_C_ConstructSound::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructSound, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'SoundTrap_Base_BP_C_ConstructSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructSound, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'SoundTrap_Base_BP_C_ConstructSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructSound, CallFunc_Array_AddUnique_ReturnValue) == 0x000014, "Member 'SoundTrap_Base_BP_C_ConstructSound::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructSound, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000018, "Member 'SoundTrap_Base_BP_C_ConstructSound::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructSound, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'SoundTrap_Base_BP_C_ConstructSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructSound, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000020, "Member 'SoundTrap_Base_BP_C_ConstructSound::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ConstructSound, CallFunc_Array_AddUnique_ReturnValue_3) == 0x000024, "Member 'SoundTrap_Base_BP_C_ConstructSound::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.OnBumped
// 0x00B8 (0x00B8 - 0x0000)
struct SoundTrap_Base_BP_C_OnBumped final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTime_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_OnBumped) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_OnBumped");
static_assert(sizeof(SoundTrap_Base_BP_C_OnBumped) == 0x0000B8, "Wrong size on SoundTrap_Base_BP_C_OnBumped");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, Temp_delegate_Variable) == 0x000000, "Member 'SoundTrap_Base_BP_C_OnBumped::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'SoundTrap_Base_BP_C_OnBumped::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, CallFunc_GetGameTime_ReturnValue) == 0x000014, "Member 'SoundTrap_Base_BP_C_OnBumped::CallFunc_GetGameTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, Temp_struct_Variable) == 0x000018, "Member 'SoundTrap_Base_BP_C_OnBumped::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'SoundTrap_Base_BP_C_OnBumped::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000029, "Member 'SoundTrap_Base_BP_C_OnBumped::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'SoundTrap_Base_BP_C_OnBumped::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'SoundTrap_Base_BP_C_OnBumped::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00002C, "Member 'SoundTrap_Base_BP_C_OnBumped::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_OnBumped, CallFunc_PostAkEvent_ReturnValue) == 0x0000B4, "Member 'SoundTrap_Base_BP_C_OnBumped::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.UserConstructionScript
// 0x02E0 (0x02E0 - 0x0000)
struct SoundTrap_Base_BP_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumBones_ReturnValue;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumBones_ReturnValue_1;                // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue;                  // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue;              // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x01A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundTrap_Stuc                        CallFunc_Array_Get_Item;                           // 0x0230(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue_1;                // 0x028C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item_1;                         // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x02C0(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_UserConstructionScript) == 0x000010, "Wrong alignment on SoundTrap_Base_BP_C_UserConstructionScript");
static_assert(sizeof(SoundTrap_Base_BP_C_UserConstructionScript) == 0x0002E0, "Wrong size on SoundTrap_Base_BP_C_UserConstructionScript");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x00000C, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000010, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000014, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00001C, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000028, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x000034, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x00003C, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000050, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E4, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F0, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000F4, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00017C, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, Temp_bool_Variable) == 0x00017D, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_GetNumBones_ReturnValue) == 0x000180, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_GetNumBones_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000184, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_GetNumBones_ReturnValue_1) == 0x000188, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_GetNumBones_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_GetBoneName_ReturnValue) == 0x00018C, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_GetBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_GetBoneLocation_ReturnValue) == 0x000194, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_GetBoneLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0001A0, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0001A4, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000230, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000280, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000284, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000288, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_GetBoneName_ReturnValue_1) == 0x00028C, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_GetBoneName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000298, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x0002A0, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0002A4, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0002A8, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x0002AC, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, K2Node_Select_Default) == 0x0002B0, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x0002B8, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_GetBounds_ReturnValue) == 0x0002C0, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x0002DC, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_UserConstructionScript, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002DD, "Member 'SoundTrap_Base_BP_C_UserConstructionScript::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.PrepareState
// 0x0010 (0x0010 - 0x0000)
struct SoundTrap_Base_BP_C_PrepareState final
{
public:
	bool                                          bStateA;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 RandomOwner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_PrepareState) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_PrepareState");
static_assert(sizeof(SoundTrap_Base_BP_C_PrepareState) == 0x000010, "Wrong size on SoundTrap_Base_BP_C_PrepareState");
static_assert(offsetof(SoundTrap_Base_BP_C_PrepareState, bStateA) == 0x000000, "Member 'SoundTrap_Base_BP_C_PrepareState::bStateA' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_PrepareState, RandomOwner) == 0x000008, "Member 'SoundTrap_Base_BP_C_PrepareState::RandomOwner' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct SoundTrap_Base_BP_C_SetState final
{
public:
	bool                                          bStateA;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_SetState) == 0x000001, "Wrong alignment on SoundTrap_Base_BP_C_SetState");
static_assert(sizeof(SoundTrap_Base_BP_C_SetState) == 0x000001, "Wrong size on SoundTrap_Base_BP_C_SetState");
static_assert(offsetof(SoundTrap_Base_BP_C_SetState, bStateA) == 0x000000, "Member 'SoundTrap_Base_BP_C_SetState::bStateA' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.Server_SoundTrapActivated
// 0x00A8 (0x00A8 - 0x0000)
struct SoundTrap_Base_BP_C_Server_SoundTrapActivated final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SoundTrap_Base_BP_C_Server_SoundTrapActivated) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_Server_SoundTrapActivated");
static_assert(sizeof(SoundTrap_Base_BP_C_Server_SoundTrapActivated) == 0x0000A8, "Wrong size on SoundTrap_Base_BP_C_Server_SoundTrapActivated");
static_assert(offsetof(SoundTrap_Base_BP_C_Server_SoundTrapActivated, OverlappedComponent) == 0x000000, "Member 'SoundTrap_Base_BP_C_Server_SoundTrapActivated::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Server_SoundTrapActivated, OtherActor) == 0x000008, "Member 'SoundTrap_Base_BP_C_Server_SoundTrapActivated::OtherActor' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Server_SoundTrapActivated, OtherComp) == 0x000010, "Member 'SoundTrap_Base_BP_C_Server_SoundTrapActivated::OtherComp' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Server_SoundTrapActivated, OtherBodyIndex) == 0x000018, "Member 'SoundTrap_Base_BP_C_Server_SoundTrapActivated::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Server_SoundTrapActivated, bFromSweep) == 0x00001C, "Member 'SoundTrap_Base_BP_C_Server_SoundTrapActivated::bFromSweep' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_Server_SoundTrapActivated, SweepResult) == 0x000020, "Member 'SoundTrap_Base_BP_C_Server_SoundTrapActivated::SweepResult' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct SoundTrap_Base_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on SoundTrap_Base_BP_C_ReceiveTick");
static_assert(sizeof(SoundTrap_Base_BP_C_ReceiveTick) == 0x000004, "Wrong size on SoundTrap_Base_BP_C_ReceiveTick");
static_assert(offsetof(SoundTrap_Base_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'SoundTrap_Base_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.SetShouldBeIgnoredForLots
// 0x0001 (0x0001 - 0x0000)
struct SoundTrap_Base_BP_C_SetShouldBeIgnoredForLots final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_SetShouldBeIgnoredForLots) == 0x000001, "Wrong alignment on SoundTrap_Base_BP_C_SetShouldBeIgnoredForLots");
static_assert(sizeof(SoundTrap_Base_BP_C_SetShouldBeIgnoredForLots) == 0x000001, "Wrong size on SoundTrap_Base_BP_C_SetShouldBeIgnoredForLots");
static_assert(offsetof(SoundTrap_Base_BP_C_SetShouldBeIgnoredForLots, bValue) == 0x000000, "Member 'SoundTrap_Base_BP_C_SetShouldBeIgnoredForLots::bValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.BP_OnHitByThrowable
// 0x0018 (0x0018 - 0x0000)
struct SoundTrap_Base_BP_C_BP_OnHitByThrowable final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBThrowableWeapon*                     ThrowableWeapon;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_BP_OnHitByThrowable) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_BP_OnHitByThrowable");
static_assert(sizeof(SoundTrap_Base_BP_C_BP_OnHitByThrowable) == 0x000018, "Wrong size on SoundTrap_Base_BP_C_BP_OnHitByThrowable");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_OnHitByThrowable, HitLocation) == 0x000000, "Member 'SoundTrap_Base_BP_C_BP_OnHitByThrowable::HitLocation' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_OnHitByThrowable, ThrowableWeapon) == 0x000010, "Member 'SoundTrap_Base_BP_C_BP_OnHitByThrowable::ThrowableWeapon' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.ProjectileHitSoundMulticast
// 0x0010 (0x0010 - 0x0000)
struct SoundTrap_Base_BP_C_ProjectileHitSoundMulticast final
{
public:
	class FString                                 SwitchName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_ProjectileHitSoundMulticast) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_ProjectileHitSoundMulticast");
static_assert(sizeof(SoundTrap_Base_BP_C_ProjectileHitSoundMulticast) == 0x000010, "Wrong size on SoundTrap_Base_BP_C_ProjectileHitSoundMulticast");
static_assert(offsetof(SoundTrap_Base_BP_C_ProjectileHitSoundMulticast, SwitchName) == 0x000000, "Member 'SoundTrap_Base_BP_C_ProjectileHitSoundMulticast::SwitchName' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.ExecuteUbergraph_SoundTrap_Base_BP
// 0x01B8 (0x01B8 - 0x0000)
struct SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_LastReset_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStageResetCount_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bStateA_1;                            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_randomOwner;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bStateA;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0070(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ARBNPC*                                 K2Node_DynamicCast_AsRB_NPC;                       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanTriggerSoundTraps_ReturnValue;         // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bValue;                               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B[0x1];                                      // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_hitLocation;                          // 0x014C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBThrowableWeapon*                     K2Node_Event_throwableWeapon;                      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_switchName;                     // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsConsideredCrouched_ReturnValue;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0184(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyRigidBodyAwake_ReturnValue;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP");
static_assert(sizeof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP) == 0x0001B8, "Wrong size on SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, EntryPoint) == 0x000000, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, Temp_int_LastReset_Variable) == 0x000008, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::Temp_int_LastReset_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_GetStageResetCount_ReturnValue) == 0x00000C, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_GetStageResetCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, Temp_struct_Variable) == 0x000018, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000028, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_Event_bStateA_1) == 0x00003C, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_Event_bStateA_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_Event_randomOwner) == 0x000040, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_Event_randomOwner' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_Event_bStateA) == 0x000048, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_Event_bStateA' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, Temp_bool_IsClosed_Variable) == 0x000049, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_CustomEvent_OverlappedComponent) == 0x000050, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_CustomEvent_OtherActor) == 0x000058, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_CustomEvent_OtherComp) == 0x000060, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_CustomEvent_OtherBodyIndex) == 0x000068, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_CustomEvent_bFromSweep) == 0x00006C, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_CustomEvent_SweepResult) == 0x000070, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_DynamicCast_AsRB_NPC) == 0x0000F8, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_DynamicCast_AsRB_NPC' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_DynamicCast_AsRB_Player) == 0x000108, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_CanTriggerSoundTraps_ReturnValue) == 0x000111, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_CanTriggerSoundTraps_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000114, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000118, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_BreakVector_X) == 0x00011C, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_BreakVector_Y) == 0x000120, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_BreakVector_Z) == 0x000124, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x000128, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_MakeVector_ReturnValue) == 0x00012C, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000138, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_Event_DeltaSeconds) == 0x000144, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_Event_bValue) == 0x000148, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_Event_bValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000149, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_HasAuthority_ReturnValue) == 0x00014A, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_Event_hitLocation) == 0x00014C, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_Event_hitLocation' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_Event_throwableWeapon) == 0x000158, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_Event_throwableWeapon' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_MakeVector_ReturnValue_1) == 0x000160, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_CustomEvent_switchName) == 0x000170, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_CustomEvent_switchName' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_BP_IsConsideredCrouched_ReturnValue) == 0x000180, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_BP_IsConsideredCrouched_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_IsValid_ReturnValue) == 0x000181, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, Temp_delegate_Variable) == 0x000184, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_PostAkEvent_ReturnValue) == 0x000194, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, K2Node_SwitchEnum_CmpSuccess) == 0x000198, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00019C, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_IsAnyRigidBodyAwake_ReturnValue) == 0x0001A8, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_IsAnyRigidBodyAwake_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_GetElapsedTime_ReturnValue) == 0x0001AC, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001B0, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_Not_PreBool_ReturnValue) == 0x0001B1, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP, CallFunc_BooleanAND_ReturnValue) == 0x0001B2, "Member 'SoundTrap_Base_BP_C_ExecuteUbergraph_SoundTrap_Base_BP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.IsRandomStateSet
// 0x0001 (0x0001 - 0x0000)
struct SoundTrap_Base_BP_C_IsRandomStateSet final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_IsRandomStateSet) == 0x000001, "Wrong alignment on SoundTrap_Base_BP_C_IsRandomStateSet");
static_assert(sizeof(SoundTrap_Base_BP_C_IsRandomStateSet) == 0x000001, "Wrong size on SoundTrap_Base_BP_C_IsRandomStateSet");
static_assert(offsetof(SoundTrap_Base_BP_C_IsRandomStateSet, ReturnValue) == 0x000000, "Member 'SoundTrap_Base_BP_C_IsRandomStateSet::ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.IsStateA
// 0x0002 (0x0002 - 0x0000)
struct SoundTrap_Base_BP_C_IsStateA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsStateA_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_IsStateA) == 0x000001, "Wrong alignment on SoundTrap_Base_BP_C_IsStateA");
static_assert(sizeof(SoundTrap_Base_BP_C_IsStateA) == 0x000002, "Wrong size on SoundTrap_Base_BP_C_IsStateA");
static_assert(offsetof(SoundTrap_Base_BP_C_IsStateA, ReturnValue) == 0x000000, "Member 'SoundTrap_Base_BP_C_IsStateA::ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_IsStateA, CallFunc_BP_IsStateA_ReturnValue) == 0x000001, "Member 'SoundTrap_Base_BP_C_IsStateA::CallFunc_BP_IsStateA_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.ShouldBeIgnoredForLots
// 0x0002 (0x0002 - 0x0000)
struct SoundTrap_Base_BP_C_ShouldBeIgnoredForLots final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SoundTrap_Base_BP_C_ShouldBeIgnoredForLots) == 0x000001, "Wrong alignment on SoundTrap_Base_BP_C_ShouldBeIgnoredForLots");
static_assert(sizeof(SoundTrap_Base_BP_C_ShouldBeIgnoredForLots) == 0x000002, "Wrong size on SoundTrap_Base_BP_C_ShouldBeIgnoredForLots");
static_assert(offsetof(SoundTrap_Base_BP_C_ShouldBeIgnoredForLots, ReturnValue) == 0x000000, "Member 'SoundTrap_Base_BP_C_ShouldBeIgnoredForLots::ReturnValue' has a wrong offset!");
static_assert(offsetof(SoundTrap_Base_BP_C_ShouldBeIgnoredForLots, CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue) == 0x000001, "Member 'SoundTrap_Base_BP_C_ShouldBeIgnoredForLots::CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue' has a wrong offset!");

// Function SoundTrap_Base_BP.SoundTrap_Base_BP_C.BP_GetCollisionCapsule
// 0x0008 (0x0008 - 0x0000)
struct SoundTrap_Base_BP_C_BP_GetCollisionCapsule final
{
public:
	class UCapsuleComponent*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SoundTrap_Base_BP_C_BP_GetCollisionCapsule) == 0x000008, "Wrong alignment on SoundTrap_Base_BP_C_BP_GetCollisionCapsule");
static_assert(sizeof(SoundTrap_Base_BP_C_BP_GetCollisionCapsule) == 0x000008, "Wrong size on SoundTrap_Base_BP_C_BP_GetCollisionCapsule");
static_assert(offsetof(SoundTrap_Base_BP_C_BP_GetCollisionCapsule, ReturnValue) == 0x000000, "Member 'SoundTrap_Base_BP_C_BP_GetCollisionCapsule::ReturnValue' has a wrong offset!");

}

