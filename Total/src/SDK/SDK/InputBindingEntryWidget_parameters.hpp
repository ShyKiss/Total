#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputBindingEntryWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.ExecuteUbergraph_InputBindingEntryWidget
// 0x0038 (0x0038 - 0x0000)
struct InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsRemappingInProgress;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsRemappingPrimary;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue_1;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget) == 0x000008, "Wrong alignment on InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget");
static_assert(sizeof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget) == 0x000038, "Wrong size on InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, EntryPoint) == 0x000000, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, CallFunc_GetMenuManager_ReturnValue) == 0x000008, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, Temp_bool_Variable) == 0x000010, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x000011, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, Temp_byte_Variable) == 0x000012, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, Temp_byte_Variable_1) == 0x000013, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, Temp_bool_Variable_1) == 0x000014, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, K2Node_Event_bIsRemappingInProgress) == 0x000016, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::K2Node_Event_bIsRemappingInProgress' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, K2Node_Event_bIsRemappingPrimary) == 0x000017, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::K2Node_Event_bIsRemappingPrimary' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, CallFunc_GetMenuManager_ReturnValue_1) == 0x000018, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::CallFunc_GetMenuManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, CallFunc_BP_IsUsingGamepad_ReturnValue_1) == 0x000020, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::CallFunc_BP_IsUsingGamepad_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, K2Node_Select_Default) == 0x000028, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, CallFunc_BooleanOR_ReturnValue_1) == 0x000030, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, K2Node_Select_Default_1) == 0x000031, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::K2Node_Select_Default_1' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.UpdateRemappingStatus
// 0x0002 (0x0002 - 0x0000)
struct InputBindingEntryWidget_C_UpdateRemappingStatus final
{
public:
	bool                                          bIsRemappingInProgress;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsRemappingPrimary_0;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputBindingEntryWidget_C_UpdateRemappingStatus) == 0x000001, "Wrong alignment on InputBindingEntryWidget_C_UpdateRemappingStatus");
static_assert(sizeof(InputBindingEntryWidget_C_UpdateRemappingStatus) == 0x000002, "Wrong size on InputBindingEntryWidget_C_UpdateRemappingStatus");
static_assert(offsetof(InputBindingEntryWidget_C_UpdateRemappingStatus, bIsRemappingInProgress) == 0x000000, "Member 'InputBindingEntryWidget_C_UpdateRemappingStatus::bIsRemappingInProgress' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_UpdateRemappingStatus, bIsRemappingPrimary_0) == 0x000001, "Member 'InputBindingEntryWidget_C_UpdateRemappingStatus::bIsRemappingPrimary_0' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.Init
// 0x0010 (0x0010 - 0x0000)
struct InputBindingEntryWidget_C_Init final
{
public:
	class UInputBindingsMenu_C*                   ParentMenu_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputBindingEntryWidget_C_Init) == 0x000008, "Wrong alignment on InputBindingEntryWidget_C_Init");
static_assert(sizeof(InputBindingEntryWidget_C_Init) == 0x000010, "Wrong size on InputBindingEntryWidget_C_Init");
static_assert(offsetof(InputBindingEntryWidget_C_Init, ParentMenu_0) == 0x000000, "Member 'InputBindingEntryWidget_C_Init::ParentMenu_0' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Init, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'InputBindingEntryWidget_C_Init::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.RefreshValue
// 0x0002 (0x0002 - 0x0000)
struct InputBindingEntryWidget_C_RefreshValue final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputBindingEntryWidget_C_RefreshValue) == 0x000001, "Wrong alignment on InputBindingEntryWidget_C_RefreshValue");
static_assert(sizeof(InputBindingEntryWidget_C_RefreshValue) == 0x000002, "Wrong size on InputBindingEntryWidget_C_RefreshValue");
static_assert(offsetof(InputBindingEntryWidget_C_RefreshValue, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'InputBindingEntryWidget_C_RefreshValue::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_RefreshValue, CallFunc_IsHovered_ReturnValue) == 0x000001, "Member 'InputBindingEntryWidget_C_RefreshValue::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.Highlight
// 0x0040 (0x0040 - 0x0000)
struct InputBindingEntryWidget_C_Highlight final
{
public:
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsValid_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(InputBindingEntryWidget_C_Highlight) == 0x000008, "Wrong alignment on InputBindingEntryWidget_C_Highlight");
static_assert(sizeof(InputBindingEntryWidget_C_Highlight) == 0x000040, "Wrong size on InputBindingEntryWidget_C_Highlight");
static_assert(offsetof(InputBindingEntryWidget_C_Highlight, CallFunc_Key_IsValid_ReturnValue) == 0x000000, "Member 'InputBindingEntryWidget_C_Highlight::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Highlight, CallFunc_Key_IsValid_ReturnValue_1) == 0x000001, "Member 'InputBindingEntryWidget_C_Highlight::CallFunc_Key_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Highlight, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'InputBindingEntryWidget_C_Highlight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Highlight, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'InputBindingEntryWidget_C_Highlight::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Highlight, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'InputBindingEntryWidget_C_Highlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.Downplay
// 0x0040 (0x0040 - 0x0000)
struct InputBindingEntryWidget_C_Downplay final
{
public:
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsValid_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(InputBindingEntryWidget_C_Downplay) == 0x000008, "Wrong alignment on InputBindingEntryWidget_C_Downplay");
static_assert(sizeof(InputBindingEntryWidget_C_Downplay) == 0x000040, "Wrong size on InputBindingEntryWidget_C_Downplay");
static_assert(offsetof(InputBindingEntryWidget_C_Downplay, CallFunc_Key_IsValid_ReturnValue) == 0x000000, "Member 'InputBindingEntryWidget_C_Downplay::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Downplay, CallFunc_Key_IsValid_ReturnValue_1) == 0x000001, "Member 'InputBindingEntryWidget_C_Downplay::CallFunc_Key_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Downplay, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'InputBindingEntryWidget_C_Downplay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Downplay, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'InputBindingEntryWidget_C_Downplay::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Downplay, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'InputBindingEntryWidget_C_Downplay::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

