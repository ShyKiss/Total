#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Base_PropagandaPoster_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.BP_MapCheck
// 0x0250 (0x0250 - 0x0000)
struct Base_PropagandaPoster_BP_C_BP_MapCheck final
{
public:
	EMapCheckType                                 CheckType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutErrorMsg;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Forward;                                           // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorString;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABase_PropagandaPoster_BP_C*>    CallFunc_GetAllActorsOfClass_OutActors;            // 0x00D8(0x0010)(ReferenceParm)
	class ABase_PropagandaPoster_BP_C*            CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x00F8(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0118(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0168(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0198(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01F8(0x0018)()
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_BP_MapCheck) == 0x000008, "Wrong alignment on Base_PropagandaPoster_BP_C_BP_MapCheck");
static_assert(sizeof(Base_PropagandaPoster_BP_C_BP_MapCheck) == 0x000250, "Wrong size on Base_PropagandaPoster_BP_C_BP_MapCheck");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CheckType) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CheckType' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, OutErrorMsg) == 0x000008, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::OutErrorMsg' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, ReturnValue) == 0x000018, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, Forward) == 0x00001C, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::Forward' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, Location) == 0x000028, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::Location' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, ErrorString) == 0x000038, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::ErrorString' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_GetActorForwardVector_ReturnValue) == 0x000058, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_IsEmpty_ReturnValue) == 0x000080, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C8, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000D8, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0000F8, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, K2Node_MakeStruct_FormatArgumentData_1) == 0x000118, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, K2Node_MakeArray_Array) == 0x000158, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000168, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Format_ReturnValue) == 0x000180, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, K2Node_MakeStruct_FormatArgumentData_2) == 0x000198, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Conv_TextToString_ReturnValue) == 0x0001D8, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, K2Node_MakeArray_Array_1) == 0x0001E8, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Format_ReturnValue_1) == 0x0001F8, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000210, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000220, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Dot_VectorVector_ReturnValue) == 0x000230, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000234, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000238, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000244, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000248, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000249, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BP_MapCheck, CallFunc_IsEmpty_ReturnValue_1) == 0x00024A, "Member 'Base_PropagandaPoster_BP_C_BP_MapCheck::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.OnWorldPopulateFinishedTimeSliced
// 0x0001 (0x0001 - 0x0000)
struct Base_PropagandaPoster_BP_C_OnWorldPopulateFinishedTimeSliced final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_OnWorldPopulateFinishedTimeSliced) == 0x000001, "Wrong alignment on Base_PropagandaPoster_BP_C_OnWorldPopulateFinishedTimeSliced");
static_assert(sizeof(Base_PropagandaPoster_BP_C_OnWorldPopulateFinishedTimeSliced) == 0x000001, "Wrong size on Base_PropagandaPoster_BP_C_OnWorldPopulateFinishedTimeSliced");
static_assert(offsetof(Base_PropagandaPoster_BP_C_OnWorldPopulateFinishedTimeSliced, ReturnValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_OnWorldPopulateFinishedTimeSliced::ReturnValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.FixUp
// 0x0001 (0x0001 - 0x0000)
struct Base_PropagandaPoster_BP_C_FixUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_FixUp) == 0x000001, "Wrong alignment on Base_PropagandaPoster_BP_C_FixUp");
static_assert(sizeof(Base_PropagandaPoster_BP_C_FixUp) == 0x000001, "Wrong size on Base_PropagandaPoster_BP_C_FixUp");
static_assert(offsetof(Base_PropagandaPoster_BP_C_FixUp, ReturnValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_FixUp::ReturnValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.GetStateName
// 0x0028 (0x0028 - 0x0000)
struct Base_PropagandaPoster_BP_C_GetStateName final
{
public:
	class FString                                 StateA;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StateB;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_GetStateName) == 0x000008, "Wrong alignment on Base_PropagandaPoster_BP_C_GetStateName");
static_assert(sizeof(Base_PropagandaPoster_BP_C_GetStateName) == 0x000028, "Wrong size on Base_PropagandaPoster_BP_C_GetStateName");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetStateName, StateA) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_GetStateName::StateA' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetStateName, StateB) == 0x000010, "Member 'Base_PropagandaPoster_BP_C_GetStateName::StateB' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetStateName, ReturnValue) == 0x000020, "Member 'Base_PropagandaPoster_BP_C_GetStateName::ReturnValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.SnapToFloor
// 0x0238 (0x0238 - 0x0000)
struct Base_PropagandaPoster_BP_C_SnapToFloor final
{
public:
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                TraceHorizontalPosition;                           // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x004C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActorCollisionOverlapInEditor_ReturnValue; // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x01AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_SnapToFloor) == 0x000008, "Wrong alignment on Base_PropagandaPoster_BP_C_SnapToFloor");
static_assert(sizeof(Base_PropagandaPoster_BP_C_SnapToFloor) == 0x000238, "Wrong size on Base_PropagandaPoster_BP_C_SnapToFloor");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, ActorsToIgnore) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, TraceHorizontalPosition) == 0x000010, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::TraceHorizontalPosition' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_Add_VectorVector_ReturnValue) == 0x00001C, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000028, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakVector_X) == 0x000040, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakVector_Y) == 0x000044, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakVector_Z) == 0x000048, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_LineTraceSingle_OutHit) == 0x00004C, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D4, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000D8, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E4, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F0, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F1, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_Location) == 0x0000FC, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_ImpactPoint) == 0x000108, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_Normal) == 0x000114, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_ImpactNormal) == 0x000120, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_PhysMat) == 0x000130, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_HitActor) == 0x000138, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_HitComponent) == 0x000140, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_HitBoneName) == 0x000148, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_HitItem) == 0x000150, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_ElementIndex) == 0x000154, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_FaceIndex) == 0x000158, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_TraceStart) == 0x00015C, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakHitResult_TraceEnd) == 0x000168, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000174, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_Array_Add_ReturnValue) == 0x000180, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000184, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_CanActorCollisionOverlapInEditor_ReturnValue) == 0x000190, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_CanActorCollisionOverlapInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakVector_X_1) == 0x000194, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakVector_Y_1) == 0x000198, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_BreakVector_Z_1) == 0x00019C, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_MakeVector_ReturnValue) == 0x0001A0, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0001AC, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SnapToFloor, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000234, "Member 'Base_PropagandaPoster_BP_C_SnapToFloor::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.SetRandomMaterial
// 0x0010 (0x0010 - 0x0000)
struct Base_PropagandaPoster_BP_C_SetRandomMaterial final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_SetRandomMaterial) == 0x000008, "Wrong alignment on Base_PropagandaPoster_BP_C_SetRandomMaterial");
static_assert(sizeof(Base_PropagandaPoster_BP_C_SetRandomMaterial) == 0x000010, "Wrong size on Base_PropagandaPoster_BP_C_SetRandomMaterial");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SetRandomMaterial, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_SetRandomMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SetRandomMaterial, CallFunc_RandomInteger_ReturnValue) == 0x000004, "Member 'Base_PropagandaPoster_BP_C_SetRandomMaterial::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SetRandomMaterial, CallFunc_Array_Get_Item) == 0x000008, "Member 'Base_PropagandaPoster_BP_C_SetRandomMaterial::CallFunc_Array_Get_Item' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.Refresh Visibility
// 0x0006 (0x0006 - 0x0000)
struct Base_PropagandaPoster_BP_C_Refresh_Visibility final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsStateSet_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsStateA_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_Refresh_Visibility) == 0x000001, "Wrong alignment on Base_PropagandaPoster_BP_C_Refresh_Visibility");
static_assert(sizeof(Base_PropagandaPoster_BP_C_Refresh_Visibility) == 0x000006, "Wrong size on Base_PropagandaPoster_BP_C_Refresh_Visibility");
static_assert(offsetof(Base_PropagandaPoster_BP_C_Refresh_Visibility, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_Refresh_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_Refresh_Visibility, CallFunc_BP_IsStateSet_ReturnValue) == 0x000001, "Member 'Base_PropagandaPoster_BP_C_Refresh_Visibility::CallFunc_BP_IsStateSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_Refresh_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Base_PropagandaPoster_BP_C_Refresh_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_Refresh_Visibility, CallFunc_BP_IsStateA_ReturnValue) == 0x000003, "Member 'Base_PropagandaPoster_BP_C_Refresh_Visibility::CallFunc_BP_IsStateA_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_Refresh_Visibility, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'Base_PropagandaPoster_BP_C_Refresh_Visibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_Refresh_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'Base_PropagandaPoster_BP_C_Refresh_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.SelectPosterMesh
// 0x0010 (0x0010 - 0x0000)
struct Base_PropagandaPoster_BP_C_SelectPosterMesh final
{
public:
	TArray<class UActorComponent*>                K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_SelectPosterMesh) == 0x000008, "Wrong alignment on Base_PropagandaPoster_BP_C_SelectPosterMesh");
static_assert(sizeof(Base_PropagandaPoster_BP_C_SelectPosterMesh) == 0x000010, "Wrong size on Base_PropagandaPoster_BP_C_SelectPosterMesh");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SelectPosterMesh, K2Node_MakeArray_Array) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_SelectPosterMesh::K2Node_MakeArray_Array' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.IsMeshOffsetValid
// 0x0034 (0x0034 - 0x0000)
struct Base_PropagandaPoster_BP_C_IsMeshOffsetValid final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMeshOffsetFromCenter_HeightOffset;     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeshOffsetFromCenter_Angle;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid) == 0x000004, "Wrong alignment on Base_PropagandaPoster_BP_C_IsMeshOffsetValid");
static_assert(sizeof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid) == 0x000034, "Wrong size on Base_PropagandaPoster_BP_C_IsMeshOffsetValid");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, NewParam) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::NewParam' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BreakVector_X) == 0x000004, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BreakVector_Y) == 0x000008, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BreakVector_Z) == 0x00000C, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BreakVector_X_1) == 0x000010, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BreakVector_Y_1) == 0x000014, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BreakVector_Z_1) == 0x000018, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x00001D, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_GetMeshOffsetFromCenter_HeightOffset) == 0x000020, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_GetMeshOffsetFromCenter_HeightOffset' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_GetMeshOffsetFromCenter_Angle) == 0x000024, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_GetMeshOffsetFromCenter_Angle' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000029, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00002A, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00002B, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BooleanAND_ReturnValue_2) == 0x00002E, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BooleanAND_ReturnValue_3) == 0x00002F, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsMeshOffsetValid, CallFunc_BooleanAND_ReturnValue_4) == 0x000030, "Member 'Base_PropagandaPoster_BP_C_IsMeshOffsetValid::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.RandomizePoster
// 0x014C (0x014C - 0x0000)
struct Base_PropagandaPoster_BP_C_RandomizePoster final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_RandomizePoster) == 0x000004, "Wrong alignment on Base_PropagandaPoster_BP_C_RandomizePoster");
static_assert(sizeof(Base_PropagandaPoster_BP_C_RandomizePoster) == 0x00014C, "Wrong size on Base_PropagandaPoster_BP_C_RandomizePoster");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_BreakRotator_Roll) == 0x000008, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_BreakRotator_Pitch) == 0x00000C, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_BreakRotator_Yaw) == 0x000010, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000014, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_BreakVector_X) == 0x000024, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_BreakVector_Y) == 0x000028, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_BreakVector_Z) == 0x00002C, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000030, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_RandomizePoster, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000C4, "Member 'Base_PropagandaPoster_BP_C_RandomizePoster::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct Base_PropagandaPoster_BP_C_UserConstructionScript final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_UserConstructionScript) == 0x000010, "Wrong alignment on Base_PropagandaPoster_BP_C_UserConstructionScript");
static_assert(sizeof(Base_PropagandaPoster_BP_C_UserConstructionScript) == 0x000040, "Wrong size on Base_PropagandaPoster_BP_C_UserConstructionScript");
static_assert(offsetof(Base_PropagandaPoster_BP_C_UserConstructionScript, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_UserConstructionScript::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000030, "Member 'Base_PropagandaPoster_BP_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000034, "Member 'Base_PropagandaPoster_BP_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000038, "Member 'Base_PropagandaPoster_BP_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.OnPostActorsPasted
// 0x0010 (0x0010 - 0x0000)
struct Base_PropagandaPoster_BP_C_OnPostActorsPasted final
{
public:
	TArray<class AActor*>                         PastedActors;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_OnPostActorsPasted) == 0x000008, "Wrong alignment on Base_PropagandaPoster_BP_C_OnPostActorsPasted");
static_assert(sizeof(Base_PropagandaPoster_BP_C_OnPostActorsPasted) == 0x000010, "Wrong size on Base_PropagandaPoster_BP_C_OnPostActorsPasted");
static_assert(offsetof(Base_PropagandaPoster_BP_C_OnPostActorsPasted, PastedActors) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_OnPostActorsPasted::PastedActors' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.PostDuplicated
// 0x0008 (0x0008 - 0x0000)
struct Base_PropagandaPoster_BP_C_PostDuplicated final
{
public:
	class AActor*                                 DuplicationParent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_PostDuplicated) == 0x000008, "Wrong alignment on Base_PropagandaPoster_BP_C_PostDuplicated");
static_assert(sizeof(Base_PropagandaPoster_BP_C_PostDuplicated) == 0x000008, "Wrong size on Base_PropagandaPoster_BP_C_PostDuplicated");
static_assert(offsetof(Base_PropagandaPoster_BP_C_PostDuplicated, DuplicationParent) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_PostDuplicated::DuplicationParent' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.PostEditChange
// 0x0008 (0x0008 - 0x0000)
struct Base_PropagandaPoster_BP_C_PostEditChange final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_PostEditChange) == 0x000004, "Wrong alignment on Base_PropagandaPoster_BP_C_PostEditChange");
static_assert(sizeof(Base_PropagandaPoster_BP_C_PostEditChange) == 0x000008, "Wrong size on Base_PropagandaPoster_BP_C_PostEditChange");
static_assert(offsetof(Base_PropagandaPoster_BP_C_PostEditChange, PropertyName) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_PostEditChange::PropertyName' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.PostEditMove
// 0x0001 (0x0001 - 0x0000)
struct Base_PropagandaPoster_BP_C_PostEditMove final
{
public:
	bool                                          bFinished;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_PostEditMove) == 0x000001, "Wrong alignment on Base_PropagandaPoster_BP_C_PostEditMove");
static_assert(sizeof(Base_PropagandaPoster_BP_C_PostEditMove) == 0x000001, "Wrong size on Base_PropagandaPoster_BP_C_PostEditMove");
static_assert(offsetof(Base_PropagandaPoster_BP_C_PostEditMove, bFinished) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_PostEditMove::bFinished' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.PrepareState
// 0x0010 (0x0010 - 0x0000)
struct Base_PropagandaPoster_BP_C_PrepareState final
{
public:
	bool                                          bStateA;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 RandomOwner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_PrepareState) == 0x000008, "Wrong alignment on Base_PropagandaPoster_BP_C_PrepareState");
static_assert(sizeof(Base_PropagandaPoster_BP_C_PrepareState) == 0x000010, "Wrong size on Base_PropagandaPoster_BP_C_PrepareState");
static_assert(offsetof(Base_PropagandaPoster_BP_C_PrepareState, bStateA) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_PrepareState::bStateA' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_PrepareState, RandomOwner) == 0x000008, "Member 'Base_PropagandaPoster_BP_C_PrepareState::RandomOwner' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct Base_PropagandaPoster_BP_C_SetState final
{
public:
	bool                                          bStateA;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_SetState) == 0x000001, "Wrong alignment on Base_PropagandaPoster_BP_C_SetState");
static_assert(sizeof(Base_PropagandaPoster_BP_C_SetState) == 0x000001, "Wrong size on Base_PropagandaPoster_BP_C_SetState");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SetState, bStateA) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_SetState::bStateA' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.SetShouldBeIgnoredForLots
// 0x0001 (0x0001 - 0x0000)
struct Base_PropagandaPoster_BP_C_SetShouldBeIgnoredForLots final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_SetShouldBeIgnoredForLots) == 0x000001, "Wrong alignment on Base_PropagandaPoster_BP_C_SetShouldBeIgnoredForLots");
static_assert(sizeof(Base_PropagandaPoster_BP_C_SetShouldBeIgnoredForLots) == 0x000001, "Wrong size on Base_PropagandaPoster_BP_C_SetShouldBeIgnoredForLots");
static_assert(offsetof(Base_PropagandaPoster_BP_C_SetShouldBeIgnoredForLots, bValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_SetShouldBeIgnoredForLots::bValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Base_PropagandaPoster_BP_C_BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature final
{
public:
	class ARBPawn*                                Interactor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBInteractibleComponent*               Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature) == 0x000008, "Wrong alignment on Base_PropagandaPoster_BP_C_BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature");
static_assert(sizeof(Base_PropagandaPoster_BP_C_BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature) == 0x000010, "Wrong size on Base_PropagandaPoster_BP_C_BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature, Interactor) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature, Component) == 0x000008, "Member 'Base_PropagandaPoster_BP_C_BndEvt__InteractionComponent_K2Node_ComponentBoundEvent_1_OnInteractionEvent__DelegateSignature::Component' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.ExecuteUbergraph_Base_PropagandaPoster_BP
// 0x0220 (0x0220 - 0x0000)
struct Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_pastedActors;                         // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 K2Node_Event_duplicationParent;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_propertyName;                         // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFinished;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bStateA_1;                            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_randomOwner;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bStateA;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bValue;                               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x003C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                K2Node_ComponentBoundEvent_interactor;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBInteractibleComponent*               K2Node_ComponentBoundEvent_component;              // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMeshOffsetValid_NewParam;               // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x018C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BP_IsStateSet_ReturnValue;                // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP) == 0x000010, "Wrong alignment on Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP");
static_assert(sizeof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP) == 0x000220, "Wrong size on Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, EntryPoint) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_HasAuthority_ReturnValue_1) == 0x000005, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_Event_pastedActors) == 0x000008, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_Event_pastedActors' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_Event_duplicationParent) == 0x000018, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_Event_duplicationParent' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_Event_propertyName) == 0x000020, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_Event_propertyName' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_Event_bFinished) == 0x000028, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_Event_bFinished' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_Event_bStateA_1) == 0x000029, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_Event_bStateA_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_Event_randomOwner) == 0x000030, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_Event_randomOwner' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_Event_bStateA) == 0x000038, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_Event_bStateA' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_Event_bValue) == 0x000039, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_Event_bValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, Temp_delegate_Variable) == 0x00003C, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_ComponentBoundEvent_interactor) == 0x000050, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_ComponentBoundEvent_interactor' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_ComponentBoundEvent_component) == 0x000058, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_ComponentBoundEvent_component' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_DynamicCast_AsRB_Player) == 0x000060, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x00006C, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_MakeVector_ReturnValue_1) == 0x000088, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000A0, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BreakTransform_Location) == 0x0000DC, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BreakTransform_Scale) == 0x0000F4, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000130, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_TransformLocation_ReturnValue) == 0x00013C, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_TransformLocation_ReturnValue_1) == 0x000148, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_IsMeshOffsetValid_NewParam) == 0x000154, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_IsMeshOffsetValid_NewParam' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_SelectColor_ReturnValue) == 0x000158, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BreakVector_X) == 0x000168, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BreakVector_Y) == 0x00016C, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BreakVector_Z) == 0x000170, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BreakVector_X_1) == 0x000174, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BreakVector_Y_1) == 0x000178, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BreakVector_Z_1) == 0x00017C, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_MakeVector_ReturnValue_2) == 0x000180, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00018C, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP, CallFunc_BP_IsStateSet_ReturnValue) == 0x000214, "Member 'Base_PropagandaPoster_BP_C_ExecuteUbergraph_Base_PropagandaPoster_BP::CallFunc_BP_IsStateSet_ReturnValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.IsRandomStateSet
// 0x0001 (0x0001 - 0x0000)
struct Base_PropagandaPoster_BP_C_IsRandomStateSet final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_IsRandomStateSet) == 0x000001, "Wrong alignment on Base_PropagandaPoster_BP_C_IsRandomStateSet");
static_assert(sizeof(Base_PropagandaPoster_BP_C_IsRandomStateSet) == 0x000001, "Wrong size on Base_PropagandaPoster_BP_C_IsRandomStateSet");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsRandomStateSet, ReturnValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_IsRandomStateSet::ReturnValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.IsStateA
// 0x0002 (0x0002 - 0x0000)
struct Base_PropagandaPoster_BP_C_IsStateA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsStateA_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_IsStateA) == 0x000001, "Wrong alignment on Base_PropagandaPoster_BP_C_IsStateA");
static_assert(sizeof(Base_PropagandaPoster_BP_C_IsStateA) == 0x000002, "Wrong size on Base_PropagandaPoster_BP_C_IsStateA");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsStateA, ReturnValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_IsStateA::ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_IsStateA, CallFunc_BP_IsStateA_ReturnValue) == 0x000001, "Member 'Base_PropagandaPoster_BP_C_IsStateA::CallFunc_BP_IsStateA_ReturnValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.ShouldBeIgnoredForLots
// 0x0002 (0x0002 - 0x0000)
struct Base_PropagandaPoster_BP_C_ShouldBeIgnoredForLots final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_ShouldBeIgnoredForLots) == 0x000001, "Wrong alignment on Base_PropagandaPoster_BP_C_ShouldBeIgnoredForLots");
static_assert(sizeof(Base_PropagandaPoster_BP_C_ShouldBeIgnoredForLots) == 0x000002, "Wrong size on Base_PropagandaPoster_BP_C_ShouldBeIgnoredForLots");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ShouldBeIgnoredForLots, ReturnValue) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_ShouldBeIgnoredForLots::ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_ShouldBeIgnoredForLots, CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue) == 0x000001, "Member 'Base_PropagandaPoster_BP_C_ShouldBeIgnoredForLots::CallFunc_BP_ShouldBeIgnoredForLots_ReturnValue' has a wrong offset!");

// Function Base_PropagandaPoster_BP.Base_PropagandaPoster_BP_C.GetMeshOffsetFromCenter
// 0x002C (0x002C - 0x0000)
struct Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter final
{
public:
	float                                         HeightOffset;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter) == 0x000004, "Wrong alignment on Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter");
static_assert(sizeof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter) == 0x00002C, "Wrong size on Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter, HeightOffset) == 0x000000, "Member 'Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter::HeightOffset' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter, Angle) == 0x000004, "Member 'Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter::Angle' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter, CallFunc_BreakRotator_Roll) == 0x000008, "Member 'Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter, CallFunc_BreakRotator_Pitch) == 0x00000C, "Member 'Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter, CallFunc_BreakRotator_Yaw) == 0x000010, "Member 'Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000014, "Member 'Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter, CallFunc_BreakVector_X) == 0x000020, "Member 'Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter, CallFunc_BreakVector_Y) == 0x000024, "Member 'Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter, CallFunc_BreakVector_Z) == 0x000028, "Member 'Base_PropagandaPoster_BP_C_GetMeshOffsetFromCenter::CallFunc_BreakVector_Z' has a wrong offset!");

}

