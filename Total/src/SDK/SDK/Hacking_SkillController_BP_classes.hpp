#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hacking_SkillController_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Hacking_SkillController_BP.Hacking_SkillController_BP_C
// 0x0040 (0x0CB0 - 0x0C70)
class AHacking_SkillController_BP_C final : public ARBHackingSkillItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ScapegoatDevice_NeedleMinus01;                     // 0x0C78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   FogLight;                                          // 0x0C80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Ngr_SkillDeactivate;                               // 0x0C88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightOn_Intensity_B5DAD5A3493AA9904BB8618456D85FBD; // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LightOn__Direction_B5DAD5A3493AA9904BB8618456D85FBD; // 0x0C94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C95[0x3];                                      // 0x0C95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LightOn;                                           // 0x0C98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DesiredLightIntensity;                             // 0x0CA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NeedleProgress;                                    // 0x0CA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasHackabledInFocus;                              // 0x0CA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsProgressing;                                    // 0x0CA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bHasProgressAudioLoop;                             // 0x0CAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bHasFocusAudioLoop;                                // 0x0CAB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         LightCount;                                        // 0x0CAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Hacking_SkillController_BP(int32 EntryPoint);
	void Event_OnHackingInProgressChanged();
	void Event_OnFocusedHackableChanged(class UObject* HackableComponent);
	void On_Skill_Deactivate_FX();
	void LightOn__UpdateFunc();
	void LightOn__FinishedFunc();
	bool BP_TickItem(float DeltaTime);
	void TickLight(bool* bKeepTicking);
	void TickProgress(float DeltaTime, bool* bKeepTicking);
	void SetHasHackabledInFocus(bool bNewHasHackableInFocus);
	void TickAudioProgress();
	void RefreshAudioState();
	void RefreshLightCount();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Hacking_SkillController_BP_C">();
	}
	static class AHacking_SkillController_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHacking_SkillController_BP_C>();
	}
};
static_assert(alignof(AHacking_SkillController_BP_C) == 0x000010, "Wrong alignment on AHacking_SkillController_BP_C");
static_assert(sizeof(AHacking_SkillController_BP_C) == 0x000CB0, "Wrong size on AHacking_SkillController_BP_C");
static_assert(offsetof(AHacking_SkillController_BP_C, UberGraphFrame) == 0x000C70, "Member 'AHacking_SkillController_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, ScapegoatDevice_NeedleMinus01) == 0x000C78, "Member 'AHacking_SkillController_BP_C::ScapegoatDevice_NeedleMinus01' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, FogLight) == 0x000C80, "Member 'AHacking_SkillController_BP_C::FogLight' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, Ngr_SkillDeactivate) == 0x000C88, "Member 'AHacking_SkillController_BP_C::Ngr_SkillDeactivate' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, LightOn_Intensity_B5DAD5A3493AA9904BB8618456D85FBD) == 0x000C90, "Member 'AHacking_SkillController_BP_C::LightOn_Intensity_B5DAD5A3493AA9904BB8618456D85FBD' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, LightOn__Direction_B5DAD5A3493AA9904BB8618456D85FBD) == 0x000C94, "Member 'AHacking_SkillController_BP_C::LightOn__Direction_B5DAD5A3493AA9904BB8618456D85FBD' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, LightOn) == 0x000C98, "Member 'AHacking_SkillController_BP_C::LightOn' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, DesiredLightIntensity) == 0x000CA0, "Member 'AHacking_SkillController_BP_C::DesiredLightIntensity' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, NeedleProgress) == 0x000CA4, "Member 'AHacking_SkillController_BP_C::NeedleProgress' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, bHasHackabledInFocus) == 0x000CA8, "Member 'AHacking_SkillController_BP_C::bHasHackabledInFocus' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, bIsProgressing) == 0x000CA9, "Member 'AHacking_SkillController_BP_C::bIsProgressing' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, bHasProgressAudioLoop) == 0x000CAA, "Member 'AHacking_SkillController_BP_C::bHasProgressAudioLoop' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, bHasFocusAudioLoop) == 0x000CAB, "Member 'AHacking_SkillController_BP_C::bHasFocusAudioLoop' has a wrong offset!");
static_assert(offsetof(AHacking_SkillController_BP_C, LightCount) == 0x000CAC, "Member 'AHacking_SkillController_BP_C::LightCount' has a wrong offset!");

}

