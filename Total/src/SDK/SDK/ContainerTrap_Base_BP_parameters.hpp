#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContainerTrap_Base_BP

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ContainerTrap_Base_BP.ContainerTrap_Base_BP_C.UpdateGas
// 0x0050 (0x0050 - 0x0000)
struct ContainerTrap_Base_BP_C_UpdateGas final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ContainerTrap_Base_BP_C_UpdateGas) == 0x000008, "Wrong alignment on ContainerTrap_Base_BP_C_UpdateGas");
static_assert(sizeof(ContainerTrap_Base_BP_C_UpdateGas) == 0x000050, "Wrong size on ContainerTrap_Base_BP_C_UpdateGas");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ContainerTrap_Base_BP_C_UpdateGas::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ContainerTrap_Base_BP_C_UpdateGas::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ContainerTrap_Base_BP_C_UpdateGas::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, CallFunc_GetFloatValue_ReturnValue) == 0x00000C, "Member 'ContainerTrap_Base_BP_C_UpdateGas::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000010, "Member 'ContainerTrap_Base_BP_C_UpdateGas::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ContainerTrap_Base_BP_C_UpdateGas::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, CallFunc_Array_Get_Item) == 0x000028, "Member 'ContainerTrap_Base_BP_C_UpdateGas::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'ContainerTrap_Base_BP_C_UpdateGas::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, K2Node_DynamicCast_AsRB_Player) == 0x000038, "Member 'ContainerTrap_Base_BP_C_UpdateGas::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ContainerTrap_Base_BP_C_UpdateGas::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'ContainerTrap_Base_BP_C_UpdateGas::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_UpdateGas, CallFunc_Array_Contains_ReturnValue) == 0x000048, "Member 'ContainerTrap_Base_BP_C_UpdateGas::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function ContainerTrap_Base_BP.ContainerTrap_Base_BP_C.BndEvt__ContainerTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ContainerTrap_Base_BP_C_BndEvt__ContainerTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature final
{
public:
	class URBHackableComponent*                   HackableComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerTrap_Base_BP_C_BndEvt__ContainerTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on ContainerTrap_Base_BP_C_BndEvt__ContainerTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature");
static_assert(sizeof(ContainerTrap_Base_BP_C_BndEvt__ContainerTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong size on ContainerTrap_Base_BP_C_BndEvt__ContainerTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature");
static_assert(offsetof(ContainerTrap_Base_BP_C_BndEvt__ContainerTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature, HackableComponent) == 0x000000, "Member 'ContainerTrap_Base_BP_C_BndEvt__ContainerTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature::HackableComponent' has a wrong offset!");

// Function ContainerTrap_Base_BP.ContainerTrap_Base_BP_C.ExecuteUbergraph_ContainerTrap_Base_BP
// 0x0128 (0x0128 - 0x0000)
struct ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0038(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUniqueVariatorTypeValue_outValue;      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetUniqueVariatorTypeValue_ReturnValue;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBHackableComponent*                   K2Node_ComponentBoundEvent_hackableComponent;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHackState                                    CallFunc_GetCurrentHackState_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHackState                                    CallFunc_GetCurrentHackState_ReturnValue_1;        // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP) == 0x000008, "Wrong alignment on ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP");
static_assert(sizeof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP) == 0x000128, "Wrong size on ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, EntryPoint) == 0x000000, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, Temp_struct_Variable) == 0x000008, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, Temp_delegate_Variable) == 0x000018, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, Temp_struct_Variable_1) == 0x000028, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, Temp_delegate_Variable_1) == 0x000038, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_HasAuthority_ReturnValue) == 0x000048, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_PostAkEvent_ReturnValue) == 0x00004C, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000050, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_HasAuthority_ReturnValue_1) == 0x000051, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_K2_SetTimer_ReturnValue) == 0x000058, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_GetFloatValue_ReturnValue) == 0x000060, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_GetUniqueVariatorTypeValue_outValue) == 0x000064, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_GetUniqueVariatorTypeValue_outValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_GetUniqueVariatorTypeValue_ReturnValue) == 0x000068, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_GetUniqueVariatorTypeValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, K2Node_ComponentBoundEvent_hackableComponent) == 0x000070, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::K2Node_ComponentBoundEvent_hackableComponent' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_GetCurrentHackState_ReturnValue) == 0x00007C, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_GetCurrentHackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000084, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000085, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_GetCurrentHackState_ReturnValue_1) == 0x000086, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_GetCurrentHackState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_Lerp_ReturnValue) == 0x000088, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00008C, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00009C, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP, CallFunc_PostAkEvent_ReturnValue_1) == 0x000124, "Member 'ContainerTrap_Base_BP_C_ExecuteUbergraph_ContainerTrap_Base_BP::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

}

