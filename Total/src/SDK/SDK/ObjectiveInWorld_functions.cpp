#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ObjectiveInWorld

#include "Basic.hpp"

#include "ObjectiveInWorld_classes.hpp"
#include "ObjectiveInWorld_parameters.hpp"


namespace SDK
{

// Function ObjectiveInWorld.ObjectiveInWorld_C.ExecuteUbergraph_ObjectiveInWorld
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UObjectiveInWorld_C::ExecuteUbergraph_ObjectiveInWorld(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "ExecuteUbergraph_ObjectiveInWorld");

	Params::ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.Event_OnWatchedPlayerChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class ARBPlayer*                        OldPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARBPlayer*                        NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UObjectiveInWorld_C::Event_OnWatchedPlayerChanged(class ARBPlayer* OldPlayer, class ARBPlayer* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "Event_OnWatchedPlayerChanged");

	Params::ObjectiveInWorld_C_Event_OnWatchedPlayerChanged Parms{};

	Parms.OldPlayer = OldPlayer;
	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.Event_Hide
// (Event, Public, BlueprintEvent)

void UObjectiveInWorld_C::Event_Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "Event_Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.Event_Show
// (Event, Public, BlueprintEvent)

void UObjectiveInWorld_C::Event_Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "Event_Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UObjectiveInWorld_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UObjectiveInWorld_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "PreConstruct");

	Params::ObjectiveInWorld_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.Update Distance Effects
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBWorldIconUpdateContext        UpdateContext                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
// bool                                    SkipTransition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UObjectiveInWorld_C::Update_Distance_Effects(const struct FRBWorldIconUpdateContext& UpdateContext, bool SkipTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "Update Distance Effects");

	Params::ObjectiveInWorld_C_Update_Distance_Effects Parms{};

	Parms.UpdateContext = std::move(UpdateContext);
	Parms.SkipTransition = SkipTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.UpdateIcon
// (Public, BlueprintCallable, BlueprintEvent)

void UObjectiveInWorld_C::UpdateIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "UpdateIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.UpdateRippleDisplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UObjectiveInWorld_C::UpdateRippleDisplay(bool A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "UpdateRippleDisplay");

	Params::ObjectiveInWorld_C_UpdateRippleDisplay Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.SetupRipple
// (Public, BlueprintCallable, BlueprintEvent)

void UObjectiveInWorld_C::SetupRipple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "SetupRipple");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.UpdateIconImage
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UObjectiveInWorld_C::UpdateIconImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "UpdateIconImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.Event_DrawHudUpdate
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBWorldIconUpdateContext        UpdateContext                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void UObjectiveInWorld_C::Event_DrawHudUpdate(const struct FRBWorldIconUpdateContext& UpdateContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "Event_DrawHudUpdate");

	Params::ObjectiveInWorld_C_Event_DrawHudUpdate Parms{};

	Parms.UpdateContext = std::move(UpdateContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.OnIconIdentificationChanged
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IdentificationIndex                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UObjectiveInWorld_C::OnIconIdentificationChanged(const int32 IdentificationIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "OnIconIdentificationChanged");

	Params::ObjectiveInWorld_C_OnIconIdentificationChanged Parms{};

	Parms.IdentificationIndex = IdentificationIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.GetLetterFromIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Letter                                                 (Parm, OutParm)

void UObjectiveInWorld_C::GetLetterFromIndex(int32 Index_0, class FText* Letter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "GetLetterFromIndex");

	Params::ObjectiveInWorld_C_GetLetterFromIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Letter != nullptr)
		*Letter = std::move(Parms.Letter);
}


// Function ObjectiveInWorld.ObjectiveInWorld_C.ProcessOpacity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TargetOpacity_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UObjectiveInWorld_C::ProcessOpacity(float Distance, float* TargetOpacity_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectiveInWorld_C", "ProcessOpacity");

	Params::ObjectiveInWorld_C_ProcessOpacity Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetOpacity_0 != nullptr)
		*TargetOpacity_0 = Parms.TargetOpacity_0;
}

}

