#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlassBottle_Weapon_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SimpleMesh_ThrowableWeapon_BP_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GlassBottle_Weapon_BP.GlassBottle_Weapon_BP_C
// 0x0060 (0x0D00 - 0x0CA0)
class AGlassBottle_Weapon_BP_C final : public ASimpleMesh_ThrowableWeapon_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GlassBottle_Weapon_BP_C;            // 0x0CA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ItemWorldMeshB;                                    // 0x0CA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         ForcedVisualMeshIndex;                             // 0x0CB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB4[0x4];                                      // 0x0CB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMesh*>                    PossibleVisualMeshes;                              // 0x0CB8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UStaticMesh*>                    PossibleVisualMeshesB;                             // 0x0CC8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UStaticMesh*                            ForcedStaticMesh;                                  // 0x0CD8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            ForcedStaticMeshB;                                 // 0x0CE0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomizedVisualMeshIndex;                         // 0x0CE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HoldOffset;                                        // 0x0CEC(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRecycled;                                         // 0x0CF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF9[0x3];                                      // 0x0CF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectedVisualMeshIndex;                           // 0x0CFC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void OnRep_ForcedStaticMesh();
	void SelectVisualMeshIndex();
	void OnRep_SelectedVisualMeshIndex();
	void ForceMeshes(class UStaticMesh* StaticMesh, class UStaticMesh* StaticMeshB, const struct FVector& HoldOffset_0);
	void RefreshVisual();
	void ReceiveBeginPlay();
	void BP_OnGroundAndPoundCounter();
	void BP_OnInitializeRecycledItem(class ARBPickup* OriginalItem);
	void BP_OnDropItemToFloor();
	void SetVisualVariation(int32 VisualVariation);
	void ExecuteUbergraph_GlassBottle_Weapon_BP(int32 EntryPoint);

	int32 GetVisualVariation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GlassBottle_Weapon_BP_C">();
	}
	static class AGlassBottle_Weapon_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGlassBottle_Weapon_BP_C>();
	}
};
static_assert(alignof(AGlassBottle_Weapon_BP_C) == 0x000010, "Wrong alignment on AGlassBottle_Weapon_BP_C");
static_assert(sizeof(AGlassBottle_Weapon_BP_C) == 0x000D00, "Wrong size on AGlassBottle_Weapon_BP_C");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, UberGraphFrame_GlassBottle_Weapon_BP_C) == 0x000CA0, "Member 'AGlassBottle_Weapon_BP_C::UberGraphFrame_GlassBottle_Weapon_BP_C' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, ItemWorldMeshB) == 0x000CA8, "Member 'AGlassBottle_Weapon_BP_C::ItemWorldMeshB' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, ForcedVisualMeshIndex) == 0x000CB0, "Member 'AGlassBottle_Weapon_BP_C::ForcedVisualMeshIndex' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, PossibleVisualMeshes) == 0x000CB8, "Member 'AGlassBottle_Weapon_BP_C::PossibleVisualMeshes' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, PossibleVisualMeshesB) == 0x000CC8, "Member 'AGlassBottle_Weapon_BP_C::PossibleVisualMeshesB' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, ForcedStaticMesh) == 0x000CD8, "Member 'AGlassBottle_Weapon_BP_C::ForcedStaticMesh' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, ForcedStaticMeshB) == 0x000CE0, "Member 'AGlassBottle_Weapon_BP_C::ForcedStaticMeshB' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, RandomizedVisualMeshIndex) == 0x000CE8, "Member 'AGlassBottle_Weapon_BP_C::RandomizedVisualMeshIndex' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, HoldOffset) == 0x000CEC, "Member 'AGlassBottle_Weapon_BP_C::HoldOffset' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, bRecycled) == 0x000CF8, "Member 'AGlassBottle_Weapon_BP_C::bRecycled' has a wrong offset!");
static_assert(offsetof(AGlassBottle_Weapon_BP_C, SelectedVisualMeshIndex) == 0x000CFC, "Member 'AGlassBottle_Weapon_BP_C::SelectedVisualMeshIndex' has a wrong offset!");

}

