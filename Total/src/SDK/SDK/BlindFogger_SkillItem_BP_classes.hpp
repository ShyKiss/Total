#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlindFogger_SkillItem_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "BaseFogger_SkillItem_BP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BlindFogger_SkillItem_BP.BlindFogger_SkillItem_BP_C
// 0x0010 (0x0C30 - 0x0C20)
class ABlindFogger_SkillItem_BP_C final : public ABaseFogger_SkillItem_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BlindFogger_SkillItem_BP_C;         // 0x0C20(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Ngr_SkillDeactivate;                               // 0x0C28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BlindFogger_SkillItem_BP(int32 EntryPoint);
	void On_Skill_Deactivate_FX(bool IsInZone);
	void Event_AudioDistractionTriggered();
	void Event_OnActivate();
	void Event_OnDeployed();
	void SpawnAndExplodeBomb_Client(class AActor** BombActor);
	void SpawnAndExplodeBomb_Server(class AActor** BombActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlindFogger_SkillItem_BP_C">();
	}
	static class ABlindFogger_SkillItem_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABlindFogger_SkillItem_BP_C>();
	}
};
static_assert(alignof(ABlindFogger_SkillItem_BP_C) == 0x000010, "Wrong alignment on ABlindFogger_SkillItem_BP_C");
static_assert(sizeof(ABlindFogger_SkillItem_BP_C) == 0x000C30, "Wrong size on ABlindFogger_SkillItem_BP_C");
static_assert(offsetof(ABlindFogger_SkillItem_BP_C, UberGraphFrame_BlindFogger_SkillItem_BP_C) == 0x000C20, "Member 'ABlindFogger_SkillItem_BP_C::UberGraphFrame_BlindFogger_SkillItem_BP_C' has a wrong offset!");
static_assert(offsetof(ABlindFogger_SkillItem_BP_C, Ngr_SkillDeactivate) == 0x000C28, "Member 'ABlindFogger_SkillItem_BP_C::Ngr_SkillDeactivate' has a wrong offset!");

}

