#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExplosiveWireTrap_Base_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "ExplosiveWireTrap_AttachTypeEnum_structs.hpp"


namespace SDK::Params
{

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.FixUp
// 0x0010 (0x0010 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_FixUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          bSomethingChanged;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_FixUp) == 0x000004, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_FixUp");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_FixUp) == 0x000010, "Wrong size on ExplosiveWireTrap_Base_BP_C_FixUp");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_FixUp, ReturnValue) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_FixUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_FixUp, bSomethingChanged) == 0x000001, "Member 'ExplosiveWireTrap_Base_BP_C_FixUp::bSomethingChanged' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_FixUp, CallFunc_GetCollisionProfileName_ReturnValue) == 0x000004, "Member 'ExplosiveWireTrap_Base_BP_C_FixUp::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_FixUp, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000C, "Member 'ExplosiveWireTrap_Base_BP_C_FixUp::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_FixUp, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x00000D, "Member 'ExplosiveWireTrap_Base_BP_C_FixUp::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_FixUp, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'ExplosiveWireTrap_Base_BP_C_FixUp::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.RefreshEyesMaterial
// 0x0048 (0x0048 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHackState                                    CallFunc_GetCurrentHackState_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial) == 0x000048, "Wrong size on ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, Temp_bool_Variable) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, Temp_object_Variable) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, Temp_object_Variable_1) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, CallFunc_GetCurrentHackState_ReturnValue) == 0x000028, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::CallFunc_GetCurrentHackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, K2Node_Select_Default) == 0x000030, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial, K2Node_MakeStruct_LinearColor_1) == 0x000038, "Member 'ExplosiveWireTrap_Base_BP_C_RefreshEyesMaterial::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SetVisibilityIfExists
// 0x0030 (0x0030 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists final
{
public:
	TArray<class USceneComponent*>                SceneComponent;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          bNewVisibility;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists) == 0x000030, "Wrong size on ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists, SceneComponent) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists::SceneComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists, bNewVisibility) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists::bNewVisibility' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists, CallFunc_Array_Get_Item) == 0x000020, "Member 'ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'ExplosiveWireTrap_Base_BP_C_SetVisibilityIfExists::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.ConstructExplosionDecals
// 0x0734 (0x0734 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals final
{
public:
	bool                                          OnGround;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue_1;              // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x01DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0264(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x02EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_5;           // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_2;               // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_3;               // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_2;             // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_3;             // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x03C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_4;               // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_5;               // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0478(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0484(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x04B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x04CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_2;     // 0x04E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x056C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0578(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_2;     // 0x0584(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X_5;                          // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0618(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_3;     // 0x0624(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_3;     // 0x06AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals) == 0x000004, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals) == 0x000734, "Wrong size on ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, OnGround) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::OnGround' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeVector_ReturnValue_1) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetForwardVector_ReturnValue) == 0x00001C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetForwardVector_ReturnValue_1) == 0x000028, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotFromX_ReturnValue) == 0x000034, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotFromX_ReturnValue_1) == 0x000040, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Roll) == 0x00004C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Pitch) == 0x000050, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Yaw) == 0x000054, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Roll_1) == 0x000058, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Pitch_1) == 0x00005C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Yaw_1) == 0x000060, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotator_ReturnValue) == 0x000064, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotator_ReturnValue_1) == 0x000070, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetUpVector_ReturnValue) == 0x00007C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetForwardVector_ReturnValue_2) == 0x000088, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotFromXZ_ReturnValue) == 0x0000A0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000AC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetRightVector_ReturnValue) == 0x0000B8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000D0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000DC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetUpVector_ReturnValue_1) == 0x0000E8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000F4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00017C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetForwardVector_ReturnValue_3) == 0x000188, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000194, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotFromXZ_ReturnValue_1) == 0x0001A0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotFromXZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001AC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetRightVector_ReturnValue_1) == 0x0001B8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0001C4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0001D0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0001DC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000264, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0002EC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetForwardVector_ReturnValue_4) == 0x000374, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetForwardVector_ReturnValue_5) == 0x000380, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetForwardVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotFromX_ReturnValue_2) == 0x00038C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotFromX_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotFromX_ReturnValue_3) == 0x000398, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotFromX_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetRightVector_ReturnValue_2) == 0x0003A4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_GetRightVector_ReturnValue_3) == 0x0003B0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_GetRightVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0003BC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0003C8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x0003D4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotFromX_ReturnValue_4) == 0x0003E0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotFromX_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0003EC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Roll_2) == 0x0003F8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Pitch_2) == 0x0003FC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Yaw_2) == 0x000400, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x000404, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_FloatFloat_ReturnValue) == 0x000410, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000414, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotator_ReturnValue_2) == 0x000420, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotFromX_ReturnValue_5) == 0x00042C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotFromX_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000438, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Roll_3) == 0x000444, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Pitch_3) == 0x000448, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakRotator_Yaw_3) == 0x00044C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_X) == 0x000450, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Y) == 0x000454, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Z) == 0x000458, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00045C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeVector_ReturnValue_2) == 0x000460, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeRotator_ReturnValue_3) == 0x00046C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000478, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000484, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_X_1) == 0x000490, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Y_1) == 0x000494, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Z_1) == 0x000498, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_X_2) == 0x00049C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Y_2) == 0x0004A0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Z_2) == 0x0004A4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004A8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeVector_ReturnValue_3) == 0x0004B4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_X_3) == 0x0004C0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Y_3) == 0x0004C4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Z_3) == 0x0004C8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_Add_VectorVector_ReturnValue_7) == 0x0004CC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_X_4) == 0x0004D8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Y_4) == 0x0004DC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Z_4) == 0x0004E0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_SetWorldRotation_SweepHitResult_2) == 0x0004E4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_SetWorldRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeVector_ReturnValue_4) == 0x00056C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000578, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_SetWorldLocation_SweepHitResult_2) == 0x000584, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_SetWorldLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_X_5) == 0x00060C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Y_5) == 0x000610, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_BreakVector_Z_5) == 0x000614, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_MakeVector_ReturnValue_5) == 0x000618, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_SetWorldRotation_SweepHitResult_3) == 0x000624, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_SetWorldRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals, CallFunc_K2_SetWorldLocation_SweepHitResult_3) == 0x0006AC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructExplosionDecals::CallFunc_K2_SetWorldLocation_SweepHitResult_3' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SnapSideBToGround
// 0x02C0 (0x02C0 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SnapSideBToGround final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_GetOffsetFromGroundBasedOnBracket_Offset; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CF[0x1];                                      // 0x01CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround) == 0x000010, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SnapSideBToGround");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround) == 0x0002C0, "Wrong size on ExplosiveWireTrap_Base_BP_C_SnapSideBToGround");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, Temp_object_Variable) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_GetOffsetFromGroundBasedOnBracket_Offset) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_GetOffsetFromGroundBasedOnBracket_Offset' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakTransform_Location) == 0x000014, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakTransform_Rotation) == 0x000020, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakTransform_Scale) == 0x00002C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000090, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakTransform_Location_1) == 0x0000C0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakTransform_Rotation_1) == 0x0000CC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakTransform_Scale_1) == 0x0000D8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_GetUpVector_ReturnValue) == 0x0000E4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000F0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000FC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000108, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000114, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00012C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000138, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_LineTraceSingle_OutHit) == 0x000144, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_LineTraceSingle_ReturnValue) == 0x0001CC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_bBlockingHit) == 0x0001CD, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001CE, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_Time) == 0x0001D0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_Distance) == 0x0001D4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_Location) == 0x0001D8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_Normal) == 0x0001F0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_ImpactNormal) == 0x0001FC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_PhysMat) == 0x000208, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_HitActor) == 0x000210, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_HitComponent) == 0x000218, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_HitBoneName) == 0x000220, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_HitItem) == 0x000228, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_ElementIndex) == 0x00022C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_FaceIndex) == 0x000230, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_TraceStart) == 0x000234, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_InverseTransformDirection_ReturnValue) == 0x00024C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_InverseTransformLocation_ReturnValue) == 0x000258, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000264, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000270, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_Add_VectorVector_ReturnValue_4) == 0x00027C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToGround, CallFunc_MakeTransform_ReturnValue) == 0x000290, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToGround::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.GetOffsetFromGroundBasedOnBracket
// 0x000C (0x000C - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket final
{
public:
	bool                                          bSideA;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Offset;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ExplosiveWireTrap_AttachTypeEnum              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket) == 0x000004, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket) == 0x00000C, "Wrong size on ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket, bSideA) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket::bSideA' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket, Offset) == 0x000004, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket::Offset' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket, Temp_bool_Variable) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket, K2Node_Select_Default) == 0x000009, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromGroundBasedOnBracket::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SnapSideAToGround
// 0x02C0 (0x02C0 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SnapSideAToGround final
{
public:
	float                                         CallFunc_GetOffsetFromGroundBasedOnBracket_Offset; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_EditorLineTraceSingle_OutHit;             // 0x0140(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EditorLineTraceSingle_ReturnValue;        // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CB[0x1];                                      // 0x01CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround) == 0x000010, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SnapSideAToGround");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround) == 0x0002C0, "Wrong size on ExplosiveWireTrap_Base_BP_C_SnapSideAToGround");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_GetOffsetFromGroundBasedOnBracket_Offset) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_GetOffsetFromGroundBasedOnBracket_Offset' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, Temp_object_Variable) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakTransform_Location) == 0x000050, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_GetForwardVector_ReturnValue) == 0x000074, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakTransform_Location_1) == 0x0000BC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakTransform_Rotation_1) == 0x0000C8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakTransform_Scale_1) == 0x0000D4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_GetUpVector_ReturnValue) == 0x0000E0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000EC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000F8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000104, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000110, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Add_VectorVector_ReturnValue) == 0x00011C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000128, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000134, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_EditorLineTraceSingle_OutHit) == 0x000140, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_EditorLineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_EditorLineTraceSingle_ReturnValue) == 0x0001C8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_EditorLineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_bBlockingHit) == 0x0001C9, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001CA, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_Time) == 0x0001CC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_Distance) == 0x0001D0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_Location) == 0x0001D4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_Normal) == 0x0001EC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_PhysMat) == 0x000208, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_HitActor) == 0x000210, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_HitComponent) == 0x000218, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_HitBoneName) == 0x000220, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_HitItem) == 0x000228, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_ElementIndex) == 0x00022C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_FaceIndex) == 0x000230, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_TraceStart) == 0x000234, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_InverseTransformDirection_ReturnValue) == 0x00024C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_InverseTransformLocation_ReturnValue) == 0x000258, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000264, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000270, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_Add_VectorVector_ReturnValue_4) == 0x00027C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToGround, CallFunc_MakeTransform_ReturnValue) == 0x000290, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToGround::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.GetOffsetFromWallBasedOnBracket
// 0x000C (0x000C - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket final
{
public:
	bool                                          bSideA;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Offset;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ExplosiveWireTrap_AttachTypeEnum              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket) == 0x000004, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket) == 0x00000C, "Wrong size on ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket, bSideA) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket::bSideA' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket, Offset) == 0x000004, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket::Offset' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket, Temp_bool_Variable) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket, K2Node_Select_Default) == 0x000009, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'ExplosiveWireTrap_Base_BP_C_GetOffsetFromWallBasedOnBracket::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.ContructSingleAttachPart
// 0x01B0 (0x01B0 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart final
{
public:
	ExplosiveWireTrap_AttachTypeEnum              AttachType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   MainAttach;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Bracket;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FullBracket;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_3;              // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_4;              // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_5;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0120(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart) == 0x000010, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart) == 0x0001B0, "Wrong size on ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, AttachType) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::AttachType' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, MainAttach) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::MainAttach' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, Bracket) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::Bracket' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, FullBracket) == 0x000018, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::FullBracket' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_SetStaticMesh_ReturnValue) == 0x000050, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000054, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0000DC, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_SetStaticMesh_ReturnValue_2) == 0x0000DD, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_SetStaticMesh_ReturnValue_3) == 0x0000DE, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_SetStaticMesh_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_SetStaticMesh_ReturnValue_4) == 0x0000DF, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_SetStaticMesh_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_SetStaticMesh_ReturnValue_5) == 0x0000E0, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_SetStaticMesh_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, K2Node_SwitchEnum_CmpSuccess) == 0x0000E1, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000E2, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000E3, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_MakeTransform_ReturnValue_1) == 0x0000F0, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000120, "Member 'ExplosiveWireTrap_Base_BP_C_ContructSingleAttachPart::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SetLoopingSound
// 0x0068 (0x0068 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SetLoopingSound final
{
public:
	bool                                          bShouldLoop;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0040(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SetLoopingSound");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound) == 0x000068, "Wrong size on ExplosiveWireTrap_Base_BP_C_SetLoopingSound");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, bShouldLoop) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::bShouldLoop' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, Temp_struct_Variable) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, Temp_delegate_Variable) == 0x000018, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, Temp_bool_Variable) == 0x000028, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, Temp_struct_Variable_1) == 0x000030, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, Temp_delegate_Variable_1) == 0x000040, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, K2Node_Select_Default) == 0x000050, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, CallFunc_PostAkEvent_ReturnValue) == 0x000058, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00005C, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetLoopingSound, CallFunc_PostAkEvent_ReturnValue_1) == 0x000060, "Member 'ExplosiveWireTrap_Base_BP_C_SetLoopingSound::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SetExplosionDecalVisibility
// 0x0002 (0x0002 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SetExplosionDecalVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SetExplosionDecalVisibility) == 0x000001, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SetExplosionDecalVisibility");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SetExplosionDecalVisibility) == 0x000002, "Wrong size on ExplosiveWireTrap_Base_BP_C_SetExplosionDecalVisibility");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetExplosionDecalVisibility, bVisible) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SetExplosionDecalVisibility::bVisible' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetExplosionDecalVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ExplosiveWireTrap_Base_BP_C_SetExplosionDecalVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SnapSideBToWall
// 0x0280 (0x0280 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SnapSideBToWall final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_GetOffsetFromWallBasedOnBracket_Offset;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall) == 0x000010, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SnapSideBToWall");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall) == 0x000280, "Wrong size on ExplosiveWireTrap_Base_BP_C_SnapSideBToWall");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, Temp_object_Variable) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_GetOffsetFromWallBasedOnBracket_Offset) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_GetOffsetFromWallBasedOnBracket_Offset' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakTransform_Location) == 0x000014, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakTransform_Rotation) == 0x000020, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakTransform_Scale) == 0x00002C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakTransform_Location_1) == 0x0000A0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakTransform_Rotation_1) == 0x0000AC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakTransform_Scale_1) == 0x0000B8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_GetForwardVector_ReturnValue) == 0x0000C4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000DC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000F4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_LineTraceSingle_OutHit) == 0x000100, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_LineTraceSingle_ReturnValue) == 0x000188, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_bBlockingHit) == 0x000189, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_bInitialOverlap) == 0x00018A, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_Time) == 0x00018C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_Distance) == 0x000190, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_Location) == 0x000194, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_Normal) == 0x0001AC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_PhysMat) == 0x0001C8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_HitActor) == 0x0001D0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_HitComponent) == 0x0001D8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_HitBoneName) == 0x0001E0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_HitItem) == 0x0001E8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_ElementIndex) == 0x0001EC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_FaceIndex) == 0x0001F0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_TraceStart) == 0x0001F4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_BreakHitResult_TraceEnd) == 0x000200, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_InverseTransformDirection_ReturnValue) == 0x00020C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_InverseTransformLocation_ReturnValue) == 0x000218, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000224, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_MakeRotFromX_ReturnValue) == 0x000230, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00023C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideBToWall, CallFunc_MakeTransform_ReturnValue) == 0x000250, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideBToWall::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SnapSideAToWall
// 0x0290 (0x0290 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SnapSideAToWall final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_GetOffsetFromWallBasedOnBracket_Offset;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0xC];                                       // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_EditorLineTraceSingle_OutHit;             // 0x0110(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EditorLineTraceSingle_ReturnValue;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B[0x1];                                      // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258[0x8];                                      // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall) == 0x000010, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SnapSideAToWall");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall) == 0x000290, "Wrong size on ExplosiveWireTrap_Base_BP_C_SnapSideAToWall");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, Temp_object_Variable) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_GetOffsetFromWallBasedOnBracket_Offset) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_GetOffsetFromWallBasedOnBracket_Offset' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakTransform_Location) == 0x000050, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakTransform_Location_1) == 0x0000B0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakTransform_Rotation_1) == 0x0000BC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakTransform_Scale_1) == 0x0000C8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_GetForwardVector_ReturnValue) == 0x0000D4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000EC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000104, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_EditorLineTraceSingle_OutHit) == 0x000110, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_EditorLineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_EditorLineTraceSingle_ReturnValue) == 0x000198, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_EditorLineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_bBlockingHit) == 0x000199, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_bInitialOverlap) == 0x00019A, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_Time) == 0x00019C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_Distance) == 0x0001A0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_Location) == 0x0001A4, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_ImpactPoint) == 0x0001B0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_Normal) == 0x0001BC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_PhysMat) == 0x0001D8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_HitActor) == 0x0001E0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_HitComponent) == 0x0001E8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_HitBoneName) == 0x0001F0, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_TraceStart) == 0x000204, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_BreakHitResult_TraceEnd) == 0x000210, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_InverseTransformDirection_ReturnValue) == 0x00021C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_InverseTransformLocation_ReturnValue) == 0x000228, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000234, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_MakeRotFromX_ReturnValue) == 0x000240, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00024C, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SnapSideAToWall, CallFunc_MakeTransform_ReturnValue) == 0x000260, "Member 'ExplosiveWireTrap_Base_BP_C_SnapSideAToWall::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.ResetParts
// 0x0002 (0x0002 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_ResetParts final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_ResetParts) == 0x000001, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_ResetParts");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_ResetParts) == 0x000002, "Wrong size on ExplosiveWireTrap_Base_BP_C_ResetParts");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ResetParts, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_ResetParts::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ResetParts, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000001, "Member 'ExplosiveWireTrap_Base_BP_C_ResetParts::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SetPhysicalize
// 0x00B0 (0x00B0 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SetPhysicalize final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPhysics;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SetPhysicalize");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize) == 0x0000B0, "Wrong size on ExplosiveWireTrap_Base_BP_C_SetPhysicalize");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize, Component) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SetPhysicalize::Component' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize, bPhysics) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_SetPhysicalize::bPhysics' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize, Temp_bool_Variable) == 0x000009, "Member 'ExplosiveWireTrap_Base_BP_C_SetPhysicalize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x00000C, "Member 'ExplosiveWireTrap_Base_BP_C_SetPhysicalize::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize, CallFunc_GetForwardVector_ReturnValue) == 0x000094, "Member 'ExplosiveWireTrap_Base_BP_C_SetPhysicalize::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize, Temp_byte_Variable) == 0x0000A0, "Member 'ExplosiveWireTrap_Base_BP_C_SetPhysicalize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize, Temp_byte_Variable_1) == 0x0000A1, "Member 'ExplosiveWireTrap_Base_BP_C_SetPhysicalize::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize, K2Node_Select_Default) == 0x0000A2, "Member 'ExplosiveWireTrap_Base_BP_C_SetPhysicalize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetPhysicalize, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A4, "Member 'ExplosiveWireTrap_Base_BP_C_SetPhysicalize::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SetInactiveState
// 0x0018 (0x0018 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SetInactiveState final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SetInactiveState) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SetInactiveState");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SetInactiveState) == 0x000018, "Wrong size on ExplosiveWireTrap_Base_BP_C_SetInactiveState");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetInactiveState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SetInactiveState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetInactiveState, K2Node_MakeArray_Array) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_SetInactiveState::K2Node_MakeArray_Array' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SetBrokenState
// 0x0060 (0x0060 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SetBrokenState final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0020(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SetBrokenState) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SetBrokenState");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SetBrokenState) == 0x000060, "Wrong size on ExplosiveWireTrap_Base_BP_C_SetBrokenState");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetBrokenState, Temp_delegate_Variable) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SetBrokenState::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetBrokenState, Temp_struct_Variable) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_SetBrokenState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetBrokenState, Temp_delegate_Variable_1) == 0x000020, "Member 'ExplosiveWireTrap_Base_BP_C_SetBrokenState::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetBrokenState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000030, "Member 'ExplosiveWireTrap_Base_BP_C_SetBrokenState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetBrokenState, K2Node_MakeArray_Array) == 0x000038, "Member 'ExplosiveWireTrap_Base_BP_C_SetBrokenState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetBrokenState, Temp_struct_Variable_1) == 0x000048, "Member 'ExplosiveWireTrap_Base_BP_C_SetBrokenState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetBrokenState, CallFunc_PostAkEvent_ReturnValue) == 0x000058, "Member 'ExplosiveWireTrap_Base_BP_C_SetBrokenState::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetBrokenState, CallFunc_PostAkEvent_ReturnValue_1) == 0x00005C, "Member 'ExplosiveWireTrap_Base_BP_C_SetBrokenState::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SetTemporaryDisabledState
// 0x0018 (0x0018 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SetTemporaryDisabledState final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SetTemporaryDisabledState) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SetTemporaryDisabledState");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SetTemporaryDisabledState) == 0x000018, "Wrong size on ExplosiveWireTrap_Base_BP_C_SetTemporaryDisabledState");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTemporaryDisabledState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SetTemporaryDisabledState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTemporaryDisabledState, K2Node_MakeArray_Array) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_SetTemporaryDisabledState::K2Node_MakeArray_Array' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SetActiveState
// 0x0018 (0x0018 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SetActiveState final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SetActiveState) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SetActiveState");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SetActiveState) == 0x000018, "Wrong size on ExplosiveWireTrap_Base_BP_C_SetActiveState");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetActiveState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SetActiveState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetActiveState, K2Node_MakeArray_Array) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_SetActiveState::K2Node_MakeArray_Array' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.SetTriggeredState
// 0x0070 (0x0070 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_SetTriggeredState final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0020(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_SetTriggeredState");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState) == 0x000070, "Wrong size on ExplosiveWireTrap_Base_BP_C_SetTriggeredState");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState, Temp_delegate_Variable) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_SetTriggeredState::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState, Temp_struct_Variable) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_SetTriggeredState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState, Temp_delegate_Variable_1) == 0x000020, "Member 'ExplosiveWireTrap_Base_BP_C_SetTriggeredState::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000030, "Member 'ExplosiveWireTrap_Base_BP_C_SetTriggeredState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState, Temp_struct_Variable_1) == 0x000038, "Member 'ExplosiveWireTrap_Base_BP_C_SetTriggeredState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'ExplosiveWireTrap_Base_BP_C_SetTriggeredState::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState, CallFunc_PostAkEvent_ReturnValue) == 0x000054, "Member 'ExplosiveWireTrap_Base_BP_C_SetTriggeredState::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState, CallFunc_PostAkEvent_ReturnValue_1) == 0x000058, "Member 'ExplosiveWireTrap_Base_BP_C_SetTriggeredState::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_SetTriggeredState, K2Node_MakeArray_Array) == 0x000060, "Member 'ExplosiveWireTrap_Base_BP_C_SetTriggeredState::K2Node_MakeArray_Array' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.RecenterActor
// 0x03B0 (0x03B0 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_RecenterActor final
{
public:
	struct FVector                                SideBWorldLocation;                                // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SideBWorldTransform;                               // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             SideAWorldTransform;                               // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                SideAWorldLocation;                                // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeltaLocation;                                     // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0100(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0188(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0xF];                                      // 0x0211(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0220(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0xC];                                      // 0x02A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x02B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0xC];                                      // 0x0334(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_RecenterActor) == 0x000010, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_RecenterActor");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_RecenterActor) == 0x0003B0, "Wrong size on ExplosiveWireTrap_Base_BP_C_RecenterActor");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, SideBWorldLocation) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::SideBWorldLocation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, SideBWorldTransform) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::SideBWorldTransform' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, SideAWorldTransform) == 0x000040, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::SideAWorldTransform' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, SideAWorldLocation) == 0x000070, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::SideAWorldLocation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, DeltaLocation) == 0x00007C, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::DeltaLocation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Location) == 0x000088, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Rotation) == 0x000094, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Location_1) == 0x0000AC, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Rotation_1) == 0x0000B8, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Scale_1) == 0x0000C4, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D0, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakVector_X) == 0x0000DC, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakVector_Z) == 0x0000E4, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_GetTransform_ReturnValue) == 0x000100, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000130, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_ComposeTransforms_ReturnValue) == 0x000140, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakVector_X_1) == 0x000170, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakVector_Y_1) == 0x000174, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakVector_Z_1) == 0x000178, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_MakeVector_ReturnValue) == 0x00017C, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000188, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000210, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_GetTransform_ReturnValue_1) == 0x000220, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000250, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Location_2) == 0x000280, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Rotation_2) == 0x00028C, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Scale_2) == 0x000298, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_GetTransform_ReturnValue_2) == 0x0002B0, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Location_3) == 0x0002E0, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Rotation_3) == 0x0002EC, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_BreakTransform_Scale_3) == 0x0002F8, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_InverseTransformDirection_ReturnValue) == 0x000304, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000310, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00031C, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000328, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_MakeTransform_ReturnValue) == 0x000340, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000370, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_RecenterActor, CallFunc_MakeTransform_ReturnValue_1) == 0x000380, "Member 'ExplosiveWireTrap_Base_BP_C_RecenterActor::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.OnCurrentStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_OnCurrentStateChanged final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_OnCurrentStateChanged) == 0x000001, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_OnCurrentStateChanged");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_OnCurrentStateChanged) == 0x000001, "Wrong size on ExplosiveWireTrap_Base_BP_C_OnCurrentStateChanged");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_OnCurrentStateChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_OnCurrentStateChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.ConstructTrapParts
// 0x0A50 (0x0A50 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_ConstructTrapParts final
{
public:
	float                                         HackableZoneSideExtent;                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClearanceBoxSideExtent;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SideBWorldTransform;                               // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             SideAWorldTransform;                               // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                SideBWorldLocation;                                // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SideAWorldLocation;                                // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x011C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0278(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue_1;         // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1; // 0x03A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_6;                          // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x045C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x04E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x056C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0578(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0584(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0590(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x059C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x05A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x05B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CC[0x4];                                      // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x05D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0600(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue_1;       // 0x0630(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue_2;       // 0x0648(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0670(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x06FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x0708(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0790(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x07C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_2;    // 0x07CC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_854[0xC];                                      // 0x0854(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0860(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0890(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_3;    // 0x089C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_924[0xC];                                      // 0x0924(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0930(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_4;    // 0x0960(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_9E8[0x8];                                      // 0x09E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x09F0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0A20(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts) == 0x000010, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_ConstructTrapParts");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts) == 0x000A50, "Wrong size on ExplosiveWireTrap_Base_BP_C_ConstructTrapParts");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, HackableZoneSideExtent) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::HackableZoneSideExtent' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, ClearanceBoxSideExtent) == 0x000004, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::ClearanceBoxSideExtent' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, SideBWorldTransform) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::SideBWorldTransform' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, SideAWorldTransform) == 0x000040, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::SideAWorldTransform' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, SideBWorldLocation) == 0x000070, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::SideBWorldLocation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, SideAWorldLocation) == 0x00007C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::SideAWorldLocation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Location) == 0x000088, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Rotation) == 0x000094, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Location_1) == 0x0000AC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Rotation_1) == 0x0000B8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Scale_1) == 0x0000C4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_GetForwardVector_ReturnValue) == 0x0000D0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000DC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000F4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000100, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Add_VectorVector_ReturnValue) == 0x00010C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_SelectFloat_ReturnValue) == 0x000118, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00011C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x0001A4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0001B0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_X) == 0x0001E0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Y) == 0x0001E4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Z) == 0x0001E8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Location_2) == 0x0001EC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Rotation_2) == 0x0001F8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Scale_2) == 0x000204, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Add_FloatFloat_ReturnValue) == 0x000210, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_X_1) == 0x000214, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Y_1) == 0x000218, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Z_1) == 0x00021C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeVector_ReturnValue) == 0x000220, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00022C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_X_2) == 0x000238, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Y_2) == 0x00023C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Z_2) == 0x000240, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000244, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000248, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00024C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_FMax_ReturnValue) == 0x000258, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_X_3) == 0x00025C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Y_3) == 0x000260, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Z_3) == 0x000264, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeVector_ReturnValue_1) == 0x000268, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000274, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000278, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_GetScaledBoxExtent_ReturnValue_1) == 0x000300, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_GetScaledBoxExtent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000310, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_X_4) == 0x000340, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Y_4) == 0x000344, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Z_4) == 0x000348, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Location_3) == 0x00034C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Rotation_3) == 0x000358, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakTransform_Scale_3) == 0x000364, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeVector_ReturnValue_2) == 0x000370, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_X_5) == 0x00037C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Y_5) == 0x000380, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Z_5) == 0x000384, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_FMax_ReturnValue_1) == 0x000388, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeVector_ReturnValue_3) == 0x00038C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000398, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1) == 0x0003A4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00042C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000438, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeRotFromX_ReturnValue) == 0x000444, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_X_6) == 0x000450, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Y_6) == 0x000454, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Z_6) == 0x000458, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00045C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0004E4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00056C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000578, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000584, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000590, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeRotFromX_ReturnValue_1) == 0x00059C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0005A8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeRotFromZ_ReturnValue) == 0x0005B4, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0005C0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_GetTransform_ReturnValue) == 0x0005D0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_ComposeTransforms_ReturnValue) == 0x000600, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_GetComponentScale_ReturnValue_1) == 0x000630, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_GetComponentScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_X_7) == 0x00063C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Y_7) == 0x000640, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Z_7) == 0x000644, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_GetComponentScale_ReturnValue_2) == 0x000648, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_GetComponentScale_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_X_8) == 0x000654, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Y_8) == 0x000658, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_BreakVector_Z_8) == 0x00065C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000660, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_VSize_ReturnValue) == 0x00066C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000670, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0006F8, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeVector_ReturnValue_4) == 0x0006FC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x000708, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeTransform_ReturnValue) == 0x000790, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeVector_ReturnValue_5) == 0x0007C0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldTransform_SweepHitResult_2) == 0x0007CC, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeTransform_ReturnValue_1) == 0x000860, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeVector_ReturnValue_6) == 0x000890, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldTransform_SweepHitResult_3) == 0x00089C, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_MakeTransform_ReturnValue_2) == 0x000930, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_K2_SetWorldTransform_SweepHitResult_4) == 0x000960, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_K2_SetWorldTransform_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_GetTransform_ReturnValue_1) == 0x0009F0, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ConstructTrapParts, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000A20, "Member 'ExplosiveWireTrap_Base_BP_C_ConstructTrapParts::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.UserConstructionScript
// 0x0068 (0x0068 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript) == 0x000004, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_UserConstructionScript");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript) == 0x000068, "Wrong size on ExplosiveWireTrap_Base_BP_C_UserConstructionScript");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x00000C, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x000018, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakTransform_Location_1) == 0x000024, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_1) == 0x000030, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakTransform_Scale_1) == 0x00003C, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000048, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x00004C, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000050, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x000054, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x00005C, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_UserConstructionScript, CallFunc_Less_FloatFloat_ReturnValue) == 0x000064, "Member 'ExplosiveWireTrap_Base_BP_C_UserConstructionScript::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.OnPostActorsPasted
// 0x0010 (0x0010 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_OnPostActorsPasted final
{
public:
	TArray<class AActor*>                         PastedActors;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_OnPostActorsPasted) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_OnPostActorsPasted");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_OnPostActorsPasted) == 0x000010, "Wrong size on ExplosiveWireTrap_Base_BP_C_OnPostActorsPasted");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_OnPostActorsPasted, PastedActors) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_OnPostActorsPasted::PastedActors' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.PostDuplicated
// 0x0008 (0x0008 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_PostDuplicated final
{
public:
	class AActor*                                 DuplicationParent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_PostDuplicated) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_PostDuplicated");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_PostDuplicated) == 0x000008, "Wrong size on ExplosiveWireTrap_Base_BP_C_PostDuplicated");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_PostDuplicated, DuplicationParent) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_PostDuplicated::DuplicationParent' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.PostEditChange
// 0x0008 (0x0008 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_PostEditChange final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_PostEditChange) == 0x000004, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_PostEditChange");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_PostEditChange) == 0x000008, "Wrong size on ExplosiveWireTrap_Base_BP_C_PostEditChange");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_PostEditChange, PropertyName) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_PostEditChange::PropertyName' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.PostEditMove
// 0x0001 (0x0001 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_PostEditMove final
{
public:
	bool                                          bFinished;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_PostEditMove) == 0x000001, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_PostEditMove");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_PostEditMove) == 0x000001, "Wrong size on ExplosiveWireTrap_Base_BP_C_PostEditMove");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_PostEditMove, bFinished) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_PostEditMove::bFinished' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.BndEvt__ExplosiveWireTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_BndEvt__ExplosiveWireTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature final
{
public:
	class URBHackableComponent*                   HackableComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_BndEvt__ExplosiveWireTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_BndEvt__ExplosiveWireTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_BndEvt__ExplosiveWireTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature) == 0x000008, "Wrong size on ExplosiveWireTrap_Base_BP_C_BndEvt__ExplosiveWireTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_BndEvt__ExplosiveWireTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature, HackableComponent) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_BndEvt__ExplosiveWireTrap_Base_BP_RBHackable_K2Node_ComponentBoundEvent_0_OnCurrentHackStateChanged__DelegateSignature::HackableComponent' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.ExecuteUbergraph_ExplosiveWireTrap_Base_BP
// 0x0050 (0x0050 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_pastedActors;                         // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 K2Node_Event_duplicationParent;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_propertyName;                         // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFinished;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBHackableComponent*                   K2Node_ComponentBoundEvent_hackableComponent;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetPlayerHacker_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHackState                                    CallFunc_GetCurrentHackState_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP) == 0x000050, "Wrong size on ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, EntryPoint) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, K2Node_Event_pastedActors) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::K2Node_Event_pastedActors' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, K2Node_Event_duplicationParent) == 0x000018, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::K2Node_Event_duplicationParent' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, K2Node_Event_propertyName) == 0x000020, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::K2Node_Event_propertyName' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, K2Node_Event_bFinished) == 0x000028, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::K2Node_Event_bFinished' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, K2Node_ComponentBoundEvent_hackableComponent) == 0x000030, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::K2Node_ComponentBoundEvent_hackableComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, CallFunc_GetPlayerHacker_ReturnValue) == 0x000040, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::CallFunc_GetPlayerHacker_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, CallFunc_GetCurrentHackState_ReturnValue) == 0x000048, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::CallFunc_GetCurrentHackState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, K2Node_SwitchEnum_CmpSuccess) == 0x00004A, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00004B, "Member 'ExplosiveWireTrap_Base_BP_C_ExecuteUbergraph_ExplosiveWireTrap_Base_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.GetFriendlyDeviceIconLocation
// 0x001C (0x001C - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation final
{
public:
	struct FVector                                Out_location;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation) == 0x000004, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation) == 0x00001C, "Wrong size on ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation, Out_location) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation::Out_location' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation, ReturnValue) == 0x00000C, "Member 'ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'ExplosiveWireTrap_Base_BP_C_GetFriendlyDeviceIconLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.ShouldPingFollowActor
// 0x0002 (0x0002 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_ShouldPingFollowActor final
{
public:
	bool                                          OutShouldFollow;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_ShouldPingFollowActor) == 0x000001, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_ShouldPingFollowActor");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_ShouldPingFollowActor) == 0x000002, "Wrong size on ExplosiveWireTrap_Base_BP_C_ShouldPingFollowActor");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ShouldPingFollowActor, OutShouldFollow) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_ShouldPingFollowActor::OutShouldFollow' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_ShouldPingFollowActor, ReturnValue) == 0x000001, "Member 'ExplosiveWireTrap_Base_BP_C_ShouldPingFollowActor::ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.GetPingEnabled
// 0x0098 (0x0098 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_GetPingEnabled final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          OutIsEnabled;                                      // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0091(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_GetPingEnabled) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_GetPingEnabled");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_GetPingEnabled) == 0x000098, "Wrong size on ExplosiveWireTrap_Base_BP_C_GetPingEnabled");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPingEnabled, PingOwner) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_GetPingEnabled::PingOwner' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPingEnabled, HitResult) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_GetPingEnabled::HitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPingEnabled, OutIsEnabled) == 0x000090, "Member 'ExplosiveWireTrap_Base_BP_C_GetPingEnabled::OutIsEnabled' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPingEnabled, ReturnValue) == 0x000091, "Member 'ExplosiveWireTrap_Base_BP_C_GetPingEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPingEnabled, K2Node_SwitchEnum_CmpSuccess) == 0x000092, "Member 'ExplosiveWireTrap_Base_BP_C_GetPingEnabled::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.GetPingItemName
// 0x0020 (0x0020 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_GetPingItemName final
{
public:
	class FText                                   OutName;                                           // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_GetPingItemName) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_GetPingItemName");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_GetPingItemName) == 0x000020, "Wrong size on ExplosiveWireTrap_Base_BP_C_GetPingItemName");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPingItemName, OutName) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_GetPingItemName::OutName' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPingItemName, ReturnValue) == 0x000018, "Member 'ExplosiveWireTrap_Base_BP_C_GetPingItemName::ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.GetPlayerPingData
// 0x00C8 (0x00C8 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_GetPlayerPingData final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FPlayerPingData                        OutData;                                           // 0x0090(0x0030)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingData) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_GetPlayerPingData");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingData) == 0x0000C8, "Wrong size on ExplosiveWireTrap_Base_BP_C_GetPlayerPingData");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingData, PingOwner) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_GetPlayerPingData::PingOwner' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingData, HitResult) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_GetPlayerPingData::HitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingData, OutData) == 0x000090, "Member 'ExplosiveWireTrap_Base_BP_C_GetPlayerPingData::OutData' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingData, ReturnValue) == 0x0000C0, "Member 'ExplosiveWireTrap_Base_BP_C_GetPlayerPingData::ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.GetPlayerPingWorldLocation
// 0x00A0 (0x00A0 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                OutLocation;                                       // 0x0090(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x009C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation) == 0x0000A0, "Wrong size on ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation, PingOwner) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation::PingOwner' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation, HitResult) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation::HitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation, OutLocation) == 0x000090, "Member 'ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation::OutLocation' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation, ReturnValue) == 0x00009C, "Member 'ExplosiveWireTrap_Base_BP_C_GetPlayerPingWorldLocation::ReturnValue' has a wrong offset!");

// Function ExplosiveWireTrap_Base_BP.ExplosiveWireTrap_Base_BP_C.CanBeActivedInSpectra
// 0x0010 (0x0010 - 0x0000)
struct ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra final
{
public:
	const class ARBSpectraSkill*                  SpectraOwner;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra) == 0x000008, "Wrong alignment on ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra");
static_assert(sizeof(ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra) == 0x000010, "Wrong size on ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra, SpectraOwner) == 0x000000, "Member 'ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra::SpectraOwner' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra, ReturnValue) == 0x000008, "Member 'ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra::ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'ExplosiveWireTrap_Base_BP_C_CanBeActivedInSpectra::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

