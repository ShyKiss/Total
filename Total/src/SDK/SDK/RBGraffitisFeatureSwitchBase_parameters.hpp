#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBGraffitisFeatureSwitchBase

#include "Basic.hpp"


namespace SDK::Params
{

// Function RBGraffitisFeatureSwitchBase.RBGraffitisFeatureSwitchBase_C.OnWorldPopulateFinishedTimeSliced
// 0x0001 (0x0001 - 0x0000)
struct RBGraffitisFeatureSwitchBase_C_OnWorldPopulateFinishedTimeSliced final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBGraffitisFeatureSwitchBase_C_OnWorldPopulateFinishedTimeSliced) == 0x000001, "Wrong alignment on RBGraffitisFeatureSwitchBase_C_OnWorldPopulateFinishedTimeSliced");
static_assert(sizeof(RBGraffitisFeatureSwitchBase_C_OnWorldPopulateFinishedTimeSliced) == 0x000001, "Wrong size on RBGraffitisFeatureSwitchBase_C_OnWorldPopulateFinishedTimeSliced");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_OnWorldPopulateFinishedTimeSliced, ReturnValue) == 0x000000, "Member 'RBGraffitisFeatureSwitchBase_C_OnWorldPopulateFinishedTimeSliced::ReturnValue' has a wrong offset!");

// Function RBGraffitisFeatureSwitchBase.RBGraffitisFeatureSwitchBase_C.SetColorParameters
// 0x0002 (0x0002 - 0x0000)
struct RBGraffitisFeatureSwitchBase_C_SetColorParameters final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBGraffitisFeatureSwitchBase_C_SetColorParameters) == 0x000001, "Wrong alignment on RBGraffitisFeatureSwitchBase_C_SetColorParameters");
static_assert(sizeof(RBGraffitisFeatureSwitchBase_C_SetColorParameters) == 0x000002, "Wrong size on RBGraffitisFeatureSwitchBase_C_SetColorParameters");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_SetColorParameters, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'RBGraffitisFeatureSwitchBase_C_SetColorParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_SetColorParameters, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'RBGraffitisFeatureSwitchBase_C_SetColorParameters::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function RBGraffitisFeatureSwitchBase.RBGraffitisFeatureSwitchBase_C.ValidateFeatureSwitch
// 0x0028 (0x0028 - 0x0000)
struct RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFeatureSwitch_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch) == 0x000008, "Wrong alignment on RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch");
static_assert(sizeof(RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch) == 0x000028, "Wrong size on RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch, Temp_int_Array_Index_Variable) == 0x000000, "Member 'RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch, CallFunc_Array_Get_Item) == 0x000010, "Member 'RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch, CallFunc_CheckFeatureSwitch_ReturnValue) == 0x000021, "Member 'RBGraffitisFeatureSwitchBase_C_ValidateFeatureSwitch::CallFunc_CheckFeatureSwitch_ReturnValue' has a wrong offset!");

// Function RBGraffitisFeatureSwitchBase.RBGraffitisFeatureSwitchBase_C.ApplyMaterial
// 0x0003 (0x0003 - 0x0000)
struct RBGraffitisFeatureSwitchBase_C_ApplyMaterial final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBGraffitisFeatureSwitchBase_C_ApplyMaterial) == 0x000001, "Wrong alignment on RBGraffitisFeatureSwitchBase_C_ApplyMaterial");
static_assert(sizeof(RBGraffitisFeatureSwitchBase_C_ApplyMaterial) == 0x000003, "Wrong size on RBGraffitisFeatureSwitchBase_C_ApplyMaterial");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ApplyMaterial, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'RBGraffitisFeatureSwitchBase_C_ApplyMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ApplyMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'RBGraffitisFeatureSwitchBase_C_ApplyMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ApplyMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'RBGraffitisFeatureSwitchBase_C_ApplyMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function RBGraffitisFeatureSwitchBase.RBGraffitisFeatureSwitchBase_C.SetVisualType
// 0x0003 (0x0003 - 0x0000)
struct RBGraffitisFeatureSwitchBase_C_SetVisualType final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBGraffitisFeatureSwitchBase_C_SetVisualType) == 0x000001, "Wrong alignment on RBGraffitisFeatureSwitchBase_C_SetVisualType");
static_assert(sizeof(RBGraffitisFeatureSwitchBase_C_SetVisualType) == 0x000003, "Wrong size on RBGraffitisFeatureSwitchBase_C_SetVisualType");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_SetVisualType, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'RBGraffitisFeatureSwitchBase_C_SetVisualType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_SetVisualType, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'RBGraffitisFeatureSwitchBase_C_SetVisualType::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_SetVisualType, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'RBGraffitisFeatureSwitchBase_C_SetVisualType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function RBGraffitisFeatureSwitchBase.RBGraffitisFeatureSwitchBase_C.ExecuteUbergraph_RBGraffitisFeatureSwitchBase
// 0x0004 (0x0004 - 0x0000)
struct RBGraffitisFeatureSwitchBase_C_ExecuteUbergraph_RBGraffitisFeatureSwitchBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBGraffitisFeatureSwitchBase_C_ExecuteUbergraph_RBGraffitisFeatureSwitchBase) == 0x000004, "Wrong alignment on RBGraffitisFeatureSwitchBase_C_ExecuteUbergraph_RBGraffitisFeatureSwitchBase");
static_assert(sizeof(RBGraffitisFeatureSwitchBase_C_ExecuteUbergraph_RBGraffitisFeatureSwitchBase) == 0x000004, "Wrong size on RBGraffitisFeatureSwitchBase_C_ExecuteUbergraph_RBGraffitisFeatureSwitchBase");
static_assert(offsetof(RBGraffitisFeatureSwitchBase_C_ExecuteUbergraph_RBGraffitisFeatureSwitchBase, EntryPoint) == 0x000000, "Member 'RBGraffitisFeatureSwitchBase_C_ExecuteUbergraph_RBGraffitisFeatureSwitchBase::EntryPoint' has a wrong offset!");

}

