#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MateHealthBarElement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function MateHealthBarElement.MateHealthBarElement_C.ExecuteUbergraph_MateHealthBarElement
// 0x0098 (0x0098 - 0x0000)
struct MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement) == 0x000008, "Wrong alignment on MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement");
static_assert(sizeof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement) == 0x000098, "Wrong size on MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, EntryPoint) == 0x000000, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, K2Node_Event_IsDesignTime) == 0x000010, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, K2Node_Event_MyGeometry) == 0x000014, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000050, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000058, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000088, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000090, "Member 'MateHealthBarElement_C_ExecuteUbergraph_MateHealthBarElement::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function MateHealthBarElement.MateHealthBarElement_C.Tick
// 0x003C (0x003C - 0x0000)
struct MateHealthBarElement_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MateHealthBarElement_C_Tick) == 0x000004, "Wrong alignment on MateHealthBarElement_C_Tick");
static_assert(sizeof(MateHealthBarElement_C_Tick) == 0x00003C, "Wrong size on MateHealthBarElement_C_Tick");
static_assert(offsetof(MateHealthBarElement_C_Tick, MyGeometry) == 0x000000, "Member 'MateHealthBarElement_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_Tick, InDeltaTime) == 0x000038, "Member 'MateHealthBarElement_C_Tick::InDeltaTime' has a wrong offset!");

// Function MateHealthBarElement.MateHealthBarElement_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MateHealthBarElement_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MateHealthBarElement_C_PreConstruct) == 0x000001, "Wrong alignment on MateHealthBarElement_C_PreConstruct");
static_assert(sizeof(MateHealthBarElement_C_PreConstruct) == 0x000001, "Wrong size on MateHealthBarElement_C_PreConstruct");
static_assert(offsetof(MateHealthBarElement_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MateHealthBarElement_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MateHealthBarElement.MateHealthBarElement_C.Start New Tween
// 0x0010 (0x0010 - 0x0000)
struct MateHealthBarElement_C_Start_New_Tween final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartsOutsideBracket;                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MateHealthBarElement_C_Start_New_Tween) == 0x000004, "Wrong alignment on MateHealthBarElement_C_Start_New_Tween");
static_assert(sizeof(MateHealthBarElement_C_Start_New_Tween) == 0x000010, "Wrong size on MateHealthBarElement_C_Start_New_Tween");
static_assert(offsetof(MateHealthBarElement_C_Start_New_Tween, NewValue) == 0x000000, "Member 'MateHealthBarElement_C_Start_New_Tween::NewValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_Start_New_Tween, StartsOutsideBracket) == 0x000004, "Member 'MateHealthBarElement_C_Start_New_Tween::StartsOutsideBracket' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_Start_New_Tween, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'MateHealthBarElement_C_Start_New_Tween::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_Start_New_Tween, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'MateHealthBarElement_C_Start_New_Tween::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_Start_New_Tween, CallFunc_IsValid_ReturnValue) == 0x000007, "Member 'MateHealthBarElement_C_Start_New_Tween::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_Start_New_Tween, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'MateHealthBarElement_C_Start_New_Tween::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_Start_New_Tween, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x00000C, "Member 'MateHealthBarElement_C_Start_New_Tween::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");

// Function MateHealthBarElement.MateHealthBarElement_C.UpdateTween
// 0x001C (0x001C - 0x0000)
struct MateHealthBarElement_C_UpdateTween final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MateHealthBarElement_C_UpdateTween) == 0x000004, "Wrong alignment on MateHealthBarElement_C_UpdateTween");
static_assert(sizeof(MateHealthBarElement_C_UpdateTween) == 0x00001C, "Wrong size on MateHealthBarElement_C_UpdateTween");
static_assert(offsetof(MateHealthBarElement_C_UpdateTween, Temp_bool_Variable) == 0x000000, "Member 'MateHealthBarElement_C_UpdateTween::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTween, Temp_float_Variable) == 0x000004, "Member 'MateHealthBarElement_C_UpdateTween::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTween, Temp_float_Variable_1) == 0x000008, "Member 'MateHealthBarElement_C_UpdateTween::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTween, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'MateHealthBarElement_C_UpdateTween::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTween, K2Node_Select_Default) == 0x000010, "Member 'MateHealthBarElement_C_UpdateTween::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTween, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000014, "Member 'MateHealthBarElement_C_UpdateTween::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTween, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000018, "Member 'MateHealthBarElement_C_UpdateTween::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");

// Function MateHealthBarElement.MateHealthBarElement_C.UpdateTints
// 0x00A0 (0x00A0 - 0x0000)
struct MateHealthBarElement_C_UpdateTints final
{
public:
	bool                                          IsInBleedout;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerBarState                               Temp_byte_Variable;                                // 0x0015(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerBarState                               Temp_byte_Variable_1;                              // 0x0016(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_Map_Find_Value;                           // 0x0020(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Map_Find_Value_1;                         // 0x0050(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MateHealthBarElement_C_UpdateTints) == 0x000008, "Wrong alignment on MateHealthBarElement_C_UpdateTints");
static_assert(sizeof(MateHealthBarElement_C_UpdateTints) == 0x0000A0, "Wrong size on MateHealthBarElement_C_UpdateTints");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, IsInBleedout) == 0x000000, "Member 'MateHealthBarElement_C_UpdateTints::IsInBleedout' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, Temp_bool_Variable) == 0x000001, "Member 'MateHealthBarElement_C_UpdateTints::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, Temp_struct_Variable) == 0x000004, "Member 'MateHealthBarElement_C_UpdateTints::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, Temp_bool_Variable_1) == 0x000014, "Member 'MateHealthBarElement_C_UpdateTints::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, Temp_byte_Variable) == 0x000015, "Member 'MateHealthBarElement_C_UpdateTints::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, Temp_byte_Variable_1) == 0x000016, "Member 'MateHealthBarElement_C_UpdateTints::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000018, "Member 'MateHealthBarElement_C_UpdateTints::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, CallFunc_Map_Find_Value) == 0x000020, "Member 'MateHealthBarElement_C_UpdateTints::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'MateHealthBarElement_C_UpdateTints::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, CallFunc_Map_Find_Value_1) == 0x000050, "Member 'MateHealthBarElement_C_UpdateTints::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, CallFunc_Map_Find_ReturnValue_1) == 0x000078, "Member 'MateHealthBarElement_C_UpdateTints::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, K2Node_Select_Default) == 0x00007C, "Member 'MateHealthBarElement_C_UpdateTints::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_UpdateTints, K2Node_Select_Default_1) == 0x00008C, "Member 'MateHealthBarElement_C_UpdateTints::K2Node_Select_Default_1' has a wrong offset!");

// Function MateHealthBarElement.MateHealthBarElement_C.SetBarHeight
// 0x000C (0x000C - 0x0000)
struct MateHealthBarElement_C_SetBarHeight final
{
public:
	float                                         DesiredSize_Y;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MateHealthBarElement_C_SetBarHeight) == 0x000004, "Wrong alignment on MateHealthBarElement_C_SetBarHeight");
static_assert(sizeof(MateHealthBarElement_C_SetBarHeight) == 0x00000C, "Wrong size on MateHealthBarElement_C_SetBarHeight");
static_assert(offsetof(MateHealthBarElement_C_SetBarHeight, DesiredSize_Y) == 0x000000, "Member 'MateHealthBarElement_C_SetBarHeight::DesiredSize_Y' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_SetBarHeight, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'MateHealthBarElement_C_SetBarHeight::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function MateHealthBarElement.MateHealthBarElement_C.SetEntireBar
// 0x0014 (0x0014 - 0x0000)
struct MateHealthBarElement_C_SetEntireBar final
{
public:
	bool                                          Fill;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MateHealthBarElement_C_SetEntireBar) == 0x000004, "Wrong alignment on MateHealthBarElement_C_SetEntireBar");
static_assert(sizeof(MateHealthBarElement_C_SetEntireBar) == 0x000014, "Wrong size on MateHealthBarElement_C_SetEntireBar");
static_assert(offsetof(MateHealthBarElement_C_SetEntireBar, Fill) == 0x000000, "Member 'MateHealthBarElement_C_SetEntireBar::Fill' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_SetEntireBar, Temp_bool_Variable) == 0x000001, "Member 'MateHealthBarElement_C_SetEntireBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_SetEntireBar, Temp_float_Variable) == 0x000004, "Member 'MateHealthBarElement_C_SetEntireBar::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_SetEntireBar, Temp_float_Variable_1) == 0x000008, "Member 'MateHealthBarElement_C_SetEntireBar::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_SetEntireBar, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'MateHealthBarElement_C_SetEntireBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_SetEntireBar, K2Node_Select_Default) == 0x000010, "Member 'MateHealthBarElement_C_SetEntireBar::K2Node_Select_Default' has a wrong offset!");

// Function MateHealthBarElement.MateHealthBarElement_C.ForceValue
// 0x0008 (0x0008 - 0x0000)
struct MateHealthBarElement_C_ForceValue final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MateHealthBarElement_C_ForceValue) == 0x000004, "Wrong alignment on MateHealthBarElement_C_ForceValue");
static_assert(sizeof(MateHealthBarElement_C_ForceValue) == 0x000008, "Wrong size on MateHealthBarElement_C_ForceValue");
static_assert(offsetof(MateHealthBarElement_C_ForceValue, NewValue) == 0x000000, "Member 'MateHealthBarElement_C_ForceValue::NewValue' has a wrong offset!");
static_assert(offsetof(MateHealthBarElement_C_ForceValue, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'MateHealthBarElement_C_ForceValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

