#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElectrifiedDoorTrapMinusRight_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ElectrifiedDoorTrap-Right_BP.ElectrifiedDoorTrap-Right_BP_C
// 0x00B0 (0x04D0 - 0x0420)
class AElectrifiedDoorTrapMinusRight_BP_C : public ARBTrapTriggerable
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ElectrifiedTrapBaseMinus01;                        // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActiveSkillVisionComponent*          RBActiveSkillVision1;                              // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AS_WaveSphere;                                     // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ElectrifiedTrapContraptionMinus04;                 // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ElectrifiedTrapContraptionMinus03;                 // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh1;                                     // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CableAttachPoint;                                  // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBRepulsionComponent*                  Repulsion;                                         // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PawnCollision;                                     // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               WoodSplinters;                                     // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Bar3;                                              // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Bar1;                                              // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TrapMovablePart;                                   // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Bar2;                                              // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ElectrifiedTrapContraptionMinus01;                 // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorRef;                                           // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ATrapDart_BP_C*                         TrapProjectile;                                    // 0x04B8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCurrentlyTriggering;                            // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SpawnTrapDart();
	void OnRep_TrapProjectile();
	void Reset();
	void Event_OnTriggered();
	void ReceiveBeginPlay();
	void Event_OnResetStage();
	void ReceiveDestroyed();
	void BP_LinkTriggerTrap(class ARBWireTriggerTrap* TriggerTrap);
	void OnDoorRepulsionScheduled(class ARBDoor* Door);
	void Event_SnapToState();
	void ExecuteUbergraph_ElectrifiedDoorTrapMinusRight_BP(int32 EntryPoint);

	bool CanBeActivedInSpectra(const class ARBSpectraSkill* SpectraOwner) const;
	void ShouldTriggerRepulsion(class ARBDoor* Door, bool* bWillTrigger) const;
	bool IsCurrentlyTriggering() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ElectrifiedDoorTrap-Right_BP_C">();
	}
	static class AElectrifiedDoorTrapMinusRight_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElectrifiedDoorTrapMinusRight_BP_C>();
	}
};
static_assert(alignof(AElectrifiedDoorTrapMinusRight_BP_C) == 0x000010, "Wrong alignment on AElectrifiedDoorTrapMinusRight_BP_C");
static_assert(sizeof(AElectrifiedDoorTrapMinusRight_BP_C) == 0x0004D0, "Wrong size on AElectrifiedDoorTrapMinusRight_BP_C");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, UberGraphFrame) == 0x000420, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, ElectrifiedTrapBaseMinus01) == 0x000428, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::ElectrifiedTrapBaseMinus01' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, RBActiveSkillVision1) == 0x000430, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::RBActiveSkillVision1' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, AS_WaveSphere) == 0x000438, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::AS_WaveSphere' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, ElectrifiedTrapContraptionMinus04) == 0x000440, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::ElectrifiedTrapContraptionMinus04' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, ElectrifiedTrapContraptionMinus03) == 0x000448, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::ElectrifiedTrapContraptionMinus03' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, SkeletalMesh1) == 0x000450, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::SkeletalMesh1' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, CableAttachPoint) == 0x000458, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::CableAttachPoint' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, Repulsion) == 0x000460, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::Repulsion' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, RBSound) == 0x000468, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, PawnCollision) == 0x000470, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::PawnCollision' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, WoodSplinters) == 0x000478, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::WoodSplinters' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, Bar3) == 0x000480, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::Bar3' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, Bar1) == 0x000488, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::Bar1' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, TrapMovablePart) == 0x000490, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::TrapMovablePart' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, Bar2) == 0x000498, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::Bar2' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, ElectrifiedTrapContraptionMinus01) == 0x0004A0, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::ElectrifiedTrapContraptionMinus01' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, DoorRef) == 0x0004A8, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::DoorRef' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, DefaultSceneRoot) == 0x0004B0, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, TrapProjectile) == 0x0004B8, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::TrapProjectile' has a wrong offset!");
static_assert(offsetof(AElectrifiedDoorTrapMinusRight_BP_C, bIsCurrentlyTriggering) == 0x0004C0, "Member 'AElectrifiedDoorTrapMinusRight_BP_C::bIsCurrentlyTriggering' has a wrong offset!");

}

