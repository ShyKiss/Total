#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScriptedNPC_Base_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ScriptedNPC_Base_AnimBP.ScriptedNPC_Base_AnimBP_C
// 0x0830 (0x0AF0 - 0x02C0)
class UScriptedNPC_Base_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x03E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0468(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0498(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0518(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0548(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x05C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x05F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0620(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0648(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0670(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0698(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0718(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0748(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x07C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x07F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0878(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x08A8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0928(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0958(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0A08(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0A38(0x00B0)()
	bool                                          IsFinished;                                        // 0x0AE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNext;                                            // 0x0AE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanOnlyExitAtLoopEnd;                              // 0x0AEA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SkipToDetach;                                      // 0x0AEB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasBegunPlay;                                      // 0x0AEC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LoopDetach;                                        // 0x0AED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ScriptedNPC_Base_AnimBP_AnimGraphNode_TransitionResult_9504EA9F4DAB681CDA41FAA6E41520B8();
	void AnimNotify_ExitFinished();
	void BlueprintBeginPlay();
	void OnResetStage();
	void UpdateRuntimeVariables();
	void ExecuteUbergraph_ScriptedNPC_Base_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ScriptedNPC_Base_AnimBP_C">();
	}
	static class UScriptedNPC_Base_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScriptedNPC_Base_AnimBP_C>();
	}
};
static_assert(alignof(UScriptedNPC_Base_AnimBP_C) == 0x000010, "Wrong alignment on UScriptedNPC_Base_AnimBP_C");
static_assert(sizeof(UScriptedNPC_Base_AnimBP_C) == 0x000AF0, "Wrong size on UScriptedNPC_Base_AnimBP_C");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UScriptedNPC_Base_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x0002F8, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000320, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000348, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000370, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000398, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0003C0, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0003E8, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateResult_7) == 0x000468, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000498, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateResult_6) == 0x000518, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000548, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateResult_5) == 0x0005C8, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0005F8, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000620, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000648, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000670, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000698, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateResult_4) == 0x000718, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000748, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateResult_3) == 0x0007C8, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0007F8, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000878, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0008A8, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000928, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x000958, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateResult) == 0x000A08, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, AnimGraphNode_StateMachine) == 0x000A38, "Member 'UScriptedNPC_Base_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, IsFinished) == 0x000AE8, "Member 'UScriptedNPC_Base_AnimBP_C::IsFinished' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, IsNext) == 0x000AE9, "Member 'UScriptedNPC_Base_AnimBP_C::IsNext' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, CanOnlyExitAtLoopEnd) == 0x000AEA, "Member 'UScriptedNPC_Base_AnimBP_C::CanOnlyExitAtLoopEnd' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, SkipToDetach) == 0x000AEB, "Member 'UScriptedNPC_Base_AnimBP_C::SkipToDetach' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, HasBegunPlay) == 0x000AEC, "Member 'UScriptedNPC_Base_AnimBP_C::HasBegunPlay' has a wrong offset!");
static_assert(offsetof(UScriptedNPC_Base_AnimBP_C, LoopDetach) == 0x000AED, "Member 'UScriptedNPC_Base_AnimBP_C::LoopDetach' has a wrong offset!");

}

