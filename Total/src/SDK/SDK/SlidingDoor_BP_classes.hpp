#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingDoor_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SlidingDoor_BP.SlidingDoor_BP_C
// 0x00B0 (0x02E0 - 0x0230)
class ASlidingDoor_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          DoorCollision;                                     // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasDoorMinus02b;                                   // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasDoorMinus01a;                                   // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundConnectorComponent*             RBSoundConnector;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RollingDoorFrameMinus01;                           // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TriggerEntry;                                      // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasDoorMinus02;                                    // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PressurePlate;                                     // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasDoorMinus01;                                    // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPlayerTriggerComponent*              EntryPlayerTriggerComponent;                       // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         EntryDoorTimeline_DoorB_3721B15A402EB2BE8461479654DBEA64; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EntryDoorTimeline_DoorOpenning_3721B15A402EB2BE8461479654DBEA64; // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            EntryDoorTimeline__Direction_3721B15A402EB2BE8461479654DBEA64; // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     EntryDoorTimeline;                                 // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInside;                                          // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DoorAngle;                                         // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UseCountLeft;                                      // 0x02B0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          InsideStart;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          InsideStop;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DoorOpening;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DoorClosing;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUsedOnce;                                         // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EntryDoorPressToOpen;                              // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEntryDoorOpened;                                  // 0x02DA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          bExitDoorOpened;                                   // 0x02DB(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          bManual;                                           // 0x02DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UsePressurePlateVisual;                            // 0x02DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SlidingDoor_BP(int32 EntryPoint);
	void ManualOpenClose(bool bOpen);
	void Event_OnResetStage();
	void BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_0_OnPlayerTriggerVolumeActorEvent__DelegateSignature(class ARBPlayer* Player);
	void OpenEntryDoor(bool Reverse);
	void BndEvt__EntryPlayerTriggerComponent_K2Node_ComponentBoundEvent_4_OnPlayerTriggerVolumeActorEvent__DelegateSignature(class ARBPlayer* Player);
	void ReceiveBeginPlay();
	void EntryDoorTimeline__CollisionSwap__EventFunc();
	void EntryDoorTimeline__UpdateFunc();
	void EntryDoorTimeline__FinishedFunc();
	void UserConstructionScript();
	void SasActivation(bool IsReady);
	void Opendoor(class UStaticMeshComponent* SasDoorA, class UStaticMeshComponent* SasDoorMinusB, float Opendoor_0, class USceneComponent* Target);
	void OnRep_UseCountLeft();
	void OnRep_bEntryDoorOpened();
	void OnRep_bExitDoorOpened();
	void IsOperating();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SlidingDoor_BP_C">();
	}
	static class ASlidingDoor_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASlidingDoor_BP_C>();
	}
};
static_assert(alignof(ASlidingDoor_BP_C) == 0x000008, "Wrong alignment on ASlidingDoor_BP_C");
static_assert(sizeof(ASlidingDoor_BP_C) == 0x0002E0, "Wrong size on ASlidingDoor_BP_C");
static_assert(offsetof(ASlidingDoor_BP_C, UberGraphFrame) == 0x000230, "Member 'ASlidingDoor_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, DoorCollision) == 0x000238, "Member 'ASlidingDoor_BP_C::DoorCollision' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, SasDoorMinus02b) == 0x000240, "Member 'ASlidingDoor_BP_C::SasDoorMinus02b' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, SasDoorMinus01a) == 0x000248, "Member 'ASlidingDoor_BP_C::SasDoorMinus01a' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, RBSoundConnector) == 0x000250, "Member 'ASlidingDoor_BP_C::RBSoundConnector' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, RollingDoorFrameMinus01) == 0x000258, "Member 'ASlidingDoor_BP_C::RollingDoorFrameMinus01' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, TriggerEntry) == 0x000260, "Member 'ASlidingDoor_BP_C::TriggerEntry' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, SasDoorMinus02) == 0x000268, "Member 'ASlidingDoor_BP_C::SasDoorMinus02' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, PressurePlate) == 0x000270, "Member 'ASlidingDoor_BP_C::PressurePlate' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, SasDoorMinus01) == 0x000278, "Member 'ASlidingDoor_BP_C::SasDoorMinus01' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, Root) == 0x000280, "Member 'ASlidingDoor_BP_C::Root' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, EntryPlayerTriggerComponent) == 0x000288, "Member 'ASlidingDoor_BP_C::EntryPlayerTriggerComponent' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, EntryDoorTimeline_DoorB_3721B15A402EB2BE8461479654DBEA64) == 0x000290, "Member 'ASlidingDoor_BP_C::EntryDoorTimeline_DoorB_3721B15A402EB2BE8461479654DBEA64' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, EntryDoorTimeline_DoorOpenning_3721B15A402EB2BE8461479654DBEA64) == 0x000294, "Member 'ASlidingDoor_BP_C::EntryDoorTimeline_DoorOpenning_3721B15A402EB2BE8461479654DBEA64' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, EntryDoorTimeline__Direction_3721B15A402EB2BE8461479654DBEA64) == 0x000298, "Member 'ASlidingDoor_BP_C::EntryDoorTimeline__Direction_3721B15A402EB2BE8461479654DBEA64' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, EntryDoorTimeline) == 0x0002A0, "Member 'ASlidingDoor_BP_C::EntryDoorTimeline' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, IsInside) == 0x0002A8, "Member 'ASlidingDoor_BP_C::IsInside' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, DoorAngle) == 0x0002AC, "Member 'ASlidingDoor_BP_C::DoorAngle' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, UseCountLeft) == 0x0002B0, "Member 'ASlidingDoor_BP_C::UseCountLeft' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, InsideStart) == 0x0002B8, "Member 'ASlidingDoor_BP_C::InsideStart' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, InsideStop) == 0x0002C0, "Member 'ASlidingDoor_BP_C::InsideStop' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, DoorOpening) == 0x0002C8, "Member 'ASlidingDoor_BP_C::DoorOpening' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, DoorClosing) == 0x0002D0, "Member 'ASlidingDoor_BP_C::DoorClosing' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, bUsedOnce) == 0x0002D8, "Member 'ASlidingDoor_BP_C::bUsedOnce' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, EntryDoorPressToOpen) == 0x0002D9, "Member 'ASlidingDoor_BP_C::EntryDoorPressToOpen' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, bEntryDoorOpened) == 0x0002DA, "Member 'ASlidingDoor_BP_C::bEntryDoorOpened' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, bExitDoorOpened) == 0x0002DB, "Member 'ASlidingDoor_BP_C::bExitDoorOpened' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, bManual) == 0x0002DC, "Member 'ASlidingDoor_BP_C::bManual' has a wrong offset!");
static_assert(offsetof(ASlidingDoor_BP_C, UsePressurePlateVisual) == 0x0002DD, "Member 'ASlidingDoor_BP_C::UsePressurePlateVisual' has a wrong offset!");

}

