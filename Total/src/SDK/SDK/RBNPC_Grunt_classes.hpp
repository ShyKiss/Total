#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBNPC_Grunt

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "RBNPC_BP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass RBNPC_Grunt.RBNPC_Grunt_C
// 0x0240 (0x5CB0 - 0x5A70)
class ARBNPC_Grunt_C : public ARBNPC_BP_C
{
public:
	uint8                                         Pad_5A61[0x7];                                     // 0x5A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_RBNPC_Grunt_C;                      // 0x5A68(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Head_Mesh_EDITOR;                                  // 0x5A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LowerBody_Mesh_EDITOR;                             // 0x5A78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 UpperBody_Mesh_EDITOR;                             // 0x5A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair_Mesh;                                         // 0x5A88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head_Mesh;                                         // 0x5A90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LowerBody_Mesh;                                    // 0x5A98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 UpperBody_Mesh;                                    // 0x5AA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class UMaterialInstanceConstant*> LoadedHeadMaterials;                               // 0x5AA8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USkeletalMeshComponent*>         AdditionalBodyMeshes;                              // 0x5AF8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FSelectedGruntCustomizationMeshesInfo  SelectedCustomizationInfo;                         // 0x5B08(0x0014)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify, NoDestructor)
	uint8                                         Pad_5B1C[0x4];                                     // 0x5B1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGruntCustomizationMeshesConfig        CustomizationConfig;                               // 0x5B20(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UPoseAsset*                             FacePoseAsset;                                     // 0x5CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DelayedRandomizationRequest;                       // 0x5CA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void GetFaceAnimBP(class UEnemyFace_AnimBlueprint_C** EnemyFaceAnimBP);
	class UPoseAsset* GetFacePoseAsset();
	void OnRep_SelectedCustomizationInfo();
	void ApplyGruntCustomization();
	void CustomizeCharacter();
	void UpdateMaterialsOnCustomizedMeshFromMap(class USkeletalMeshComponent*& SkeletalMeshComponent, TMap<class FString, class UMaterialInstanceConstant*>& MaterialOverrides);
	void UpdateMaterialsOnCustomizedMesh(class USkeletalMeshComponent*& SkeletalMeshComponent, TMap<class FString, class UMaterialInstanceConstant*>& MaterialOverrides);
	void UpdateComponentFromIndex(class USkeletalMeshComponent*& MeshComponent, ENPCCustomizationSlot Slot);
	void UserConstructionScript();
	void RequestGruntCustomization();
	void OnCustomizationLoaded(class AActor* CustomizationOwner, int32 RequestID, EPawnCustomizationRequestType RequestType);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_RBNPC_Grunt(int32 EntryPoint);

	class USkeletalMeshComponent* GetFaceFXSkeletalMeshComponent() const;
	class FName GetFoleySwitchOverride() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RBNPC_Grunt_C">();
	}
	static class ARBNPC_Grunt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARBNPC_Grunt_C>();
	}
};
static_assert(alignof(ARBNPC_Grunt_C) == 0x000010, "Wrong alignment on ARBNPC_Grunt_C");
static_assert(sizeof(ARBNPC_Grunt_C) == 0x005CB0, "Wrong size on ARBNPC_Grunt_C");
static_assert(offsetof(ARBNPC_Grunt_C, UberGraphFrame_RBNPC_Grunt_C) == 0x005A68, "Member 'ARBNPC_Grunt_C::UberGraphFrame_RBNPC_Grunt_C' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, Head_Mesh_EDITOR) == 0x005A70, "Member 'ARBNPC_Grunt_C::Head_Mesh_EDITOR' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, LowerBody_Mesh_EDITOR) == 0x005A78, "Member 'ARBNPC_Grunt_C::LowerBody_Mesh_EDITOR' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, UpperBody_Mesh_EDITOR) == 0x005A80, "Member 'ARBNPC_Grunt_C::UpperBody_Mesh_EDITOR' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, Hair_Mesh) == 0x005A88, "Member 'ARBNPC_Grunt_C::Hair_Mesh' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, Head_Mesh) == 0x005A90, "Member 'ARBNPC_Grunt_C::Head_Mesh' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, LowerBody_Mesh) == 0x005A98, "Member 'ARBNPC_Grunt_C::LowerBody_Mesh' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, UpperBody_Mesh) == 0x005AA0, "Member 'ARBNPC_Grunt_C::UpperBody_Mesh' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, LoadedHeadMaterials) == 0x005AA8, "Member 'ARBNPC_Grunt_C::LoadedHeadMaterials' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, AdditionalBodyMeshes) == 0x005AF8, "Member 'ARBNPC_Grunt_C::AdditionalBodyMeshes' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, SelectedCustomizationInfo) == 0x005B08, "Member 'ARBNPC_Grunt_C::SelectedCustomizationInfo' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, CustomizationConfig) == 0x005B20, "Member 'ARBNPC_Grunt_C::CustomizationConfig' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, FacePoseAsset) == 0x005CA0, "Member 'ARBNPC_Grunt_C::FacePoseAsset' has a wrong offset!");
static_assert(offsetof(ARBNPC_Grunt_C, DelayedRandomizationRequest) == 0x005CA8, "Member 'ARBNPC_Grunt_C::DelayedRandomizationRequest' has a wrong offset!");

}

