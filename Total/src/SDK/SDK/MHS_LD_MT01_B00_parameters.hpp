#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MHS_LD_MT01_B00

#include "Basic.hpp"


namespace SDK::Params
{

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_AvellanosStart_K2Node_ActorBoundEvent_0_OnPlayerTriggerVolumeTriggered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_AvellanosStart_K2Node_ActorBoundEvent_0_OnPlayerTriggerVolumeTriggered__DelegateSignature final
{
public:
	class URBPlayerTriggerComponent*              Trigger;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_AvellanosStart_K2Node_ActorBoundEvent_0_OnPlayerTriggerVolumeTriggered__DelegateSignature) == 0x000008, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_AvellanosStart_K2Node_ActorBoundEvent_0_OnPlayerTriggerVolumeTriggered__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_AvellanosStart_K2Node_ActorBoundEvent_0_OnPlayerTriggerVolumeTriggered__DelegateSignature) == 0x000008, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_AvellanosStart_K2Node_ActorBoundEvent_0_OnPlayerTriggerVolumeTriggered__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_AvellanosStart_K2Node_ActorBoundEvent_0_OnPlayerTriggerVolumeTriggered__DelegateSignature, Trigger) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_AvellanosStart_K2Node_ActorBoundEvent_0_OnPlayerTriggerVolumeTriggered__DelegateSignature::Trigger' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_GoTo_Vault_K2Node_ActorBoundEvent_4_OnPlayerTriggerVolumeTriggered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_GoTo_Vault_K2Node_ActorBoundEvent_4_OnPlayerTriggerVolumeTriggered__DelegateSignature final
{
public:
	class URBPlayerTriggerComponent*              Trigger;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_GoTo_Vault_K2Node_ActorBoundEvent_4_OnPlayerTriggerVolumeTriggered__DelegateSignature) == 0x000008, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_GoTo_Vault_K2Node_ActorBoundEvent_4_OnPlayerTriggerVolumeTriggered__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_GoTo_Vault_K2Node_ActorBoundEvent_4_OnPlayerTriggerVolumeTriggered__DelegateSignature) == 0x000008, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_GoTo_Vault_K2Node_ActorBoundEvent_4_OnPlayerTriggerVolumeTriggered__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_GoTo_Vault_K2Node_ActorBoundEvent_4_OnPlayerTriggerVolumeTriggered__DelegateSignature, Trigger) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_GoTo_Vault_K2Node_ActorBoundEvent_4_OnPlayerTriggerVolumeTriggered__DelegateSignature::Trigger' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_MT01_Goto_ObjCoord_BP_GoTo_ReachVault_K2Node_ActorBoundEvent_6_OnObjectiveCoordinatorCompleted__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Goto_ObjCoord_BP_GoTo_ReachVault_K2Node_ActorBoundEvent_6_OnObjectiveCoordinatorCompleted__DelegateSignature final
{
public:
	bool                                          bIsJIP;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Goto_ObjCoord_BP_GoTo_ReachVault_K2Node_ActorBoundEvent_6_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Goto_ObjCoord_BP_GoTo_ReachVault_K2Node_ActorBoundEvent_6_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Goto_ObjCoord_BP_GoTo_ReachVault_K2Node_ActorBoundEvent_6_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Goto_ObjCoord_BP_GoTo_ReachVault_K2Node_ActorBoundEvent_6_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Goto_ObjCoord_BP_GoTo_ReachVault_K2Node_ActorBoundEvent_6_OnObjectiveCoordinatorCompleted__DelegateSignature, bIsJIP) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Goto_ObjCoord_BP_GoTo_ReachVault_K2Node_ActorBoundEvent_6_OnObjectiveCoordinatorCompleted__DelegateSignature::bIsJIP' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Boatman_LightEnticer_K2Node_ActorBoundEvent_3_OnPlayerTriggerVolumeTriggered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Boatman_LightEnticer_K2Node_ActorBoundEvent_3_OnPlayerTriggerVolumeTriggered__DelegateSignature final
{
public:
	class URBPlayerTriggerComponent*              Trigger;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Boatman_LightEnticer_K2Node_ActorBoundEvent_3_OnPlayerTriggerVolumeTriggered__DelegateSignature) == 0x000008, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Boatman_LightEnticer_K2Node_ActorBoundEvent_3_OnPlayerTriggerVolumeTriggered__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Boatman_LightEnticer_K2Node_ActorBoundEvent_3_OnPlayerTriggerVolumeTriggered__DelegateSignature) == 0x000008, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Boatman_LightEnticer_K2Node_ActorBoundEvent_3_OnPlayerTriggerVolumeTriggered__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Boatman_LightEnticer_K2Node_ActorBoundEvent_3_OnPlayerTriggerVolumeTriggered__DelegateSignature, Trigger) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Boatman_LightEnticer_K2Node_ActorBoundEvent_3_OnPlayerTriggerVolumeTriggered__DelegateSignature::Trigger' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Regroup_K2Node_ActorBoundEvent_11_OnPlayerTriggerVolumeTriggered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Regroup_K2Node_ActorBoundEvent_11_OnPlayerTriggerVolumeTriggered__DelegateSignature final
{
public:
	class URBPlayerTriggerComponent*              Trigger;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Regroup_K2Node_ActorBoundEvent_11_OnPlayerTriggerVolumeTriggered__DelegateSignature) == 0x000008, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Regroup_K2Node_ActorBoundEvent_11_OnPlayerTriggerVolumeTriggered__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Regroup_K2Node_ActorBoundEvent_11_OnPlayerTriggerVolumeTriggered__DelegateSignature) == 0x000008, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Regroup_K2Node_ActorBoundEvent_11_OnPlayerTriggerVolumeTriggered__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Regroup_K2Node_ActorBoundEvent_11_OnPlayerTriggerVolumeTriggered__DelegateSignature, Trigger) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_RBPlayerTriggerVolume_Regroup_K2Node_ActorBoundEvent_11_OnPlayerTriggerVolumeTriggered__DelegateSignature::Trigger' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_Simple_ObjCoord_BP_2_K2Node_ActorBoundEvent_7_OnObjectiveCoordinatorCompleted__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Simple_ObjCoord_BP_2_K2Node_ActorBoundEvent_7_OnObjectiveCoordinatorCompleted__DelegateSignature final
{
public:
	bool                                          bIsJIP;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Simple_ObjCoord_BP_2_K2Node_ActorBoundEvent_7_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Simple_ObjCoord_BP_2_K2Node_ActorBoundEvent_7_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Simple_ObjCoord_BP_2_K2Node_ActorBoundEvent_7_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Simple_ObjCoord_BP_2_K2Node_ActorBoundEvent_7_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Simple_ObjCoord_BP_2_K2Node_ActorBoundEvent_7_OnObjectiveCoordinatorCompleted__DelegateSignature, bIsJIP) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Simple_ObjCoord_BP_2_K2Node_ActorBoundEvent_7_OnObjectiveCoordinatorCompleted__DelegateSignature::bIsJIP' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_Shipyard_K2Node_ActorBoundEvent_13_OnObjectiveCoordinatorCompleted__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_Shipyard_K2Node_ActorBoundEvent_13_OnObjectiveCoordinatorCompleted__DelegateSignature final
{
public:
	bool                                          bIsJIP;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_Shipyard_K2Node_ActorBoundEvent_13_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_Shipyard_K2Node_ActorBoundEvent_13_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_Shipyard_K2Node_ActorBoundEvent_13_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_Shipyard_K2Node_ActorBoundEvent_13_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_Shipyard_K2Node_ActorBoundEvent_13_OnObjectiveCoordinatorCompleted__DelegateSignature, bIsJIP) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_Shipyard_K2Node_ActorBoundEvent_13_OnObjectiveCoordinatorCompleted__DelegateSignature::bIsJIP' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_DrugLab_K2Node_ActorBoundEvent_14_OnObjectiveCoordinatorCompleted__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_DrugLab_K2Node_ActorBoundEvent_14_OnObjectiveCoordinatorCompleted__DelegateSignature final
{
public:
	bool                                          bIsJIP;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_DrugLab_K2Node_ActorBoundEvent_14_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_DrugLab_K2Node_ActorBoundEvent_14_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_DrugLab_K2Node_ActorBoundEvent_14_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_DrugLab_K2Node_ActorBoundEvent_14_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_DrugLab_K2Node_ActorBoundEvent_14_OnObjectiveCoordinatorCompleted__DelegateSignature, bIsJIP) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_DrugLab_K2Node_ActorBoundEvent_14_OnObjectiveCoordinatorCompleted__DelegateSignature::bIsJIP' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_TrainDepot_1_K2Node_ActorBoundEvent_15_OnObjectiveCoordinatorCompleted__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_TrainDepot_1_K2Node_ActorBoundEvent_15_OnObjectiveCoordinatorCompleted__DelegateSignature final
{
public:
	bool                                          bIsJIP;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_TrainDepot_1_K2Node_ActorBoundEvent_15_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_TrainDepot_1_K2Node_ActorBoundEvent_15_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_TrainDepot_1_K2Node_ActorBoundEvent_15_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_TrainDepot_1_K2Node_ActorBoundEvent_15_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_TrainDepot_1_K2Node_ActorBoundEvent_15_OnObjectiveCoordinatorCompleted__DelegateSignature, bIsJIP) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_Projections_Coordinator_BP_TrainDepot_1_K2Node_ActorBoundEvent_15_OnObjectiveCoordinatorCompleted__DelegateSignature::bIsJIP' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_RBObjectiveCoordinatorGroup_1_K2Node_ActorBoundEvent_2_OnObjectiveCoordinatorCompleted__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_RBObjectiveCoordinatorGroup_1_K2Node_ActorBoundEvent_2_OnObjectiveCoordinatorCompleted__DelegateSignature final
{
public:
	bool                                          bIsJIP;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_RBObjectiveCoordinatorGroup_1_K2Node_ActorBoundEvent_2_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_RBObjectiveCoordinatorGroup_1_K2Node_ActorBoundEvent_2_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_RBObjectiveCoordinatorGroup_1_K2Node_ActorBoundEvent_2_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_RBObjectiveCoordinatorGroup_1_K2Node_ActorBoundEvent_2_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_RBObjectiveCoordinatorGroup_1_K2Node_ActorBoundEvent_2_OnObjectiveCoordinatorCompleted__DelegateSignature, bIsJIP) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_RBObjectiveCoordinatorGroup_1_K2Node_ActorBoundEvent_2_OnObjectiveCoordinatorCompleted__DelegateSignature::bIsJIP' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_Goto_ObjCoord_BP_2_K2Node_ActorBoundEvent_1_OnObjectiveCoordinatorCompleted__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Goto_ObjCoord_BP_2_K2Node_ActorBoundEvent_1_OnObjectiveCoordinatorCompleted__DelegateSignature final
{
public:
	bool                                          bIsJIP;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Goto_ObjCoord_BP_2_K2Node_ActorBoundEvent_1_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Goto_ObjCoord_BP_2_K2Node_ActorBoundEvent_1_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Goto_ObjCoord_BP_2_K2Node_ActorBoundEvent_1_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Goto_ObjCoord_BP_2_K2Node_ActorBoundEvent_1_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Goto_ObjCoord_BP_2_K2Node_ActorBoundEvent_1_OnObjectiveCoordinatorCompleted__DelegateSignature, bIsJIP) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_Goto_ObjCoord_BP_2_K2Node_ActorBoundEvent_1_OnObjectiveCoordinatorCompleted__DelegateSignature::bIsJIP' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.BndEvt__MHS_LD_MT01_B00_MT01_GatherAndDeliver_ObjCoord_BP_K2Node_ActorBoundEvent_8_OnObjectiveCoordinatorCompleted__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_GatherAndDeliver_ObjCoord_BP_K2Node_ActorBoundEvent_8_OnObjectiveCoordinatorCompleted__DelegateSignature final
{
public:
	bool                                          bIsJIP;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_GatherAndDeliver_ObjCoord_BP_K2Node_ActorBoundEvent_8_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong alignment on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_GatherAndDeliver_ObjCoord_BP_K2Node_ActorBoundEvent_8_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(sizeof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_GatherAndDeliver_ObjCoord_BP_K2Node_ActorBoundEvent_8_OnObjectiveCoordinatorCompleted__DelegateSignature) == 0x000001, "Wrong size on MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_GatherAndDeliver_ObjCoord_BP_K2Node_ActorBoundEvent_8_OnObjectiveCoordinatorCompleted__DelegateSignature");
static_assert(offsetof(MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_GatherAndDeliver_ObjCoord_BP_K2Node_ActorBoundEvent_8_OnObjectiveCoordinatorCompleted__DelegateSignature, bIsJIP) == 0x000000, "Member 'MHS_LD_MT01_B00_C_BndEvt__MHS_LD_MT01_B00_MT01_GatherAndDeliver_ObjCoord_BP_K2Node_ActorBoundEvent_8_OnObjectiveCoordinatorCompleted__DelegateSignature::bIsJIP' has a wrong offset!");

// Function MHS_LD_MT01_B00.MHS_LD_MT01_B00_C.ExecuteUbergraph_MHS_LD_MT01_B00
// 0x00D8 (0x00D8 - 0x0000)
struct MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ActorBoundEvent_bIsJIP;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerTriggerComponent*              K2Node_ActorBoundEvent_trigger_3;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoteEvent_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerTriggerComponent*              K2Node_ActorBoundEvent_trigger_2;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ActorBoundEvent_bIsJIP_7;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerTriggerComponent*              K2Node_ActorBoundEvent_trigger_1;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoteEvent_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoteEvent_ReturnValue_2;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARollingDoorMinus2M_BP_C*               K2Node_DynamicCast_AsRolling_Door_2M_B_P;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerTriggerComponent*              K2Node_ActorBoundEvent_trigger;                    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ActorBoundEvent_bIsJIP_6;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ActorBoundEvent_bIsJIP_5;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ActorBoundEvent_bIsJIP_4;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ActorBoundEvent_bIsJIP_3;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_MultiGate_FirstRun;                         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_Data;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_ScratchBool;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_ScratchIndex;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoteEvent_ReturnValue_3;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoteEvent_ReturnValue_4;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoteEvent_ReturnValue_5;                // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoteEvent_ReturnValue_6;                // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ActorBoundEvent_bIsJIP_2;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ActorBoundEvent_bIsJIP_1;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBVolumetricFog*                       K2Node_DynamicCast_AsRB_Volumetric_Fog;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBLight_BP_C*                          K2Node_DynamicCast_AsRB_Light_BP;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBLight_BP_C*                          K2Node_DynamicCast_AsRB_Light_BP_1;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLight_BP_C*                          K2Node_DynamicCast_AsRB_Light_BP_2;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoteEvent_ReturnValue_7;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00) == 0x000008, "Wrong alignment on MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00");
static_assert(sizeof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00) == 0x0000D8, "Wrong size on MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, EntryPoint) == 0x000000, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::EntryPoint' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_bIsJIP) == 0x000004, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_bIsJIP' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_trigger_3) == 0x000008, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_trigger_3' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_RemoteEvent_ReturnValue) == 0x000010, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_RemoteEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_trigger_2) == 0x000018, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_trigger_2' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_bIsJIP_7) == 0x000020, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_bIsJIP_7' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_trigger_1) == 0x000028, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_trigger_1' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_RemoteEvent_ReturnValue_1) == 0x000030, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_RemoteEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_RemoteEvent_ReturnValue_2) == 0x000031, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_RemoteEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000038, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_AsRolling_Door_2M_B_P) == 0x000040, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_AsRolling_Door_2M_B_P' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_trigger) == 0x000050, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_trigger' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_bIsJIP_6) == 0x000058, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_bIsJIP_6' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_bIsJIP_5) == 0x000059, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_bIsJIP_5' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_bIsJIP_4) == 0x00005A, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_bIsJIP_4' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_bIsJIP_3) == 0x00005B, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_bIsJIP_3' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_MultiGate_FirstRun) == 0x00005C, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_MultiGate_FirstRun' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_MultiGate_Data) == 0x000060, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_MultiGate_Data' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_MultiGate_ScratchBool) == 0x000064, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_MultiGate_ScratchBool' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_MultiGate_ScratchIndex) == 0x000068, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_MultiGate_ScratchIndex' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_RemoteEvent_ReturnValue_3) == 0x00006C, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_RemoteEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_RemoteEvent_ReturnValue_4) == 0x00006D, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_RemoteEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_RemoteEvent_ReturnValue_5) == 0x00006E, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_RemoteEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_RemoteEvent_ReturnValue_6) == 0x00006F, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_RemoteEvent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_bIsJIP_2) == 0x000070, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_bIsJIP_2' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_ActorBoundEvent_bIsJIP_1) == 0x000071, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_ActorBoundEvent_bIsJIP_1' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000078, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_AsRB_Volumetric_Fog) == 0x000080, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_AsRB_Volumetric_Fog' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000090, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_AsRB_Light_BP) == 0x000098, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_AsRB_Light_BP' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x0000A8, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x0000B0, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_AsRB_Light_BP_1) == 0x0000B8, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_AsRB_Light_BP_1' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_AsRB_Light_BP_2) == 0x0000C8, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_AsRB_Light_BP_2' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00, CallFunc_RemoteEvent_ReturnValue_7) == 0x0000D1, "Member 'MHS_LD_MT01_B00_C_ExecuteUbergraph_MHS_LD_MT01_B00::CallFunc_RemoteEvent_ReturnValue_7' has a wrong offset!");

}

