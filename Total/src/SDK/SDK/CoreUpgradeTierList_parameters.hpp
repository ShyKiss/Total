#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CoreUpgradeTierList

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.OnFocusReceived
// 0x01C8 (0x01C8 - 0x0000)
struct CoreUpgradeTierList_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0110(0x00B8)()
};
static_assert(alignof(CoreUpgradeTierList_C_OnFocusReceived) == 0x000008, "Wrong alignment on CoreUpgradeTierList_C_OnFocusReceived");
static_assert(sizeof(CoreUpgradeTierList_C_OnFocusReceived) == 0x0001C8, "Wrong size on CoreUpgradeTierList_C_OnFocusReceived");
static_assert(offsetof(CoreUpgradeTierList_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'CoreUpgradeTierList_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'CoreUpgradeTierList_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'CoreUpgradeTierList_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_OnFocusReceived, CallFunc_GetMenuManager_ReturnValue) == 0x0000F8, "Member 'CoreUpgradeTierList_C_OnFocusReceived::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_OnFocusReceived, CallFunc_GetChildAt_ReturnValue) == 0x000100, "Member 'CoreUpgradeTierList_C_OnFocusReceived::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_OnFocusReceived, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x000108, "Member 'CoreUpgradeTierList_C_OnFocusReceived::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000110, "Member 'CoreUpgradeTierList_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.OnTierClickedEvent
// 0x0004 (0x0004 - 0x0000)
struct CoreUpgradeTierList_C_OnTierClickedEvent final
{
public:
	int32                                         Tier;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierList_C_OnTierClickedEvent) == 0x000004, "Wrong alignment on CoreUpgradeTierList_C_OnTierClickedEvent");
static_assert(sizeof(CoreUpgradeTierList_C_OnTierClickedEvent) == 0x000004, "Wrong size on CoreUpgradeTierList_C_OnTierClickedEvent");
static_assert(offsetof(CoreUpgradeTierList_C_OnTierClickedEvent, Tier) == 0x000000, "Member 'CoreUpgradeTierList_C_OnTierClickedEvent::Tier' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.OnTierUnhoveredEvent
// 0x0004 (0x0004 - 0x0000)
struct CoreUpgradeTierList_C_OnTierUnhoveredEvent final
{
public:
	int32                                         Tier;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierList_C_OnTierUnhoveredEvent) == 0x000004, "Wrong alignment on CoreUpgradeTierList_C_OnTierUnhoveredEvent");
static_assert(sizeof(CoreUpgradeTierList_C_OnTierUnhoveredEvent) == 0x000004, "Wrong size on CoreUpgradeTierList_C_OnTierUnhoveredEvent");
static_assert(offsetof(CoreUpgradeTierList_C_OnTierUnhoveredEvent, Tier) == 0x000000, "Member 'CoreUpgradeTierList_C_OnTierUnhoveredEvent::Tier' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.OnTierHoveredEvent
// 0x0004 (0x0004 - 0x0000)
struct CoreUpgradeTierList_C_OnTierHoveredEvent final
{
public:
	int32                                         Tier;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierList_C_OnTierHoveredEvent) == 0x000004, "Wrong alignment on CoreUpgradeTierList_C_OnTierHoveredEvent");
static_assert(sizeof(CoreUpgradeTierList_C_OnTierHoveredEvent) == 0x000004, "Wrong size on CoreUpgradeTierList_C_OnTierHoveredEvent");
static_assert(offsetof(CoreUpgradeTierList_C_OnTierHoveredEvent, Tier) == 0x000000, "Member 'CoreUpgradeTierList_C_OnTierHoveredEvent::Tier' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.Refresh
// 0x0048 (0x0048 - 0x0000)
struct CoreUpgradeTierList_C_Refresh final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCoreUpgradeTierButton_C*               K2Node_DynamicCast_AsCore_Upgrade_Tier_Button;     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierList_C_Refresh) == 0x000008, "Wrong alignment on CoreUpgradeTierList_C_Refresh");
static_assert(sizeof(CoreUpgradeTierList_C_Refresh) == 0x000048, "Wrong size on CoreUpgradeTierList_C_Refresh");
static_assert(offsetof(CoreUpgradeTierList_C_Refresh, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CoreUpgradeTierList_C_Refresh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Refresh, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CoreUpgradeTierList_C_Refresh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CoreUpgradeTierList_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Refresh, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'CoreUpgradeTierList_C_Refresh::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'CoreUpgradeTierList_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Refresh, CallFunc_Array_Get_Item) == 0x000028, "Member 'CoreUpgradeTierList_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Refresh, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'CoreUpgradeTierList_C_Refresh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Refresh, K2Node_DynamicCast_AsCore_Upgrade_Tier_Button) == 0x000038, "Member 'CoreUpgradeTierList_C_Refresh::K2Node_DynamicCast_AsCore_Upgrade_Tier_Button' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Refresh, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'CoreUpgradeTierList_C_Refresh::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.Init
// 0x0001 (0x0001 - 0x0000)
struct CoreUpgradeTierList_C_Init final
{
public:
	bool                                          bIsLoadout_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierList_C_Init) == 0x000001, "Wrong alignment on CoreUpgradeTierList_C_Init");
static_assert(sizeof(CoreUpgradeTierList_C_Init) == 0x000001, "Wrong size on CoreUpgradeTierList_C_Init");
static_assert(offsetof(CoreUpgradeTierList_C_Init, bIsLoadout_0) == 0x000000, "Member 'CoreUpgradeTierList_C_Init::bIsLoadout_0' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.Setup
// 0x01F0 (0x01F0 - 0x0000)
struct CoreUpgradeTierList_C_Setup final
{
public:
	int32                                         CurrentTier;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCoreUpgradeTierButton_C*               CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Tier)>                   K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Tier)>                   K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Tier)>                   K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class URBPlayerProgressionData*               CallFunc_GetLocalPlayerProgressionData_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRBItemProgressionData>         CallFunc_FilterItemProgressionData_ReturnValue;    // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBItemProgressionData                 CallFunc_Array_Get_Item;                           // 0x0078(0x0170)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierList_C_Setup) == 0x000008, "Wrong alignment on CoreUpgradeTierList_C_Setup");
static_assert(sizeof(CoreUpgradeTierList_C_Setup) == 0x0001F0, "Wrong size on CoreUpgradeTierList_C_Setup");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CurrentTier) == 0x000000, "Member 'CoreUpgradeTierList_C_Setup::CurrentTier' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, Temp_int_Array_Index_Variable) == 0x000004, "Member 'CoreUpgradeTierList_C_Setup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'CoreUpgradeTierList_C_Setup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_Create_ReturnValue) == 0x000010, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000020, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'CoreUpgradeTierList_C_Setup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'CoreUpgradeTierList_C_Setup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'CoreUpgradeTierList_C_Setup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_GetLocalPlayerProgressionData_ReturnValue) == 0x000058, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_GetLocalPlayerProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_FilterItemProgressionData_ReturnValue) == 0x000060, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_FilterItemProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_Array_Get_Item) == 0x000078, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_Setup, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001E9, "Member 'CoreUpgradeTierList_C_Setup::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CoreUpgradeTierList_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierList_C_PreConstruct) == 0x000001, "Wrong alignment on CoreUpgradeTierList_C_PreConstruct");
static_assert(sizeof(CoreUpgradeTierList_C_PreConstruct) == 0x000001, "Wrong size on CoreUpgradeTierList_C_PreConstruct");
static_assert(offsetof(CoreUpgradeTierList_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CoreUpgradeTierList_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.ExecuteUbergraph_CoreUpgradeTierList
// 0x0008 (0x0008 - 0x0000)
struct CoreUpgradeTierList_C_ExecuteUbergraph_CoreUpgradeTierList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierList_C_ExecuteUbergraph_CoreUpgradeTierList) == 0x000004, "Wrong alignment on CoreUpgradeTierList_C_ExecuteUbergraph_CoreUpgradeTierList");
static_assert(sizeof(CoreUpgradeTierList_C_ExecuteUbergraph_CoreUpgradeTierList) == 0x000008, "Wrong size on CoreUpgradeTierList_C_ExecuteUbergraph_CoreUpgradeTierList");
static_assert(offsetof(CoreUpgradeTierList_C_ExecuteUbergraph_CoreUpgradeTierList, EntryPoint) == 0x000000, "Member 'CoreUpgradeTierList_C_ExecuteUbergraph_CoreUpgradeTierList::EntryPoint' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierList_C_ExecuteUbergraph_CoreUpgradeTierList, K2Node_Event_IsDesignTime) == 0x000004, "Member 'CoreUpgradeTierList_C_ExecuteUbergraph_CoreUpgradeTierList::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.OnTierClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct CoreUpgradeTierList_C_OnTierClicked__DelegateSignature final
{
public:
	int32                                         Tier;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierList_C_OnTierClicked__DelegateSignature) == 0x000004, "Wrong alignment on CoreUpgradeTierList_C_OnTierClicked__DelegateSignature");
static_assert(sizeof(CoreUpgradeTierList_C_OnTierClicked__DelegateSignature) == 0x000004, "Wrong size on CoreUpgradeTierList_C_OnTierClicked__DelegateSignature");
static_assert(offsetof(CoreUpgradeTierList_C_OnTierClicked__DelegateSignature, Tier) == 0x000000, "Member 'CoreUpgradeTierList_C_OnTierClicked__DelegateSignature::Tier' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.OnTierUnhovered__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct CoreUpgradeTierList_C_OnTierUnhovered__DelegateSignature final
{
public:
	int32                                         Tier;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierList_C_OnTierUnhovered__DelegateSignature) == 0x000004, "Wrong alignment on CoreUpgradeTierList_C_OnTierUnhovered__DelegateSignature");
static_assert(sizeof(CoreUpgradeTierList_C_OnTierUnhovered__DelegateSignature) == 0x000004, "Wrong size on CoreUpgradeTierList_C_OnTierUnhovered__DelegateSignature");
static_assert(offsetof(CoreUpgradeTierList_C_OnTierUnhovered__DelegateSignature, Tier) == 0x000000, "Member 'CoreUpgradeTierList_C_OnTierUnhovered__DelegateSignature::Tier' has a wrong offset!");

// Function CoreUpgradeTierList.CoreUpgradeTierList_C.OnTierHovered__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct CoreUpgradeTierList_C_OnTierHovered__DelegateSignature final
{
public:
	int32                                         Tier;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierList_C_OnTierHovered__DelegateSignature) == 0x000004, "Wrong alignment on CoreUpgradeTierList_C_OnTierHovered__DelegateSignature");
static_assert(sizeof(CoreUpgradeTierList_C_OnTierHovered__DelegateSignature) == 0x000004, "Wrong size on CoreUpgradeTierList_C_OnTierHovered__DelegateSignature");
static_assert(offsetof(CoreUpgradeTierList_C_OnTierHovered__DelegateSignature, Tier) == 0x000000, "Member 'CoreUpgradeTierList_C_OnTierHovered__DelegateSignature::Tier' has a wrong offset!");

}

