#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WallMinus01_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ModuleMeshData_structs.hpp"
#include "ModuleAlternativeMeshData_structs.hpp"
#include "WallEnd_Enu_structs.hpp"
#include "WallSide_Enu_structs.hpp"
#include "StaticmeshArray_Stuc_structs.hpp"
#include "Engine_structs.hpp"
#include "ModuleMeshDataMinus02_structs.hpp"
#include "MeshPopulateDirection_structs.hpp"


namespace SDK::Params
{

// Function Wall-01_BP.Wall-01_BP_C.UserConstructionScript
// 0x0428 (0x0428 - 0x0000)
struct WallMinus01_BP_C_UserConstructionScript final
{
public:
	struct FVector                                _LastLocation;                                     // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _NewSize;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _yLocationMax;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModuleMeshDataMinus02                 CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModuleMeshDataMinus02                 CallFunc_Array_Get_Item_1;                         // 0x0040(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateSurface_LastLocation;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_MaxSecondSize;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_SecondScale;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStaticmeshArray_Stuc>          CallFunc_PopulateSurface_AllStactimeshes;          // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_PopulateSurface_RowCount;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_LastAlphaMeshSize;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_AlphaScale;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateSurface_LastLocation_1;           // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_MaxSecondSize_1;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_SecondScale_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStaticmeshArray_Stuc>          CallFunc_PopulateSurface_AllStactimeshes_1;        // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_PopulateSurface_RowCount_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_LastAlphaMeshSize_1;      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_AlphaScale_1;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateSurface_LastLocation_2;           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_MaxSecondSize_2;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_SecondScale_2;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStaticmeshArray_Stuc>          CallFunc_PopulateSurface_AllStactimeshes_2;        // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_PopulateSurface_RowCount_2;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_LastAlphaMeshSize_2;      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_AlphaScale_2;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateRow_LastLocation;                 // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_PopulateRow_StaticmeshComponents1;        // 0x0170(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_PopulateRow_LastAlphaMeshSize;            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateRow_AlphaScale;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateRow_LastLocation_1;               // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_PopulateRow_StaticmeshComponents1_1;      // 0x0198(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_PopulateRow_LastAlphaMeshSize_1;          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateRow_AlphaScale_1;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateRow_LastLocation_2;               // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_PopulateRow_StaticmeshComponents1_2;      // 0x01C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_PopulateRow_LastAlphaMeshSize_2;          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateRow_AlphaScale_2;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateRow_LastLocation_3;               // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_PopulateRow_StaticmeshComponents1_3;      // 0x01F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_PopulateRow_LastAlphaMeshSize_3;          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateRow_AlphaScale_3;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateSurface_LastLocation_3;           // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_MaxSecondSize_3;          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_SecondScale_3;            // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStaticmeshArray_Stuc>          CallFunc_PopulateSurface_AllStactimeshes_3;        // 0x0228(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_PopulateSurface_RowCount_3;               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_LastAlphaMeshSize_3;      // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_AlphaScale_3;             // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_5;      // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_6;      // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_7;      // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_8;      // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetGap_NumberOfInbetween;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGap_TotalInbetweenSize;                // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetGap_GapTotal;                          // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModuleMeshDataMinus02                 K2Node_MakeStruct_ModuleMeshData_02;               // 0x02E0(0x0018)(HasGetValueTypeHash)
	TArray<struct FModuleMeshDataMinus02>         K2Node_MakeArray_Array;                            // 0x02F8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateSurface_LastLocation_4;           // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_MaxSecondSize_4;          // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_SecondScale_4;            // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStaticmeshArray_Stuc>          CallFunc_PopulateSurface_AllStactimeshes_4;        // 0x0328(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_PopulateSurface_RowCount_4;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_LastAlphaMeshSize_4;      // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_AlphaScale_4;             // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateRow_LastLocation_4;               // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_PopulateRow_StaticmeshComponents1_4;      // 0x0350(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_PopulateRow_LastAlphaMeshSize_4;          // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateRow_AlphaScale_4;                 // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_PopulateSurface_LastLocation_5;           // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_MaxSecondSize_5;          // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_SecondScale_5;            // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStaticmeshArray_Stuc>          CallFunc_PopulateSurface_AllStactimeshes_5;        // 0x0380(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_PopulateSurface_RowCount_5;               // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_LastAlphaMeshSize_5;      // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_AlphaScale_5;             // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_PopulateSurface_LastLocation_6;           // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_MaxSecondSize_6;          // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_SecondScale_6;            // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStaticmeshArray_Stuc>          CallFunc_PopulateSurface_AllStactimeshes_6;        // 0x03D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_PopulateSurface_RowCount_6;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_LastAlphaMeshSize_6;      // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_AlphaScale_6;             // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_setVariable_NewSize;                      // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallMinus01_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on WallMinus01_BP_C_UserConstructionScript");
static_assert(sizeof(WallMinus01_BP_C_UserConstructionScript) == 0x000428, "Wrong size on WallMinus01_BP_C_UserConstructionScript");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, _LastLocation) == 0x000000, "Member 'WallMinus01_BP_C_UserConstructionScript::_LastLocation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, _NewSize) == 0x00000C, "Member 'WallMinus01_BP_C_UserConstructionScript::_NewSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, _yLocationMax) == 0x000018, "Member 'WallMinus01_BP_C_UserConstructionScript::_yLocationMax' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, Temp_bool_Variable) == 0x00001C, "Member 'WallMinus01_BP_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, Temp_bool_Variable_1) == 0x00001D, "Member 'WallMinus01_BP_C_UserConstructionScript::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000020, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000039, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00003A, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00003B, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_1) == 0x000059, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005A, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_3) == 0x00005B, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_4) == 0x00005C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_5) == 0x00005D, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_6) == 0x00005E, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_7) == 0x00005F, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x00006C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000078, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastLocation) == 0x000084, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastLocation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_MaxSecondSize) == 0x000090, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_MaxSecondSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_SecondScale) == 0x000094, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_SecondScale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AllStactimeshes) == 0x000098, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AllStactimeshes' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_RowCount) == 0x0000A8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_RowCount' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastAlphaMeshSize) == 0x0000AC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastAlphaMeshSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AlphaScale) == 0x0000B0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AlphaScale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastLocation_1) == 0x0000B4, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastLocation_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_MaxSecondSize_1) == 0x0000C0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_MaxSecondSize_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_SecondScale_1) == 0x0000C4, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_SecondScale_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AllStactimeshes_1) == 0x0000C8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AllStactimeshes_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_RowCount_1) == 0x0000D8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_RowCount_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastAlphaMeshSize_1) == 0x0000DC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastAlphaMeshSize_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AlphaScale_1) == 0x0000E0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AlphaScale_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000E4, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastLocation_2) == 0x0000F0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastLocation_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_MaxSecondSize_2) == 0x0000FC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_MaxSecondSize_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_SecondScale_2) == 0x000100, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_SecondScale_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AllStactimeshes_2) == 0x000108, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AllStactimeshes_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_RowCount_2) == 0x000118, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_RowCount_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastAlphaMeshSize_2) == 0x00011C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastAlphaMeshSize_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AlphaScale_2) == 0x000120, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AlphaScale_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000124, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000130, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000134, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000138, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x00013C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000140, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000144, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x000148, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_X_2) == 0x000154, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Y_2) == 0x000158, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Z_2) == 0x00015C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastLocation) == 0x000160, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastLocation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_StaticmeshComponents1) == 0x000170, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_StaticmeshComponents1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastAlphaMeshSize) == 0x000180, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastAlphaMeshSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_AlphaScale) == 0x000184, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_AlphaScale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastLocation_1) == 0x000188, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastLocation_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_StaticmeshComponents1_1) == 0x000198, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_StaticmeshComponents1_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastAlphaMeshSize_1) == 0x0001A8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastAlphaMeshSize_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_AlphaScale_1) == 0x0001AC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_AlphaScale_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_3) == 0x0001B0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastLocation_2) == 0x0001BC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastLocation_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_StaticmeshComponents1_2) == 0x0001C8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_StaticmeshComponents1_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastAlphaMeshSize_2) == 0x0001D8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastAlphaMeshSize_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_AlphaScale_2) == 0x0001DC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_AlphaScale_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_X_3) == 0x0001E0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Y_3) == 0x0001E4, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Z_3) == 0x0001E8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastLocation_3) == 0x0001EC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastLocation_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_StaticmeshComponents1_3) == 0x0001F8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_StaticmeshComponents1_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastAlphaMeshSize_3) == 0x000208, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastAlphaMeshSize_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_AlphaScale_3) == 0x00020C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_AlphaScale_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastLocation_3) == 0x000210, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastLocation_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_MaxSecondSize_3) == 0x00021C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_MaxSecondSize_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_SecondScale_3) == 0x000220, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_SecondScale_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AllStactimeshes_3) == 0x000228, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AllStactimeshes_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_RowCount_3) == 0x000238, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_RowCount_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastAlphaMeshSize_3) == 0x00023C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastAlphaMeshSize_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AlphaScale_3) == 0x000240, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AlphaScale_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000244, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000250, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x00025C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue_5) == 0x000268, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_X_4) == 0x000274, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Y_4) == 0x000278, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_BreakVector_Z_4) == 0x00027C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue_6) == 0x000280, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x00028C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue_7) == 0x000298, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_4) == 0x0002A4, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002B0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_VectorVector_ReturnValue_8) == 0x0002BC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_SetGap_NumberOfInbetween) == 0x0002C8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_SetGap_NumberOfInbetween' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_SetGap_TotalInbetweenSize) == 0x0002CC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_SetGap_TotalInbetweenSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_SetGap_GapTotal) == 0x0002D0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_SetGap_GapTotal' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, K2Node_MakeStruct_ModuleMeshData_02) == 0x0002E0, "Member 'WallMinus01_BP_C_UserConstructionScript::K2Node_MakeStruct_ModuleMeshData_02' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x0002F8, "Member 'WallMinus01_BP_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_5) == 0x000308, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastLocation_4) == 0x000314, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastLocation_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_MaxSecondSize_4) == 0x000320, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_MaxSecondSize_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_SecondScale_4) == 0x000324, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_SecondScale_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AllStactimeshes_4) == 0x000328, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AllStactimeshes_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_RowCount_4) == 0x000338, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_RowCount_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastAlphaMeshSize_4) == 0x00033C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastAlphaMeshSize_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AlphaScale_4) == 0x000340, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AlphaScale_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastLocation_4) == 0x000344, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastLocation_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_StaticmeshComponents1_4) == 0x000350, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_StaticmeshComponents1_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_LastAlphaMeshSize_4) == 0x000360, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_LastAlphaMeshSize_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateRow_AlphaScale_4) == 0x000364, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateRow_AlphaScale_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000368, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastLocation_5) == 0x00036C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastLocation_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_MaxSecondSize_5) == 0x000378, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_MaxSecondSize_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_SecondScale_5) == 0x00037C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_SecondScale_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AllStactimeshes_5) == 0x000380, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AllStactimeshes_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_RowCount_5) == 0x000390, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_RowCount_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastAlphaMeshSize_5) == 0x000394, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastAlphaMeshSize_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AlphaScale_5) == 0x000398, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AlphaScale_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x00039C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003A0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0003A4, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, K2Node_Select_Default) == 0x0003A8, "Member 'WallMinus01_BP_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0003B4, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastLocation_6) == 0x0003C0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastLocation_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_MaxSecondSize_6) == 0x0003CC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_MaxSecondSize_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_SecondScale_6) == 0x0003D0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_SecondScale_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AllStactimeshes_6) == 0x0003D8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AllStactimeshes_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_RowCount_6) == 0x0003E8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_RowCount_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_LastAlphaMeshSize_6) == 0x0003EC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_LastAlphaMeshSize_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_PopulateSurface_AlphaScale_6) == 0x0003F0, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_PopulateSurface_AlphaScale_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0003F4, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003F8, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0003FC, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000400, "Member 'WallMinus01_BP_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_setVariable_NewSize) == 0x00040C, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_setVariable_NewSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000418, "Member 'WallMinus01_BP_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.ExcludeStructForAutomaticCollision
// 0x0078 (0x0078 - 0x0000)
struct WallMinus01_BP_C_ExcludeStructForAutomaticCollision final
{
public:
	TArray<struct FModuleMeshData>                Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FModuleMeshData                        CallFunc_Array_Get_Item;                           // 0x0028(0x0020)(HasGetValueTypeHash)
	struct FModuleAlternativeMeshData             CallFunc_Array_Get_Item_1;                         // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision) == 0x000008, "Wrong alignment on WallMinus01_BP_C_ExcludeStructForAutomaticCollision");
static_assert(sizeof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision) == 0x000078, "Wrong size on WallMinus01_BP_C_ExcludeStructForAutomaticCollision");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, Array) == 0x000000, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::Array' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Array_Get_Item) == 0x000028, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Array_AddUnique_ReturnValue) == 0x000068, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_ExcludeStructForAutomaticCollision, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000074, "Member 'WallMinus01_BP_C_ExcludeStructForAutomaticCollision::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.AddAutomaticBoxCollisionExcludedStaticMeshes
// 0x0010 (0x0010 - 0x0000)
struct WallMinus01_BP_C_AddAutomaticBoxCollisionExcludedStaticMeshes final
{
public:
	TArray<class UStaticMesh*>                    K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(WallMinus01_BP_C_AddAutomaticBoxCollisionExcludedStaticMeshes) == 0x000008, "Wrong alignment on WallMinus01_BP_C_AddAutomaticBoxCollisionExcludedStaticMeshes");
static_assert(sizeof(WallMinus01_BP_C_AddAutomaticBoxCollisionExcludedStaticMeshes) == 0x000010, "Wrong size on WallMinus01_BP_C_AddAutomaticBoxCollisionExcludedStaticMeshes");
static_assert(offsetof(WallMinus01_BP_C_AddAutomaticBoxCollisionExcludedStaticMeshes, K2Node_MakeArray_Array) == 0x000000, "Member 'WallMinus01_BP_C_AddAutomaticBoxCollisionExcludedStaticMeshes::K2Node_MakeArray_Array' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.InvertYminus
// 0x0280 (0x0280 - 0x0000)
struct WallMinus01_BP_C_InvertYminus final
{
public:
	struct FVector                                LastLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _UseBottomMoldingInv;                              // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _UseUpperMoldingInv;                               // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _UseBottomMolding;                                 // 0x000E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _UseUpperMolding;                                  // 0x000F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  _WallEnd02;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  _WallEnd01;                                        // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 _WallB;                                            // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 _WallA;                                            // 0x0013(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0180(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0210(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WallMinus01_BP_C_InvertYminus) == 0x000010, "Wrong alignment on WallMinus01_BP_C_InvertYminus");
static_assert(sizeof(WallMinus01_BP_C_InvertYminus) == 0x000280, "Wrong size on WallMinus01_BP_C_InvertYminus");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, LastLocation) == 0x000000, "Member 'WallMinus01_BP_C_InvertYminus::LastLocation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, _UseBottomMoldingInv) == 0x00000C, "Member 'WallMinus01_BP_C_InvertYminus::_UseBottomMoldingInv' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, _UseUpperMoldingInv) == 0x00000D, "Member 'WallMinus01_BP_C_InvertYminus::_UseUpperMoldingInv' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, _UseBottomMolding) == 0x00000E, "Member 'WallMinus01_BP_C_InvertYminus::_UseBottomMolding' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, _UseUpperMolding) == 0x00000F, "Member 'WallMinus01_BP_C_InvertYminus::_UseUpperMolding' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, _WallEnd02) == 0x000010, "Member 'WallMinus01_BP_C_InvertYminus::_WallEnd02' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, _WallEnd01) == 0x000011, "Member 'WallMinus01_BP_C_InvertYminus::_WallEnd01' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, _WallB) == 0x000012, "Member 'WallMinus01_BP_C_InvertYminus::_WallB' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, _WallA) == 0x000013, "Member 'WallMinus01_BP_C_InvertYminus::_WallA' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_X) == 0x000014, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_Y) == 0x000018, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_Z) == 0x00001C, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x000030, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_GetTransform_ReturnValue) == 0x0000C0, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakTransform_Rotation) == 0x0000FC, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakTransform_Scale) == 0x000108, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_X_1) == 0x000114, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_Y_1) == 0x000118, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_Z_1) == 0x00011C, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_X_2) == 0x000120, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_Y_2) == 0x000124, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_Z_2) == 0x000128, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_Abs_ReturnValue) == 0x00012C, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_MakeVector_ReturnValue_1) == 0x000130, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_MakeVector_ReturnValue_2) == 0x00013C, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000180, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000208, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_GetTransform_ReturnValue_1) == 0x000210, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakTransform_Location_1) == 0x000240, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakTransform_Rotation_1) == 0x00024C, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakTransform_Scale_1) == 0x000258, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_X_3) == 0x000264, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_Y_3) == 0x000268, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_BreakVector_Z_3) == 0x00026C, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertYminus, CallFunc_Less_FloatFloat_ReturnValue) == 0x000270, "Member 'WallMinus01_BP_C_InvertYminus::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.InvertXminus
// 0x01C0 (0x01C0 - 0x0000)
struct WallMinus01_BP_C_InvertXminus final
{
public:
	bool                                          _UseBottomMoldingInv;                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _UseUpperMoldingInv;                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _UseBottomMolding;                                 // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _UseUpperMolding;                                  // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  _WallEnd02;                                        // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  _WallEnd01;                                        // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 _WallB;                                            // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 _WallA;                                            // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0150(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WallMinus01_BP_C_InvertXminus) == 0x000010, "Wrong alignment on WallMinus01_BP_C_InvertXminus");
static_assert(sizeof(WallMinus01_BP_C_InvertXminus) == 0x0001C0, "Wrong size on WallMinus01_BP_C_InvertXminus");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, _UseBottomMoldingInv) == 0x000000, "Member 'WallMinus01_BP_C_InvertXminus::_UseBottomMoldingInv' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, _UseUpperMoldingInv) == 0x000001, "Member 'WallMinus01_BP_C_InvertXminus::_UseUpperMoldingInv' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, _UseBottomMolding) == 0x000002, "Member 'WallMinus01_BP_C_InvertXminus::_UseBottomMolding' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, _UseUpperMolding) == 0x000003, "Member 'WallMinus01_BP_C_InvertXminus::_UseUpperMolding' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, _WallEnd02) == 0x000004, "Member 'WallMinus01_BP_C_InvertXminus::_WallEnd02' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, _WallEnd01) == 0x000005, "Member 'WallMinus01_BP_C_InvertXminus::_WallEnd01' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, _WallB) == 0x000006, "Member 'WallMinus01_BP_C_InvertXminus::_WallB' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, _WallA) == 0x000007, "Member 'WallMinus01_BP_C_InvertXminus::_WallA' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakTransform_Location) == 0x000040, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakVector_X) == 0x000064, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakVector_Y) == 0x000068, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakVector_Z) == 0x00006C, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_Abs_ReturnValue) == 0x000074, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000C0, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000148, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000149, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00014A, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00014B, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_GetTransform_ReturnValue_1) == 0x000150, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakTransform_Location_1) == 0x000180, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakTransform_Rotation_1) == 0x00018C, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakTransform_Scale_1) == 0x000198, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakVector_X_1) == 0x0001A4, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakVector_Y_1) == 0x0001A8, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_BreakVector_Z_1) == 0x0001AC, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_InvertXminus, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001B0, "Member 'WallMinus01_BP_C_InvertXminus::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.SetInbetween
// 0x01A0 (0x01A0 - 0x0000)
struct WallMinus01_BP_C_SetInbetween final
{
public:
	TArray<struct FStaticmeshArray_Stuc>          NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                _gapTotal;                                         // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStaticmeshArray_Stuc                  CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0104(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallMinus01_BP_C_SetInbetween) == 0x000010, "Wrong alignment on WallMinus01_BP_C_SetInbetween");
static_assert(sizeof(WallMinus01_BP_C_SetInbetween) == 0x0001A0, "Wrong size on WallMinus01_BP_C_SetInbetween");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, NewParam) == 0x000000, "Member 'WallMinus01_BP_C_SetInbetween::NewParam' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, _gapTotal) == 0x000010, "Member 'WallMinus01_BP_C_SetInbetween::_gapTotal' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WallMinus01_BP_C_SetInbetween::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WallMinus01_BP_C_SetInbetween::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'WallMinus01_BP_C_SetInbetween::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Array_Get_Item) == 0x000038, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_GetRelativeTransform_ReturnValue) == 0x000060, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_BreakTransform_Location) == 0x000094, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_BreakTransform_Rotation) == 0x0000A0, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_BreakTransform_Scale) == 0x0000AC, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C4, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, Temp_int_Loop_Counter_Variable_1) == 0x000100, "Member 'WallMinus01_BP_C_SetInbetween::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000104, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Less_IntInt_ReturnValue_1) == 0x00018C, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetInbetween, CallFunc_Add_IntInt_ReturnValue_2) == 0x000190, "Member 'WallMinus01_BP_C_SetInbetween::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.AddGap
// 0x01A0 (0x01A0 - 0x0000)
struct WallMinus01_BP_C_AddGap final
{
public:
	TArray<struct FStaticmeshArray_Stuc>          NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                _gapTotal;                                         // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStaticmeshArray_Stuc                  CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0110(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WallMinus01_BP_C_AddGap) == 0x000010, "Wrong alignment on WallMinus01_BP_C_AddGap");
static_assert(sizeof(WallMinus01_BP_C_AddGap) == 0x0001A0, "Wrong size on WallMinus01_BP_C_AddGap");
static_assert(offsetof(WallMinus01_BP_C_AddGap, NewParam) == 0x000000, "Member 'WallMinus01_BP_C_AddGap::NewParam' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, _gapTotal) == 0x000010, "Member 'WallMinus01_BP_C_AddGap::_gapTotal' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WallMinus01_BP_C_AddGap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WallMinus01_BP_C_AddGap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'WallMinus01_BP_C_AddGap::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'WallMinus01_BP_C_AddGap::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Array_Get_Item) == 0x000038, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WallMinus01_BP_C_AddGap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_GetRelativeTransform_ReturnValue) == 0x000060, "Member 'WallMinus01_BP_C_AddGap::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_BreakTransform_Location) == 0x000090, "Member 'WallMinus01_BP_C_AddGap::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_BreakTransform_Rotation) == 0x00009C, "Member 'WallMinus01_BP_C_AddGap::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'WallMinus01_BP_C_AddGap::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Array_Length_ReturnValue_1) == 0x0000B4, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B8, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Add_VectorVector_ReturnValue) == 0x0000BC, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C8, "Member 'WallMinus01_BP_C_AddGap::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'WallMinus01_BP_C_AddGap::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_AddGap, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000110, "Member 'WallMinus01_BP_C_AddGap::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.SetGap
// 0x00B8 (0x00B8 - 0x0000)
struct WallMinus01_BP_C_SetGap final
{
public:
	TArray<struct FModuleMeshDataMinus02>         WallMeshes02A_0;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EMeshPopulateDirection                        Direction;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfInbetween;                                 // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalInbetweenSize;                                // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GapTotal;                                          // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshPopulateDirection                        Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MinGroupSize_SmallerGroupSize;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinGroupSize_BiggestGroupSize;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshPopulateDirection                        Temp_byte_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeshPopulateDirection                        Temp_byte_Variable_2;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallMinus01_BP_C_SetGap) == 0x000008, "Wrong alignment on WallMinus01_BP_C_SetGap");
static_assert(sizeof(WallMinus01_BP_C_SetGap) == 0x0000B8, "Wrong size on WallMinus01_BP_C_SetGap");
static_assert(offsetof(WallMinus01_BP_C_SetGap, WallMeshes02A_0) == 0x000000, "Member 'WallMinus01_BP_C_SetGap::WallMeshes02A_0' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, Direction) == 0x000010, "Member 'WallMinus01_BP_C_SetGap::Direction' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, NumberOfInbetween) == 0x000014, "Member 'WallMinus01_BP_C_SetGap::NumberOfInbetween' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, TotalInbetweenSize) == 0x000018, "Member 'WallMinus01_BP_C_SetGap::TotalInbetweenSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, GapTotal) == 0x00001C, "Member 'WallMinus01_BP_C_SetGap::GapTotal' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, Temp_byte_Variable) == 0x000028, "Member 'WallMinus01_BP_C_SetGap::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_MinGroupSize_SmallerGroupSize) == 0x00002C, "Member 'WallMinus01_BP_C_SetGap::CallFunc_MinGroupSize_SmallerGroupSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_MinGroupSize_BiggestGroupSize) == 0x000030, "Member 'WallMinus01_BP_C_SetGap::CallFunc_MinGroupSize_BiggestGroupSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, Temp_byte_Variable_1) == 0x000034, "Member 'WallMinus01_BP_C_SetGap::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, Temp_byte_Variable_2) == 0x000035, "Member 'WallMinus01_BP_C_SetGap::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'WallMinus01_BP_C_SetGap::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_BreakVector_X) == 0x000044, "Member 'WallMinus01_BP_C_SetGap::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_BreakVector_Y) == 0x000048, "Member 'WallMinus01_BP_C_SetGap::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_BreakVector_Z) == 0x00004C, "Member 'WallMinus01_BP_C_SetGap::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_MakeVector_ReturnValue_1) == 0x000050, "Member 'WallMinus01_BP_C_SetGap::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, K2Node_Select_Default) == 0x00005C, "Member 'WallMinus01_BP_C_SetGap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_MakeVector_ReturnValue_2) == 0x000060, "Member 'WallMinus01_BP_C_SetGap::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, K2Node_Select_Default_1) == 0x00006C, "Member 'WallMinus01_BP_C_SetGap::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_Add_FloatFloat_ReturnValue) == 0x000078, "Member 'WallMinus01_BP_C_SetGap::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00007C, "Member 'WallMinus01_BP_C_SetGap::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_FTrunc_ReturnValue) == 0x000080, "Member 'WallMinus01_BP_C_SetGap::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000084, "Member 'WallMinus01_BP_C_SetGap::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_MakeVector_ReturnValue_3) == 0x000088, "Member 'WallMinus01_BP_C_SetGap::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_MakeVector_ReturnValue_4) == 0x000094, "Member 'WallMinus01_BP_C_SetGap::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, CallFunc_MakeVector_ReturnValue_5) == 0x0000A0, "Member 'WallMinus01_BP_C_SetGap::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetGap, K2Node_Select_Default_2) == 0x0000AC, "Member 'WallMinus01_BP_C_SetGap::K2Node_Select_Default_2' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.PushEndWallMeshes
// 0x0250 (0x0250 - 0x0000)
struct WallMinus01_BP_C_PushEndWallMeshes final
{
public:
	struct FTransform                             WallEndMeshesTransform;                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UStaticMesh*                            EndMesh;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SizeLeft;                                          // 0x0038(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseZScale;                                         // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseExtreme;                                        // 0x0045(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExtremeZ;                                          // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseOverwriteMaterial;                              // 0x004C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseOverwriteLightmap;                              // 0x004D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsInbetweenMesh;                                   // 0x004E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FModuleAlternativeMeshData>     Temp;                                              // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<struct FModuleAlternativeMeshData>     EndMeshesAlternatif;                               // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<struct FModuleMeshDataMinus02>         _EndMeshesSurface;                                 // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<struct FModuleMeshData>                _EndMeshes;                                        // 0x0080(0x0010)(Edit, BlueprintVisible)
	struct FModuleMeshData                        K2Node_MakeStruct_ModuleMeshData;                  // 0x0090(0x0020)(HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_PopulateStaticMesh_OutputPin;             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FModuleMeshData                        K2Node_MakeStruct_ModuleMeshData_1;                // 0x0150(0x0020)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0170(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_PopulateSurface_LastLocation;             // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_MaxSecondSize;            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_SecondScale;              // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStaticmeshArray_Stuc>          CallFunc_PopulateSurface_AllStactimeshes;          // 0x0210(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_PopulateSurface_RowCount;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_LastAlphaMeshSize;        // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PopulateSurface_AlphaScale;               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModuleMeshDataMinus02                 K2Node_MakeStruct_ModuleMeshData_02;               // 0x0230(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallMinus01_BP_C_PushEndWallMeshes) == 0x000010, "Wrong alignment on WallMinus01_BP_C_PushEndWallMeshes");
static_assert(sizeof(WallMinus01_BP_C_PushEndWallMeshes) == 0x000250, "Wrong size on WallMinus01_BP_C_PushEndWallMeshes");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, WallEndMeshesTransform) == 0x000000, "Member 'WallMinus01_BP_C_PushEndWallMeshes::WallEndMeshesTransform' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, EndMesh) == 0x000030, "Member 'WallMinus01_BP_C_PushEndWallMeshes::EndMesh' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, SizeLeft) == 0x000038, "Member 'WallMinus01_BP_C_PushEndWallMeshes::SizeLeft' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, UseZScale) == 0x000044, "Member 'WallMinus01_BP_C_PushEndWallMeshes::UseZScale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, UseExtreme) == 0x000045, "Member 'WallMinus01_BP_C_PushEndWallMeshes::UseExtreme' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, ExtremeZ) == 0x000048, "Member 'WallMinus01_BP_C_PushEndWallMeshes::ExtremeZ' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, UseOverwriteMaterial) == 0x00004C, "Member 'WallMinus01_BP_C_PushEndWallMeshes::UseOverwriteMaterial' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, UseOverwriteLightmap) == 0x00004D, "Member 'WallMinus01_BP_C_PushEndWallMeshes::UseOverwriteLightmap' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, IsInbetweenMesh) == 0x00004E, "Member 'WallMinus01_BP_C_PushEndWallMeshes::IsInbetweenMesh' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, Temp) == 0x000050, "Member 'WallMinus01_BP_C_PushEndWallMeshes::Temp' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, EndMeshesAlternatif) == 0x000060, "Member 'WallMinus01_BP_C_PushEndWallMeshes::EndMeshesAlternatif' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, _EndMeshesSurface) == 0x000070, "Member 'WallMinus01_BP_C_PushEndWallMeshes::_EndMeshesSurface' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, _EndMeshes) == 0x000080, "Member 'WallMinus01_BP_C_PushEndWallMeshes::_EndMeshes' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, K2Node_MakeStruct_ModuleMeshData) == 0x000090, "Member 'WallMinus01_BP_C_PushEndWallMeshes::K2Node_MakeStruct_ModuleMeshData' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_PopulateStaticMesh_OutputPin) == 0x0000B0, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_PopulateStaticMesh_OutputPin' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_BreakVector_X) == 0x0000B8, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_BreakVector_Y) == 0x0000BC, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_BreakTransform_Location) == 0x0000C4, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_BreakTransform_Rotation) == 0x0000D0, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_BreakTransform_Scale) == 0x0000DC, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_MakeVector_ReturnValue) == 0x0000E8, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_BreakVector_X_1) == 0x0000F4, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_BreakVector_Y_1) == 0x0000F8, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_BreakVector_Z_1) == 0x0000FC, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_MakeVector_ReturnValue_1) == 0x000100, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_MakeVector_ReturnValue_2) == 0x00010C, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, K2Node_MakeStruct_ModuleMeshData_1) == 0x000150, "Member 'WallMinus01_BP_C_PushEndWallMeshes::K2Node_MakeStruct_ModuleMeshData_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000170, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_PopulateSurface_LastLocation) == 0x0001F8, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_PopulateSurface_LastLocation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_PopulateSurface_MaxSecondSize) == 0x000204, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_PopulateSurface_MaxSecondSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_PopulateSurface_SecondScale) == 0x000208, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_PopulateSurface_SecondScale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_PopulateSurface_AllStactimeshes) == 0x000210, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_PopulateSurface_AllStactimeshes' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_PopulateSurface_RowCount) == 0x000220, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_PopulateSurface_RowCount' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_PopulateSurface_LastAlphaMeshSize) == 0x000224, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_PopulateSurface_LastAlphaMeshSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_PopulateSurface_AlphaScale) == 0x000228, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_PopulateSurface_AlphaScale' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, K2Node_MakeStruct_ModuleMeshData_02) == 0x000230, "Member 'WallMinus01_BP_C_PushEndWallMeshes::K2Node_MakeStruct_ModuleMeshData_02' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_Array_Add_ReturnValue) == 0x000248, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_PushEndWallMeshes, CallFunc_Array_Add_ReturnValue_1) == 0x00024C, "Member 'WallMinus01_BP_C_PushEndWallMeshes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.GetStateName
// 0x0028 (0x0028 - 0x0000)
struct WallMinus01_BP_C_GetStateName final
{
public:
	class FString                                 StateA;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StateB;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WallMinus01_BP_C_GetStateName) == 0x000008, "Wrong alignment on WallMinus01_BP_C_GetStateName");
static_assert(sizeof(WallMinus01_BP_C_GetStateName) == 0x000028, "Wrong size on WallMinus01_BP_C_GetStateName");
static_assert(offsetof(WallMinus01_BP_C_GetStateName, StateA) == 0x000000, "Member 'WallMinus01_BP_C_GetStateName::StateA' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_GetStateName, StateB) == 0x000010, "Member 'WallMinus01_BP_C_GetStateName::StateB' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_GetStateName, ReturnValue) == 0x000020, "Member 'WallMinus01_BP_C_GetStateName::ReturnValue' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.WallEnd
// 0x0B80 (0x0B80 - 0x0000)
struct WallMinus01_BP_C_WallEnd final
{
public:
	struct FVector                                Relative_Transform_Location;                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewSize;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _WallEndLastLocation;                              // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _LastLocation;                                     // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _NewSize;                                          // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable;                              // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable_1;                            // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable_2;                            // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_3;                            // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_4;                            // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  Temp_byte_Variable;                                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_1;                              // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_2;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_2;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_3;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_3;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_4;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_4;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_5;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_6;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_5;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_7;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_8;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_6;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_9;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_10;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_7;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_11;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_8;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_9;                              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_12;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_10;                             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_11;                             // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_13;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_12;                             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_14;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_13;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_15;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_14;                             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_16;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_15;                             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_5;                            // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_6;                            // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_7;                            // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_8;                            // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_9;                            // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  Temp_byte_Variable_16;                             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_10;                           // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_11;                           // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_12;                           // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_13;                           // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_14;                           // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_17;                             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_15;                           // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_16;                           // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_17;                           // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_18;                           // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_19;                           // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  Temp_byte_Variable_18;                             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_19;                             // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_20;                             // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_17;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_18;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_21;                             // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_19;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_22;                             // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_20;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_21;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_23;                             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_22;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_23;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_24;                             // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_24;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_25;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_25;                             // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_26;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_27;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_26;                             // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_28;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_27;                             // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_28;                             // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_29;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_29;                             // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_30;                             // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_30;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_31;                             // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_31;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_32;                             // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_32;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallSide_Enu                                 Temp_byte_Variable_33;                             // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_33;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  Temp_byte_Variable_34;                             // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_20;                           // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_21;                           // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_22;                           // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_23;                           // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_24;                           // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  Temp_byte_Variable_35;                             // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_25;                           // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_26;                           // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_27;                           // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_28;                           // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_29;                           // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  Temp_byte_Variable_36;                             // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_30;                           // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_31;                           // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_32;                           // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_33;                           // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_34;                           // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  Temp_byte_Variable_37;                             // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_35;                           // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_36;                           // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_37;                           // 0x044C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_38;                           // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_39;                           // 0x0464(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_38;                             // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_39;                             // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x3];                                      // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x048C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49A[0x2];                                      // 0x049A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x049C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x04B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x04C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_40;                             // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_40;                           // 0x04D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E5[0x3];                                      // 0x04E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x04E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_1;                           // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502[0x2];                                      // 0x0502(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0528(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0534(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0540(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0550(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default_2;                           // 0x0580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_41;                           // 0x058C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x3];                                      // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_42;                           // 0x059C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x05AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB[0x1];                                      // 0x05AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_43;                           // 0x05AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BA[0x2];                                      // 0x05BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_44;                           // 0x05BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallEnd_Enu                                  Temp_byte_Variable_41;                             // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default_3;                           // 0x05CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D8[0x8];                                      // 0x05D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x05E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default_4;                           // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0620(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Select_Default_5;                           // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x065D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x065E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x065F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x066C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_684[0xC];                                      // 0x0684(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0690(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x06C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x06D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x0700(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73C[0x4];                                      // 0x073C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0740(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMesh*                            K2Node_Select_Default_6;                           // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_7;                           // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_8;                           // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_9;                           // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0790(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x079C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_9;           // 0x07A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x07B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x07B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B7[0x1];                                      // 0x07B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_10;                          // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x07C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_10;          // 0x07D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_11;                          // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x07E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_10;                // 0x0810(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_11;          // 0x081C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_828[0x8];                                      // 0x0828(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x0830(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMesh*                            K2Node_Select_Default_12;                          // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_13;                          // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_14;                          // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_15;                          // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_16;                          // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_17;                          // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_18;                          // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_19;                          // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A1[0x7];                                      // 0x08A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_20;                          // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_21;                          // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B9[0x3];                                      // 0x08B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_45;                           // 0x08BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x08C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CA[0x2];                                      // 0x08CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_46;                           // 0x08CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x08D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA[0x2];                                      // 0x08DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default_22;                          // 0x08DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_47;                           // 0x08E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x08F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F5[0x3];                                      // 0x08F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_48;                           // 0x08F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default_23;                          // 0x0904(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x0910(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default_24;                          // 0x0940(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_49;                           // 0x094C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Select_Default_25;                          // 0x0958(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0964(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0965(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0966(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0967(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_11;                // 0x0968(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_12;                // 0x0974(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_11;             // 0x0980(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_12;             // 0x09B0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMesh*                            K2Node_Select_Default_26;                          // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_27;                          // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_28;                          // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_29;                          // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWallEnd_Enu                                  Temp_byte_Variable_42;                             // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A01[0x3];                                      // 0x0A01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default_30;                          // 0x0A04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_12;          // 0x0A10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_13;             // 0x0A20(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0A50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_13;          // 0x0A5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_31;                          // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_13;                // 0x0A74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_14;          // 0x0A80(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_32;                          // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_14;             // 0x0A90(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_14;                // 0x0AC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_15;          // 0x0ACC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD8[0x8];                                      // 0x0AD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_15;             // 0x0AE0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMesh*                            K2Node_Select_Default_33;                          // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_34;                          // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_35;                          // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_36;                          // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_37;                          // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_38;                          // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_39;                          // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_40;                          // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_41;                          // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default_42;                          // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x0B74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x0B75(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0B76(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WallMinus01_BP_C_WallEnd) == 0x000010, "Wrong alignment on WallMinus01_BP_C_WallEnd");
static_assert(sizeof(WallMinus01_BP_C_WallEnd) == 0x000B80, "Wrong size on WallMinus01_BP_C_WallEnd");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Relative_Transform_Location) == 0x000000, "Member 'WallMinus01_BP_C_WallEnd::Relative_Transform_Location' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, NewSize) == 0x00000C, "Member 'WallMinus01_BP_C_WallEnd::NewSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, _WallEndLastLocation) == 0x000018, "Member 'WallMinus01_BP_C_WallEnd::_WallEndLastLocation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, _LastLocation) == 0x000024, "Member 'WallMinus01_BP_C_WallEnd::_LastLocation' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, _NewSize) == 0x000030, "Member 'WallMinus01_BP_C_WallEnd::_NewSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable) == 0x00003C, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BreakVector_X) == 0x000048, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BreakVector_Y) == 0x00004C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BreakVector_Z) == 0x000050, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue) == 0x000054, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_1) == 0x000060, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_2) == 0x000078, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_3) == 0x000084, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_4) == 0x000090, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable) == 0x00009C, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_1) == 0x00009D, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable) == 0x0000A0, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_2) == 0x0000A8, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_1) == 0x0000B0, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_2) == 0x0000B8, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_3) == 0x0000C0, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_3) == 0x0000C8, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_4) == 0x0000D0, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_4) == 0x0000D8, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_5) == 0x0000E0, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_6) == 0x0000E8, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_5) == 0x0000F0, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_7) == 0x0000F8, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_8) == 0x000100, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_6) == 0x000108, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_9) == 0x000110, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_10) == 0x000118, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_7) == 0x000120, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_11) == 0x000128, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_8) == 0x000130, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_9) == 0x000131, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_12) == 0x000138, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_10) == 0x000140, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_11) == 0x000141, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_13) == 0x000148, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_12) == 0x000150, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_14) == 0x000158, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_13) == 0x000160, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_15) == 0x000168, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_14) == 0x000170, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_16) == 0x000178, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_15) == 0x000180, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_5) == 0x000184, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_6) == 0x000190, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_7) == 0x00019C, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_8) == 0x0001A8, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_9) == 0x0001B4, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_16) == 0x0001C0, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_10) == 0x0001C4, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_11) == 0x0001D0, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_12) == 0x0001DC, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_13) == 0x0001E8, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_14) == 0x0001F4, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_17) == 0x000200, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_15) == 0x000204, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_16) == 0x000210, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_17) == 0x00021C, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_18) == 0x000228, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_19) == 0x000234, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_18) == 0x000240, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_float_Variable) == 0x000244, "Member 'WallMinus01_BP_C_WallEnd::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_19) == 0x000248, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_float_Variable_1) == 0x00024C, "Member 'WallMinus01_BP_C_WallEnd::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_20) == 0x000250, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_17) == 0x000258, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_18) == 0x000260, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_21) == 0x000268, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_19) == 0x000270, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_22) == 0x000278, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_20) == 0x000280, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_21) == 0x000288, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_23) == 0x000290, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_22) == 0x000298, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_23) == 0x0002A0, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_24) == 0x0002A8, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_24) == 0x0002B0, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_25) == 0x0002B8, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_25) == 0x0002C0, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_26) == 0x0002C8, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_27) == 0x0002D0, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_26) == 0x0002D8, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_28) == 0x0002E0, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_27) == 0x0002E8, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_28) == 0x0002E9, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_29) == 0x0002F0, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_29) == 0x0002F8, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_30) == 0x0002F9, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_30) == 0x000300, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_31) == 0x000308, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_31) == 0x000310, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_32) == 0x000318, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_32) == 0x000320, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_33) == 0x000328, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_object_Variable_33) == 0x000330, "Member 'WallMinus01_BP_C_WallEnd::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue) == 0x000340, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_34) == 0x000370, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_20) == 0x000374, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_21) == 0x000380, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_22) == 0x00038C, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_23) == 0x000398, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_24) == 0x0003A4, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_24' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_35) == 0x0003B0, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_25) == 0x0003B4, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_25' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_26) == 0x0003C0, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_26' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_27) == 0x0003CC, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_27' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_28) == 0x0003D8, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_28' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_29) == 0x0003E4, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_29' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_36) == 0x0003F0, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_30) == 0x0003F4, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_30' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_31) == 0x000400, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_31' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_32) == 0x00040C, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_32' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_33) == 0x000418, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_33' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_34) == 0x000424, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_34' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_37) == 0x000430, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_35) == 0x000434, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_35' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_36) == 0x000440, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_36' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_37) == 0x00044C, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_37' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_38) == 0x000458, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_38' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_39) == 0x000464, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_39' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_38) == 0x000470, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_float_Variable_2) == 0x000474, "Member 'WallMinus01_BP_C_WallEnd::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_39) == 0x000478, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_float_Variable_3) == 0x00047C, "Member 'WallMinus01_BP_C_WallEnd::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_1) == 0x000480, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_2) == 0x00048C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue) == 0x000498, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_1) == 0x000499, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00049C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BreakVector_X_1) == 0x0004A8, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BreakVector_Y_1) == 0x0004AC, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BreakVector_Z_1) == 0x0004B0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0004B4, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_3) == 0x0004B8, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_4) == 0x0004C4, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_40) == 0x0004D0, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004D1, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0004D2, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BooleanOR_ReturnValue) == 0x0004D3, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_40) == 0x0004D4, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_40' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0004E0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0004E1, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BooleanOR_ReturnValue_1) == 0x0004E2, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_2) == 0x0004E3, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BooleanAND_ReturnValue) == 0x0004E4, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default) == 0x0004E8, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_1) == 0x0004F8, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_3) == 0x000500, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_4) == 0x000501, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000504, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_5) == 0x000510, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_6) == 0x00051C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000528, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000534, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000540, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_1) == 0x000550, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_2) == 0x000580, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_41) == 0x00058C, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_41' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000598, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_42) == 0x00059C, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_42' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0005A8, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0005A9, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0005AA, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_43) == 0x0005AC, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_43' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0005B8, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0005B9, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_44) == 0x0005BC, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_44' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_41) == 0x0005C8, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_3) == 0x0005CC, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_2) == 0x0005E0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_4) == 0x000610, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_3) == 0x000620, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_5) == 0x000650, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_5) == 0x00065C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_6) == 0x00065D, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_7) == 0x00065E, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_8) == 0x00065F, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_7) == 0x000660, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_8) == 0x00066C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000678, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_4) == 0x000690, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0006C0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_5) == 0x0006D0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_6) == 0x000700, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000730, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_7) == 0x000740, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_6) == 0x000770, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_7) == 0x000778, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_8) == 0x000780, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_9) == 0x000788, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000790, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_8) == 0x00079C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_9) == 0x0007A8, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x0007B4, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x0007B5, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BooleanOR_ReturnValue_2) == 0x0007B6, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0007B8, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0007BC, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_10) == 0x0007C0, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_9) == 0x0007C4, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_10) == 0x0007D0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_11) == 0x0007DC, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_8) == 0x0007E0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_10) == 0x000810, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_11) == 0x00081C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_9) == 0x000830, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_12) == 0x000860, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_13) == 0x000868, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_14) == 0x000870, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_15) == 0x000878, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_16) == 0x000880, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_17) == 0x000888, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_18) == 0x000890, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_19) == 0x000898, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BooleanOR_ReturnValue_3) == 0x0008A0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_20) == 0x0008A8, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_21) == 0x0008B0, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x0008B8, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_45) == 0x0008BC, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_45' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x0008C8, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x0008C9, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_46) == 0x0008CC, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_46' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x0008D8, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x0008D9, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_22) == 0x0008DC, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_47) == 0x0008E8, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_47' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x0008F4, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_48) == 0x0008F8, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_48' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_23) == 0x000904, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_10) == 0x000910, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_24) == 0x000940, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_struct_Variable_49) == 0x00094C, "Member 'WallMinus01_BP_C_WallEnd::Temp_struct_Variable_49' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_25) == 0x000958, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_9) == 0x000964, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_10) == 0x000965, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_11) == 0x000966, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Not_PreBool_ReturnValue_12) == 0x000967, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_11) == 0x000968, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_12) == 0x000974, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_11) == 0x000980, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_12) == 0x0009B0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_26) == 0x0009E0, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_27) == 0x0009E8, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_28) == 0x0009F0, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_29) == 0x0009F8, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, Temp_byte_Variable_42) == 0x000A00, "Member 'WallMinus01_BP_C_WallEnd::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_30) == 0x000A04, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_30' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_12) == 0x000A10, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_13) == 0x000A20, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000A50, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_13) == 0x000A5C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000A68, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000A6C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_31) == 0x000A70, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_31' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_13) == 0x000A74, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_14) == 0x000A80, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_32) == 0x000A8C, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_32' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_14) == 0x000A90, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeVector_ReturnValue_14) == 0x000AC0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_Add_VectorVector_ReturnValue_15) == 0x000ACC, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_Add_VectorVector_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_MakeTransform_ReturnValue_15) == 0x000AE0, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_MakeTransform_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_33) == 0x000B10, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_33' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_34) == 0x000B18, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_34' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_35) == 0x000B20, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_35' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_36) == 0x000B28, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_36' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_37) == 0x000B30, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_37' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_38) == 0x000B38, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_38' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_39) == 0x000B40, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_39' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_40) == 0x000B48, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_40' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_41) == 0x000B50, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_41' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BooleanOR_ReturnValue_4) == 0x000B58, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, K2Node_Select_Default_42) == 0x000B60, "Member 'WallMinus01_BP_C_WallEnd::K2Node_Select_Default_42' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BreakVector_X_2) == 0x000B68, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BreakVector_Y_2) == 0x000B6C, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BreakVector_Z_2) == 0x000B70, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x000B74, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x000B75, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_WallEnd, CallFunc_BooleanOR_ReturnValue_5) == 0x000B76, "Member 'WallMinus01_BP_C_WallEnd::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.setVariable
// 0x0238 (0x0238 - 0x0000)
struct WallMinus01_BP_C_SetVariable final
{
public:
	struct FVector                                NewSize;                                           // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocalVar_0;                                     // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _CurrentMeshSecondSize;                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _SecondTotal;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _MainTotal;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _SecondSizeLeft;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _BetaSize;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _MainSizeLeft;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _MainSize;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _ySizeLeft;                                        // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _yTotal;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _WallHeight;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModuleMeshDataMinus02                 K2Node_MakeStruct_ModuleMeshData_02;               // 0x0058(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModuleMeshDataMinus02                 K2Node_MakeStruct_ModuleMeshData_02_1;             // 0x0078(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModuleMeshDataMinus02                 K2Node_MakeStruct_ModuleMeshData_02_2;             // 0x0098(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWallSide_Enu                                 Temp_byte_Variable;                                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FModuleMeshData>                Temp_struct_Variable;                              // 0x00E0(0x0010)(ReferenceParm)
	EWallSide_Enu                                 Temp_byte_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FModuleMeshData>                K2Node_Select_Default;                             // 0x0100(0x0010)(ReferenceParm)
	TArray<struct FModuleMeshData>                K2Node_Select_Default_1;                           // 0x0110(0x0010)(ReferenceParm)
	struct FModuleMeshDataMinus02                 K2Node_MakeStruct_ModuleMeshData_02_3;             // 0x0120(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FModuleMeshDataMinus02                 CallFunc_Array_Get_Item;                           // 0x0148(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_177[0x1];                                      // 0x0177(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_187[0x1];                                      // 0x0187(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_NumOfMesh_Num;                            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NumOfMesh_NewSizeLeft;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_NumOfMesh_Num_1;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NumOfMesh_NewSizeLeft_1;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FModuleMeshData>                K2Node_Select_Default_6;                           // 0x0208(0x0010)(ReferenceParm)
	struct FModuleMeshDataMinus02                 K2Node_MakeStruct_ModuleMeshData_02_4;             // 0x0218(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WallMinus01_BP_C_SetVariable) == 0x000008, "Wrong alignment on WallMinus01_BP_C_SetVariable");
static_assert(sizeof(WallMinus01_BP_C_SetVariable) == 0x000238, "Wrong size on WallMinus01_BP_C_SetVariable");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, NewSize) == 0x000000, "Member 'WallMinus01_BP_C_SetVariable::NewSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, NewLocalVar_0) == 0x00000C, "Member 'WallMinus01_BP_C_SetVariable::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _CurrentMeshSecondSize) == 0x000018, "Member 'WallMinus01_BP_C_SetVariable::_CurrentMeshSecondSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _SecondTotal) == 0x00001C, "Member 'WallMinus01_BP_C_SetVariable::_SecondTotal' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _MainTotal) == 0x000020, "Member 'WallMinus01_BP_C_SetVariable::_MainTotal' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _SecondSizeLeft) == 0x000024, "Member 'WallMinus01_BP_C_SetVariable::_SecondSizeLeft' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _BetaSize) == 0x000028, "Member 'WallMinus01_BP_C_SetVariable::_BetaSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _MainSizeLeft) == 0x00002C, "Member 'WallMinus01_BP_C_SetVariable::_MainSizeLeft' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _MainSize) == 0x000030, "Member 'WallMinus01_BP_C_SetVariable::_MainSize' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _ySizeLeft) == 0x000034, "Member 'WallMinus01_BP_C_SetVariable::_ySizeLeft' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _yTotal) == 0x000038, "Member 'WallMinus01_BP_C_SetVariable::_yTotal' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, _WallHeight) == 0x00003C, "Member 'WallMinus01_BP_C_SetVariable::_WallHeight' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_bool_Variable) == 0x000040, "Member 'WallMinus01_BP_C_SetVariable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_int_Array_Index_Variable) == 0x000044, "Member 'WallMinus01_BP_C_SetVariable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WallMinus01_BP_C_SetVariable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'WallMinus01_BP_C_SetVariable::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_bool_Variable_1) == 0x000054, "Member 'WallMinus01_BP_C_SetVariable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_MakeStruct_ModuleMeshData_02) == 0x000058, "Member 'WallMinus01_BP_C_SetVariable::K2Node_MakeStruct_ModuleMeshData_02' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_MakeStruct_ModuleMeshData_02_1) == 0x000078, "Member 'WallMinus01_BP_C_SetVariable::K2Node_MakeStruct_ModuleMeshData_02_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Array_Add_ReturnValue_1) == 0x000090, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_MakeStruct_ModuleMeshData_02_2) == 0x000098, "Member 'WallMinus01_BP_C_SetVariable::K2Node_MakeStruct_ModuleMeshData_02_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Array_Add_ReturnValue_2) == 0x0000B0, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BreakVector_X) == 0x0000B4, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BreakVector_Z) == 0x0000BC, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C0, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_FMax_ReturnValue) == 0x0000C4, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_bool_Variable_2) == 0x0000D4, "Member 'WallMinus01_BP_C_SetVariable::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_float_Variable) == 0x0000D8, "Member 'WallMinus01_BP_C_SetVariable::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_bool_Variable_3) == 0x0000DC, "Member 'WallMinus01_BP_C_SetVariable::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_byte_Variable) == 0x0000DD, "Member 'WallMinus01_BP_C_SetVariable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_struct_Variable) == 0x0000E0, "Member 'WallMinus01_BP_C_SetVariable::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_byte_Variable_1) == 0x0000F0, "Member 'WallMinus01_BP_C_SetVariable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_bool_Variable_4) == 0x0000F1, "Member 'WallMinus01_BP_C_SetVariable::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000F2, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000F3, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Not_PreBool_ReturnValue) == 0x0000F4, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F5, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BooleanAND_ReturnValue) == 0x0000F6, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F7, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F8, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_Select_Default) == 0x000100, "Member 'WallMinus01_BP_C_SetVariable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_Select_Default_1) == 0x000110, "Member 'WallMinus01_BP_C_SetVariable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_MakeStruct_ModuleMeshData_02_3) == 0x000120, "Member 'WallMinus01_BP_C_SetVariable::K2Node_MakeStruct_ModuleMeshData_02_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Array_Add_ReturnValue_3) == 0x000138, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_Select_Default_2) == 0x00013C, "Member 'WallMinus01_BP_C_SetVariable::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Add_FloatFloat_ReturnValue) == 0x000140, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000144, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Array_Get_Item) == 0x000148, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BreakVector_X_1) == 0x000164, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BreakVector_Y_1) == 0x000168, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BreakVector_Z_1) == 0x00016C, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Array_Length_ReturnValue_1) == 0x000170, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Less_IntInt_ReturnValue) == 0x000174, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BooleanOR_ReturnValue) == 0x000175, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Less_FloatFloat_ReturnValue) == 0x000176, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BreakVector_X_2) == 0x000178, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BreakVector_Y_2) == 0x00017C, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_BreakVector_Z_2) == 0x000180, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000184, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000185, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000186, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_Select_Default_3) == 0x000188, "Member 'WallMinus01_BP_C_SetVariable::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_FMax_ReturnValue_1) == 0x00018C, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_Select_Default_4) == 0x000190, "Member 'WallMinus01_BP_C_SetVariable::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_FMax_ReturnValue_2) == 0x000194, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_FMax_ReturnValue_3) == 0x000198, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_MakeVector_ReturnValue_1) == 0x00019C, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x0001A8, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x0001A9, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_NumOfMesh_Num) == 0x0001AC, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_NumOfMesh_Num' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_NumOfMesh_NewSizeLeft) == 0x0001B0, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_NumOfMesh_NewSizeLeft' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001B4, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0001B8, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001BC, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001C0, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001C4, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_FMax_ReturnValue_4) == 0x0001C8, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_NumOfMesh_Num_1) == 0x0001CC, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_NumOfMesh_Num_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_NumOfMesh_NewSizeLeft_1) == 0x0001D0, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_NumOfMesh_NewSizeLeft_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_MakeVector_ReturnValue_2) == 0x0001D4, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001E0, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0001E4, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0001E8, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x0001EC, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001F0, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0001F4, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, Temp_int_Loop_Counter_Variable_1) == 0x0001F8, "Member 'WallMinus01_BP_C_SetVariable::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_Select_Default_5) == 0x0001FC, "Member 'WallMinus01_BP_C_SetVariable::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Less_IntInt_ReturnValue_1) == 0x000200, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Add_IntInt_ReturnValue_1) == 0x000204, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_Select_Default_6) == 0x000208, "Member 'WallMinus01_BP_C_SetVariable::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, K2Node_MakeStruct_ModuleMeshData_02_4) == 0x000218, "Member 'WallMinus01_BP_C_SetVariable::K2Node_MakeStruct_ModuleMeshData_02_4' has a wrong offset!");
static_assert(offsetof(WallMinus01_BP_C_SetVariable, CallFunc_Array_Add_ReturnValue_4) == 0x000230, "Member 'WallMinus01_BP_C_SetVariable::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function Wall-01_BP.Wall-01_BP_C.IsStateA
// 0x0001 (0x0001 - 0x0000)
struct WallMinus01_BP_C_IsStateA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WallMinus01_BP_C_IsStateA) == 0x000001, "Wrong alignment on WallMinus01_BP_C_IsStateA");
static_assert(sizeof(WallMinus01_BP_C_IsStateA) == 0x000001, "Wrong size on WallMinus01_BP_C_IsStateA");
static_assert(offsetof(WallMinus01_BP_C_IsStateA, ReturnValue) == 0x000000, "Member 'WallMinus01_BP_C_IsStateA::ReturnValue' has a wrong offset!");

}

