#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CoreUpgradeTierButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CoreUpgradeTierButton.CoreUpgradeTierButton_C
// 0x00B8 (0x0318 - 0x0260)
class UCoreUpgradeTierButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         ContentBox;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocussedBottomLeftBracket_1;                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocussedBottomRightBracket_1;                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocussedTopLeftBracket_1;                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocussedTopRightBracket_1;                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HotImage;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                InteractionButton;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LockedText;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockImage;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           SelectionBorderPanel;                              // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TierNameText;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TierStateText;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsLoadout;                                        // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsHeader;                                         // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsGamepad;                                        // 0x02CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHovered;                                          // 0x02CB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bFocused;                                          // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Tier;                                              // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AcquiredUpgradeCount;                              // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalUpgradeCount;                                 // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForceHighlight;                                   // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void IsConsideredHovered(bool* bConsideredHovered);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void ComputeValues();
	void SetFocused(bool bInFocused);
	void SetHovered(bool bInHovered);
	void Refresh();
	void Init(bool bIsLoadout_0, bool bIsHeader_0, int32 Tier_0);
	void Setup();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__RigButton_InteractionButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__RigButton_InteractionButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__RigButton_InteractionButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void OnMenuInputSourceChanged();
	void Destruct();
	void ExecuteUbergraph_CoreUpgradeTierButton(int32 EntryPoint);
	void OnClicked__DelegateSignature(int32 Tier_0);
	void OnUnhovered__DelegateSignature(int32 Tier_0);
	void OnHovered__DelegateSignature(int32 Tier_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CoreUpgradeTierButton_C">();
	}
	static class UCoreUpgradeTierButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoreUpgradeTierButton_C>();
	}
};
static_assert(alignof(UCoreUpgradeTierButton_C) == 0x000008, "Wrong alignment on UCoreUpgradeTierButton_C");
static_assert(sizeof(UCoreUpgradeTierButton_C) == 0x000318, "Wrong size on UCoreUpgradeTierButton_C");
static_assert(offsetof(UCoreUpgradeTierButton_C, UberGraphFrame) == 0x000260, "Member 'UCoreUpgradeTierButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, ContentBox) == 0x000268, "Member 'UCoreUpgradeTierButton_C::ContentBox' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, FocussedBottomLeftBracket_1) == 0x000270, "Member 'UCoreUpgradeTierButton_C::FocussedBottomLeftBracket_1' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, FocussedBottomRightBracket_1) == 0x000278, "Member 'UCoreUpgradeTierButton_C::FocussedBottomRightBracket_1' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, FocussedTopLeftBracket_1) == 0x000280, "Member 'UCoreUpgradeTierButton_C::FocussedTopLeftBracket_1' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, FocussedTopRightBracket_1) == 0x000288, "Member 'UCoreUpgradeTierButton_C::FocussedTopRightBracket_1' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, HotImage) == 0x000290, "Member 'UCoreUpgradeTierButton_C::HotImage' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, InteractionButton) == 0x000298, "Member 'UCoreUpgradeTierButton_C::InteractionButton' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, LockedText) == 0x0002A0, "Member 'UCoreUpgradeTierButton_C::LockedText' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, LockImage) == 0x0002A8, "Member 'UCoreUpgradeTierButton_C::LockImage' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, SelectionBorderPanel) == 0x0002B0, "Member 'UCoreUpgradeTierButton_C::SelectionBorderPanel' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, TierNameText) == 0x0002B8, "Member 'UCoreUpgradeTierButton_C::TierNameText' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, TierStateText) == 0x0002C0, "Member 'UCoreUpgradeTierButton_C::TierStateText' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, bIsLoadout) == 0x0002C8, "Member 'UCoreUpgradeTierButton_C::bIsLoadout' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, bIsHeader) == 0x0002C9, "Member 'UCoreUpgradeTierButton_C::bIsHeader' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, bIsGamepad) == 0x0002CA, "Member 'UCoreUpgradeTierButton_C::bIsGamepad' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, bHovered) == 0x0002CB, "Member 'UCoreUpgradeTierButton_C::bHovered' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, OnHovered) == 0x0002D0, "Member 'UCoreUpgradeTierButton_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, OnUnhovered) == 0x0002E0, "Member 'UCoreUpgradeTierButton_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, OnClicked) == 0x0002F0, "Member 'UCoreUpgradeTierButton_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, bFocused) == 0x000300, "Member 'UCoreUpgradeTierButton_C::bFocused' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, Tier) == 0x000304, "Member 'UCoreUpgradeTierButton_C::Tier' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, bLocked) == 0x000308, "Member 'UCoreUpgradeTierButton_C::bLocked' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, AcquiredUpgradeCount) == 0x00030C, "Member 'UCoreUpgradeTierButton_C::AcquiredUpgradeCount' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, TotalUpgradeCount) == 0x000310, "Member 'UCoreUpgradeTierButton_C::TotalUpgradeCount' has a wrong offset!");
static_assert(offsetof(UCoreUpgradeTierButton_C, bForceHighlight) == 0x000314, "Member 'UCoreUpgradeTierButton_C::bForceHighlight' has a wrong offset!");

}

