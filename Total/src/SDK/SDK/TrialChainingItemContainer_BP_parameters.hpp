#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrialChainingItemContainer_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.ExecuteUbergraph_TrialChainingItemContainer_BP
// 0x0010 (0x0010 - 0x0000)
struct TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP) == 0x000004, "Wrong alignment on TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP");
static_assert(sizeof(TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP) == 0x000010, "Wrong size on TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP");
static_assert(offsetof(TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP, EntryPoint) == 0x000000, "Member 'TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.UpdateVisibility
// 0x0001 (0x0001 - 0x0000)
struct TrialChainingItemContainer_BP_C_UpdateVisibility final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialChainingItemContainer_BP_C_UpdateVisibility) == 0x000001, "Wrong alignment on TrialChainingItemContainer_BP_C_UpdateVisibility");
static_assert(sizeof(TrialChainingItemContainer_BP_C_UpdateVisibility) == 0x000001, "Wrong size on TrialChainingItemContainer_BP_C_UpdateVisibility");
static_assert(offsetof(TrialChainingItemContainer_BP_C_UpdateVisibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'TrialChainingItemContainer_BP_C_UpdateVisibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.GetPingEnabled
// 0x00A0 (0x00A0 - 0x0000)
struct TrialChainingItemContainer_BP_C_GetPingEnabled final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          OutIsEnabled;                                      // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0091(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialChainingItemContainer_BP_C_GetPingEnabled) == 0x000008, "Wrong alignment on TrialChainingItemContainer_BP_C_GetPingEnabled");
static_assert(sizeof(TrialChainingItemContainer_BP_C_GetPingEnabled) == 0x0000A0, "Wrong size on TrialChainingItemContainer_BP_C_GetPingEnabled");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPingEnabled, PingOwner) == 0x000000, "Member 'TrialChainingItemContainer_BP_C_GetPingEnabled::PingOwner' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPingEnabled, HitResult) == 0x000008, "Member 'TrialChainingItemContainer_BP_C_GetPingEnabled::HitResult' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPingEnabled, OutIsEnabled) == 0x000090, "Member 'TrialChainingItemContainer_BP_C_GetPingEnabled::OutIsEnabled' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPingEnabled, ReturnValue) == 0x000091, "Member 'TrialChainingItemContainer_BP_C_GetPingEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPingEnabled, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'TrialChainingItemContainer_BP_C_GetPingEnabled::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPingEnabled, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'TrialChainingItemContainer_BP_C_GetPingEnabled::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.GetPlayerPingWorldLocation
// 0x00B0 (0x00B0 - 0x0000)
struct TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                OutLocation;                                       // 0x0090(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x009C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation) == 0x000008, "Wrong alignment on TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation");
static_assert(sizeof(TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation) == 0x0000B0, "Wrong size on TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation, PingOwner) == 0x000000, "Member 'TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation::PingOwner' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation, HitResult) == 0x000008, "Member 'TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation::HitResult' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation, OutLocation) == 0x000090, "Member 'TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation::OutLocation' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation, ReturnValue) == 0x00009C, "Member 'TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A0, "Member 'TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

