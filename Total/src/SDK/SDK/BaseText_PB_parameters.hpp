#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseText_PB

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TextBox_structs.hpp"
#include "Engine_structs.hpp"
#include "DocumentTemplate_structs.hpp"


namespace SDK::Params
{

// Function BaseText_PB.BaseText_PB_C.Find Font Scale
// 0x00E8 (0x00E8 - 0x0000)
struct BaseText_PB_C_Find_Font_Scale final
{
public:
	TArray<class FString>                         String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UFont*                                  RenderFont;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Scale;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Kerning;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BoxSize;                                           // 0x0024(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewParam;                                          // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 _BiggestWord;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         _MaxSize;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0078(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_K2_TextSize_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseText_PB_C_Find_Font_Scale) == 0x000008, "Wrong alignment on BaseText_PB_C_Find_Font_Scale");
static_assert(sizeof(BaseText_PB_C_Find_Font_Scale) == 0x0000E8, "Wrong size on BaseText_PB_C_Find_Font_Scale");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, String) == 0x000000, "Member 'BaseText_PB_C_Find_Font_Scale::String' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, RenderFont) == 0x000010, "Member 'BaseText_PB_C_Find_Font_Scale::RenderFont' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, Scale) == 0x000018, "Member 'BaseText_PB_C_Find_Font_Scale::Scale' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, Kerning) == 0x000020, "Member 'BaseText_PB_C_Find_Font_Scale::Kerning' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, BoxSize) == 0x000024, "Member 'BaseText_PB_C_Find_Font_Scale::BoxSize' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, NewParam) == 0x00002C, "Member 'BaseText_PB_C_Find_Font_Scale::NewParam' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, _BiggestWord) == 0x000030, "Member 'BaseText_PB_C_Find_Font_Scale::_BiggestWord' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, _MaxSize) == 0x000040, "Member 'BaseText_PB_C_Find_Font_Scale::_MaxSize' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BaseText_PB_C_Find_Font_Scale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_BreakVector2D_X) == 0x000048, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_BreakVector2D_Y) == 0x00004C, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BaseText_PB_C_Find_Font_Scale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'BaseText_PB_C_Find_Font_Scale::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Array_Get_Item) == 0x000068, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_ParseIntoArray_ReturnValue) == 0x000078, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Len_ReturnValue) == 0x00009C, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_BreakVector2D_X_1) == 0x0000A0, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_BreakVector2D_Y_1) == 0x0000A4, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000A8, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000B0, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_K2_TextSize_ReturnValue) == 0x0000B8, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_K2_TextSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_BreakVector2D_X_2) == 0x0000C4, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_BreakVector2D_Y_2) == 0x0000C8, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_FMax_ReturnValue) == 0x0000CC, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_FMin_ReturnValue) == 0x0000D4, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, Temp_int_Loop_Counter_Variable_1) == 0x0000DC, "Member 'BaseText_PB_C_Find_Font_Scale::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_Find_Font_Scale, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'BaseText_PB_C_Find_Font_Scale::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BaseText_PB.BaseText_PB_C.AddItemToMimic
// 0x0018 (0x0018 - 0x0000)
struct BaseText_PB_C_AddItemToMimic final
{
public:
	const class ABaseText_PB_C*                   ItemToFind;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseText_PB_C_AddItemToMimic) == 0x000008, "Wrong alignment on BaseText_PB_C_AddItemToMimic");
static_assert(sizeof(BaseText_PB_C_AddItemToMimic) == 0x000018, "Wrong size on BaseText_PB_C_AddItemToMimic");
static_assert(offsetof(BaseText_PB_C_AddItemToMimic, ItemToFind) == 0x000000, "Member 'BaseText_PB_C_AddItemToMimic::ItemToFind' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AddItemToMimic, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BaseText_PB_C_AddItemToMimic::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AddItemToMimic, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BaseText_PB_C_AddItemToMimic::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AddItemToMimic, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BaseText_PB_C_AddItemToMimic::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BaseText_PB.BaseText_PB_C.Mimic
// 0x0008 (0x0008 - 0x0000)
struct BaseText_PB_C_Mimic final
{
public:
	class UMaterialInterface*                     Material_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseText_PB_C_Mimic) == 0x000008, "Wrong alignment on BaseText_PB_C_Mimic");
static_assert(sizeof(BaseText_PB_C_Mimic) == 0x000008, "Wrong size on BaseText_PB_C_Mimic");
static_assert(offsetof(BaseText_PB_C_Mimic, Material_0) == 0x000000, "Member 'BaseText_PB_C_Mimic::Material_0' has a wrong offset!");

// Function BaseText_PB.BaseText_PB_C.SetArray
// 0x0060 (0x0060 - 0x0000)
struct BaseText_PB_C_SetArray final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseText_PB_C*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseText_PB_C*                         CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseText_PB_C_SetArray) == 0x000008, "Wrong alignment on BaseText_PB_C_SetArray");
static_assert(sizeof(BaseText_PB_C_SetArray) == 0x000060, "Wrong size on BaseText_PB_C_SetArray");
static_assert(offsetof(BaseText_PB_C_SetArray, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BaseText_PB_C_SetArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BaseText_PB_C_SetArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BaseText_PB_C_SetArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BaseText_PB_C_SetArray::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Array_Get_Item) == 0x000010, "Member 'BaseText_PB_C_SetArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BaseText_PB_C_SetArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BaseText_PB_C_SetArray::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Array_RemoveItem_ReturnValue) == 0x000030, "Member 'BaseText_PB_C_SetArray::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BaseText_PB_C_SetArray::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BaseText_PB_C_SetArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BaseText_PB_C_SetArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BaseText_PB_C_SetArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BaseText_PB_C_SetArray::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BaseText_PB_C_SetArray::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BaseText_PB_C_SetArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_Array_Add_ReturnValue_1) == 0x000058, "Member 'BaseText_PB_C_SetArray::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BaseText_PB_C_SetArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetArray, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00005D, "Member 'BaseText_PB_C_SetArray::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BaseText_PB.BaseText_PB_C.SetTexture
// 0x0048 (0x0048 - 0x0000)
struct BaseText_PB_C_SetTexture final
{
public:
	class UTexture*                               PrintTexture_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseText_PB_C_SetTexture) == 0x000008, "Wrong alignment on BaseText_PB_C_SetTexture");
static_assert(sizeof(BaseText_PB_C_SetTexture) == 0x000048, "Wrong size on BaseText_PB_C_SetTexture");
static_assert(offsetof(BaseText_PB_C_SetTexture, PrintTexture_0) == 0x000000, "Member 'BaseText_PB_C_SetTexture::PrintTexture_0' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetTexture, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000008, "Member 'BaseText_PB_C_SetTexture::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetTexture, CallFunc_BreakVector2D_X) == 0x000010, "Member 'BaseText_PB_C_SetTexture::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetTexture, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'BaseText_PB_C_SetTexture::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetTexture, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000018, "Member 'BaseText_PB_C_SetTexture::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetTexture, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x000020, "Member 'BaseText_PB_C_SetTexture::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetTexture, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000028, "Member 'BaseText_PB_C_SetTexture::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetTexture, CallFunc_BreakVector2D_X_1) == 0x000030, "Member 'BaseText_PB_C_SetTexture::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetTexture, CallFunc_BreakVector2D_Y_1) == 0x000034, "Member 'BaseText_PB_C_SetTexture::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_SetTexture, K2Node_MakeStruct_LinearColor) == 0x000038, "Member 'BaseText_PB_C_SetTexture::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BaseText_PB.BaseText_PB_C.AdjustingTextLines
// 0x0218 (0x0218 - 0x0000)
struct BaseText_PB_C_AdjustingTextLines final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              BoxSize;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas_0;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFont*                                  RenderFont;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Kerning;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScaleFont;                                         // 0x002C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         NewParam1;                                         // 0x0038(0x0010)(Parm, OutParm)
	float                                         _ScaleFont_0;                                      // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _Kerning;                                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _BoxSize;                                          // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CurrentLine;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         AdjustedLines;                                     // 0x0068(0x0010)(Edit, BlueprintVisible)
	float                                         Temp_float_Variable;                               // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue_1;             // 0x00F8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Find_Font_Scale_NewParam;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_K2_TextSize_ReturnValue;                  // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_K2_TextSize_ReturnValue_1;                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseText_PB_C_AdjustingTextLines) == 0x000008, "Wrong alignment on BaseText_PB_C_AdjustingTextLines");
static_assert(sizeof(BaseText_PB_C_AdjustingTextLines) == 0x000218, "Wrong size on BaseText_PB_C_AdjustingTextLines");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Text) == 0x000000, "Member 'BaseText_PB_C_AdjustingTextLines::Text' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, BoxSize) == 0x000010, "Member 'BaseText_PB_C_AdjustingTextLines::BoxSize' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Canvas_0) == 0x000018, "Member 'BaseText_PB_C_AdjustingTextLines::Canvas_0' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, RenderFont) == 0x000020, "Member 'BaseText_PB_C_AdjustingTextLines::RenderFont' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Kerning) == 0x000028, "Member 'BaseText_PB_C_AdjustingTextLines::Kerning' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, ScaleFont) == 0x00002C, "Member 'BaseText_PB_C_AdjustingTextLines::ScaleFont' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, NewParam1) == 0x000038, "Member 'BaseText_PB_C_AdjustingTextLines::NewParam1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, _ScaleFont_0) == 0x000048, "Member 'BaseText_PB_C_AdjustingTextLines::_ScaleFont_0' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, _Kerning) == 0x00004C, "Member 'BaseText_PB_C_AdjustingTextLines::_Kerning' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, _BoxSize) == 0x000050, "Member 'BaseText_PB_C_AdjustingTextLines::_BoxSize' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CurrentLine) == 0x000058, "Member 'BaseText_PB_C_AdjustingTextLines::CurrentLine' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, AdjustedLines) == 0x000068, "Member 'BaseText_PB_C_AdjustingTextLines::AdjustedLines' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Temp_float_Variable) == 0x000078, "Member 'BaseText_PB_C_AdjustingTextLines::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Replace_ReturnValue) == 0x000080, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BaseText_PB_C_AdjustingTextLines::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Replace_ReturnValue_1) == 0x000098, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_ParseIntoArray_ReturnValue) == 0x0000B0, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Temp_int_Loop_Counter_Variable) == 0x0000C4, "Member 'BaseText_PB_C_AdjustingTextLines::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Temp_int_Array_Index_Variable_1) == 0x0000D0, "Member 'BaseText_PB_C_AdjustingTextLines::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Temp_string_Variable) == 0x0000D8, "Member 'BaseText_PB_C_AdjustingTextLines::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_ParseIntoArray_ReturnValue_1) == 0x0000F8, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_ParseIntoArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Temp_string_Variable_1) == 0x000120, "Member 'BaseText_PB_C_AdjustingTextLines::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Find_Font_Scale_NewParam) == 0x000130, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Find_Font_Scale_NewParam' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000134, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_X) == 0x00013C, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_Y) == 0x000140, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_X_1) == 0x000144, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_Y_1) == 0x000148, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00014C, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000150, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Temp_bool_Variable) == 0x000154, "Member 'BaseText_PB_C_AdjustingTextLines::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Len_ReturnValue) == 0x000158, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Subtract_IntInt_ReturnValue) == 0x00015C, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, K2Node_Select_Default) == 0x000160, "Member 'BaseText_PB_C_AdjustingTextLines::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000170, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_K2_TextSize_ReturnValue) == 0x000174, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_K2_TextSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00017C, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_X_2) == 0x000180, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_Y_2) == 0x000184, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Add_FloatFloat_ReturnValue) == 0x000188, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_X_3) == 0x00018C, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_Y_3) == 0x000190, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000194, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000198, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00019C, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_X_4) == 0x0001A0, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_Y_4) == 0x0001A4, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001A8, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_FMin_ReturnValue) == 0x0001AC, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_FMax_ReturnValue) == 0x0001B4, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Array_Add_ReturnValue_1) == 0x0001B8, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Array_Add_ReturnValue_2) == 0x0001BC, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Concat_StrStr_ReturnValue) == 0x0001C0, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001D0, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, Temp_int_Loop_Counter_Variable_1) == 0x0001E0, "Member 'BaseText_PB_C_AdjustingTextLines::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E4, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001E8, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Len_ReturnValue_1) == 0x0001EC, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_K2_TextSize_ReturnValue_1) == 0x0001F0, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_K2_TextSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001F8, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_X_5) == 0x0001FC, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_BreakVector2D_Y_5) == 0x000200, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000204, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000208, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Array_Add_ReturnValue_3) == 0x00020C, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000210, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_AdjustingTextLines, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000214, "Member 'BaseText_PB_C_AdjustingTextLines::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BaseText_PB.BaseText_PB_C.DrawPage
// 0x0180 (0x0180 - 0x0000)
struct BaseText_PB_C_DrawPage final
{
public:
	class FString                                 RenderText;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector4                               Borders;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFont*                                  RenderFont;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenPosition;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Scale;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RenderColor;                                       // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ShadowColor;                                       // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Kerning;                                           // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineSpace;                                         // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ShadowOffset;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCentreX;                                          // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCentreY;                                          // 0x0069(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOutlined;                                         // 0x006A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           OutlineColor;                                      // 0x006C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BoxSize;                                           // 0x007C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _MaxNumCharacters;                                 // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _CharacterSize;                                    // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                _Canvas;                                           // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 _BiggestString;                                    // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         _BiggestLenghString;                               // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _TextMaxX;                                         // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _BorderX;                                          // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _ScreenPosition;                                   // 0x00B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_AdjustingTextLines_NewParam1;             // 0x00D8(0x0010)(ReferenceParm)
	float                                         CallFunc_AdjustingTextLines__ScaleFont;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseText_PB_C_DrawPage) == 0x000010, "Wrong alignment on BaseText_PB_C_DrawPage");
static_assert(sizeof(BaseText_PB_C_DrawPage) == 0x000180, "Wrong size on BaseText_PB_C_DrawPage");
static_assert(offsetof(BaseText_PB_C_DrawPage, RenderText) == 0x000000, "Member 'BaseText_PB_C_DrawPage::RenderText' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, Borders) == 0x000010, "Member 'BaseText_PB_C_DrawPage::Borders' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, RenderFont) == 0x000020, "Member 'BaseText_PB_C_DrawPage::RenderFont' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, ScreenPosition) == 0x000028, "Member 'BaseText_PB_C_DrawPage::ScreenPosition' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, Scale) == 0x000030, "Member 'BaseText_PB_C_DrawPage::Scale' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, RenderColor) == 0x000038, "Member 'BaseText_PB_C_DrawPage::RenderColor' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, ShadowColor) == 0x000048, "Member 'BaseText_PB_C_DrawPage::ShadowColor' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, Kerning) == 0x000058, "Member 'BaseText_PB_C_DrawPage::Kerning' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, LineSpace) == 0x00005C, "Member 'BaseText_PB_C_DrawPage::LineSpace' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, ShadowOffset) == 0x000060, "Member 'BaseText_PB_C_DrawPage::ShadowOffset' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, bCentreX) == 0x000068, "Member 'BaseText_PB_C_DrawPage::bCentreX' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, bCentreY) == 0x000069, "Member 'BaseText_PB_C_DrawPage::bCentreY' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, bOutlined) == 0x00006A, "Member 'BaseText_PB_C_DrawPage::bOutlined' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, OutlineColor) == 0x00006C, "Member 'BaseText_PB_C_DrawPage::OutlineColor' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, BoxSize) == 0x00007C, "Member 'BaseText_PB_C_DrawPage::BoxSize' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, _MaxNumCharacters) == 0x000084, "Member 'BaseText_PB_C_DrawPage::_MaxNumCharacters' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, _CharacterSize) == 0x000088, "Member 'BaseText_PB_C_DrawPage::_CharacterSize' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, _Canvas) == 0x000090, "Member 'BaseText_PB_C_DrawPage::_Canvas' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, _BiggestString) == 0x000098, "Member 'BaseText_PB_C_DrawPage::_BiggestString' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, _BiggestLenghString) == 0x0000A8, "Member 'BaseText_PB_C_DrawPage::_BiggestLenghString' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, _TextMaxX) == 0x0000AC, "Member 'BaseText_PB_C_DrawPage::_TextMaxX' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, _BorderX) == 0x0000B0, "Member 'BaseText_PB_C_DrawPage::_BorderX' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, _ScreenPosition) == 0x0000B4, "Member 'BaseText_PB_C_DrawPage::_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000BC, "Member 'BaseText_PB_C_DrawPage::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_BreakVector2D_X) == 0x0000C4, "Member 'BaseText_PB_C_DrawPage::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_BreakVector2D_Y) == 0x0000C8, "Member 'BaseText_PB_C_DrawPage::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, Temp_int_Array_Index_Variable) == 0x0000CC, "Member 'BaseText_PB_C_DrawPage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BaseText_PB_C_DrawPage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BaseText_PB_C_DrawPage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_AdjustingTextLines_NewParam1) == 0x0000D8, "Member 'BaseText_PB_C_DrawPage::CallFunc_AdjustingTextLines_NewParam1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_AdjustingTextLines__ScaleFont) == 0x0000E8, "Member 'BaseText_PB_C_DrawPage::CallFunc_AdjustingTextLines__ScaleFont' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000EC, "Member 'BaseText_PB_C_DrawPage::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Array_Get_Item) == 0x0000F4, "Member 'BaseText_PB_C_DrawPage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BaseText_PB_C_DrawPage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BaseText_PB_C_DrawPage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_MakeVector2D_ReturnValue) == 0x000100, "Member 'BaseText_PB_C_DrawPage::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'BaseText_PB_C_DrawPage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BaseText_PB_C_DrawPage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Array_Length_ReturnValue_1) == 0x00011C, "Member 'BaseText_PB_C_DrawPage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'BaseText_PB_C_DrawPage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Subtract_IntInt_ReturnValue) == 0x000124, "Member 'BaseText_PB_C_DrawPage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000128, "Member 'BaseText_PB_C_DrawPage::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, Temp_float_Variable) == 0x00012C, "Member 'BaseText_PB_C_DrawPage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000130, "Member 'BaseText_PB_C_DrawPage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000134, "Member 'BaseText_PB_C_DrawPage::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, Temp_bool_Variable) == 0x000138, "Member 'BaseText_PB_C_DrawPage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, Temp_float_Variable_1) == 0x00013C, "Member 'BaseText_PB_C_DrawPage::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, K2Node_Select_Default) == 0x000140, "Member 'BaseText_PB_C_DrawPage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, Temp_bool_Variable_1) == 0x000144, "Member 'BaseText_PB_C_DrawPage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_BreakVector2D_X_1) == 0x000148, "Member 'BaseText_PB_C_DrawPage::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_BreakVector2D_Y_1) == 0x00014C, "Member 'BaseText_PB_C_DrawPage::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, K2Node_Select_Default_1) == 0x000150, "Member 'BaseText_PB_C_DrawPage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000154, "Member 'BaseText_PB_C_DrawPage::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000158, "Member 'BaseText_PB_C_DrawPage::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00015C, "Member 'BaseText_PB_C_DrawPage::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000160, "Member 'BaseText_PB_C_DrawPage::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_MakeVector2D_ReturnValue_1) == 0x000164, "Member 'BaseText_PB_C_DrawPage::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_DrawPage, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00016C, "Member 'BaseText_PB_C_DrawPage::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function BaseText_PB.BaseText_PB_C.UserConstructionScript
// 0x0220 (0x0220 - 0x0000)
struct BaseText_PB_C_UserConstructionScript final
{
public:
	TSet<class ABaseText_PB_C*>                   NewLocalVar_0;                                     // 0x0000(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	const class ABaseText_PB_C*                   Temp_object_Variable;                              // 0x0050(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBox                               CallFunc_Array_Get_Item;                           // 0x0060(0x0090)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F8(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0120(0x0018)()
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBox                               K2Node_MakeStruct_TextBox;                         // 0x0140(0x0090)(HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_1;    // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInEditor_ReturnValue;                   // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x1];                                      // 0x020B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_2;    // 0x020C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_3;    // 0x0214(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseText_PB_C_UserConstructionScript) == 0x000010, "Wrong alignment on BaseText_PB_C_UserConstructionScript");
static_assert(sizeof(BaseText_PB_C_UserConstructionScript) == 0x000220, "Wrong size on BaseText_PB_C_UserConstructionScript");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, NewLocalVar_0) == 0x000000, "Member 'BaseText_PB_C_UserConstructionScript::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, Temp_object_Variable) == 0x000050, "Member 'BaseText_PB_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BaseText_PB_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, Temp_bool_Variable) == 0x00005C, "Member 'BaseText_PB_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000060, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'BaseText_PB_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F8, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_TextIsEmpty_ReturnValue) == 0x000118, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, K2Node_Select_Default) == 0x000120, "Member 'BaseText_PB_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, K2Node_MakeStruct_TextBox) == 0x000140, "Member 'BaseText_PB_C_UserConstructionScript::K2Node_MakeStruct_TextBox' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_BreakVector2D_X) == 0x0001D0, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_BreakVector2D_Y) == 0x0001D4, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_FMax_ReturnValue) == 0x0001D8, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_MakeVector2D_ReturnValue) == 0x0001DC, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0001E4, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_BreakVector2D_X_1) == 0x0001EC, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_BreakVector2D_Y_1) == 0x0001F0, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_FMax_ReturnValue_1) == 0x0001F4, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001F8, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_Divide_Vector2DVector2D_ReturnValue_1) == 0x000200, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_Divide_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000208, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000209, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_IsInEditor_ReturnValue) == 0x00020A, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_IsInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_Divide_Vector2DVector2D_ReturnValue_2) == 0x00020C, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_Divide_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_UserConstructionScript, CallFunc_Divide_Vector2DVector2D_ReturnValue_3) == 0x000214, "Member 'BaseText_PB_C_UserConstructionScript::CallFunc_Divide_Vector2DVector2D_ReturnValue_3' has a wrong offset!");

// Function BaseText_PB.BaseText_PB_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BaseText_PB_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseText_PB_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BaseText_PB_C_ReceiveEndPlay");
static_assert(sizeof(BaseText_PB_C_ReceiveEndPlay) == 0x000001, "Wrong size on BaseText_PB_C_ReceiveEndPlay");
static_assert(offsetof(BaseText_PB_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BaseText_PB_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BaseText_PB.BaseText_PB_C.ExecuteUbergraph_BaseText_PB
// 0x0138 (0x0138 - 0x0000)
struct BaseText_PB_C_ExecuteUbergraph_BaseText_PB final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasRenderTarget2D*                  CallFunc_CreateCanvasRenderTarget2D_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDocumentTemplate                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDocumentTemplate                      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0078(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x00B8(0x0010)(NoDestructor)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameUserPreferences*                 CallFunc_GetRBGameUserPreferences_ReturnValue;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameUserPreferences*                 CallFunc_GetRBGameUserPreferences_ReturnValue_1;   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseText_PB_C*                         CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDocumentTemplate                      CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0108(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB) == 0x000008, "Wrong alignment on BaseText_PB_C_ExecuteUbergraph_BaseText_PB");
static_assert(sizeof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB) == 0x000138, "Wrong size on BaseText_PB_C_ExecuteUbergraph_BaseText_PB");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, EntryPoint) == 0x000000, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::EntryPoint' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_IsDedicatedServer_ReturnValue) == 0x000014, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000015, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_BreakVector2D_X) == 0x000018, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_FTrunc_ReturnValue_1) == 0x000024, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_CreateCanvasRenderTarget2D_ReturnValue) == 0x000028, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_CreateCanvasRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000070, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000078, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0000A0, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x0000A8, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x0000B0, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x0000B8, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_BreakVector2D_X_1) == 0x0000C8, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_BreakVector2D_Y_1) == 0x0000CC, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_MakeVector2D_ReturnValue) == 0x0000D4, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_IsValid_ReturnValue_2) == 0x0000DC, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_GetRBGameUserPreferences_ReturnValue) == 0x0000E0, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_GetRBGameUserPreferences_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, K2Node_Event_EndPlayReason) == 0x0000E8, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_GetRBGameUserPreferences_ReturnValue_1) == 0x0000F0, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_GetRBGameUserPreferences_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_Array_Get_Item) == 0x000100, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000108, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BaseText_PB_C_ExecuteUbergraph_BaseText_PB, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000130, "Member 'BaseText_PB_C_ExecuteUbergraph_BaseText_PB::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");

}

