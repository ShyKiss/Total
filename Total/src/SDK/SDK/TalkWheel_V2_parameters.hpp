#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TalkWheel_V2

#include "Basic.hpp"


namespace SDK::Params
{

// Function TalkWheel_V2.TalkWheel_V2_C.ExecuteUbergraph_TalkWheel_V2
// 0x000C (0x000C - 0x0000)
struct TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_wheelIndexValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2) == 0x000004, "Wrong alignment on TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2");
static_assert(sizeof(TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2) == 0x00000C, "Wrong size on TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2");
static_assert(offsetof(TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2, EntryPoint) == 0x000000, "Member 'TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2, K2Node_Event_IsDesignTime) == 0x000004, "Member 'TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2, K2Node_Event_wheelIndexValue) == 0x000008, "Member 'TalkWheel_V2_C_ExecuteUbergraph_TalkWheel_V2::K2Node_Event_wheelIndexValue' has a wrong offset!");

// Function TalkWheel_V2.TalkWheel_V2_C.Event_HighlightWheel
// 0x0004 (0x0004 - 0x0000)
struct TalkWheel_V2_C_Event_HighlightWheel final
{
public:
	int32                                         WheelIndexValue;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TalkWheel_V2_C_Event_HighlightWheel) == 0x000004, "Wrong alignment on TalkWheel_V2_C_Event_HighlightWheel");
static_assert(sizeof(TalkWheel_V2_C_Event_HighlightWheel) == 0x000004, "Wrong size on TalkWheel_V2_C_Event_HighlightWheel");
static_assert(offsetof(TalkWheel_V2_C_Event_HighlightWheel, WheelIndexValue) == 0x000000, "Member 'TalkWheel_V2_C_Event_HighlightWheel::WheelIndexValue' has a wrong offset!");

// Function TalkWheel_V2.TalkWheel_V2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct TalkWheel_V2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TalkWheel_V2_C_PreConstruct) == 0x000001, "Wrong alignment on TalkWheel_V2_C_PreConstruct");
static_assert(sizeof(TalkWheel_V2_C_PreConstruct) == 0x000001, "Wrong size on TalkWheel_V2_C_PreConstruct");
static_assert(offsetof(TalkWheel_V2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'TalkWheel_V2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function TalkWheel_V2.TalkWheel_V2_C.Highlight
// 0x0020 (0x0020 - 0x0000)
struct TalkWheel_V2_C_Highlight final
{
public:
	int32                                         SliceIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTalkWheelSlice_V2_C*                   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTalkWheelSlice_V2_C*                   CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TalkWheel_V2_C_Highlight) == 0x000008, "Wrong alignment on TalkWheel_V2_C_Highlight");
static_assert(sizeof(TalkWheel_V2_C_Highlight) == 0x000020, "Wrong size on TalkWheel_V2_C_Highlight");
static_assert(offsetof(TalkWheel_V2_C_Highlight, SliceIndex) == 0x000000, "Member 'TalkWheel_V2_C_Highlight::SliceIndex' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_Highlight, CallFunc_Array_Get_Item) == 0x000008, "Member 'TalkWheel_V2_C_Highlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_Highlight, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'TalkWheel_V2_C_Highlight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_Highlight, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'TalkWheel_V2_C_Highlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_Highlight, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'TalkWheel_V2_C_Highlight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function TalkWheel_V2.TalkWheel_V2_C.RefreshSlices
// 0x0070 (0x0070 - 0x0000)
struct TalkWheel_V2_C_RefreshSlices final
{
public:
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTalkWheelSlice_V2_C*                   CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TalkWheel_V2_C_RefreshSlices) == 0x000008, "Wrong alignment on TalkWheel_V2_C_RefreshSlices");
static_assert(sizeof(TalkWheel_V2_C_RefreshSlices) == 0x000070, "Wrong size on TalkWheel_V2_C_RefreshSlices");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000000, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, Temp_int_Variable) == 0x000008, "Member 'TalkWheel_V2_C_RefreshSlices::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_Divide_IntInt_ReturnValue) == 0x000040, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_Create_ReturnValue) == 0x000048, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_Multiply_IntInt_ReturnValue) == 0x000050, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000054, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_AddChildToOverlay_ReturnValue) == 0x000060, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TalkWheel_V2_C_RefreshSlices, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'TalkWheel_V2_C_RefreshSlices::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function TalkWheel_V2.TalkWheel_V2_C.ShouldShow
// 0x0001 (0x0001 - 0x0000)
struct TalkWheel_V2_C_ShouldShow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TalkWheel_V2_C_ShouldShow) == 0x000001, "Wrong alignment on TalkWheel_V2_C_ShouldShow");
static_assert(sizeof(TalkWheel_V2_C_ShouldShow) == 0x000001, "Wrong size on TalkWheel_V2_C_ShouldShow");
static_assert(offsetof(TalkWheel_V2_C_ShouldShow, ReturnValue) == 0x000000, "Member 'TalkWheel_V2_C_ShouldShow::ReturnValue' has a wrong offset!");

}

