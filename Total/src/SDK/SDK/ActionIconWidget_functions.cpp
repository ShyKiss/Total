#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActionIconWidget

#include "Basic.hpp"

#include "ActionIconWidget_classes.hpp"
#include "ActionIconWidget_parameters.hpp"


namespace SDK
{

// Function ActionIconWidget.ActionIconWidget_C.ExecuteUbergraph_ActionIconWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActionIconWidget_C::ExecuteUbergraph_ActionIconWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "ExecuteUbergraph_ActionIconWidget");

	Params::ActionIconWidget_C_ExecuteUbergraph_ActionIconWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActionIconWidget.ActionIconWidget_C.ForceRefreshIcon
// (Event, Public, BlueprintEvent)

void UActionIconWidget_C::ForceRefreshIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "ForceRefreshIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActionIconWidget.ActionIconWidget_C.OnHudActionProgressChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewProgress                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EActionProgressContext                  Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActionIconWidget_C::OnHudActionProgressChanged(float NewProgress, EActionProgressContext Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "OnHudActionProgressChanged");

	Params::ActionIconWidget_C_OnHudActionProgressChanged Parms{};

	Parms.NewProgress = NewProgress;
	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActionIconWidget.ActionIconWidget_C.OnMenuActionProgressChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ActionName_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewProgress                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActionIconWidget_C::OnMenuActionProgressChanged(const class FName& ActionName_0, float NewProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "OnMenuActionProgressChanged");

	Params::ActionIconWidget_C_OnMenuActionProgressChanged Parms{};

	Parms.ActionName_0 = ActionName_0;
	Parms.NewProgress = NewProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActionIconWidget.ActionIconWidget_C.OnMenuInputSourceChanged
// (BlueprintCallable, BlueprintEvent)

void UActionIconWidget_C::OnMenuInputSourceChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "OnMenuInputSourceChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActionIconWidget.ActionIconWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActionIconWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "Tick");

	Params::ActionIconWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActionIconWidget.ActionIconWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UActionIconWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActionIconWidget.ActionIconWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UActionIconWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "PreConstruct");

	Params::ActionIconWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActionIconWidget.ActionIconWidget_C.SetActionName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NewActionName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bForceSecondaryBinding                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UActionIconWidget_C::SetActionName(class FName NewActionName, int32 Value, bool bForceSecondaryBinding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "SetActionName");

	Params::ActionIconWidget_C_SetActionName Parms{};

	Parms.NewActionName = NewActionName;
	Parms.Value = Value;
	Parms.bForceSecondaryBinding = bForceSecondaryBinding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActionIconWidget.ActionIconWidget_C.RefreshActionIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UActionIconWidget_C::RefreshActionIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "RefreshActionIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActionIconWidget.ActionIconWidget_C.HideIcons
// (Public, BlueprintCallable, BlueprintEvent)

void UActionIconWidget_C::HideIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "HideIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActionIconWidget.ActionIconWidget_C.SetDesiredHeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DesiredHeight_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActionIconWidget_C::SetDesiredHeight(float DesiredHeight_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "SetDesiredHeight");

	Params::ActionIconWidget_C_SetDesiredHeight Parms{};

	Parms.DesiredHeight_0 = DesiredHeight_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActionIconWidget.ActionIconWidget_C.ShowContainer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActionIconWidget_C::ShowContainer(class UPanelWidget* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "ShowContainer");

	Params::ActionIconWidget_C_ShowContainer Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActionIconWidget.ActionIconWidget_C.UpdateSize
// (Public, BlueprintCallable, BlueprintEvent)

void UActionIconWidget_C::UpdateSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "UpdateSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActionIconWidget.ActionIconWidget_C.SetWidgetVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActionIconWidget_C::SetWidgetVisible(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "SetWidgetVisible");

	Params::ActionIconWidget_C_SetWidgetVisible Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActionIconWidget.ActionIconWidget_C.ResetVisibleIcons
// (Public, BlueprintCallable, BlueprintEvent)

void UActionIconWidget_C::ResetVisibleIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "ResetVisibleIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActionIconWidget.ActionIconWidget_C.SetHoldRequirement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RequiresHold                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UActionIconWidget_C::SetHoldRequirement(bool RequiresHold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActionIconWidget_C", "SetHoldRequirement");

	Params::ActionIconWidget_C_SetHoldRequirement Parms{};

	Parms.RequiresHold = RequiresHold;

	UObject::ProcessEvent(Func, &Parms);
}

}

