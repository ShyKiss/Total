#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseText_PB

#include "Basic.hpp"

#include "BaseText_PB_classes.hpp"
#include "BaseText_PB_parameters.hpp"


namespace SDK
{

// Function BaseText_PB.BaseText_PB_C.Find Font Scale
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UFont*                            RenderFont                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Kerning                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        BoxSize                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABaseText_PB_C::Find_Font_Scale(TArray<class FString>& String, class UFont* RenderFont, const struct FVector2D& Scale, float Kerning, const struct FVector2D& BoxSize, float* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "Find Font Scale");

	Params::BaseText_PB_C_Find_Font_Scale Parms{};

	Parms.String = std::move(String);
	Parms.RenderFont = RenderFont;
	Parms.Scale = std::move(Scale);
	Parms.Kerning = Kerning;
	Parms.BoxSize = std::move(BoxSize);

	UObject::ProcessEvent(Func, &Parms);

	String = std::move(Parms.String);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BaseText_PB.BaseText_PB_C.AddItemToMimic
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABaseText_PB_C*                   ItemToFind                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABaseText_PB_C::AddItemToMimic(const class ABaseText_PB_C*& ItemToFind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "AddItemToMimic");

	Params::BaseText_PB_C_AddItemToMimic Parms{};

	Parms.ItemToFind = ItemToFind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseText_PB.BaseText_PB_C.Mimic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               Material_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABaseText_PB_C::Mimic(class UMaterialInterface* Material_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "Mimic");

	Params::BaseText_PB_C_Mimic Parms{};

	Parms.Material_0 = Material_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseText_PB.BaseText_PB_C.SetArray
// (Public, BlueprintCallable, BlueprintEvent)

void ABaseText_PB_C::SetArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "SetArray");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseText_PB.BaseText_PB_C.SetTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         PrintTexture_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABaseText_PB_C::SetTexture(class UTexture* PrintTexture_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "SetTexture");

	Params::BaseText_PB_C_SetTexture Parms{};

	Parms.PrintTexture_0 = PrintTexture_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseText_PB.BaseText_PB_C.AdjustingTextLines
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector2D                        BoxSize                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCanvas*                          Canvas_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFont*                            RenderFont                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Kerning                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ScaleFont                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   NewParam1                                              (Parm, OutParm)
// float                                   _ScaleFont_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABaseText_PB_C::AdjustingTextLines(const class FString& Text, const struct FVector2D& BoxSize, class UCanvas* Canvas_0, class UFont* RenderFont, float Kerning, const struct FVector2D& ScaleFont, TArray<class FString>* NewParam1, float* _ScaleFont_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "AdjustingTextLines");

	Params::BaseText_PB_C_AdjustingTextLines Parms{};

	Parms.Text = std::move(Text);
	Parms.BoxSize = std::move(BoxSize);
	Parms.Canvas_0 = Canvas_0;
	Parms.RenderFont = RenderFont;
	Parms.Kerning = Kerning;
	Parms.ScaleFont = std::move(ScaleFont);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = std::move(Parms.NewParam1);

	if (_ScaleFont_0 != nullptr)
		*_ScaleFont_0 = Parms._ScaleFont_0;
}


// Function BaseText_PB.BaseText_PB_C.DrawPage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RenderText                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector4                         Borders                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFont*                            RenderFont                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     RenderColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ShadowColor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Kerning                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LineSpace                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ShadowOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCentreX                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bCentreY                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOutlined                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor                     OutlineColor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        BoxSize                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABaseText_PB_C::DrawPage(const class FString& RenderText, const struct FVector4& Borders, class UFont* RenderFont, const struct FVector2D& ScreenPosition, const struct FVector2D& Scale, const struct FLinearColor& RenderColor, const struct FLinearColor& ShadowColor, float Kerning, float LineSpace, const struct FVector2D& ShadowOffset, bool bCentreX, bool bCentreY, bool bOutlined, const struct FLinearColor& OutlineColor, const struct FVector2D& BoxSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "DrawPage");

	Params::BaseText_PB_C_DrawPage Parms{};

	Parms.RenderText = std::move(RenderText);
	Parms.Borders = std::move(Borders);
	Parms.RenderFont = RenderFont;
	Parms.ScreenPosition = std::move(ScreenPosition);
	Parms.Scale = std::move(Scale);
	Parms.RenderColor = std::move(RenderColor);
	Parms.ShadowColor = std::move(ShadowColor);
	Parms.Kerning = Kerning;
	Parms.LineSpace = LineSpace;
	Parms.ShadowOffset = std::move(ShadowOffset);
	Parms.bCentreX = bCentreX;
	Parms.bCentreY = bCentreY;
	Parms.bOutlined = bOutlined;
	Parms.OutlineColor = std::move(OutlineColor);
	Parms.BoxSize = std::move(BoxSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseText_PB.BaseText_PB_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABaseText_PB_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseText_PB.BaseText_PB_C.CreateTextTexture
// (BlueprintCallable, BlueprintEvent)

void ABaseText_PB_C::CreateTextTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "CreateTextTexture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseText_PB.BaseText_PB_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABaseText_PB_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseText_PB.BaseText_PB_C.UpdateMimic
// (BlueprintCallable, BlueprintEvent)

void ABaseText_PB_C::UpdateMimic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "UpdateMimic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseText_PB.BaseText_PB_C.RedrawText
// (BlueprintCallable, BlueprintEvent)

void ABaseText_PB_C::RedrawText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "RedrawText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseText_PB.BaseText_PB_C.CreateDynamicMaterial
// (BlueprintCallable, BlueprintEvent)

void ABaseText_PB_C::CreateDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "CreateDynamicMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseText_PB.BaseText_PB_C.DrawRenderTarget
// (BlueprintCallable, BlueprintEvent)

void ABaseText_PB_C::DrawRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "DrawRenderTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseText_PB.BaseText_PB_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABaseText_PB_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BaseText_PB.BaseText_PB_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABaseText_PB_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "ReceiveEndPlay");

	Params::BaseText_PB_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BaseText_PB.BaseText_PB_C.ExecuteUbergraph_BaseText_PB
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABaseText_PB_C::ExecuteUbergraph_BaseText_PB(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseText_PB_C", "ExecuteUbergraph_BaseText_PB");

	Params::BaseText_PB_C_ExecuteUbergraph_BaseText_PB Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

