#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NightVision_Goggle_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function NightVision_Goggle_AnimBP.NightVision_Goggle_AnimBP_C.ExecuteUbergraph_NightVision_Goggle_AnimBP
// 0x0030 (0x0030 - 0x0000)
struct NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNVOn_ReturnValue;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue;           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_DynamicCast_AsAnim_Sequence;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP) == 0x000008, "Wrong alignment on NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP");
static_assert(sizeof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP) == 0x000030, "Wrong size on NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, EntryPoint) == 0x000000, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, Temp_bool_Variable) == 0x000004, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, CallFunc_IsValid_ReturnValue_1) == 0x00000C, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, CallFunc_IsNVOn_ReturnValue) == 0x00000D, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::CallFunc_IsNVOn_ReturnValue' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, CallFunc_BP_IsInFirstPerson_ReturnValue) == 0x00000E, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::CallFunc_BP_IsInFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, K2Node_Select_Default) == 0x000010, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, K2Node_DynamicCast_AsAnim_Sequence) == 0x000018, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::K2Node_DynamicCast_AsAnim_Sequence' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'NightVision_Goggle_AnimBP_C_ExecuteUbergraph_NightVision_Goggle_AnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function NightVision_Goggle_AnimBP.NightVision_Goggle_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct NightVision_Goggle_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NightVision_Goggle_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on NightVision_Goggle_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(NightVision_Goggle_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on NightVision_Goggle_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'NightVision_Goggle_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function NightVision_Goggle_AnimBP.NightVision_Goggle_AnimBP_C.CachePlayer
// 0x0018 (0x0018 - 0x0000)
struct NightVision_Goggle_AnimBP_C_CachePlayer final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer_BP_C*                         K2Node_DynamicCast_AsRB_Player_BP;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NightVision_Goggle_AnimBP_C_CachePlayer) == 0x000008, "Wrong alignment on NightVision_Goggle_AnimBP_C_CachePlayer");
static_assert(sizeof(NightVision_Goggle_AnimBP_C_CachePlayer) == 0x000018, "Wrong size on NightVision_Goggle_AnimBP_C_CachePlayer");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_CachePlayer, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'NightVision_Goggle_AnimBP_C_CachePlayer::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_CachePlayer, K2Node_DynamicCast_AsRB_Player_BP) == 0x000008, "Member 'NightVision_Goggle_AnimBP_C_CachePlayer::K2Node_DynamicCast_AsRB_Player_BP' has a wrong offset!");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_CachePlayer, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'NightVision_Goggle_AnimBP_C_CachePlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function NightVision_Goggle_AnimBP.NightVision_Goggle_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct NightVision_Goggle_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(NightVision_Goggle_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on NightVision_Goggle_AnimBP_C_AnimGraph");
static_assert(sizeof(NightVision_Goggle_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on NightVision_Goggle_AnimBP_C_AnimGraph");
static_assert(offsetof(NightVision_Goggle_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'NightVision_Goggle_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

