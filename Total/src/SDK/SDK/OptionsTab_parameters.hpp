#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsTab

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function OptionsTab.OptionsTab_C.OnEntrySubButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct OptionsTab_C_OnEntrySubButtonClicked__DelegateSignature final
{
public:
	class URBMenuOptionsEntry*                    Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsTab_C_OnEntrySubButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on OptionsTab_C_OnEntrySubButtonClicked__DelegateSignature");
static_assert(sizeof(OptionsTab_C_OnEntrySubButtonClicked__DelegateSignature) == 0x000008, "Wrong size on OptionsTab_C_OnEntrySubButtonClicked__DelegateSignature");
static_assert(offsetof(OptionsTab_C_OnEntrySubButtonClicked__DelegateSignature, Entry) == 0x000000, "Member 'OptionsTab_C_OnEntrySubButtonClicked__DelegateSignature::Entry' has a wrong offset!");

// Function OptionsTab.OptionsTab_C.ExecuteUbergraph_OptionsTab
// 0x0020 (0x0020 - 0x0000)
struct OptionsTab_C_ExecuteUbergraph_OptionsTab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuOptionsEntry*                    K2Node_Event_entry;                                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsGamepad;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsTab_C_ExecuteUbergraph_OptionsTab) == 0x000008, "Wrong alignment on OptionsTab_C_ExecuteUbergraph_OptionsTab");
static_assert(sizeof(OptionsTab_C_ExecuteUbergraph_OptionsTab) == 0x000020, "Wrong size on OptionsTab_C_ExecuteUbergraph_OptionsTab");
static_assert(offsetof(OptionsTab_C_ExecuteUbergraph_OptionsTab, EntryPoint) == 0x000000, "Member 'OptionsTab_C_ExecuteUbergraph_OptionsTab::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_ExecuteUbergraph_OptionsTab, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'OptionsTab_C_ExecuteUbergraph_OptionsTab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_ExecuteUbergraph_OptionsTab, K2Node_Event_entry) == 0x000008, "Member 'OptionsTab_C_ExecuteUbergraph_OptionsTab::K2Node_Event_entry' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_ExecuteUbergraph_OptionsTab, CallFunc_AddChild_ReturnValue) == 0x000010, "Member 'OptionsTab_C_ExecuteUbergraph_OptionsTab::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_ExecuteUbergraph_OptionsTab, K2Node_Event_bIsGamepad) == 0x000018, "Member 'OptionsTab_C_ExecuteUbergraph_OptionsTab::K2Node_Event_bIsGamepad' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_ExecuteUbergraph_OptionsTab, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x000019, "Member 'OptionsTab_C_ExecuteUbergraph_OptionsTab::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_ExecuteUbergraph_OptionsTab, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'OptionsTab_C_ExecuteUbergraph_OptionsTab::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function OptionsTab.OptionsTab_C.Event_InputSourceChanged
// 0x0001 (0x0001 - 0x0000)
struct OptionsTab_C_Event_InputSourceChanged final
{
public:
	bool                                          bIsGamepad;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsTab_C_Event_InputSourceChanged) == 0x000001, "Wrong alignment on OptionsTab_C_Event_InputSourceChanged");
static_assert(sizeof(OptionsTab_C_Event_InputSourceChanged) == 0x000001, "Wrong size on OptionsTab_C_Event_InputSourceChanged");
static_assert(offsetof(OptionsTab_C_Event_InputSourceChanged, bIsGamepad) == 0x000000, "Member 'OptionsTab_C_Event_InputSourceChanged::bIsGamepad' has a wrong offset!");

// Function OptionsTab.OptionsTab_C.Event_AddRegionEntry
// 0x0008 (0x0008 - 0x0000)
struct OptionsTab_C_Event_AddRegionEntry final
{
public:
	class URBMenuOptionsEntry*                    Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsTab_C_Event_AddRegionEntry) == 0x000008, "Wrong alignment on OptionsTab_C_Event_AddRegionEntry");
static_assert(sizeof(OptionsTab_C_Event_AddRegionEntry) == 0x000008, "Wrong size on OptionsTab_C_Event_AddRegionEntry");
static_assert(offsetof(OptionsTab_C_Event_AddRegionEntry, Entry) == 0x000000, "Member 'OptionsTab_C_Event_AddRegionEntry::Entry' has a wrong offset!");

// Function OptionsTab.OptionsTab_C.CreateResolutionPopup
// 0x0038 (0x0038 - 0x0000)
struct OptionsTab_C_CreateResolutionPopup final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class URBPopUpConfirmCancelWidget*            CallFunc_CreatePopUpConfirmCancel_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCountdownConfirmCancelPopup_C*         K2Node_DynamicCast_AsCountdown_Confirm_Cancel_Popup; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsTab_C_CreateResolutionPopup) == 0x000008, "Wrong alignment on OptionsTab_C_CreateResolutionPopup");
static_assert(sizeof(OptionsTab_C_CreateResolutionPopup) == 0x000038, "Wrong size on OptionsTab_C_CreateResolutionPopup");
static_assert(offsetof(OptionsTab_C_CreateResolutionPopup, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'OptionsTab_C_CreateResolutionPopup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_CreateResolutionPopup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'OptionsTab_C_CreateResolutionPopup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_CreateResolutionPopup, CallFunc_CreatePopUpConfirmCancel_ReturnValue) == 0x000020, "Member 'OptionsTab_C_CreateResolutionPopup::CallFunc_CreatePopUpConfirmCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_CreateResolutionPopup, K2Node_DynamicCast_AsCountdown_Confirm_Cancel_Popup) == 0x000028, "Member 'OptionsTab_C_CreateResolutionPopup::K2Node_DynamicCast_AsCountdown_Confirm_Cancel_Popup' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_CreateResolutionPopup, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'OptionsTab_C_CreateResolutionPopup::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function OptionsTab.OptionsTab_C.Get_DLSSEntry_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct OptionsTab_C_Get_DLSSEntry_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDLSSSupported_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsTab_C_Get_DLSSEntry_Visibility_0) == 0x000001, "Wrong alignment on OptionsTab_C_Get_DLSSEntry_Visibility_0");
static_assert(sizeof(OptionsTab_C_Get_DLSSEntry_Visibility_0) == 0x000006, "Wrong size on OptionsTab_C_Get_DLSSEntry_Visibility_0");
static_assert(offsetof(OptionsTab_C_Get_DLSSEntry_Visibility_0, ReturnValue) == 0x000000, "Member 'OptionsTab_C_Get_DLSSEntry_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_Get_DLSSEntry_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'OptionsTab_C_Get_DLSSEntry_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_Get_DLSSEntry_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'OptionsTab_C_Get_DLSSEntry_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_Get_DLSSEntry_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'OptionsTab_C_Get_DLSSEntry_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_Get_DLSSEntry_Visibility_0, CallFunc_IsDLSSSupported_ReturnValue) == 0x000004, "Member 'OptionsTab_C_Get_DLSSEntry_Visibility_0::CallFunc_IsDLSSSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_Get_DLSSEntry_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'OptionsTab_C_Get_DLSSEntry_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function OptionsTab.OptionsTab_C.OnSubButtonClicked
// 0x0018 (0x0018 - 0x0000)
struct OptionsTab_C_OnSubButtonClicked final
{
public:
	class URBMenuOptionsEntry*                    Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOptionsEntry_C*                        K2Node_DynamicCast_AsOptions_Entry;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsTab_C_OnSubButtonClicked) == 0x000008, "Wrong alignment on OptionsTab_C_OnSubButtonClicked");
static_assert(sizeof(OptionsTab_C_OnSubButtonClicked) == 0x000018, "Wrong size on OptionsTab_C_OnSubButtonClicked");
static_assert(offsetof(OptionsTab_C_OnSubButtonClicked, Entry) == 0x000000, "Member 'OptionsTab_C_OnSubButtonClicked::Entry' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnSubButtonClicked, K2Node_DynamicCast_AsOptions_Entry) == 0x000008, "Member 'OptionsTab_C_OnSubButtonClicked::K2Node_DynamicCast_AsOptions_Entry' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnSubButtonClicked, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'OptionsTab_C_OnSubButtonClicked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnSubButtonClicked, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'OptionsTab_C_OnSubButtonClicked::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function OptionsTab.OptionsTab_C.OnInputSourceChanged
// 0x0009 (0x0009 - 0x0000)
struct OptionsTab_C_OnInputSourceChanged final
{
public:
	bool                                          bIsGamepad;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EConsumeMouseWheel                            Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeMouseWheel                            Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EConsumeMouseWheel                            K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsTab_C_OnInputSourceChanged) == 0x000001, "Wrong alignment on OptionsTab_C_OnInputSourceChanged");
static_assert(sizeof(OptionsTab_C_OnInputSourceChanged) == 0x000009, "Wrong size on OptionsTab_C_OnInputSourceChanged");
static_assert(offsetof(OptionsTab_C_OnInputSourceChanged, bIsGamepad) == 0x000000, "Member 'OptionsTab_C_OnInputSourceChanged::bIsGamepad' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnInputSourceChanged, Temp_bool_Variable) == 0x000001, "Member 'OptionsTab_C_OnInputSourceChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnInputSourceChanged, Temp_byte_Variable) == 0x000002, "Member 'OptionsTab_C_OnInputSourceChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnInputSourceChanged, Temp_byte_Variable_1) == 0x000003, "Member 'OptionsTab_C_OnInputSourceChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnInputSourceChanged, Temp_bool_Variable_1) == 0x000004, "Member 'OptionsTab_C_OnInputSourceChanged::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnInputSourceChanged, K2Node_Select_Default) == 0x000005, "Member 'OptionsTab_C_OnInputSourceChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnInputSourceChanged, Temp_byte_Variable_2) == 0x000006, "Member 'OptionsTab_C_OnInputSourceChanged::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnInputSourceChanged, Temp_byte_Variable_3) == 0x000007, "Member 'OptionsTab_C_OnInputSourceChanged::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_OnInputSourceChanged, K2Node_Select_Default_1) == 0x000008, "Member 'OptionsTab_C_OnInputSourceChanged::K2Node_Select_Default_1' has a wrong offset!");

// Function OptionsTab.OptionsTab_C.GetValidEntriesCount
// 0x0068 (0x0068 - 0x0000)
struct OptionsTab_C_GetValidEntriesCount final
{
public:
	int32                                         ValidEntriesCount;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalValidEntriesCount;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOptionsCategory_C*                     K2Node_DynamicCast_AsOptions_Category;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOptionsEntry_C*                        K2Node_DynamicCast_AsOptions_Entry;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanBeDisplayed_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsTab_C_GetValidEntriesCount) == 0x000008, "Wrong alignment on OptionsTab_C_GetValidEntriesCount");
static_assert(sizeof(OptionsTab_C_GetValidEntriesCount) == 0x000068, "Wrong size on OptionsTab_C_GetValidEntriesCount");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, ValidEntriesCount) == 0x000000, "Member 'OptionsTab_C_GetValidEntriesCount::ValidEntriesCount' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, LocalValidEntriesCount) == 0x000004, "Member 'OptionsTab_C_GetValidEntriesCount::LocalValidEntriesCount' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'OptionsTab_C_GetValidEntriesCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'OptionsTab_C_GetValidEntriesCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, Temp_int_Array_Index_Variable) == 0x000010, "Member 'OptionsTab_C_GetValidEntriesCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, Temp_int_Variable) == 0x000014, "Member 'OptionsTab_C_GetValidEntriesCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'OptionsTab_C_GetValidEntriesCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'OptionsTab_C_GetValidEntriesCount::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'OptionsTab_C_GetValidEntriesCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, CallFunc_Array_Get_Item) == 0x000038, "Member 'OptionsTab_C_GetValidEntriesCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'OptionsTab_C_GetValidEntriesCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, K2Node_DynamicCast_AsOptions_Category) == 0x000048, "Member 'OptionsTab_C_GetValidEntriesCount::K2Node_DynamicCast_AsOptions_Category' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'OptionsTab_C_GetValidEntriesCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, CallFunc_IsVisible_ReturnValue) == 0x000051, "Member 'OptionsTab_C_GetValidEntriesCount::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, K2Node_DynamicCast_AsOptions_Entry) == 0x000058, "Member 'OptionsTab_C_GetValidEntriesCount::K2Node_DynamicCast_AsOptions_Entry' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'OptionsTab_C_GetValidEntriesCount::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetValidEntriesCount, CallFunc_CanBeDisplayed_ReturnValue) == 0x000061, "Member 'OptionsTab_C_GetValidEntriesCount::CallFunc_CanBeDisplayed_ReturnValue' has a wrong offset!");

// Function OptionsTab.OptionsTab_C.GetScrollArrowVisibility
// 0x0006 (0x0006 - 0x0000)
struct OptionsTab_C_GetScrollArrowVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShouldScrollbarBeVisible_ReturnValue;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsTab_C_GetScrollArrowVisibility) == 0x000001, "Wrong alignment on OptionsTab_C_GetScrollArrowVisibility");
static_assert(sizeof(OptionsTab_C_GetScrollArrowVisibility) == 0x000006, "Wrong size on OptionsTab_C_GetScrollArrowVisibility");
static_assert(offsetof(OptionsTab_C_GetScrollArrowVisibility, ReturnValue) == 0x000000, "Member 'OptionsTab_C_GetScrollArrowVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetScrollArrowVisibility, Temp_bool_Variable) == 0x000001, "Member 'OptionsTab_C_GetScrollArrowVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetScrollArrowVisibility, Temp_byte_Variable) == 0x000002, "Member 'OptionsTab_C_GetScrollArrowVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetScrollArrowVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'OptionsTab_C_GetScrollArrowVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetScrollArrowVisibility, CallFunc_GetShouldScrollbarBeVisible_ReturnValue) == 0x000004, "Member 'OptionsTab_C_GetScrollArrowVisibility::CallFunc_GetShouldScrollbarBeVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsTab_C_GetScrollArrowVisibility, K2Node_Select_Default) == 0x000005, "Member 'OptionsTab_C_GetScrollArrowVisibility::K2Node_Select_Default' has a wrong offset!");

}

