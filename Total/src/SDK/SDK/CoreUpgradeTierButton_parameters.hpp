#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CoreUpgradeTierButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "OPP_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct CoreUpgradeTierButton_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierButton_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on CoreUpgradeTierButton_C_OnRemovedFromFocusPath");
static_assert(sizeof(CoreUpgradeTierButton_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on CoreUpgradeTierButton_C_OnRemovedFromFocusPath");
static_assert(offsetof(CoreUpgradeTierButton_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'CoreUpgradeTierButton_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.IsConsideredHovered
// 0x0001 (0x0001 - 0x0000)
struct CoreUpgradeTierButton_C_IsConsideredHovered final
{
public:
	bool                                          bConsideredHovered;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierButton_C_IsConsideredHovered) == 0x000001, "Wrong alignment on CoreUpgradeTierButton_C_IsConsideredHovered");
static_assert(sizeof(CoreUpgradeTierButton_C_IsConsideredHovered) == 0x000001, "Wrong size on CoreUpgradeTierButton_C_IsConsideredHovered");
static_assert(offsetof(CoreUpgradeTierButton_C_IsConsideredHovered, bConsideredHovered) == 0x000000, "Member 'CoreUpgradeTierButton_C_IsConsideredHovered::bConsideredHovered' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct CoreUpgradeTierButton_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(CoreUpgradeTierButton_C_OnFocusReceived) == 0x000008, "Wrong alignment on CoreUpgradeTierButton_C_OnFocusReceived");
static_assert(sizeof(CoreUpgradeTierButton_C_OnFocusReceived) == 0x0001B0, "Wrong size on CoreUpgradeTierButton_C_OnFocusReceived");
static_assert(offsetof(CoreUpgradeTierButton_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'CoreUpgradeTierButton_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'CoreUpgradeTierButton_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'CoreUpgradeTierButton_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'CoreUpgradeTierButton_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.ComputeValues
// 0x0668 (0x0668 - 0x0000)
struct CoreUpgradeTierButton_C_ComputeValues final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrialChainingMetaActive_ReturnValue;    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBPlayerProgressionData*               CallFunc_GetLocalPlayerProgressionData_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRBItemProgressionData>         CallFunc_FilterItemProgressionData_ReturnValue;    // 0x0030(0x0010)(ReferenceParm)
	TArray<struct FRBItemProgressionData>         CallFunc_FilterItemProgressionData_ReturnValue_1;  // 0x0040(0x0010)(ReferenceParm)
	struct FRBItemProgressionData                 CallFunc_Array_Get_Item;                           // 0x0050(0x0170)()
	struct FRBItemProgressionData                 CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0170)()
	struct FMenuUpgradeItemInfo                   CallFunc_GetUpgradeItemInfo_ReturnValue;           // 0x0330(0x0190)()
	struct FMenuUpgradeItemInfo                   CallFunc_GetUpgradeItemInfo_ReturnValue_1;         // 0x04C0(0x0190)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_652[0x2];                                      // 0x0652(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x065D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65E[0x2];                                      // 0x065E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierButton_C_ComputeValues) == 0x000008, "Wrong alignment on CoreUpgradeTierButton_C_ComputeValues");
static_assert(sizeof(CoreUpgradeTierButton_C_ComputeValues) == 0x000668, "Wrong size on CoreUpgradeTierButton_C_ComputeValues");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CoreUpgradeTierButton_C_ComputeValues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, Temp_int_Variable) == 0x000004, "Member 'CoreUpgradeTierButton_C_ComputeValues::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'CoreUpgradeTierButton_C_ComputeValues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'CoreUpgradeTierButton_C_ComputeValues::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'CoreUpgradeTierButton_C_ComputeValues::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_IsPlayInEditor_ReturnValue) == 0x00001C, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_IsPlayInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_IsTrialChainingMetaActive_ReturnValue) == 0x00001D, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_IsTrialChainingMetaActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_GetLocalPlayerProgressionData_ReturnValue) == 0x000028, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_GetLocalPlayerProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_FilterItemProgressionData_ReturnValue) == 0x000030, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_FilterItemProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_FilterItemProgressionData_ReturnValue_1) == 0x000040, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_FilterItemProgressionData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Array_Get_Item) == 0x000050, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_GetUpgradeItemInfo_ReturnValue) == 0x000330, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_GetUpgradeItemInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_GetUpgradeItemInfo_ReturnValue_1) == 0x0004C0, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_GetUpgradeItemInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000650, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000651, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Array_Length_ReturnValue) == 0x000654, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Array_Length_ReturnValue_1) == 0x000658, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Less_IntInt_ReturnValue) == 0x00065C, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Less_IntInt_ReturnValue_1) == 0x00065D, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ComputeValues, CallFunc_Array_Length_ReturnValue_2) == 0x000660, "Member 'CoreUpgradeTierButton_C_ComputeValues::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.SetFocused
// 0x0020 (0x0020 - 0x0000)
struct CoreUpgradeTierButton_C_SetFocused final
{
public:
	bool                                          bInFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierButton_C_SetFocused) == 0x000008, "Wrong alignment on CoreUpgradeTierButton_C_SetFocused");
static_assert(sizeof(CoreUpgradeTierButton_C_SetFocused) == 0x000020, "Wrong size on CoreUpgradeTierButton_C_SetFocused");
static_assert(offsetof(CoreUpgradeTierButton_C_SetFocused, bInFocused) == 0x000000, "Member 'CoreUpgradeTierButton_C_SetFocused::bInFocused' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetFocused, bWasConsideredHovered) == 0x000001, "Member 'CoreUpgradeTierButton_C_SetFocused::bWasConsideredHovered' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetFocused, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'CoreUpgradeTierButton_C_SetFocused::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000C, "Member 'CoreUpgradeTierButton_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetFocused, CallFunc_GetMenuManager_ReturnValue) == 0x000010, "Member 'CoreUpgradeTierButton_C_SetFocused::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetFocused, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000018, "Member 'CoreUpgradeTierButton_C_SetFocused::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetFocused, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x000019, "Member 'CoreUpgradeTierButton_C_SetFocused::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x00001A, "Member 'CoreUpgradeTierButton_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.SetHovered
// 0x0020 (0x0020 - 0x0000)
struct CoreUpgradeTierButton_C_SetHovered final
{
public:
	bool                                          bInHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierButton_C_SetHovered) == 0x000008, "Wrong alignment on CoreUpgradeTierButton_C_SetHovered");
static_assert(sizeof(CoreUpgradeTierButton_C_SetHovered) == 0x000020, "Wrong size on CoreUpgradeTierButton_C_SetHovered");
static_assert(offsetof(CoreUpgradeTierButton_C_SetHovered, bInHovered) == 0x000000, "Member 'CoreUpgradeTierButton_C_SetHovered::bInHovered' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetHovered, bWasConsideredHovered) == 0x000001, "Member 'CoreUpgradeTierButton_C_SetHovered::bWasConsideredHovered' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetHovered, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'CoreUpgradeTierButton_C_SetHovered::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetHovered, CallFunc_GetMenuManager_ReturnValue) == 0x000010, "Member 'CoreUpgradeTierButton_C_SetHovered::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetHovered, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000018, "Member 'CoreUpgradeTierButton_C_SetHovered::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000019, "Member 'CoreUpgradeTierButton_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetHovered, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x00001A, "Member 'CoreUpgradeTierButton_C_SetHovered::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x00001B, "Member 'CoreUpgradeTierButton_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.Init
// 0x0008 (0x0008 - 0x0000)
struct CoreUpgradeTierButton_C_Init final
{
public:
	bool                                          bIsLoadout_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsHeader_0;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Tier_0;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierButton_C_Init) == 0x000004, "Wrong alignment on CoreUpgradeTierButton_C_Init");
static_assert(sizeof(CoreUpgradeTierButton_C_Init) == 0x000008, "Wrong size on CoreUpgradeTierButton_C_Init");
static_assert(offsetof(CoreUpgradeTierButton_C_Init, bIsLoadout_0) == 0x000000, "Member 'CoreUpgradeTierButton_C_Init::bIsLoadout_0' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Init, bIsHeader_0) == 0x000001, "Member 'CoreUpgradeTierButton_C_Init::bIsHeader_0' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Init, Tier_0) == 0x000004, "Member 'CoreUpgradeTierButton_C_Init::Tier_0' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.Setup
// 0x02B8 (0x02B8 - 0x0000)
struct CoreUpgradeTierButton_C_Setup final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0120(0x0018)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0148(0x0028)()
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0178(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0208(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0220(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0240(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0280(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0290(0x0018)()
	class UTexture2D*                             K2Node_Select_Default_5;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_6;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierButton_C_Setup) == 0x000008, "Wrong alignment on CoreUpgradeTierButton_C_Setup");
static_assert(sizeof(CoreUpgradeTierButton_C_Setup) == 0x0002B8, "Wrong size on CoreUpgradeTierButton_C_Setup");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_bool_Variable) == 0x000000, "Member 'CoreUpgradeTierButton_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_text_Variable) == 0x000008, "Member 'CoreUpgradeTierButton_C_Setup::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_bool_Variable_1) == 0x000020, "Member 'CoreUpgradeTierButton_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_struct_Variable) == 0x000024, "Member 'CoreUpgradeTierButton_C_Setup::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_struct_Variable_1) == 0x000034, "Member 'CoreUpgradeTierButton_C_Setup::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_bool_Variable_2) == 0x000044, "Member 'CoreUpgradeTierButton_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_text_Variable_1) == 0x000048, "Member 'CoreUpgradeTierButton_C_Setup::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_bool_Variable_3) == 0x000060, "Member 'CoreUpgradeTierButton_C_Setup::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_byte_Variable) == 0x000061, "Member 'CoreUpgradeTierButton_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_byte_Variable_1) == 0x000062, "Member 'CoreUpgradeTierButton_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_bool_Variable_4) == 0x000063, "Member 'CoreUpgradeTierButton_C_Setup::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_object_Variable) == 0x000068, "Member 'CoreUpgradeTierButton_C_Setup::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_int_Variable) == 0x000070, "Member 'CoreUpgradeTierButton_C_Setup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_object_Variable_1) == 0x000078, "Member 'CoreUpgradeTierButton_C_Setup::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_object_Variable_2) == 0x000080, "Member 'CoreUpgradeTierButton_C_Setup::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_object_Variable_3) == 0x000088, "Member 'CoreUpgradeTierButton_C_Setup::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_object_Variable_4) == 0x000090, "Member 'CoreUpgradeTierButton_C_Setup::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_bool_Variable_5) == 0x000098, "Member 'CoreUpgradeTierButton_C_Setup::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_byte_Variable_2) == 0x000099, "Member 'CoreUpgradeTierButton_C_Setup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, Temp_byte_Variable_3) == 0x00009A, "Member 'CoreUpgradeTierButton_C_Setup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_MakeArray_Array) == 0x0000E8, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x0000F8, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_Format_ReturnValue) == 0x000100, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_BooleanOR_ReturnValue) == 0x000118, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_Select_Default) == 0x000120, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_Select_Default_1) == 0x000138, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_MakeStruct_SlateColor) == 0x000148, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x000170, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_BooleanOR_ReturnValue_1) == 0x000171, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_Select_Default_2) == 0x000172, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_Not_PreBool_ReturnValue) == 0x000173, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_MakeStruct_FormatArgumentData_1) == 0x000178, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001B8, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_MakeArray_Array_1) == 0x0001F8, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_Format_ReturnValue_1) == 0x000208, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_Select_Default_3) == 0x000220, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_Select_Default_4) == 0x000238, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_MakeStruct_FormatArgumentData_3) == 0x000240, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_MakeArray_Array_2) == 0x000280, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, CallFunc_Format_ReturnValue_2) == 0x000290, "Member 'CoreUpgradeTierButton_C_Setup::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_Select_Default_5) == 0x0002A8, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_Setup, K2Node_Select_Default_6) == 0x0002B0, "Member 'CoreUpgradeTierButton_C_Setup::K2Node_Select_Default_6' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CoreUpgradeTierButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierButton_C_PreConstruct) == 0x000001, "Wrong alignment on CoreUpgradeTierButton_C_PreConstruct");
static_assert(sizeof(CoreUpgradeTierButton_C_PreConstruct) == 0x000001, "Wrong size on CoreUpgradeTierButton_C_PreConstruct");
static_assert(offsetof(CoreUpgradeTierButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CoreUpgradeTierButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.ExecuteUbergraph_CoreUpgradeTierButton
// 0x0028 (0x0028 - 0x0000)
struct CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton) == 0x000008, "Wrong alignment on CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton");
static_assert(sizeof(CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton) == 0x000028, "Wrong size on CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton");
static_assert(offsetof(CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton, EntryPoint) == 0x000000, "Member 'CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton, K2Node_Event_IsDesignTime) == 0x000014, "Member 'CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton, CallFunc_GetMenuManager_ReturnValue) == 0x000018, "Member 'CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x000022, "Member 'CoreUpgradeTierButton_C_ExecuteUbergraph_CoreUpgradeTierButton::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.OnClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct CoreUpgradeTierButton_C_OnClicked__DelegateSignature final
{
public:
	int32                                         Tier_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierButton_C_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on CoreUpgradeTierButton_C_OnClicked__DelegateSignature");
static_assert(sizeof(CoreUpgradeTierButton_C_OnClicked__DelegateSignature) == 0x000004, "Wrong size on CoreUpgradeTierButton_C_OnClicked__DelegateSignature");
static_assert(offsetof(CoreUpgradeTierButton_C_OnClicked__DelegateSignature, Tier_0) == 0x000000, "Member 'CoreUpgradeTierButton_C_OnClicked__DelegateSignature::Tier_0' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.OnUnhovered__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct CoreUpgradeTierButton_C_OnUnhovered__DelegateSignature final
{
public:
	int32                                         Tier_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierButton_C_OnUnhovered__DelegateSignature) == 0x000004, "Wrong alignment on CoreUpgradeTierButton_C_OnUnhovered__DelegateSignature");
static_assert(sizeof(CoreUpgradeTierButton_C_OnUnhovered__DelegateSignature) == 0x000004, "Wrong size on CoreUpgradeTierButton_C_OnUnhovered__DelegateSignature");
static_assert(offsetof(CoreUpgradeTierButton_C_OnUnhovered__DelegateSignature, Tier_0) == 0x000000, "Member 'CoreUpgradeTierButton_C_OnUnhovered__DelegateSignature::Tier_0' has a wrong offset!");

// Function CoreUpgradeTierButton.CoreUpgradeTierButton_C.OnHovered__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct CoreUpgradeTierButton_C_OnHovered__DelegateSignature final
{
public:
	int32                                         Tier_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoreUpgradeTierButton_C_OnHovered__DelegateSignature) == 0x000004, "Wrong alignment on CoreUpgradeTierButton_C_OnHovered__DelegateSignature");
static_assert(sizeof(CoreUpgradeTierButton_C_OnHovered__DelegateSignature) == 0x000004, "Wrong size on CoreUpgradeTierButton_C_OnHovered__DelegateSignature");
static_assert(offsetof(CoreUpgradeTierButton_C_OnHovered__DelegateSignature, Tier_0) == 0x000000, "Member 'CoreUpgradeTierButton_C_OnHovered__DelegateSignature::Tier_0' has a wrong offset!");

}

