#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PharmacyMinus02_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Pharmacy-02_BP.Pharmacy-02_BP_C
// 0x0130 (0x0670 - 0x0540)
#pragma pack(push, 0x1)
class alignas(0x10) APharmacyMinus02_BP_C : public ARBInteractibleContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0540(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBActorPrevisComponent*                TopBandagePrevis;                                  // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                BottomBandagePrevis;                               // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* PadLockClearanceBox;                               // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* OpenClearanceBox;                                  // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBContainerInteractibleZoneComponent*  RBContainerInteractibleZone;                       // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UObject*                                InteractableOwnerClearanceBoxComponent_BP;         // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GasTrapMesh;                                       // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GasTrapTriggerMesh;                                // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PadLockMinus01;                                    // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hinge;                                             // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                BottomStaminaBoostPrevis;                          // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                BottomAntidotePrevis;                              // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                BottomSyringePrevis;                               // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                BottomStaminaPrevis;                               // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                TopAntidotePrevis;                                 // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                TopSyringePrevis;                                  // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                TopStaminaBoostPrevis;                             // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBActorPrevisComponent*                TopStaminaPrevis;                                  // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBOutlineComponent*                    RBOutline;                                         // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PadLockBarMinus01;                                 // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBContainerSpawnLocationComponent*     BottomShelfSpawnLocation;                          // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBContainerSpawnLocationComponent*     TopShelfSpawnLocation;                             // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBBoxNavMeshBlockingComponent*         RBBoxNavMeshBlocking;                              // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RefStaticmesh;                                     // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PharmacyBase;                                      // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            InteractionStaticMesh;                             // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_618[0x8];                                      // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BaseTransform;                                     // 0x0620(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	FMulticastInlineDelegateProperty_             NewEventDispatcher_0;                              // 0x0650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          OpenAnimPlayed;                                    // 0x0660(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	bool PlaySpecialMoveAnimation(class ARBPawn* InteractorPawn, ESpecialMove SpecialMove);
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void Set_Open(bool FullAnim);
	void Set_Closed();
	void Event_SnapToState();
	void Event_OnIsOpenedChanged();
	void OnPawnPlaySpecialMoveAnimation(const class ARBPawn* Pawn, ESpecialMove SpecialMove);
	void Event_OnResetStage();
	void ExecuteUbergraph_PharmacyMinus02_BP(int32 EntryPoint);
	void NewEventDispatcher_0__DelegateSignature();

	void GetLookAtLocation(struct FVector* OutLookAtLocation) const;
	bool GetInteractionPawnLocation(const class ARBPawn* Pawn, ESpecialMove SpecialMove, struct FVector* OutLocation, struct FVector* OutDirection) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Pharmacy-02_BP_C">();
	}
	static class APharmacyMinus02_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APharmacyMinus02_BP_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(APharmacyMinus02_BP_C) == 0x000010, "Wrong alignment on APharmacyMinus02_BP_C");
static_assert(sizeof(APharmacyMinus02_BP_C) == 0x000670, "Wrong size on APharmacyMinus02_BP_C");
static_assert(offsetof(APharmacyMinus02_BP_C, UberGraphFrame) == 0x000540, "Member 'APharmacyMinus02_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, TopBandagePrevis) == 0x000548, "Member 'APharmacyMinus02_BP_C::TopBandagePrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, BottomBandagePrevis) == 0x000550, "Member 'APharmacyMinus02_BP_C::BottomBandagePrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, PadLockClearanceBox) == 0x000558, "Member 'APharmacyMinus02_BP_C::PadLockClearanceBox' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, OpenClearanceBox) == 0x000560, "Member 'APharmacyMinus02_BP_C::OpenClearanceBox' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, RBContainerInteractibleZone) == 0x000568, "Member 'APharmacyMinus02_BP_C::RBContainerInteractibleZone' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, InteractableOwnerClearanceBoxComponent_BP) == 0x000570, "Member 'APharmacyMinus02_BP_C::InteractableOwnerClearanceBoxComponent_BP' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, GasTrapMesh) == 0x000578, "Member 'APharmacyMinus02_BP_C::GasTrapMesh' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, GasTrapTriggerMesh) == 0x000580, "Member 'APharmacyMinus02_BP_C::GasTrapTriggerMesh' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, PadLockMinus01) == 0x000588, "Member 'APharmacyMinus02_BP_C::PadLockMinus01' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, Hinge) == 0x000590, "Member 'APharmacyMinus02_BP_C::Hinge' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, BottomStaminaBoostPrevis) == 0x000598, "Member 'APharmacyMinus02_BP_C::BottomStaminaBoostPrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, BottomAntidotePrevis) == 0x0005A0, "Member 'APharmacyMinus02_BP_C::BottomAntidotePrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, BottomSyringePrevis) == 0x0005A8, "Member 'APharmacyMinus02_BP_C::BottomSyringePrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, BottomStaminaPrevis) == 0x0005B0, "Member 'APharmacyMinus02_BP_C::BottomStaminaPrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, TopAntidotePrevis) == 0x0005B8, "Member 'APharmacyMinus02_BP_C::TopAntidotePrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, TopSyringePrevis) == 0x0005C0, "Member 'APharmacyMinus02_BP_C::TopSyringePrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, TopStaminaBoostPrevis) == 0x0005C8, "Member 'APharmacyMinus02_BP_C::TopStaminaBoostPrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, TopStaminaPrevis) == 0x0005D0, "Member 'APharmacyMinus02_BP_C::TopStaminaPrevis' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, RBOutline) == 0x0005D8, "Member 'APharmacyMinus02_BP_C::RBOutline' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, PadLockBarMinus01) == 0x0005E0, "Member 'APharmacyMinus02_BP_C::PadLockBarMinus01' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, BottomShelfSpawnLocation) == 0x0005E8, "Member 'APharmacyMinus02_BP_C::BottomShelfSpawnLocation' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, TopShelfSpawnLocation) == 0x0005F0, "Member 'APharmacyMinus02_BP_C::TopShelfSpawnLocation' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, RBBoxNavMeshBlocking) == 0x0005F8, "Member 'APharmacyMinus02_BP_C::RBBoxNavMeshBlocking' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, RefStaticmesh) == 0x000600, "Member 'APharmacyMinus02_BP_C::RefStaticmesh' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, PharmacyBase) == 0x000608, "Member 'APharmacyMinus02_BP_C::PharmacyBase' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, InteractionStaticMesh) == 0x000610, "Member 'APharmacyMinus02_BP_C::InteractionStaticMesh' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, BaseTransform) == 0x000620, "Member 'APharmacyMinus02_BP_C::BaseTransform' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, NewEventDispatcher_0) == 0x000650, "Member 'APharmacyMinus02_BP_C::NewEventDispatcher_0' has a wrong offset!");
static_assert(offsetof(APharmacyMinus02_BP_C, OpenAnimPlayed) == 0x000660, "Member 'APharmacyMinus02_BP_C::OpenAnimPlayed' has a wrong offset!");

}

