#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StretchableModule

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "StretchableModulesPartsRandomization_structs.hpp"
#include "LockAxis_structs.hpp"


namespace SDK::Params
{

// Function StretchableModule.StretchableModule_C.MoveAnchorGizmo
// 0x0110 (0x0110 - 0x0000)
struct StretchableModule_C_MoveAnchorGizmo final
{
public:
	int32                                         CallFunc_IsPropertyWidgetSelected_outWidgetIndex;  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPropertyWidgetSelected_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddActorLocalOffset_SweepHitResult;    // 0x0008(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_MoveAnchorGizmo) == 0x000010, "Wrong alignment on StretchableModule_C_MoveAnchorGizmo");
static_assert(sizeof(StretchableModule_C_MoveAnchorGizmo) == 0x000110, "Wrong size on StretchableModule_C_MoveAnchorGizmo");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_IsPropertyWidgetSelected_outWidgetIndex) == 0x000000, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_IsPropertyWidgetSelected_outWidgetIndex' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_IsPropertyWidgetSelected_ReturnValue) == 0x000004, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_IsPropertyWidgetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_K2_AddActorLocalOffset_SweepHitResult) == 0x000008, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_K2_AddActorLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_InverseTransformRotation_ReturnValue) == 0x0000C0, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000CC, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D8, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000E4, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000F0, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_MoveAnchorGizmo, CallFunc_Add_VectorVector_ReturnValue) == 0x0000FC, "Member 'StretchableModule_C_MoveAnchorGizmo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.AssingDynMatData
// 0x0020 (0x0020 - 0x0000)
struct StretchableModule_C_AssingDynMatData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_AssingDynMatData) == 0x000008, "Wrong alignment on StretchableModule_C_AssingDynMatData");
static_assert(sizeof(StretchableModule_C_AssingDynMatData) == 0x000020, "Wrong size on StretchableModule_C_AssingDynMatData");
static_assert(offsetof(StretchableModule_C_AssingDynMatData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'StretchableModule_C_AssingDynMatData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssingDynMatData, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'StretchableModule_C_AssingDynMatData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssingDynMatData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'StretchableModule_C_AssingDynMatData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssingDynMatData, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'StretchableModule_C_AssingDynMatData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssingDynMatData, CallFunc_Array_Get_Item) == 0x000010, "Member 'StretchableModule_C_AssingDynMatData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssingDynMatData, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'StretchableModule_C_AssingDynMatData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.AssignLightChannel
// 0x0020 (0x0020 - 0x0000)
struct StretchableModule_C_AssignLightChannel final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_AssignLightChannel) == 0x000008, "Wrong alignment on StretchableModule_C_AssignLightChannel");
static_assert(sizeof(StretchableModule_C_AssignLightChannel) == 0x000020, "Wrong size on StretchableModule_C_AssignLightChannel");
static_assert(offsetof(StretchableModule_C_AssignLightChannel, Temp_int_Array_Index_Variable) == 0x000000, "Member 'StretchableModule_C_AssignLightChannel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignLightChannel, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'StretchableModule_C_AssignLightChannel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignLightChannel, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'StretchableModule_C_AssignLightChannel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignLightChannel, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'StretchableModule_C_AssignLightChannel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignLightChannel, CallFunc_Array_Get_Item) == 0x000010, "Member 'StretchableModule_C_AssignLightChannel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignLightChannel, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'StretchableModule_C_AssignLightChannel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignLightChannel, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'StretchableModule_C_AssignLightChannel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.RunConstructionScript
// 0x0028 (0x0028 - 0x0000)
struct StretchableModule_C_RunConstructionScript final
{
public:
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_RunConstructionScript) == 0x000008, "Wrong alignment on StretchableModule_C_RunConstructionScript");
static_assert(sizeof(StretchableModule_C_RunConstructionScript) == 0x000028, "Wrong size on StretchableModule_C_RunConstructionScript");
static_assert(offsetof(StretchableModule_C_RunConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'StretchableModule_C_RunConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_RunConstructionScript, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'StretchableModule_C_RunConstructionScript::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_RunConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'StretchableModule_C_RunConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_RunConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'StretchableModule_C_RunConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.CreateLibraryMeshes
// 0x00E0 (0x00E0 - 0x0000)
struct StretchableModule_C_CreateLibraryMeshes final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStretchableModulesPartsRandomization  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x008C(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x009C(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_3;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStretchableModulesPartsRandomization  CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_CreateLibraryMeshes) == 0x000008, "Wrong alignment on StretchableModule_C_CreateLibraryMeshes");
static_assert(sizeof(StretchableModule_C_CreateLibraryMeshes) == 0x0000E0, "Wrong size on StretchableModule_C_CreateLibraryMeshes");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, Temp_int_Variable) == 0x000000, "Member 'StretchableModule_C_CreateLibraryMeshes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, Temp_int_Variable_1) == 0x00000C, "Member 'StretchableModule_C_CreateLibraryMeshes::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, Temp_int_Variable_2) == 0x000014, "Member 'StretchableModule_C_CreateLibraryMeshes::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'StretchableModule_C_CreateLibraryMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_3) == 0x000020, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, Temp_int_Array_Index_Variable) == 0x000024, "Member 'StretchableModule_C_CreateLibraryMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'StretchableModule_C_CreateLibraryMeshes::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Greater_IntInt_ReturnValue) == 0x00002D, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Array_Get_Item) == 0x000040, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000070, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000078, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000079, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000084, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000088, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_MakeRandomStream_ReturnValue) == 0x00008C, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_4) == 0x000094, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000098, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_MakeRandomStream_ReturnValue_1) == 0x00009C, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, Temp_int_Variable_3) == 0x0000A4, "Member 'StretchableModule_C_CreateLibraryMeshes::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x0000A8, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000AC, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000B0, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Array_Length_ReturnValue_3) == 0x0000B4, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000D9, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000DA, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateLibraryMeshes, CallFunc_Array_Add_ReturnValue_1) == 0x0000DC, "Member 'StretchableModule_C_CreateLibraryMeshes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.ShuffleSpecialMeshesSeed
// 0x0068 (0x0068 - 0x0000)
struct StretchableModule_C_ShuffleSpecialMeshesSeed final
{
public:
	TArray<class UStaticMesh*>                    _Staticmeshes;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UStaticMesh*>                    SuffledSM;                                         // 0x0010(0x0010)(Parm, OutParm)
	TArray<class UStaticMesh*>                    _ShuffledStaticmeshes;                             // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x004C(0x0008)(ZeroConstructor, NoDestructor)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x0054(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_ShuffleSpecialMeshesSeed) == 0x000008, "Wrong alignment on StretchableModule_C_ShuffleSpecialMeshesSeed");
static_assert(sizeof(StretchableModule_C_ShuffleSpecialMeshesSeed) == 0x000068, "Wrong size on StretchableModule_C_ShuffleSpecialMeshesSeed");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, _Staticmeshes) == 0x000000, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::_Staticmeshes' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, SuffledSM) == 0x000010, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::SuffledSM' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, _ShuffledStaticmeshes) == 0x000020, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::_ShuffledStaticmeshes' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, Temp_int_Variable) == 0x000030, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000044, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_MakeRandomStream_ReturnValue) == 0x00004C, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_MakeRandomStream_ReturnValue_1) == 0x000054, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x00005C, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleSpecialMeshesSeed, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x000060, "Member 'StretchableModule_C_ShuffleSpecialMeshesSeed::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.AssignPerLibMeshMaterialOverride
// 0x0080 (0x0080 - 0x0000)
struct StretchableModule_C_AssignPerLibMeshMaterialOverride final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStretchableModulesPartsRandomization  CallFunc_Array_Get_Item;                           // 0x0028(0x0020)(HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_AssignPerLibMeshMaterialOverride) == 0x000008, "Wrong alignment on StretchableModule_C_AssignPerLibMeshMaterialOverride");
static_assert(sizeof(StretchableModule_C_AssignPerLibMeshMaterialOverride) == 0x000080, "Wrong size on StretchableModule_C_AssignPerLibMeshMaterialOverride");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, Temp_int_Array_Index_Variable) == 0x000000, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Get_Item) == 0x000028, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_GetNumMaterials_ReturnValue) == 0x000050, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000065, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00006D, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Length_ReturnValue_2) == 0x000074, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AssignPerLibMeshMaterialOverride, CallFunc_Less_IntInt_ReturnValue_2) == 0x000079, "Member 'StretchableModule_C_AssignPerLibMeshMaterialOverride::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.ShuffleWithSeed
// 0x0048 (0x0048 - 0x0000)
struct StretchableModule_C_ShuffleWithSeed final
{
public:
	TArray<class UStaticMesh*>                    _ShuffledComponents;                               // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x001C(0x0008)(ZeroConstructor, NoDestructor)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x0024(0x0008)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_ShuffleWithSeed) == 0x000008, "Wrong alignment on StretchableModule_C_ShuffleWithSeed");
static_assert(sizeof(StretchableModule_C_ShuffleWithSeed) == 0x000048, "Wrong size on StretchableModule_C_ShuffleWithSeed");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, _ShuffledComponents) == 0x000000, "Member 'StretchableModule_C_ShuffleWithSeed::_ShuffledComponents' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, Temp_int_Variable) == 0x000010, "Member 'StretchableModule_C_ShuffleWithSeed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_MakeRandomStream_ReturnValue) == 0x00001C, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_MakeRandomStream_ReturnValue_1) == 0x000024, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000038, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x00003C, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ShuffleWithSeed, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x000040, "Member 'StretchableModule_C_ShuffleWithSeed::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.GetStandardStaticmeshLibrary
// 0x00B8 (0x00B8 - 0x0000)
struct StretchableModule_C_GetStandardStaticmeshLibrary final
{
public:
	TArray<class UStaticMesh*>                    _PossibleMeshLibrary;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UStaticMesh*>                    PossibleMeshLibrary;                               // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentLibrabryCount;                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0040(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStretchableModulesPartsRandomization  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStretchableModulesPartsRandomization  CallFunc_Array_Get_Item_1;                         // 0x0090(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_GetStandardStaticmeshLibrary) == 0x000008, "Wrong alignment on StretchableModule_C_GetStandardStaticmeshLibrary");
static_assert(sizeof(StretchableModule_C_GetStandardStaticmeshLibrary) == 0x0000B8, "Wrong size on StretchableModule_C_GetStandardStaticmeshLibrary");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, _PossibleMeshLibrary) == 0x000000, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::_PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, PossibleMeshLibrary) == 0x000010, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CurrentLibrabryCount) == 0x000020, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CurrentLibrabryCount' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, Temp_int_Variable) == 0x000030, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000040, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Array_Get_Item) == 0x000050, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000084, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000085, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Array_AddUnique_ReturnValue) == 0x000088, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000B1, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetStandardStaticmeshLibrary, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000B4, "Member 'StretchableModule_C_GetStandardStaticmeshLibrary::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.GetSpecialStaticmeshLibrary
// 0x0080 (0x0080 - 0x0000)
struct StretchableModule_C_GetSpecialStaticmeshLibrary final
{
public:
	TArray<class UStaticMesh*>                    _PossibleMeshLibrary;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UStaticMesh*>                    PossibleMeshLibrary;                               // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentLibrabryCount;                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStretchableModulesPartsRandomization  CallFunc_Array_Get_Item;                           // 0x0040(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_GetSpecialStaticmeshLibrary) == 0x000008, "Wrong alignment on StretchableModule_C_GetSpecialStaticmeshLibrary");
static_assert(sizeof(StretchableModule_C_GetSpecialStaticmeshLibrary) == 0x000080, "Wrong size on StretchableModule_C_GetSpecialStaticmeshLibrary");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, _PossibleMeshLibrary) == 0x000000, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::_PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, PossibleMeshLibrary) == 0x000010, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CurrentLibrabryCount) == 0x000020, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CurrentLibrabryCount' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, Temp_int_Array_Index_Variable) == 0x000024, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, Temp_int_Variable) == 0x000030, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Array_Get_Item) == 0x000040, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Less_IntInt_ReturnValue_1) == 0x000065, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Greater_IntInt_ReturnValue) == 0x000066, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Array_AddUnique_ReturnValue) == 0x000068, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_Less_IntInt_ReturnValue_2) == 0x00007C, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetSpecialStaticmeshLibrary, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00007D, "Member 'StretchableModule_C_GetSpecialStaticmeshLibrary::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.ReassignStaticMeshFromLibrary
// 0x0080 (0x0080 - 0x0000)
struct StretchableModule_C_ReassignStaticMeshFromLibrary final
{
public:
	bool                                          StaticmeshSet;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor)
	TArray<class UStaticMesh*>                    CallFunc_GetStandardStaticmeshLibrary__PossibleMeshLibrary; // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x003C(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_ReassignStaticMeshFromLibrary) == 0x000008, "Wrong alignment on StretchableModule_C_ReassignStaticMeshFromLibrary");
static_assert(sizeof(StretchableModule_C_ReassignStaticMeshFromLibrary) == 0x000080, "Wrong size on StretchableModule_C_ReassignStaticMeshFromLibrary");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, StaticmeshSet) == 0x000000, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::StaticmeshSet' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, Temp_int_Array_Index_Variable) == 0x000004, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_MakeRandomStream_ReturnValue) == 0x000020, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_GetStandardStaticmeshLibrary__PossibleMeshLibrary) == 0x000028, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_GetStandardStaticmeshLibrary__PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_MakeRandomStream_ReturnValue_1) == 0x00003C, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000044, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000048, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x00004C, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Get_Item) == 0x000050, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000064, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_SetStaticMesh_ReturnValue) == 0x000070, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000071, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Length_ReturnValue_3) == 0x000074, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_ReassignStaticMeshFromLibrary, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'StretchableModule_C_ReassignStaticMeshFromLibrary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.GetScale
// 0x009C (0x009C - 0x0000)
struct StretchableModule_C_GetScale final
{
public:
	ELockAxis                                     Axis;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentModuleScale;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingTiling;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELockAxis                                     Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockAxis                                     Temp_byte_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0050(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_GetScale) == 0x000004, "Wrong alignment on StretchableModule_C_GetScale");
static_assert(sizeof(StretchableModule_C_GetScale) == 0x00009C, "Wrong size on StretchableModule_C_GetScale");
static_assert(offsetof(StretchableModule_C_GetScale, Axis) == 0x000000, "Member 'StretchableModule_C_GetScale::Axis' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CurrentModuleScale) == 0x000004, "Member 'StretchableModule_C_GetScale::CurrentModuleScale' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, UsingTiling) == 0x000008, "Member 'StretchableModule_C_GetScale::UsingTiling' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Scale) == 0x00000C, "Member 'StretchableModule_C_GetScale::Scale' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_bool_Variable) == 0x000010, "Member 'StretchableModule_C_GetScale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'StretchableModule_C_GetScale::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'StretchableModule_C_GetScale::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_byte_Variable) == 0x000019, "Member 'StretchableModule_C_GetScale::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_float_Variable) == 0x00001C, "Member 'StretchableModule_C_GetScale::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_float_Variable_1) == 0x000020, "Member 'StretchableModule_C_GetScale::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_float_Variable_2) == 0x000024, "Member 'StretchableModule_C_GetScale::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_float_Variable_3) == 0x000028, "Member 'StretchableModule_C_GetScale::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_byte_Variable_1) == 0x00002C, "Member 'StretchableModule_C_GetScale::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_float_Variable_4) == 0x000030, "Member 'StretchableModule_C_GetScale::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_float_Variable_5) == 0x000034, "Member 'StretchableModule_C_GetScale::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_float_Variable_6) == 0x000038, "Member 'StretchableModule_C_GetScale::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, Temp_float_Variable_7) == 0x00003C, "Member 'StretchableModule_C_GetScale::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_BreakVector_X) == 0x000040, "Member 'StretchableModule_C_GetScale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_BreakVector_Y) == 0x000044, "Member 'StretchableModule_C_GetScale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_BreakVector_Z) == 0x000048, "Member 'StretchableModule_C_GetScale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, K2Node_Select_Default) == 0x00004C, "Member 'StretchableModule_C_GetScale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_GetBounds_ReturnValue) == 0x000050, "Member 'StretchableModule_C_GetScale::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_SignOfFloat_ReturnValue) == 0x00006C, "Member 'StretchableModule_C_GetScale::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'StretchableModule_C_GetScale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_BreakVector_X_1) == 0x000074, "Member 'StretchableModule_C_GetScale::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'StretchableModule_C_GetScale::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_BreakVector_Z_1) == 0x00007C, "Member 'StretchableModule_C_GetScale::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, K2Node_Select_Default_1) == 0x000080, "Member 'StretchableModule_C_GetScale::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000084, "Member 'StretchableModule_C_GetScale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000088, "Member 'StretchableModule_C_GetScale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'StretchableModule_C_GetScale::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000090, "Member 'StretchableModule_C_GetScale::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000094, "Member 'StretchableModule_C_GetScale::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetScale, K2Node_Select_Default_2) == 0x000098, "Member 'StretchableModule_C_GetScale::K2Node_Select_Default_2' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.GetOffset
// 0x0104 (0x0104 - 0x0000)
struct StretchableModule_C_GetOffset final
{
public:
	ELockAxis                                     Axis;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentModuleScale;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxDistance;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumLoop;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTiling;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Offset;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELockAxis                                     Temp_byte_Variable;                                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockAxis                                     Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockAxis                                     Temp_byte_Variable_2;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_8;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockAxis                                     Temp_byte_Variable_3;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x00BC(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_GetOffset) == 0x000004, "Wrong alignment on StretchableModule_C_GetOffset");
static_assert(sizeof(StretchableModule_C_GetOffset) == 0x000104, "Wrong size on StretchableModule_C_GetOffset");
static_assert(offsetof(StretchableModule_C_GetOffset, Axis) == 0x000000, "Member 'StretchableModule_C_GetOffset::Axis' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CurrentModuleScale) == 0x000004, "Member 'StretchableModule_C_GetOffset::CurrentModuleScale' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, MaxDistance) == 0x000008, "Member 'StretchableModule_C_GetOffset::MaxDistance' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, NumLoop) == 0x00000C, "Member 'StretchableModule_C_GetOffset::NumLoop' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, IsTiling) == 0x000010, "Member 'StretchableModule_C_GetOffset::IsTiling' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Offset) == 0x000014, "Member 'StretchableModule_C_GetOffset::Offset' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_int_Variable) == 0x000018, "Member 'StretchableModule_C_GetOffset::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'StretchableModule_C_GetOffset::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000020, "Member 'StretchableModule_C_GetOffset::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Abs_ReturnValue) == 0x000024, "Member 'StretchableModule_C_GetOffset::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000028, "Member 'StretchableModule_C_GetOffset::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'StretchableModule_C_GetOffset::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, K2Node_SwitchEnum_CmpSuccess_1) == 0x00002D, "Member 'StretchableModule_C_GetOffset::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_int_Variable_1) == 0x000030, "Member 'StretchableModule_C_GetOffset::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_int_Variable_2) == 0x000034, "Member 'StretchableModule_C_GetOffset::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_int_Variable_3) == 0x000038, "Member 'StretchableModule_C_GetOffset::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_bool_Variable) == 0x00003C, "Member 'StretchableModule_C_GetOffset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_byte_Variable) == 0x00003D, "Member 'StretchableModule_C_GetOffset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable) == 0x000040, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_1) == 0x000044, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_2) == 0x000048, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_3) == 0x00004C, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_byte_Variable_1) == 0x000050, "Member 'StretchableModule_C_GetOffset::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_4) == 0x000054, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_5) == 0x000058, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_6) == 0x00005C, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_7) == 0x000060, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_byte_Variable_2) == 0x000064, "Member 'StretchableModule_C_GetOffset::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_8) == 0x000068, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_9) == 0x00006C, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_10) == 0x000070, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_float_Variable_11) == 0x000074, "Member 'StretchableModule_C_GetOffset::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, Temp_byte_Variable_3) == 0x000078, "Member 'StretchableModule_C_GetOffset::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, K2Node_Select_Default) == 0x00007C, "Member 'StretchableModule_C_GetOffset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_BreakVector_X) == 0x000080, "Member 'StretchableModule_C_GetOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_BreakVector_Y) == 0x000084, "Member 'StretchableModule_C_GetOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_BreakVector_Z) == 0x000088, "Member 'StretchableModule_C_GetOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00008C, "Member 'StretchableModule_C_GetOffset::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, K2Node_Select_Default_1) == 0x000090, "Member 'StretchableModule_C_GetOffset::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Abs_ReturnValue_1) == 0x000094, "Member 'StretchableModule_C_GetOffset::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_BreakVector_X_1) == 0x000098, "Member 'StretchableModule_C_GetOffset::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_BreakVector_Y_1) == 0x00009C, "Member 'StretchableModule_C_GetOffset::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'StretchableModule_C_GetOffset::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A4, "Member 'StretchableModule_C_GetOffset::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, K2Node_Select_Default_2) == 0x0000A8, "Member 'StretchableModule_C_GetOffset::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'StretchableModule_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'StretchableModule_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, K2Node_Select_Default_3) == 0x0000B4, "Member 'StretchableModule_C_GetOffset::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_SignOfFloat_ReturnValue) == 0x0000B8, "Member 'StretchableModule_C_GetOffset::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_GetBoundingBox_ReturnValue) == 0x0000BC, "Member 'StretchableModule_C_GetOffset::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_BreakVector_X_2) == 0x0000D8, "Member 'StretchableModule_C_GetOffset::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_BreakVector_Y_2) == 0x0000DC, "Member 'StretchableModule_C_GetOffset::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_BreakVector_Z_2) == 0x0000E0, "Member 'StretchableModule_C_GetOffset::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, K2Node_Select_Default_4) == 0x0000E4, "Member 'StretchableModule_C_GetOffset::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Abs_ReturnValue_2) == 0x0000E8, "Member 'StretchableModule_C_GetOffset::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000EC, "Member 'StretchableModule_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F0, "Member 'StretchableModule_C_GetOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000F4, "Member 'StretchableModule_C_GetOffset::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000F8, "Member 'StretchableModule_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000FC, "Member 'StretchableModule_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetOffset, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000100, "Member 'StretchableModule_C_GetOffset::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.SetIsTiling
// 0x0006 (0x0006 - 0x0000)
struct StretchableModule_C_SetIsTiling final
{
public:
	bool                                          IsTiling;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_SetIsTiling) == 0x000001, "Wrong alignment on StretchableModule_C_SetIsTiling");
static_assert(sizeof(StretchableModule_C_SetIsTiling) == 0x000006, "Wrong size on StretchableModule_C_SetIsTiling");
static_assert(offsetof(StretchableModule_C_SetIsTiling, IsTiling) == 0x000000, "Member 'StretchableModule_C_SetIsTiling::IsTiling' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_SetIsTiling, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'StretchableModule_C_SetIsTiling::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_SetIsTiling, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000002, "Member 'StretchableModule_C_SetIsTiling::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_SetIsTiling, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000003, "Member 'StretchableModule_C_SetIsTiling::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_SetIsTiling, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'StretchableModule_C_SetIsTiling::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_SetIsTiling, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'StretchableModule_C_SetIsTiling::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.GetFinalTranslation
// 0x0010 (0x0010 - 0x0000)
struct StretchableModule_C_GetFinalTranslation final
{
public:
	bool                                          Tiling;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         X;                                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z;                                                 // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_GetFinalTranslation) == 0x000004, "Wrong alignment on StretchableModule_C_GetFinalTranslation");
static_assert(sizeof(StretchableModule_C_GetFinalTranslation) == 0x000010, "Wrong size on StretchableModule_C_GetFinalTranslation");
static_assert(offsetof(StretchableModule_C_GetFinalTranslation, Tiling) == 0x000000, "Member 'StretchableModule_C_GetFinalTranslation::Tiling' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetFinalTranslation, X) == 0x000004, "Member 'StretchableModule_C_GetFinalTranslation::X' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetFinalTranslation, Y) == 0x000008, "Member 'StretchableModule_C_GetFinalTranslation::Y' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_GetFinalTranslation, Z) == 0x00000C, "Member 'StretchableModule_C_GetFinalTranslation::Z' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.FixTilingForAxisUsage
// 0x0001 (0x0001 - 0x0000)
struct StretchableModule_C_FixTilingForAxisUsage final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_FixTilingForAxisUsage) == 0x000001, "Wrong alignment on StretchableModule_C_FixTilingForAxisUsage");
static_assert(sizeof(StretchableModule_C_FixTilingForAxisUsage) == 0x000001, "Wrong size on StretchableModule_C_FixTilingForAxisUsage");
static_assert(offsetof(StretchableModule_C_FixTilingForAxisUsage, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'StretchableModule_C_FixTilingForAxisUsage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.CheckForPreviousLockAxis
// 0x0002 (0x0002 - 0x0000)
struct StretchableModule_C_CheckForPreviousLockAxis final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_CheckForPreviousLockAxis) == 0x000001, "Wrong alignment on StretchableModule_C_CheckForPreviousLockAxis");
static_assert(sizeof(StretchableModule_C_CheckForPreviousLockAxis) == 0x000002, "Wrong size on StretchableModule_C_CheckForPreviousLockAxis");
static_assert(offsetof(StretchableModule_C_CheckForPreviousLockAxis, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'StretchableModule_C_CheckForPreviousLockAxis::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CheckForPreviousLockAxis, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'StretchableModule_C_CheckForPreviousLockAxis::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.AddStaticMeshAtLocation
// 0x00C0 (0x00C0 - 0x0000)
struct StretchableModule_C_AddStaticMeshAtLocation final
{
public:
	float                                         Relative_Transform_Scale_X;                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Scale_Z;                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Scale_Y;                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Location_X;                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Location_Y;                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Location_Z;                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   NewSMComponent;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_SetStaticLightingMapping_ReturnValue;  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0xE];                                       // 0x0052(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceConstant*              CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StretchableModule_C_AddStaticMeshAtLocation) == 0x000010, "Wrong alignment on StretchableModule_C_AddStaticMeshAtLocation");
static_assert(sizeof(StretchableModule_C_AddStaticMeshAtLocation) == 0x0000C0, "Wrong size on StretchableModule_C_AddStaticMeshAtLocation");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, Relative_Transform_Scale_X) == 0x000000, "Member 'StretchableModule_C_AddStaticMeshAtLocation::Relative_Transform_Scale_X' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, Relative_Transform_Scale_Z) == 0x000004, "Member 'StretchableModule_C_AddStaticMeshAtLocation::Relative_Transform_Scale_Z' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, Relative_Transform_Scale_Y) == 0x000008, "Member 'StretchableModule_C_AddStaticMeshAtLocation::Relative_Transform_Scale_Y' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, Relative_Transform_Location_X) == 0x00000C, "Member 'StretchableModule_C_AddStaticMeshAtLocation::Relative_Transform_Location_X' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, Relative_Transform_Location_Y) == 0x000010, "Member 'StretchableModule_C_AddStaticMeshAtLocation::Relative_Transform_Location_Y' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, Relative_Transform_Location_Z) == 0x000014, "Member 'StretchableModule_C_AddStaticMeshAtLocation::Relative_Transform_Location_Z' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, NewSMComponent) == 0x000018, "Member 'StretchableModule_C_AddStaticMeshAtLocation::NewSMComponent' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_MakeVector_ReturnValue_1) == 0x00002C, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, Temp_int_Variable) == 0x000038, "Member 'StretchableModule_C_AddStaticMeshAtLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_GetNumMaterials_ReturnValue) == 0x000040, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_BP_SetStaticLightingMapping_ReturnValue) == 0x000050, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_BP_SetStaticLightingMapping_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_Greater_IntInt_ReturnValue) == 0x000051, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_AddComponent_ReturnValue) == 0x000090, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_SetStaticMesh_ReturnValue) == 0x0000A8, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B0, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_AddStaticMeshAtLocation, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B4, "Member 'StretchableModule_C_AddStaticMeshAtLocation::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.CreateComponents
// 0x0338 (0x0338 - 0x0000)
struct StretchableModule_C_CreateComponents final
{
public:
	float                                         CurrentModuleZOffset;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleYOffset;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleXOffset;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingTiling;                                       // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumYLoop;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentMaxYDistance;                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YScaleFactor;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastYComponentScaleRatio;                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumYComponent;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleYscale;                               // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentYScale;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentMaxZDistance;                               // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentMaxXDistance;                               // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleZscale;                               // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZScaleFactor;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumZLoop;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumXLoop;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XScaleFactor;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastZComponentScaleRatio;                          // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumZComponent;                                     // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastXComponentScaleRatio;                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumXComponent;                                     // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleXscale;                               // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScale_Scale;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScale_Scale_1;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScale_Scale_2;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOffset_Offset;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOffset_Offset_1;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetIsTiling_isTiling;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetOffset_Offset_2;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_2;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_3;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_4;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_5;                // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_6;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_7;                // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_8;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_10;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_9;                // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_11;                         // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_12;                         // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_12;                         // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_12;                         // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DE[0x2];                                      // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_13;                         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_13;                         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_13;                         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_14;                         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_14;                         // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_14;                         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_11;         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_15;                         // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_15;                         // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_15;                         // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_10;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_12;         // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A[0x2];                                      // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_16;                         // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_16;                         // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_16;                         // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_11;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_13;         // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_8;            // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_14;         // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_9;            // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_15;         // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_17;                         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_17;                         // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_17;                         // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_10;           // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_16;         // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_18;                         // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_18;                         // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_18;                         // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_4;                        // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue_1;             // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_11;           // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_17;         // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_5;                        // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue_2;             // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_2;        // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0326(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0327(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue_2;                      // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_8;            // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_CreateComponents) == 0x000004, "Wrong alignment on StretchableModule_C_CreateComponents");
static_assert(sizeof(StretchableModule_C_CreateComponents) == 0x000338, "Wrong size on StretchableModule_C_CreateComponents");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentModuleZOffset) == 0x000000, "Member 'StretchableModule_C_CreateComponents::CurrentModuleZOffset' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentModuleYOffset) == 0x000004, "Member 'StretchableModule_C_CreateComponents::CurrentModuleYOffset' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentModuleXOffset) == 0x000008, "Member 'StretchableModule_C_CreateComponents::CurrentModuleXOffset' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, UsingTiling) == 0x00000C, "Member 'StretchableModule_C_CreateComponents::UsingTiling' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, NumYLoop) == 0x000010, "Member 'StretchableModule_C_CreateComponents::NumYLoop' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentMaxYDistance) == 0x000014, "Member 'StretchableModule_C_CreateComponents::CurrentMaxYDistance' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, YScaleFactor) == 0x000018, "Member 'StretchableModule_C_CreateComponents::YScaleFactor' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, LastYComponentScaleRatio) == 0x00001C, "Member 'StretchableModule_C_CreateComponents::LastYComponentScaleRatio' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, NumYComponent) == 0x000020, "Member 'StretchableModule_C_CreateComponents::NumYComponent' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentModuleYscale) == 0x000024, "Member 'StretchableModule_C_CreateComponents::CurrentModuleYscale' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentYScale) == 0x000028, "Member 'StretchableModule_C_CreateComponents::CurrentYScale' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentMaxZDistance) == 0x00002C, "Member 'StretchableModule_C_CreateComponents::CurrentMaxZDistance' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentMaxXDistance) == 0x000030, "Member 'StretchableModule_C_CreateComponents::CurrentMaxXDistance' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentModuleZscale) == 0x000034, "Member 'StretchableModule_C_CreateComponents::CurrentModuleZscale' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, ZScaleFactor) == 0x000038, "Member 'StretchableModule_C_CreateComponents::ZScaleFactor' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, NumZLoop) == 0x00003C, "Member 'StretchableModule_C_CreateComponents::NumZLoop' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, NumXLoop) == 0x000040, "Member 'StretchableModule_C_CreateComponents::NumXLoop' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, XScaleFactor) == 0x000044, "Member 'StretchableModule_C_CreateComponents::XScaleFactor' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, LastZComponentScaleRatio) == 0x000048, "Member 'StretchableModule_C_CreateComponents::LastZComponentScaleRatio' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, NumZComponent) == 0x00004C, "Member 'StretchableModule_C_CreateComponents::NumZComponent' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, LastXComponentScaleRatio) == 0x000050, "Member 'StretchableModule_C_CreateComponents::LastXComponentScaleRatio' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, NumXComponent) == 0x000054, "Member 'StretchableModule_C_CreateComponents::NumXComponent' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CurrentModuleXscale) == 0x000058, "Member 'StretchableModule_C_CreateComponents::CurrentModuleXscale' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, Temp_int_Variable) == 0x00005C, "Member 'StretchableModule_C_CreateComponents::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'StretchableModule_C_CreateComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, Temp_int_Variable_1) == 0x000064, "Member 'StretchableModule_C_CreateComponents::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'StretchableModule_C_CreateComponents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, Temp_int_Variable_2) == 0x00006C, "Member 'StretchableModule_C_CreateComponents::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'StretchableModule_C_CreateComponents::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_GetScale_Scale) == 0x000074, "Member 'StretchableModule_C_CreateComponents::CallFunc_GetScale_Scale' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_GetScale_Scale_1) == 0x000078, "Member 'StretchableModule_C_CreateComponents::CallFunc_GetScale_Scale_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, Temp_int_Variable_3) == 0x00007C, "Member 'StretchableModule_C_CreateComponents::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_GetScale_Scale_2) == 0x000080, "Member 'StretchableModule_C_CreateComponents::CallFunc_GetScale_Scale_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Add_IntInt_ReturnValue_3) == 0x000084, "Member 'StretchableModule_C_CreateComponents::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_GetOffset_Offset) == 0x000088, "Member 'StretchableModule_C_CreateComponents::CallFunc_GetOffset_Offset' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_GetOffset_Offset_1) == 0x00008C, "Member 'StretchableModule_C_CreateComponents::CallFunc_GetOffset_Offset_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SetIsTiling_isTiling) == 0x000090, "Member 'StretchableModule_C_CreateComponents::CallFunc_SetIsTiling_isTiling' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_GetOffset_Offset_2) == 0x000094, "Member 'StretchableModule_C_CreateComponents::CallFunc_GetOffset_Offset_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X) == 0x000098, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y) == 0x00009C, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z) == 0x0000A0, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_1) == 0x0000A4, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_1) == 0x0000AC, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue) == 0x0000B0, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_1) == 0x0000B4, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_2) == 0x0000B8, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_2) == 0x0000BC, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_2) == 0x0000C0, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_3) == 0x0000C4, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_3) == 0x0000C8, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_3) == 0x0000CC, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_2) == 0x0000D0, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_3) == 0x0000D4, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_4) == 0x0000D8, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_4) == 0x0000DC, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_4) == 0x0000E0, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_5) == 0x0000E4, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_5) == 0x0000E8, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_5) == 0x0000EC, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_4) == 0x0000F0, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_5) == 0x0000F4, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_6) == 0x0000F8, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_6) == 0x0000FC, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_6) == 0x000100, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_7) == 0x000104, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_7) == 0x000108, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_7) == 0x00010C, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_6) == 0x000110, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_7) == 0x000114, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_8) == 0x000118, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_8) == 0x00011C, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_8) == 0x000120, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_9) == 0x000124, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_9) == 0x000128, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_9) == 0x00012C, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_8) == 0x000130, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, K2Node_SwitchEnum_CmpSuccess) == 0x000134, "Member 'StretchableModule_C_CreateComponents::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000138, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00013C, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, K2Node_SwitchEnum_CmpSuccess_1) == 0x000140, "Member 'StretchableModule_C_CreateComponents::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000144, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000148, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00014C, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000150, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000154, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000158, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x00015C, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_10) == 0x000160, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_10) == 0x000164, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_10) == 0x000168, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_9) == 0x00016C, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000170, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000174, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue) == 0x000178, "Member 'StretchableModule_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00017C, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00017D, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000180, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000184, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000188, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x00018C, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000190, "Member 'StretchableModule_C_CreateComponents::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000191, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000194, "Member 'StretchableModule_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000198, "Member 'StretchableModule_C_CreateComponents::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_11) == 0x00019C, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_11) == 0x0001A0, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_11) == 0x0001A4, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0001A8, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x0001AC, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x0001B0, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x0001B4, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Abs_ReturnValue) == 0x0001B8, "Member 'StretchableModule_C_CreateComponents::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_GridSnap_Float_ReturnValue) == 0x0001BC, "Member 'StretchableModule_C_CreateComponents::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0001C0, "Member 'StretchableModule_C_CreateComponents::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_12) == 0x0001C4, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_12) == 0x0001C8, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_12) == 0x0001CC, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0001D0, "Member 'StretchableModule_C_CreateComponents::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Abs_ReturnValue_1) == 0x0001D4, "Member 'StretchableModule_C_CreateComponents::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001D8, "Member 'StretchableModule_C_CreateComponents::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001DC, "Member 'StretchableModule_C_CreateComponents::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BooleanAND_ReturnValue) == 0x0001DD, "Member 'StretchableModule_C_CreateComponents::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_FCeil_ReturnValue) == 0x0001E0, "Member 'StretchableModule_C_CreateComponents::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Greater_IntInt_ReturnValue) == 0x0001E4, "Member 'StretchableModule_C_CreateComponents::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x0001E8, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x0001EC, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0001F0, "Member 'StretchableModule_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_FTrunc_ReturnValue) == 0x0001F4, "Member 'StretchableModule_C_CreateComponents::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0001F8, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0001F9, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_13) == 0x0001FC, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_13) == 0x000200, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_13) == 0x000204, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Abs_ReturnValue_2) == 0x000208, "Member 'StretchableModule_C_CreateComponents::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x00020C, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x000210, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_FTrunc_ReturnValue_1) == 0x000214, "Member 'StretchableModule_C_CreateComponents::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_14) == 0x000218, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_14' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_14) == 0x00021C, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_14' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_14) == 0x000220, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_14' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Abs_ReturnValue_3) == 0x000224, "Member 'StretchableModule_C_CreateComponents::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x000228, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00022C, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_11) == 0x000230, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_FTrunc_ReturnValue_2) == 0x000234, "Member 'StretchableModule_C_CreateComponents::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_15) == 0x000238, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_15' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_15) == 0x00023C, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_15' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_15) == 0x000240, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_15' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_10) == 0x000244, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000248, "Member 'StretchableModule_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_12) == 0x00024C, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000250, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000254, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000258, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000259, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_16) == 0x00025C, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_16' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_16) == 0x000260, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_16' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_16) == 0x000264, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_16' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_11) == 0x000268, "Member 'StretchableModule_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x00026C, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_13) == 0x000270, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000274, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000278, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x00027C, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000280, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000284, "Member 'StretchableModule_C_CreateComponents::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000288, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x00028C, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000290, "Member 'StretchableModule_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000294, "Member 'StretchableModule_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000298, "Member 'StretchableModule_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00029C, "Member 'StretchableModule_C_CreateComponents::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_8) == 0x0002A0, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_14) == 0x0002A4, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x0002A8, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x0002AC, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_9) == 0x0002B0, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_15) == 0x0002B4, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x0002B8, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x0002BC, "Member 'StretchableModule_C_CreateComponents::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x0002C0, "Member 'StretchableModule_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x0002C4, "Member 'StretchableModule_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_17) == 0x0002C8, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_17' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_17) == 0x0002CC, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_17' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_17) == 0x0002D0, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_17' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0002D4, "Member 'StretchableModule_C_CreateComponents::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_10) == 0x0002D8, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_16) == 0x0002DC, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_X_18) == 0x0002E0, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_X_18' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Y_18) == 0x0002E4, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Y_18' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BreakVector_Z_18) == 0x0002E8, "Member 'StretchableModule_C_CreateComponents::CallFunc_BreakVector_Z_18' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Abs_ReturnValue_4) == 0x0002EC, "Member 'StretchableModule_C_CreateComponents::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_GridSnap_Float_ReturnValue_1) == 0x0002F0, "Member 'StretchableModule_C_CreateComponents::CallFunc_GridSnap_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_11) == 0x0002F4, "Member 'StretchableModule_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x0002F8, "Member 'StretchableModule_C_CreateComponents::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_17) == 0x0002FC, "Member 'StretchableModule_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000300, "Member 'StretchableModule_C_CreateComponents::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Abs_ReturnValue_5) == 0x000304, "Member 'StretchableModule_C_CreateComponents::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000308, "Member 'StretchableModule_C_CreateComponents::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_GridSnap_Float_ReturnValue_2) == 0x00030C, "Member 'StretchableModule_C_CreateComponents::CallFunc_GridSnap_Float_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_FCeil_ReturnValue_1) == 0x000310, "Member 'StretchableModule_C_CreateComponents::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x000314, "Member 'StretchableModule_C_CreateComponents::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x000318, "Member 'StretchableModule_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_NotEqual_FloatFloat_ReturnValue_2) == 0x00031C, "Member 'StretchableModule_C_CreateComponents::CallFunc_NotEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000320, "Member 'StretchableModule_C_CreateComponents::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000324, "Member 'StretchableModule_C_CreateComponents::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BooleanAND_ReturnValue_1) == 0x000325, "Member 'StretchableModule_C_CreateComponents::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000326, "Member 'StretchableModule_C_CreateComponents::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000327, "Member 'StretchableModule_C_CreateComponents::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_BooleanAND_ReturnValue_2) == 0x000328, "Member 'StretchableModule_C_CreateComponents::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_FCeil_ReturnValue_2) == 0x00032C, "Member 'StretchableModule_C_CreateComponents::CallFunc_FCeil_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000330, "Member 'StretchableModule_C_CreateComponents::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_8) == 0x000334, "Member 'StretchableModule_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_8' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.LimitGizmo
// 0x0154 (0x0154 - 0x0000)
struct StretchableModule_C_LimitGizmo final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_10;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_11;                         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_10;                // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_11;                // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_12;                         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_12;                         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_12;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_12;                // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_13;                         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_13;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_13;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_13;                // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_LimitGizmo) == 0x000004, "Wrong alignment on StretchableModule_C_LimitGizmo");
static_assert(sizeof(StretchableModule_C_LimitGizmo) == 0x000154, "Wrong size on StretchableModule_C_LimitGizmo");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X) == 0x000000, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y) == 0x000004, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z) == 0x000008, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_1) == 0x00000C, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_1) == 0x000010, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_1) == 0x000014, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_1) == 0x000024, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_2) == 0x000030, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_2) == 0x000034, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_2) == 0x000038, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_3) == 0x00003C, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_3) == 0x000040, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_3) == 0x000044, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_2) == 0x000048, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_3) == 0x000054, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_4) == 0x000060, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_4) == 0x000064, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_4) == 0x000068, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_5) == 0x00006C, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_5) == 0x000070, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_5) == 0x000074, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_4) == 0x000078, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_5) == 0x000084, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_6) == 0x000090, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_6) == 0x000094, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_6) == 0x000098, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_7) == 0x00009C, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_7) == 0x0000A0, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_7) == 0x0000A4, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_6) == 0x0000A8, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_7) == 0x0000B4, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_8) == 0x0000C0, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_8) == 0x0000C4, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_8) == 0x0000C8, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_9) == 0x0000CC, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_9) == 0x0000D0, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_9) == 0x0000D4, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_8) == 0x0000D8, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_9) == 0x0000E4, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_10) == 0x0000F0, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_10) == 0x0000F4, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_10) == 0x0000F8, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_11) == 0x0000FC, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_11) == 0x000100, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_11) == 0x000104, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_10) == 0x000108, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_11) == 0x000114, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_12) == 0x000120, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_12) == 0x000124, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_12) == 0x000128, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, K2Node_SwitchEnum_CmpSuccess) == 0x00012C, "Member 'StretchableModule_C_LimitGizmo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_12) == 0x000130, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_X_13) == 0x00013C, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Y_13) == 0x000140, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_BreakVector_Z_13) == 0x000144, "Member 'StretchableModule_C_LimitGizmo::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(StretchableModule_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_13) == 0x000148, "Member 'StretchableModule_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_13' has a wrong offset!");

// Function StretchableModule.StretchableModule_C.ExecuteUbergraph_StretchableModule
// 0x0004 (0x0004 - 0x0000)
struct StretchableModule_C_ExecuteUbergraph_StretchableModule final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StretchableModule_C_ExecuteUbergraph_StretchableModule) == 0x000004, "Wrong alignment on StretchableModule_C_ExecuteUbergraph_StretchableModule");
static_assert(sizeof(StretchableModule_C_ExecuteUbergraph_StretchableModule) == 0x000004, "Wrong size on StretchableModule_C_ExecuteUbergraph_StretchableModule");
static_assert(offsetof(StretchableModule_C_ExecuteUbergraph_StretchableModule, EntryPoint) == 0x000000, "Member 'StretchableModule_C_ExecuteUbergraph_StretchableModule::EntryPoint' has a wrong offset!");

}

