#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsDescription

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function OptionsDescription.OptionsDescription_C.ExecuteUbergraph_OptionsDescription
// 0x0040 (0x0040 - 0x0000)
struct OptionsDescription_C_ExecuteUbergraph_OptionsDescription final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsDescription_C_ExecuteUbergraph_OptionsDescription) == 0x000004, "Wrong alignment on OptionsDescription_C_ExecuteUbergraph_OptionsDescription");
static_assert(sizeof(OptionsDescription_C_ExecuteUbergraph_OptionsDescription) == 0x000040, "Wrong size on OptionsDescription_C_ExecuteUbergraph_OptionsDescription");
static_assert(offsetof(OptionsDescription_C_ExecuteUbergraph_OptionsDescription, EntryPoint) == 0x000000, "Member 'OptionsDescription_C_ExecuteUbergraph_OptionsDescription::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_ExecuteUbergraph_OptionsDescription, K2Node_Event_MyGeometry) == 0x000004, "Member 'OptionsDescription_C_ExecuteUbergraph_OptionsDescription::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_ExecuteUbergraph_OptionsDescription, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'OptionsDescription_C_ExecuteUbergraph_OptionsDescription::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function OptionsDescription.OptionsDescription_C.Tick
// 0x003C (0x003C - 0x0000)
struct OptionsDescription_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsDescription_C_Tick) == 0x000004, "Wrong alignment on OptionsDescription_C_Tick");
static_assert(sizeof(OptionsDescription_C_Tick) == 0x00003C, "Wrong size on OptionsDescription_C_Tick");
static_assert(offsetof(OptionsDescription_C_Tick, MyGeometry) == 0x000000, "Member 'OptionsDescription_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_Tick, InDeltaTime) == 0x000038, "Member 'OptionsDescription_C_Tick::InDeltaTime' has a wrong offset!");

// Function OptionsDescription.OptionsDescription_C.UpdateDescription
// 0x02A0 (0x02A0 - 0x0000)
struct OptionsDescription_C_UpdateDescription final
{
public:
	struct FOptionData                            OptionData;                                        // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsGamepadOption;                                   // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EOptionsMenuOption                            EntryType;                                         // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x00E8(0x0018)(Edit, BlueprintVisible)
	struct FSlateBrush                            Image;                                             // 0x0100(0x0088)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0190(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x01B8(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsole_ReturnValue_1;                  // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D7[0x1];                                      // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x01D8(0x0018)()
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x01F8(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0210(0x0018)(ConstParm)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatTextForDecorator_ReturnValue;       // 0x0230(0x0018)()
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URichTextBlockDecorator*                CallFunc_GetDecoratorByClass_ReturnValue;          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URichInputWidgetDecorator_C*            K2Node_DynamicCast_AsRich_Input_Widget_Decorator;  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActionIconWidget_C*                    K2Node_DynamicCast_AsAction_Icon_Widget;           // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsDescription_C_UpdateDescription) == 0x000008, "Wrong alignment on OptionsDescription_C_UpdateDescription");
static_assert(sizeof(OptionsDescription_C_UpdateDescription) == 0x0002A0, "Wrong size on OptionsDescription_C_UpdateDescription");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, OptionData) == 0x000000, "Member 'OptionsDescription_C_UpdateDescription::OptionData' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, IsGamepadOption) == 0x0000E0, "Member 'OptionsDescription_C_UpdateDescription::IsGamepadOption' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, EntryType) == 0x0000E1, "Member 'OptionsDescription_C_UpdateDescription::EntryType' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Text) == 0x0000E8, "Member 'OptionsDescription_C_UpdateDescription::Text' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Image) == 0x000100, "Member 'OptionsDescription_C_UpdateDescription::Image' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_bool_Variable) == 0x000188, "Member 'OptionsDescription_C_UpdateDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_text_Variable) == 0x000190, "Member 'OptionsDescription_C_UpdateDescription::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_bool_Variable_1) == 0x0001A8, "Member 'OptionsDescription_C_UpdateDescription::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_bool_Variable_2) == 0x0001A9, "Member 'OptionsDescription_C_UpdateDescription::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_byte_Variable) == 0x0001AA, "Member 'OptionsDescription_C_UpdateDescription::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_byte_Variable_1) == 0x0001AB, "Member 'OptionsDescription_C_UpdateDescription::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_int_Array_Index_Variable) == 0x0001AC, "Member 'OptionsDescription_C_UpdateDescription::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_IsConsole_ReturnValue) == 0x0001B0, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_Not_PreBool_ReturnValue) == 0x0001B1, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_text_Variable_1) == 0x0001B8, "Member 'OptionsDescription_C_UpdateDescription::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D0, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_IsConsole_ReturnValue_1) == 0x0001D1, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_IsConsole_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_BooleanAND_ReturnValue) == 0x0001D2, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001D3, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_BooleanAND_ReturnValue_1) == 0x0001D4, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_bool_Variable_3) == 0x0001D5, "Member 'OptionsDescription_C_UpdateDescription::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001D6, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, K2Node_Select_Default) == 0x0001D8, "Member 'OptionsDescription_C_UpdateDescription::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_IsVisible_ReturnValue) == 0x0001F0, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, K2Node_Select_Default_1) == 0x0001F8, "Member 'OptionsDescription_C_UpdateDescription::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, K2Node_Select_Default_2) == 0x000210, "Member 'OptionsDescription_C_UpdateDescription::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_IsVisible_ReturnValue_1) == 0x000228, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_FormatTextForDecorator_ReturnValue) == 0x000230, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_FormatTextForDecorator_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_IsVisible_ReturnValue_2) == 0x000248, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_BooleanOR_ReturnValue) == 0x000249, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, Temp_int_Loop_Counter_Variable) == 0x00024C, "Member 'OptionsDescription_C_UpdateDescription::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_BooleanOR_ReturnValue_1) == 0x000250, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_Add_IntInt_ReturnValue) == 0x000254, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, K2Node_Select_Default_3) == 0x000258, "Member 'OptionsDescription_C_UpdateDescription::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_GetDecoratorByClass_ReturnValue) == 0x000260, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_GetDecoratorByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_IsValid_ReturnValue) == 0x000268, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, K2Node_DynamicCast_AsRich_Input_Widget_Decorator) == 0x000270, "Member 'OptionsDescription_C_UpdateDescription::K2Node_DynamicCast_AsRich_Input_Widget_Decorator' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, K2Node_DynamicCast_bSuccess) == 0x000278, "Member 'OptionsDescription_C_UpdateDescription::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_Array_Get_Item) == 0x000280, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_Array_Length_ReturnValue) == 0x000288, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, K2Node_DynamicCast_AsAction_Icon_Widget) == 0x000290, "Member 'OptionsDescription_C_UpdateDescription::K2Node_DynamicCast_AsAction_Icon_Widget' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, K2Node_DynamicCast_bSuccess_1) == 0x000298, "Member 'OptionsDescription_C_UpdateDescription::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_Less_IntInt_ReturnValue) == 0x000299, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_TextIsEmpty_ReturnValue) == 0x00029A, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_Not_PreBool_ReturnValue_1) == 0x00029B, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateDescription, CallFunc_IsValid_ReturnValue_1) == 0x00029C, "Member 'OptionsDescription_C_UpdateDescription::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function OptionsDescription.OptionsDescription_C.UpdateRestartRequired
// 0x0120 (0x0120 - 0x0000)
struct OptionsDescription_C_UpdateRestartRequired final
{
public:
	struct FOptionData                            Data;                                              // 0x0000(0x00E0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x5];                                       // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x00E8(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0100(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsDescription_C_UpdateRestartRequired) == 0x000008, "Wrong alignment on OptionsDescription_C_UpdateRestartRequired");
static_assert(sizeof(OptionsDescription_C_UpdateRestartRequired) == 0x000120, "Wrong size on OptionsDescription_C_UpdateRestartRequired");
static_assert(offsetof(OptionsDescription_C_UpdateRestartRequired, Data) == 0x000000, "Member 'OptionsDescription_C_UpdateRestartRequired::Data' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateRestartRequired, Temp_bool_Variable) == 0x0000E0, "Member 'OptionsDescription_C_UpdateRestartRequired::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateRestartRequired, Temp_byte_Variable) == 0x0000E1, "Member 'OptionsDescription_C_UpdateRestartRequired::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateRestartRequired, Temp_byte_Variable_1) == 0x0000E2, "Member 'OptionsDescription_C_UpdateRestartRequired::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateRestartRequired, CallFunc_GetText_ReturnValue) == 0x0000E8, "Member 'OptionsDescription_C_UpdateRestartRequired::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateRestartRequired, CallFunc_GetText_ReturnValue_1) == 0x000100, "Member 'OptionsDescription_C_UpdateRestartRequired::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateRestartRequired, CallFunc_TextIsEmpty_ReturnValue) == 0x000118, "Member 'OptionsDescription_C_UpdateRestartRequired::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateRestartRequired, CallFunc_NotEqual_TextText_ReturnValue) == 0x000119, "Member 'OptionsDescription_C_UpdateRestartRequired::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsDescription_C_UpdateRestartRequired, K2Node_Select_Default) == 0x00011A, "Member 'OptionsDescription_C_UpdateRestartRequired::K2Node_Select_Default' has a wrong offset!");

}

