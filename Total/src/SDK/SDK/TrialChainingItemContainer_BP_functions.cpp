#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrialChainingItemContainer_BP

#include "Basic.hpp"

#include "TrialChainingItemContainer_BP_classes.hpp"
#include "TrialChainingItemContainer_BP_parameters.hpp"


namespace SDK
{

// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.ExecuteUbergraph_TrialChainingItemContainer_BP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATrialChainingItemContainer_BP_C::ExecuteUbergraph_TrialChainingItemContainer_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialChainingItemContainer_BP_C", "ExecuteUbergraph_TrialChainingItemContainer_BP");

	Params::TrialChainingItemContainer_BP_C_ExecuteUbergraph_TrialChainingItemContainer_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATrialChainingItemContainer_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialChainingItemContainer_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.OnSpawnedItemInfosChanged
// (Event, Protected, BlueprintEvent)

void ATrialChainingItemContainer_BP_C::OnSpawnedItemInfosChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialChainingItemContainer_BP_C", "OnSpawnedItemInfosChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.OnRep_TotalNumberOfItems
// (BlueprintCallable, BlueprintEvent)

void ATrialChainingItemContainer_BP_C::OnRep_TotalNumberOfItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialChainingItemContainer_BP_C", "OnRep_TotalNumberOfItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.UpdateVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ATrialChainingItemContainer_BP_C::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialChainingItemContainer_BP_C", "UpdateVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.GetPingEnabled
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    OutIsEnabled                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATrialChainingItemContainer_BP_C::GetPingEnabled(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, bool* OutIsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialChainingItemContainer_BP_C", "GetPingEnabled");

	Params::TrialChainingItemContainer_BP_C_GetPingEnabled Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutIsEnabled != nullptr)
		*OutIsEnabled = Parms.OutIsEnabled;

	return Parms.ReturnValue;
}


// Function TrialChainingItemContainer_BP.TrialChainingItemContainer_BP_C.GetPlayerPingWorldLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATrialChainingItemContainer_BP_C::GetPlayerPingWorldLocation(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FVector* OutLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialChainingItemContainer_BP_C", "GetPlayerPingWorldLocation");

	Params::TrialChainingItemContainer_BP_C_GetPlayerPingWorldLocation Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}

}

