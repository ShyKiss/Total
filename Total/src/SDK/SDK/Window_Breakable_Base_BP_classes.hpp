#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Window_Breakable_Base_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SimpleDestructiblePhysicalMesh_Stuc_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Window_Breakable_Base_BP.Window_Breakable_Base_BP_C
// 0x0150 (0x07F8 - 0x06A8)
class AWindow_Breakable_Base_BP_C : public ARBBreakableWindow
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ShutterCollision;                                  // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PingZone;                                          // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPingComponent*                       RBPing;                                            // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh9;                                       // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh8;                                       // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh7;                                       // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh6;                                       // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh5;                                       // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh4;                                       // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh3;                                       // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WindowShutters;                                    // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CompletelyBlockedMesh;                             // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          IgnoreActorForTraversalBox;                        // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* FrontEditorClearanceCollisionBox;                  // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBEditorClearanceCollisionBoxComponent* BackEditorClearanceCollisionBox;                   // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BackLedgeMarkerB;                                  // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BackLedgeMarkerA;                                  // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Frame;                                             // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BrokenWindow;                                      // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BaseWindow;                                        // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   FrontLedgeMarkerA;                                 // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   FrontLedgeMarkerB;                                 // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_a_7D6947A34D9DFE2C485F3C85B8C1B215;     // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_7D6947A34D9DFE2C485F3C85B8C1B215; // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D[0x3];                                      // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSimpleDestructiblePhysicalMesh_Stuc> DebrisPhysicalMeshes;                              // 0x0788(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           SpawnedPhysicalMeshes;                             // 0x0798(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          ApplyImpulse;                                      // 0x07A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x3];                                      // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BrokenGlassMatDynData;                             // 0x07AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           WindowDynData;                                     // 0x07BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLightingChannels                      LightingChannels;                                  // 0x07CC(0x0001)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_7CD[0x3];                                      // 0x07CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OnBreakImpulse;                                    // 0x07D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumBrokenPieces;                                   // 0x07D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              YSpawnMinMax;                                      // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ZSpawnMinMax;                                      // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseFrame;                                          // 0x07E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E9[0x3];                                      // 0x07E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PhysicsDuration;                                   // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBrokenReplicated;                               // 0x07F0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsBrokenJIP;                                      // 0x07F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ConstructClearanceBox();
	void Update_Window_Shutters();
	void UpdateLedgeMarkerIgnoreActors();
	void UpdateLedgeMarkers();
	void ClearSpawnedPhysicalMeshes();
	void OnBreakWindow(const struct FVector& Direction, bool ForceAtFinalPosition);
	void UpdateWindowMeshes();
	void SetupLedgeMarkers();
	void UpdateSoundConnectors();
	void UserConstructionScript();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void ReceiveBeginPlay();
	void Event_OnResetStage();
	void PostToggled(bool bToggleEnabled);
	void Event_OnBreakObject(class AActor* SourceActor);
	void Event_OnStateChanged();
	void Event_SnapToState();
	void Event_PostInitializeComponents();
	void DeleteGlassPieces();
	void Event_OnBlockableStateChanged();
	void CloseShutters(bool bPlaySound);
	void OpenShutters(bool bPlaySound);
	void Event_OnShutterStateChanged();
	void RefreshBlockedMeshState();
	void ExecuteUbergraph_Window_Breakable_Base_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Window_Breakable_Base_BP_C">();
	}
	static class AWindow_Breakable_Base_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWindow_Breakable_Base_BP_C>();
	}
};
static_assert(alignof(AWindow_Breakable_Base_BP_C) == 0x000008, "Wrong alignment on AWindow_Breakable_Base_BP_C");
static_assert(sizeof(AWindow_Breakable_Base_BP_C) == 0x0007F8, "Wrong size on AWindow_Breakable_Base_BP_C");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, UberGraphFrame) == 0x0006A8, "Member 'AWindow_Breakable_Base_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, ShutterCollision) == 0x0006B0, "Member 'AWindow_Breakable_Base_BP_C::ShutterCollision' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, PingZone) == 0x0006B8, "Member 'AWindow_Breakable_Base_BP_C::PingZone' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, RBPing) == 0x0006C0, "Member 'AWindow_Breakable_Base_BP_C::RBPing' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh9) == 0x0006C8, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh9' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh8) == 0x0006D0, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh8' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh7) == 0x0006D8, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh7' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh6) == 0x0006E0, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh6' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh5) == 0x0006E8, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh5' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh4) == 0x0006F0, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh4' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh3) == 0x0006F8, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh3' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh2) == 0x000700, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh1) == 0x000708, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, StaticMesh) == 0x000710, "Member 'AWindow_Breakable_Base_BP_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, WindowShutters) == 0x000718, "Member 'AWindow_Breakable_Base_BP_C::WindowShutters' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, CompletelyBlockedMesh) == 0x000720, "Member 'AWindow_Breakable_Base_BP_C::CompletelyBlockedMesh' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, IgnoreActorForTraversalBox) == 0x000728, "Member 'AWindow_Breakable_Base_BP_C::IgnoreActorForTraversalBox' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, FrontEditorClearanceCollisionBox) == 0x000730, "Member 'AWindow_Breakable_Base_BP_C::FrontEditorClearanceCollisionBox' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, BackEditorClearanceCollisionBox) == 0x000738, "Member 'AWindow_Breakable_Base_BP_C::BackEditorClearanceCollisionBox' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, BackLedgeMarkerB) == 0x000740, "Member 'AWindow_Breakable_Base_BP_C::BackLedgeMarkerB' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, BackLedgeMarkerA) == 0x000748, "Member 'AWindow_Breakable_Base_BP_C::BackLedgeMarkerA' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, Frame) == 0x000750, "Member 'AWindow_Breakable_Base_BP_C::Frame' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, BrokenWindow) == 0x000758, "Member 'AWindow_Breakable_Base_BP_C::BrokenWindow' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, BaseWindow) == 0x000760, "Member 'AWindow_Breakable_Base_BP_C::BaseWindow' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, FrontLedgeMarkerA) == 0x000768, "Member 'AWindow_Breakable_Base_BP_C::FrontLedgeMarkerA' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, FrontLedgeMarkerB) == 0x000770, "Member 'AWindow_Breakable_Base_BP_C::FrontLedgeMarkerB' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, Timeline_0_a_7D6947A34D9DFE2C485F3C85B8C1B215) == 0x000778, "Member 'AWindow_Breakable_Base_BP_C::Timeline_0_a_7D6947A34D9DFE2C485F3C85B8C1B215' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, Timeline_0__Direction_7D6947A34D9DFE2C485F3C85B8C1B215) == 0x00077C, "Member 'AWindow_Breakable_Base_BP_C::Timeline_0__Direction_7D6947A34D9DFE2C485F3C85B8C1B215' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, Timeline_0) == 0x000780, "Member 'AWindow_Breakable_Base_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, DebrisPhysicalMeshes) == 0x000788, "Member 'AWindow_Breakable_Base_BP_C::DebrisPhysicalMeshes' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, SpawnedPhysicalMeshes) == 0x000798, "Member 'AWindow_Breakable_Base_BP_C::SpawnedPhysicalMeshes' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, ApplyImpulse) == 0x0007A8, "Member 'AWindow_Breakable_Base_BP_C::ApplyImpulse' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, BrokenGlassMatDynData) == 0x0007AC, "Member 'AWindow_Breakable_Base_BP_C::BrokenGlassMatDynData' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, WindowDynData) == 0x0007BC, "Member 'AWindow_Breakable_Base_BP_C::WindowDynData' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, LightingChannels) == 0x0007CC, "Member 'AWindow_Breakable_Base_BP_C::LightingChannels' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, OnBreakImpulse) == 0x0007D0, "Member 'AWindow_Breakable_Base_BP_C::OnBreakImpulse' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, NumBrokenPieces) == 0x0007D4, "Member 'AWindow_Breakable_Base_BP_C::NumBrokenPieces' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, YSpawnMinMax) == 0x0007D8, "Member 'AWindow_Breakable_Base_BP_C::YSpawnMinMax' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, ZSpawnMinMax) == 0x0007E0, "Member 'AWindow_Breakable_Base_BP_C::ZSpawnMinMax' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, UseFrame) == 0x0007E8, "Member 'AWindow_Breakable_Base_BP_C::UseFrame' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, PhysicsDuration) == 0x0007EC, "Member 'AWindow_Breakable_Base_BP_C::PhysicsDuration' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, bIsBrokenReplicated) == 0x0007F0, "Member 'AWindow_Breakable_Base_BP_C::bIsBrokenReplicated' has a wrong offset!");
static_assert(offsetof(AWindow_Breakable_Base_BP_C, bIsBrokenJIP) == 0x0007F1, "Member 'AWindow_Breakable_Base_BP_C::bIsBrokenJIP' has a wrong offset!");

}

