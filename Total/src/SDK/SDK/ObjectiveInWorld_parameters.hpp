#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ObjectiveInWorld

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "OPP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ObjectiveInWorld.ObjectiveInWorld_C.ExecuteUbergraph_ObjectiveInWorld
// 0x00E8 (0x00E8 - 0x0000)
struct ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeam                                         Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Temp_struct_Variable;                              // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0058(0x0028)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_Event_oldPlayer;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_Event_newPlayer;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeam                                         CallFunc_GetTeam_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00B8(0x0028)()
	bool                                          CallFunc_IsAdversarialGameMode_ReturnValue;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBoolValue_ReturnValue;                 // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld) == 0x000008, "Wrong alignment on ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld");
static_assert(sizeof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld) == 0x0000E8, "Wrong size on ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, EntryPoint) == 0x000000, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::EntryPoint' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, Temp_byte_Variable) == 0x000004, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, Temp_struct_Variable) == 0x000008, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, K2Node_MakeStruct_SlateColor_1) == 0x000058, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, K2Node_Event_IsDesignTime) == 0x000080, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000088, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000090, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_BreakVector2D_X) == 0x000098, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_BreakVector2D_Y) == 0x00009C, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, K2Node_Event_oldPlayer) == 0x0000A0, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::K2Node_Event_oldPlayer' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, K2Node_Event_newPlayer) == 0x0000A8, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::K2Node_Event_newPlayer' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_GetTeam_ReturnValue) == 0x0000B1, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, K2Node_Select_Default) == 0x0000B8, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_IsAdversarialGameMode_ReturnValue) == 0x0000E0, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_IsAdversarialGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_IsValid_ReturnValue_1) == 0x0000E1, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_GetBoolValue_ReturnValue) == 0x0000E2, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_GetBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0000E4, "Member 'ObjectiveInWorld_C_ExecuteUbergraph_ObjectiveInWorld::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.Event_OnWatchedPlayerChanged
// 0x0010 (0x0010 - 0x0000)
struct ObjectiveInWorld_C_Event_OnWatchedPlayerChanged final
{
public:
	class ARBPlayer*                              OldPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              NewPlayer;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ObjectiveInWorld_C_Event_OnWatchedPlayerChanged) == 0x000008, "Wrong alignment on ObjectiveInWorld_C_Event_OnWatchedPlayerChanged");
static_assert(sizeof(ObjectiveInWorld_C_Event_OnWatchedPlayerChanged) == 0x000010, "Wrong size on ObjectiveInWorld_C_Event_OnWatchedPlayerChanged");
static_assert(offsetof(ObjectiveInWorld_C_Event_OnWatchedPlayerChanged, OldPlayer) == 0x000000, "Member 'ObjectiveInWorld_C_Event_OnWatchedPlayerChanged::OldPlayer' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_OnWatchedPlayerChanged, NewPlayer) == 0x000008, "Member 'ObjectiveInWorld_C_Event_OnWatchedPlayerChanged::NewPlayer' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ObjectiveInWorld_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ObjectiveInWorld_C_PreConstruct) == 0x000001, "Wrong alignment on ObjectiveInWorld_C_PreConstruct");
static_assert(sizeof(ObjectiveInWorld_C_PreConstruct) == 0x000001, "Wrong size on ObjectiveInWorld_C_PreConstruct");
static_assert(offsetof(ObjectiveInWorld_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ObjectiveInWorld_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.Update Distance Effects
// 0x00D0 (0x00D0 - 0x0000)
struct ObjectiveInWorld_C_Update_Distance_Effects final
{
public:
	struct FRBWorldIconUpdateContext              UpdateContext;                                     // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	bool                                          SkipTransition;                                    // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPinged;                                          // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ProcessOpacity_TargetOpacity;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOwningActorPinged_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_ToNewOpacity_ReturnValue;     // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ObjectiveInWorld_C_Update_Distance_Effects) == 0x000008, "Wrong alignment on ObjectiveInWorld_C_Update_Distance_Effects");
static_assert(sizeof(ObjectiveInWorld_C_Update_Distance_Effects) == 0x0000D0, "Wrong size on ObjectiveInWorld_C_Update_Distance_Effects");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, UpdateContext) == 0x000000, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::UpdateContext' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, SkipTransition) == 0x000060, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::SkipTransition' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, IsPinged) == 0x000061, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::IsPinged' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, Temp_bool_Variable) == 0x000062, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_IsValid_ReturnValue) == 0x000063, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_GetFloatValue_ReturnValue) == 0x000064, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_GetFloatValue_ReturnValue_1) == 0x00006C, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000070, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_ProcessOpacity_TargetOpacity) == 0x000074, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_ProcessOpacity_TargetOpacity' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_IsOwningActorPinged_ReturnValue) == 0x000079, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_IsOwningActorPinged_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_BooleanOR_ReturnValue_1) == 0x00007A, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_SelectFloat_ReturnValue) == 0x00007C, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000080, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000088, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x00008C, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_BreakVector2D_X) == 0x000090, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_BreakVector2D_Y) == 0x000094, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_FInterpTo_ReturnValue) == 0x000098, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_GetRenderOpacity_ReturnValue) == 0x00009C, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_FInterpTo_ReturnValue_1) == 0x0000A8, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, K2Node_Select_Default) == 0x0000AC, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_MapRangeClamped_ReturnValue) == 0x0000B0, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_LinearColor_ToNewOpacity_ReturnValue) == 0x0000B4, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_LinearColor_ToNewOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_Lerp_ReturnValue) == 0x0000C4, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_SelectFloat_ReturnValue_1) == 0x0000C8, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Update_Distance_Effects, CallFunc_SelectFloat_ReturnValue_2) == 0x0000CC, "Member 'ObjectiveInWorld_C_Update_Distance_Effects::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.UpdateIcon
// 0x0001 (0x0001 - 0x0000)
struct ObjectiveInWorld_C_UpdateIcon final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ObjectiveInWorld_C_UpdateIcon) == 0x000001, "Wrong alignment on ObjectiveInWorld_C_UpdateIcon");
static_assert(sizeof(ObjectiveInWorld_C_UpdateIcon) == 0x000001, "Wrong size on ObjectiveInWorld_C_UpdateIcon");
static_assert(offsetof(ObjectiveInWorld_C_UpdateIcon, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ObjectiveInWorld_C_UpdateIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.UpdateRippleDisplay
// 0x0002 (0x0002 - 0x0000)
struct ObjectiveInWorld_C_UpdateRippleDisplay final
{
public:
	bool                                          A;                                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocallyStalked;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ObjectiveInWorld_C_UpdateRippleDisplay) == 0x000001, "Wrong alignment on ObjectiveInWorld_C_UpdateRippleDisplay");
static_assert(sizeof(ObjectiveInWorld_C_UpdateRippleDisplay) == 0x000002, "Wrong size on ObjectiveInWorld_C_UpdateRippleDisplay");
static_assert(offsetof(ObjectiveInWorld_C_UpdateRippleDisplay, A) == 0x000000, "Member 'ObjectiveInWorld_C_UpdateRippleDisplay::A' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_UpdateRippleDisplay, LocallyStalked) == 0x000001, "Member 'ObjectiveInWorld_C_UpdateRippleDisplay::LocallyStalked' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.SetupRipple
// 0x0028 (0x0028 - 0x0000)
struct ObjectiveInWorld_C_SetupRipple final
{
public:
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ObjectiveInWorld_C_SetupRipple) == 0x000008, "Wrong alignment on ObjectiveInWorld_C_SetupRipple");
static_assert(sizeof(ObjectiveInWorld_C_SetupRipple) == 0x000028, "Wrong size on ObjectiveInWorld_C_SetupRipple");
static_assert(offsetof(ObjectiveInWorld_C_SetupRipple, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000000, "Member 'ObjectiveInWorld_C_SetupRipple::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_SetupRipple, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'ObjectiveInWorld_C_SetupRipple::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_SetupRipple, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'ObjectiveInWorld_C_SetupRipple::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_SetupRipple, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'ObjectiveInWorld_C_SetupRipple::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_SetupRipple, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'ObjectiveInWorld_C_SetupRipple::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_SetupRipple, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'ObjectiveInWorld_C_SetupRipple::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_SetupRipple, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'ObjectiveInWorld_C_SetupRipple::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.UpdateIconImage
// 0x0001 (0x0001 - 0x0000)
struct ObjectiveInWorld_C_UpdateIconImage final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ObjectiveInWorld_C_UpdateIconImage) == 0x000001, "Wrong alignment on ObjectiveInWorld_C_UpdateIconImage");
static_assert(sizeof(ObjectiveInWorld_C_UpdateIconImage) == 0x000001, "Wrong size on ObjectiveInWorld_C_UpdateIconImage");
static_assert(offsetof(ObjectiveInWorld_C_UpdateIconImage, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ObjectiveInWorld_C_UpdateIconImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.Event_DrawHudUpdate
// 0x0118 (0x0118 - 0x0000)
struct ObjectiveInWorld_C_Event_DrawHudUpdate final
{
public:
	struct FRBWorldIconUpdateContext              UpdateContext;                                     // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0080(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsAdversarialGameMode_ReturnValue;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	bool                                          CallFunc_IsOwningActorPinged_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ObjectiveInWorld_C_Event_DrawHudUpdate) == 0x000008, "Wrong alignment on ObjectiveInWorld_C_Event_DrawHudUpdate");
static_assert(sizeof(ObjectiveInWorld_C_Event_DrawHudUpdate) == 0x000118, "Wrong size on ObjectiveInWorld_C_Event_DrawHudUpdate");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, UpdateContext) == 0x000000, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::UpdateContext' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, Temp_byte_Variable) == 0x000060, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, Temp_byte_Variable_1) == 0x000061, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, Temp_bool_Variable) == 0x000062, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, Temp_byte_Variable_2) == 0x000063, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, Temp_byte_Variable_3) == 0x000064, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000068, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00006C, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, Temp_bool_Variable_1) == 0x000070, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, K2Node_Select_Default) == 0x000071, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000074, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000078, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_Conv_FloatToText_ReturnValue) == 0x000080, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_IsAdversarialGameMode_ReturnValue) == 0x0000D8, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_IsAdversarialGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, K2Node_MakeArray_Array) == 0x0000E0, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_IsOwningActorPinged_ReturnValue) == 0x000108, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_IsOwningActorPinged_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, K2Node_Select_Default_1) == 0x000109, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00010C, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_Event_DrawHudUpdate, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x000110, "Member 'ObjectiveInWorld_C_Event_DrawHudUpdate::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.OnIconIdentificationChanged
// 0x0028 (0x0028 - 0x0000)
struct ObjectiveInWorld_C_OnIconIdentificationChanged final
{
public:
	int32                                         IdentificationIndex;                               // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLetterFromIndex_Letter;                // 0x0008(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAdversarialGameMode_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBoolValue_ReturnValue;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ObjectiveInWorld_C_OnIconIdentificationChanged) == 0x000008, "Wrong alignment on ObjectiveInWorld_C_OnIconIdentificationChanged");
static_assert(sizeof(ObjectiveInWorld_C_OnIconIdentificationChanged) == 0x000028, "Wrong size on ObjectiveInWorld_C_OnIconIdentificationChanged");
static_assert(offsetof(ObjectiveInWorld_C_OnIconIdentificationChanged, IdentificationIndex) == 0x000000, "Member 'ObjectiveInWorld_C_OnIconIdentificationChanged::IdentificationIndex' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_OnIconIdentificationChanged, CallFunc_GetLetterFromIndex_Letter) == 0x000008, "Member 'ObjectiveInWorld_C_OnIconIdentificationChanged::CallFunc_GetLetterFromIndex_Letter' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_OnIconIdentificationChanged, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'ObjectiveInWorld_C_OnIconIdentificationChanged::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_OnIconIdentificationChanged, CallFunc_IsAdversarialGameMode_ReturnValue) == 0x000021, "Member 'ObjectiveInWorld_C_OnIconIdentificationChanged::CallFunc_IsAdversarialGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_OnIconIdentificationChanged, CallFunc_GetBoolValue_ReturnValue) == 0x000022, "Member 'ObjectiveInWorld_C_OnIconIdentificationChanged::CallFunc_GetBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_OnIconIdentificationChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'ObjectiveInWorld_C_OnIconIdentificationChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_OnIconIdentificationChanged, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'ObjectiveInWorld_C_OnIconIdentificationChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_OnIconIdentificationChanged, CallFunc_BooleanAND_ReturnValue_1) == 0x000025, "Member 'ObjectiveInWorld_C_OnIconIdentificationChanged::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.GetLetterFromIndex
// 0x0148 (0x0148 - 0x0000)
struct ObjectiveInWorld_C_GetLetterFromIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Letter;                                            // 0x0008(0x0018)(Parm, OutParm)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0118(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0130(0x0018)()
};
static_assert(alignof(ObjectiveInWorld_C_GetLetterFromIndex) == 0x000008, "Wrong alignment on ObjectiveInWorld_C_GetLetterFromIndex");
static_assert(sizeof(ObjectiveInWorld_C_GetLetterFromIndex) == 0x000148, "Wrong size on ObjectiveInWorld_C_GetLetterFromIndex");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Index_0) == 0x000000, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Index_0' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Letter) == 0x000008, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Letter' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_int_Variable) == 0x000020, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable) == 0x000028, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_1) == 0x000040, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_2) == 0x000058, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_3) == 0x000070, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_4) == 0x000088, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_5) == 0x0000A0, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_6) == 0x0000B8, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_7) == 0x0000D0, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_8) == 0x0000E8, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_9) == 0x000100, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, Temp_text_Variable_10) == 0x000118, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_GetLetterFromIndex, K2Node_Select_Default) == 0x000130, "Member 'ObjectiveInWorld_C_GetLetterFromIndex::K2Node_Select_Default' has a wrong offset!");

// Function ObjectiveInWorld.ObjectiveInWorld_C.ProcessOpacity
// 0x0088 (0x0088 - 0x0000)
struct ObjectiveInWorld_C_ProcessOpacity final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetOpacity_0;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeam                                         WatchedTeam;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetWatchedPlayer_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETeam                                         CallFunc_GetTeam_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue_3;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue_4;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_5;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_6;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_4;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_6;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ObjectiveInWorld_C_ProcessOpacity) == 0x000008, "Wrong alignment on ObjectiveInWorld_C_ProcessOpacity");
static_assert(sizeof(ObjectiveInWorld_C_ProcessOpacity) == 0x000088, "Wrong size on ObjectiveInWorld_C_ProcessOpacity");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, Distance) == 0x000000, "Member 'ObjectiveInWorld_C_ProcessOpacity::Distance' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, TargetOpacity_0) == 0x000004, "Member 'ObjectiveInWorld_C_ProcessOpacity::TargetOpacity_0' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, WatchedTeam) == 0x000008, "Member 'ObjectiveInWorld_C_ProcessOpacity::WatchedTeam' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, Temp_bool_Variable) == 0x000009, "Member 'ObjectiveInWorld_C_ProcessOpacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, Temp_float_Variable) == 0x00000C, "Member 'ObjectiveInWorld_C_ProcessOpacity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, Temp_bool_Variable_1) == 0x000010, "Member 'ObjectiveInWorld_C_ProcessOpacity::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, Temp_bool_Variable_2) == 0x000011, "Member 'ObjectiveInWorld_C_ProcessOpacity::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, Temp_bool_Variable_3) == 0x000012, "Member 'ObjectiveInWorld_C_ProcessOpacity::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, Temp_bool_Variable_4) == 0x000013, "Member 'ObjectiveInWorld_C_ProcessOpacity::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, Temp_bool_Variable_5) == 0x000014, "Member 'ObjectiveInWorld_C_ProcessOpacity::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000015, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_GetWatchedPlayer_ReturnValue) == 0x000018, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_GetWatchedPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_GetTeam_ReturnValue) == 0x000021, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, Temp_bool_Variable_6) == 0x000022, "Member 'ObjectiveInWorld_C_ProcessOpacity::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_GetFloatValue_ReturnValue) == 0x000024, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_GetFloatValue_ReturnValue_1) == 0x000028, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_GetFloatValue_ReturnValue_2) == 0x00002C, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000031, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_GetFloatValue_ReturnValue_3) == 0x000034, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_GetFloatValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_GetFloatValue_ReturnValue_4) == 0x00003C, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_GetFloatValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_GetFloatValue_ReturnValue_5) == 0x000040, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_GetFloatValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_GetFloatValue_ReturnValue_6) == 0x000044, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_GetFloatValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000048, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Less_FloatFloat_ReturnValue) == 0x000049, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00004A, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_BooleanAND_ReturnValue_1) == 0x00004B, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_BooleanAND_ReturnValue_2) == 0x00004C, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_BooleanAND_ReturnValue_3) == 0x00004D, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, K2Node_Select_Default) == 0x000050, "Member 'ObjectiveInWorld_C_ProcessOpacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, K2Node_Select_Default_1) == 0x000058, "Member 'ObjectiveInWorld_C_ProcessOpacity::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, K2Node_Select_Default_2) == 0x00005C, "Member 'ObjectiveInWorld_C_ProcessOpacity::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, K2Node_Select_Default_3) == 0x000060, "Member 'ObjectiveInWorld_C_ProcessOpacity::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000064, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000068, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, K2Node_Select_Default_4) == 0x00006C, "Member 'ObjectiveInWorld_C_ProcessOpacity::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, K2Node_Select_Default_5) == 0x000070, "Member 'ObjectiveInWorld_C_ProcessOpacity::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_MapRangeClamped_ReturnValue) == 0x000074, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000078, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_Lerp_ReturnValue) == 0x00007C, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'ObjectiveInWorld_C_ProcessOpacity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObjectiveInWorld_C_ProcessOpacity, K2Node_Select_Default_6) == 0x000084, "Member 'ObjectiveInWorld_C_ProcessOpacity::K2Node_Select_Default_6' has a wrong offset!");

}

