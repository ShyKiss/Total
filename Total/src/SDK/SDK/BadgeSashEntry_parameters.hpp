#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BadgeSashEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function BadgeSashEntry.BadgeSashEntry_C.SetClaimable
// 0x0002 (0x0002 - 0x0000)
struct BadgeSashEntry_C_SetClaimable final
{
public:
	bool                                          bInClaimable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_SetClaimable) == 0x000001, "Wrong alignment on BadgeSashEntry_C_SetClaimable");
static_assert(sizeof(BadgeSashEntry_C_SetClaimable) == 0x000002, "Wrong size on BadgeSashEntry_C_SetClaimable");
static_assert(offsetof(BadgeSashEntry_C_SetClaimable, bInClaimable) == 0x000000, "Member 'BadgeSashEntry_C_SetClaimable::bInClaimable' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetClaimable, bWasConsideredHovered) == 0x000001, "Member 'BadgeSashEntry_C_SetClaimable::bWasConsideredHovered' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.SetSelected
// 0x0002 (0x0002 - 0x0000)
struct BadgeSashEntry_C_SetSelected final
{
public:
	bool                                          bInSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_SetSelected) == 0x000001, "Wrong alignment on BadgeSashEntry_C_SetSelected");
static_assert(sizeof(BadgeSashEntry_C_SetSelected) == 0x000002, "Wrong size on BadgeSashEntry_C_SetSelected");
static_assert(offsetof(BadgeSashEntry_C_SetSelected, bInSelected) == 0x000000, "Member 'BadgeSashEntry_C_SetSelected::bInSelected' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetSelected, bWasConsideredHovered) == 0x000001, "Member 'BadgeSashEntry_C_SetSelected::bWasConsideredHovered' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.PlayAcquiredAnimation
// 0x0008 (0x0008 - 0x0000)
struct BadgeSashEntry_C_PlayAcquiredAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BadgeSashEntry_C_PlayAcquiredAnimation) == 0x000008, "Wrong alignment on BadgeSashEntry_C_PlayAcquiredAnimation");
static_assert(sizeof(BadgeSashEntry_C_PlayAcquiredAnimation) == 0x000008, "Wrong size on BadgeSashEntry_C_PlayAcquiredAnimation");
static_assert(offsetof(BadgeSashEntry_C_PlayAcquiredAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'BadgeSashEntry_C_PlayAcquiredAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.IsConsideredHovered
// 0x0001 (0x0001 - 0x0000)
struct BadgeSashEntry_C_IsConsideredHovered final
{
public:
	bool                                          bConsideredHovered;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_IsConsideredHovered) == 0x000001, "Wrong alignment on BadgeSashEntry_C_IsConsideredHovered");
static_assert(sizeof(BadgeSashEntry_C_IsConsideredHovered) == 0x000001, "Wrong size on BadgeSashEntry_C_IsConsideredHovered");
static_assert(offsetof(BadgeSashEntry_C_IsConsideredHovered, bConsideredHovered) == 0x000000, "Member 'BadgeSashEntry_C_IsConsideredHovered::bConsideredHovered' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.SetFocused
// 0x0005 (0x0005 - 0x0000)
struct BadgeSashEntry_C_SetFocused final
{
public:
	bool                                          bInFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_SetFocused) == 0x000001, "Wrong alignment on BadgeSashEntry_C_SetFocused");
static_assert(sizeof(BadgeSashEntry_C_SetFocused) == 0x000005, "Wrong size on BadgeSashEntry_C_SetFocused");
static_assert(offsetof(BadgeSashEntry_C_SetFocused, bInFocused) == 0x000000, "Member 'BadgeSashEntry_C_SetFocused::bInFocused' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetFocused, bWasConsideredHovered) == 0x000001, "Member 'BadgeSashEntry_C_SetFocused::bWasConsideredHovered' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetFocused, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000002, "Member 'BadgeSashEntry_C_SetFocused::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetFocused, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x000003, "Member 'BadgeSashEntry_C_SetFocused::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'BadgeSashEntry_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.SetHovered
// 0x0005 (0x0005 - 0x0000)
struct BadgeSashEntry_C_SetHovered final
{
public:
	bool                                          bInHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasConsideredHovered;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered_1; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_SetHovered) == 0x000001, "Wrong alignment on BadgeSashEntry_C_SetHovered");
static_assert(sizeof(BadgeSashEntry_C_SetHovered) == 0x000005, "Wrong size on BadgeSashEntry_C_SetHovered");
static_assert(offsetof(BadgeSashEntry_C_SetHovered, bInHovered) == 0x000000, "Member 'BadgeSashEntry_C_SetHovered::bInHovered' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetHovered, bWasConsideredHovered) == 0x000001, "Member 'BadgeSashEntry_C_SetHovered::bWasConsideredHovered' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetHovered, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000002, "Member 'BadgeSashEntry_C_SetHovered::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetHovered, CallFunc_IsConsideredHovered_bConsideredHovered_1) == 0x000003, "Member 'BadgeSashEntry_C_SetHovered::CallFunc_IsConsideredHovered_bConsideredHovered_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'BadgeSashEntry_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.Refresh
// 0x0148 (0x0148 - 0x0000)
struct BadgeSashEntry_C_Refresh final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0008(0x0028)()
	bool                                          CallFunc_IsConsideredHovered_bConsideredHovered;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0120(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BadgeSashEntry_C_Refresh) == 0x000008, "Wrong alignment on BadgeSashEntry_C_Refresh");
static_assert(sizeof(BadgeSashEntry_C_Refresh) == 0x000148, "Wrong size on BadgeSashEntry_C_Refresh");
static_assert(offsetof(BadgeSashEntry_C_Refresh, Temp_byte_Variable) == 0x000000, "Member 'BadgeSashEntry_C_Refresh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, Temp_byte_Variable_1) == 0x000001, "Member 'BadgeSashEntry_C_Refresh::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, Temp_bool_Variable) == 0x000002, "Member 'BadgeSashEntry_C_Refresh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, Temp_bool_Variable_1) == 0x000003, "Member 'BadgeSashEntry_C_Refresh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, Temp_bool_Variable_2) == 0x000004, "Member 'BadgeSashEntry_C_Refresh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, Temp_byte_Variable_2) == 0x000005, "Member 'BadgeSashEntry_C_Refresh::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, Temp_byte_Variable_3) == 0x000006, "Member 'BadgeSashEntry_C_Refresh::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, K2Node_Select_Default) == 0x000008, "Member 'BadgeSashEntry_C_Refresh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_IsConsideredHovered_bConsideredHovered) == 0x000030, "Member 'BadgeSashEntry_C_Refresh::CallFunc_IsConsideredHovered_bConsideredHovered' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'BadgeSashEntry_C_Refresh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, K2Node_Select_Default_1) == 0x000032, "Member 'BadgeSashEntry_C_Refresh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_Clamp_ReturnValue) == 0x000034, "Member 'BadgeSashEntry_C_Refresh::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, Temp_bool_Variable_3) == 0x000038, "Member 'BadgeSashEntry_C_Refresh::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BadgeSashEntry_C_Refresh::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, K2Node_MakeArray_Array) == 0x000080, "Member 'BadgeSashEntry_C_Refresh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, K2Node_Select_Default_2) == 0x000090, "Member 'BadgeSashEntry_C_Refresh::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BadgeSashEntry_C_Refresh::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'BadgeSashEntry_C_Refresh::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BadgeSashEntry_C_Refresh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'BadgeSashEntry_C_Refresh::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'BadgeSashEntry_C_Refresh::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, K2Node_Select_Default_3) == 0x000120, "Member 'BadgeSashEntry_C_Refresh::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000138, "Member 'BadgeSashEntry_C_Refresh::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000139, "Member 'BadgeSashEntry_C_Refresh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_BooleanOR_ReturnValue_1) == 0x00013A, "Member 'BadgeSashEntry_C_Refresh::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Refresh, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000140, "Member 'BadgeSashEntry_C_Refresh::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.OnLoaded_E635967C4C8D98AF198D06928C9FF87D
// 0x0008 (0x0008 - 0x0000)
struct BadgeSashEntry_C_OnLoaded_E635967C4C8D98AF198D06928C9FF87D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BadgeSashEntry_C_OnLoaded_E635967C4C8D98AF198D06928C9FF87D) == 0x000008, "Wrong alignment on BadgeSashEntry_C_OnLoaded_E635967C4C8D98AF198D06928C9FF87D");
static_assert(sizeof(BadgeSashEntry_C_OnLoaded_E635967C4C8D98AF198D06928C9FF87D) == 0x000008, "Wrong size on BadgeSashEntry_C_OnLoaded_E635967C4C8D98AF198D06928C9FF87D");
static_assert(offsetof(BadgeSashEntry_C_OnLoaded_E635967C4C8D98AF198D06928C9FF87D, Loaded) == 0x000000, "Member 'BadgeSashEntry_C_OnLoaded_E635967C4C8D98AF198D06928C9FF87D::Loaded' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BadgeSashEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_PreConstruct) == 0x000001, "Wrong alignment on BadgeSashEntry_C_PreConstruct");
static_assert(sizeof(BadgeSashEntry_C_PreConstruct) == 0x000001, "Wrong size on BadgeSashEntry_C_PreConstruct");
static_assert(offsetof(BadgeSashEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BadgeSashEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.Setup
// 0x00B8 (0x00B8 - 0x0000)
struct BadgeSashEntry_C_Setup final
{
public:
	int32                                         UnlockedCount_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBPlayerBadgeRow                      BadgeSettings_0;                                   // 0x0008(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bInClaimable;                                      // 0x00B0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_Setup) == 0x000008, "Wrong alignment on BadgeSashEntry_C_Setup");
static_assert(sizeof(BadgeSashEntry_C_Setup) == 0x0000B8, "Wrong size on BadgeSashEntry_C_Setup");
static_assert(offsetof(BadgeSashEntry_C_Setup, UnlockedCount_0) == 0x000000, "Member 'BadgeSashEntry_C_Setup::UnlockedCount_0' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Setup, BadgeSettings_0) == 0x000008, "Member 'BadgeSashEntry_C_Setup::BadgeSettings_0' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_Setup, bInClaimable) == 0x0000B0, "Member 'BadgeSashEntry_C_Setup::bInClaimable' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct BadgeSashEntry_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on BadgeSashEntry_C_OnAddedToFocusPath");
static_assert(sizeof(BadgeSashEntry_C_OnAddedToFocusPath) == 0x000008, "Wrong size on BadgeSashEntry_C_OnAddedToFocusPath");
static_assert(offsetof(BadgeSashEntry_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'BadgeSashEntry_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct BadgeSashEntry_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on BadgeSashEntry_C_OnRemovedFromFocusPath");
static_assert(sizeof(BadgeSashEntry_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on BadgeSashEntry_C_OnRemovedFromFocusPath");
static_assert(offsetof(BadgeSashEntry_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'BadgeSashEntry_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.ExecuteUbergraph_BadgeSashEntry
// 0x0148 (0x0148 - 0x0000)
struct BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_unlockedCount;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBPlayerBadgeRow                      K2Node_CustomEvent_badgeSettings;                  // 0x0068(0x00A8)()
	bool                                          K2Node_CustomEvent_bInClaimable;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0114(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x1];                                      // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x0134(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x013C(0x0008)(NoDestructor)
};
static_assert(alignof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry) == 0x000008, "Wrong alignment on BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry");
static_assert(sizeof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry) == 0x000148, "Wrong size on BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, EntryPoint) == 0x000000, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, Temp_object_Variable) == 0x000008, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_DynamicCast_AsTexture_2D) == 0x000010, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000030, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_CustomEvent_Loaded) == 0x000058, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_Event_IsDesignTime) == 0x000060, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_CustomEvent_unlockedCount) == 0x000064, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_CustomEvent_unlockedCount' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_CustomEvent_badgeSettings) == 0x000068, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_CustomEvent_badgeSettings' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_CustomEvent_bInClaimable) == 0x000110, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_CustomEvent_bInClaimable' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_CreateDelegate_OutputDelegate_1) == 0x000114, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, CallFunc_GetMenuManager_ReturnValue) == 0x000128, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, CallFunc_IsValid_ReturnValue_1) == 0x000131, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x000132, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_Event_InFocusEvent_1) == 0x000134, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry, K2Node_Event_InFocusEvent) == 0x00013C, "Member 'BadgeSashEntry_C_ExecuteUbergraph_BadgeSashEntry::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BadgeSashEntry_C_OnClicked__DelegateSignature final
{
public:
	class UBadgeSashEntry_C*                      badgeEntry;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BadgeSashEntry_C_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BadgeSashEntry_C_OnClicked__DelegateSignature");
static_assert(sizeof(BadgeSashEntry_C_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BadgeSashEntry_C_OnClicked__DelegateSignature");
static_assert(offsetof(BadgeSashEntry_C_OnClicked__DelegateSignature, badgeEntry) == 0x000000, "Member 'BadgeSashEntry_C_OnClicked__DelegateSignature::badgeEntry' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BadgeSashEntry_C_OnUnhovered__DelegateSignature final
{
public:
	class UBadgeSashEntry_C*                      badgeEntry;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BadgeSashEntry_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on BadgeSashEntry_C_OnUnhovered__DelegateSignature");
static_assert(sizeof(BadgeSashEntry_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on BadgeSashEntry_C_OnUnhovered__DelegateSignature");
static_assert(offsetof(BadgeSashEntry_C_OnUnhovered__DelegateSignature, badgeEntry) == 0x000000, "Member 'BadgeSashEntry_C_OnUnhovered__DelegateSignature::badgeEntry' has a wrong offset!");

// Function BadgeSashEntry.BadgeSashEntry_C.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BadgeSashEntry_C_OnHovered__DelegateSignature final
{
public:
	class UBadgeSashEntry_C*                      badgeEntry;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BadgeSashEntry_C_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on BadgeSashEntry_C_OnHovered__DelegateSignature");
static_assert(sizeof(BadgeSashEntry_C_OnHovered__DelegateSignature) == 0x000008, "Wrong size on BadgeSashEntry_C_OnHovered__DelegateSignature");
static_assert(offsetof(BadgeSashEntry_C_OnHovered__DelegateSignature, badgeEntry) == 0x000000, "Member 'BadgeSashEntry_C_OnHovered__DelegateSignature::badgeEntry' has a wrong offset!");

}

