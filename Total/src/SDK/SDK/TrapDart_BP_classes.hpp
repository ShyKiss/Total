#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrapDart_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TrapDart_BP.TrapDart_BP_C
// 0x0028 (0x02C8 - 0x02A0)
class ATrapDart_BP_C final : public ARBTrapDart
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               PsychosisGas_PS;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ConstantSparks;                                    // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               InitialSparks;                                     // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bThrown;                                           // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDetached;                                         // 0x02C1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void OnRep_bDetached();
	void SimulatePhysics(bool bAddImpulse);
	void ReachEndOfCable();
	void BP_OnLaunchEvent();
	void Electrify();
	void BP_OnHitPlayer(class ARBPlayer* Player);
	void BP_OnDetachFromPlayer(class ARBPlayer* Player);
	void BP_OnReachedMaxLimitServer();
	void BP_OnPlayerDamage();
	void BP_OnPlayerPsychosis();
	void BP_OnHitNPC(class ARBNPC* NPC);
	void ExecuteUbergraph_TrapDart_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TrapDart_BP_C">();
	}
	static class ATrapDart_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrapDart_BP_C>();
	}
};
static_assert(alignof(ATrapDart_BP_C) == 0x000008, "Wrong alignment on ATrapDart_BP_C");
static_assert(sizeof(ATrapDart_BP_C) == 0x0002C8, "Wrong size on ATrapDart_BP_C");
static_assert(offsetof(ATrapDart_BP_C, UberGraphFrame) == 0x0002A0, "Member 'ATrapDart_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATrapDart_BP_C, PsychosisGas_PS) == 0x0002A8, "Member 'ATrapDart_BP_C::PsychosisGas_PS' has a wrong offset!");
static_assert(offsetof(ATrapDart_BP_C, ConstantSparks) == 0x0002B0, "Member 'ATrapDart_BP_C::ConstantSparks' has a wrong offset!");
static_assert(offsetof(ATrapDart_BP_C, InitialSparks) == 0x0002B8, "Member 'ATrapDart_BP_C::InitialSparks' has a wrong offset!");
static_assert(offsetof(ATrapDart_BP_C, bThrown) == 0x0002C0, "Member 'ATrapDart_BP_C::bThrown' has a wrong offset!");
static_assert(offsetof(ATrapDart_BP_C, bDetached) == 0x0002C1, "Member 'ATrapDart_BP_C::bDetached' has a wrong offset!");

}

