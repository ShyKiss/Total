#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WaitingForPlayersCountdownWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C
// 0x0040 (0x0328 - 0x02E8)
class UWaitingForPlayersCountdownWidget_C final : public URBHUDElementWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonHudCountdown_C*                  CommonHudCountdown;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         MatchStartServerTime;                              // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCountdownActive;                                  // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsStartingSoon;                                    // 0x02FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MatchCountdownStartServerTime;                     // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReadyToTravelToMatch;                              // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FinishInstallText;                                 // 0x0308(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         InstallationPercent;                               // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WaitingForPlayersCountdownWidget(int32 EntryPoint);
	void OnDrugSequenceCompleted();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void Destruct();
	void OnGamePhaseUpdatedEvent(EGamePhase GamePhase);
	void StartCountdown();
	void HideCountdown();
	void OnGamePhaseUpdated(EGamePhase GamePhase, bool bDrugSequenceCompleted);
	void UpdateGameInstallText(float Percent);
	void ShouldShowWaitingForInstall(bool* ShouldShow_0, float* DownloadPercent);

	bool ShouldShow() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WaitingForPlayersCountdownWidget_C">();
	}
	static class UWaitingForPlayersCountdownWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitingForPlayersCountdownWidget_C>();
	}
};
static_assert(alignof(UWaitingForPlayersCountdownWidget_C) == 0x000008, "Wrong alignment on UWaitingForPlayersCountdownWidget_C");
static_assert(sizeof(UWaitingForPlayersCountdownWidget_C) == 0x000328, "Wrong size on UWaitingForPlayersCountdownWidget_C");
static_assert(offsetof(UWaitingForPlayersCountdownWidget_C, UberGraphFrame) == 0x0002E8, "Member 'UWaitingForPlayersCountdownWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWaitingForPlayersCountdownWidget_C, CommonHudCountdown) == 0x0002F0, "Member 'UWaitingForPlayersCountdownWidget_C::CommonHudCountdown' has a wrong offset!");
static_assert(offsetof(UWaitingForPlayersCountdownWidget_C, MatchStartServerTime) == 0x0002F8, "Member 'UWaitingForPlayersCountdownWidget_C::MatchStartServerTime' has a wrong offset!");
static_assert(offsetof(UWaitingForPlayersCountdownWidget_C, bCountdownActive) == 0x0002FC, "Member 'UWaitingForPlayersCountdownWidget_C::bCountdownActive' has a wrong offset!");
static_assert(offsetof(UWaitingForPlayersCountdownWidget_C, IsStartingSoon) == 0x0002FD, "Member 'UWaitingForPlayersCountdownWidget_C::IsStartingSoon' has a wrong offset!");
static_assert(offsetof(UWaitingForPlayersCountdownWidget_C, MatchCountdownStartServerTime) == 0x000300, "Member 'UWaitingForPlayersCountdownWidget_C::MatchCountdownStartServerTime' has a wrong offset!");
static_assert(offsetof(UWaitingForPlayersCountdownWidget_C, ReadyToTravelToMatch) == 0x000304, "Member 'UWaitingForPlayersCountdownWidget_C::ReadyToTravelToMatch' has a wrong offset!");
static_assert(offsetof(UWaitingForPlayersCountdownWidget_C, FinishInstallText) == 0x000308, "Member 'UWaitingForPlayersCountdownWidget_C::FinishInstallText' has a wrong offset!");
static_assert(offsetof(UWaitingForPlayersCountdownWidget_C, InstallationPercent) == 0x000320, "Member 'UWaitingForPlayersCountdownWidget_C::InstallationPercent' has a wrong offset!");

}

