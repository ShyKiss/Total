#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Hidespot_Base_BP

#include "Basic.hpp"

#include "Hidespot_Base_BP_classes.hpp"
#include "Hidespot_Base_BP_parameters.hpp"


namespace SDK
{

// Function Hidespot_Base_BP.Hidespot_Base_BP_C.GetStateName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           StateA                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           StateB                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::GetStateName(class FString* StateA, class FString* StateB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "GetStateName");

	Params::Hidespot_Base_BP_C_GetStateName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StateA != nullptr)
		*StateA = std::move(Parms.StateA);

	if (StateB != nullptr)
		*StateB = std::move(Parms.StateB);

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.FixUp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::FixUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "FixUp");

	Params::Hidespot_Base_BP_C_FixUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.RandomizeEnabledMeshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  RandomizationRoot                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RandomSeedOffset                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::RandomizeEnabledMeshes(class USceneComponent* RandomizationRoot, int32 RandomSeedOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "RandomizeEnabledMeshes");

	Params::Hidespot_Base_BP_C_RandomizeEnabledMeshes Parms{};

	Parms.RandomizationRoot = RandomizationRoot;
	Parms.RandomSeedOffset = RandomSeedOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.UpdateInteractionIgnoreComponents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URBHidespotComponent*             Hidespot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::UpdateInteractionIgnoreComponents(class URBHidespotComponent* Hidespot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "UpdateInteractionIgnoreComponents");

	Params::Hidespot_Base_BP_C_UpdateInteractionIgnoreComponents Parms{};

	Parms.Hidespot = Hidespot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.Editor_RefreshEnabledMeshesVisibility
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShowEnabledVisuals_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHidespot_Base_BP_C::Editor_RefreshEnabledMeshesVisibility(bool* bShowEnabledVisuals_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "Editor_RefreshEnabledMeshesVisibility");

	Params::Hidespot_Base_BP_C_Editor_RefreshEnabledMeshesVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShowEnabledVisuals_0 != nullptr)
		*bShowEnabledVisuals_0 = Parms.bShowEnabledVisuals_0;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.IntitializeClearanceBoxes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AHidespot_Base_BP_C::IntitializeClearanceBoxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "IntitializeClearanceBoxes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.DisabledAttachedComponentsFromServer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::DisabledAttachedComponentsFromServer(class USceneComponent* Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "DisabledAttachedComponentsFromServer");

	Params::Hidespot_Base_BP_C_DisabledAttachedComponentsFromServer Parms{};

	Parms.Parent = Parent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.DisableExtraComponentsFromServer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AHidespot_Base_BP_C::DisableExtraComponentsFromServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "DisableExtraComponentsFromServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.SetupMasterPose
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AHidespot_Base_BP_C::SetupMasterPose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "SetupMasterPose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.GatherAvailableRandomizationSceneComp
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Root_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class USceneComponent*>          Availables                                             (Parm, OutParm, ContainsInstancedReference)
// TArray<class USceneComponent*>          Discarded                                              (Parm, OutParm, ContainsInstancedReference)

void AHidespot_Base_BP_C::GatherAvailableRandomizationSceneComp(class USceneComponent* Root_0, TArray<class USceneComponent*>* Availables, TArray<class USceneComponent*>* Discarded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "GatherAvailableRandomizationSceneComp");

	Params::Hidespot_Base_BP_C_GatherAvailableRandomizationSceneComp Parms{};

	Parms.Root_0 = Root_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Availables != nullptr)
		*Availables = std::move(Parms.Availables);

	if (Discarded != nullptr)
		*Discarded = std::move(Parms.Discarded);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.TrySetupRandomizedSkeletalMeshFromRoot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  InComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::TrySetupRandomizedSkeletalMeshFromRoot(class USceneComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "TrySetupRandomizedSkeletalMeshFromRoot");

	Params::Hidespot_Base_BP_C_TrySetupRandomizedSkeletalMeshFromRoot Parms{};

	Parms.InComponent = InComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.TrySetupRandomizedSkeletalMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  InComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::TrySetupRandomizedSkeletalMesh(class USceneComponent* InComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "TrySetupRandomizedSkeletalMesh");

	Params::Hidespot_Base_BP_C_TrySetupRandomizedSkeletalMesh Parms{};

	Parms.InComponent = InComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.WakeUpDisabledSkeletalMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  OverrideDisableRoot                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::WakeUpDisabledSkeletalMesh(class USceneComponent* OverrideDisableRoot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "WakeUpDisabledSkeletalMesh");

	Params::Hidespot_Base_BP_C_WakeUpDisabledSkeletalMesh Parms{};

	Parms.OverrideDisableRoot = OverrideDisableRoot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.Editor_RefreshDisabledMeshesVisibility
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShowDisabledVisuals_0                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHidespot_Base_BP_C::Editor_RefreshDisabledMeshesVisibility(bool* bShowDisabledVisuals_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "Editor_RefreshDisabledMeshesVisibility");

	Params::Hidespot_Base_BP_C_Editor_RefreshDisabledMeshesVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bShowDisabledVisuals_0 != nullptr)
		*bShowDisabledVisuals_0 = Parms.bShowDisabledVisuals_0;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.SetDisabledMeshesState
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USceneComponent*                  RandomizationRootOverride                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::SetDisabledMeshesState(bool bDisabled, class USceneComponent* RandomizationRootOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "SetDisabledMeshesState");

	Params::Hidespot_Base_BP_C_SetDisabledMeshesState Parms{};

	Parms.bDisabled = bDisabled;
	Parms.RandomizationRootOverride = RandomizationRootOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.RandomizeDisabledMeshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  RandomizationRoot                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RandomSeedOffset                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::RandomizeDisabledMeshes(class USceneComponent* RandomizationRoot, int32 RandomSeedOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "RandomizeDisabledMeshes");

	Params::Hidespot_Base_BP_C_RandomizeDisabledMeshes Parms{};

	Parms.RandomizationRoot = RandomizationRoot;
	Parms.RandomSeedOffset = RandomSeedOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.TryGenerateRandomSeed
// (Public, BlueprintCallable, BlueprintEvent)

void AHidespot_Base_BP_C::TryGenerateRandomSeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "TryGenerateRandomSeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AHidespot_Base_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.PrepareState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStateA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           RandomOwner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::PrepareState(bool bStateA, class AActor* RandomOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "PrepareState");

	Params::Hidespot_Base_BP_C_PrepareState Parms{};

	Parms.bStateA = bStateA;
	Parms.RandomOwner = RandomOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.OnPostActorsPasted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   PastedActors                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AHidespot_Base_BP_C::OnPostActorsPasted(const TArray<class AActor*>& PastedActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "OnPostActorsPasted");

	Params::Hidespot_Base_BP_C_OnPostActorsPasted Parms{};

	Parms.PastedActors = std::move(PastedActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.PostAddedToLevel
// (Event, Public, BlueprintEvent)

void AHidespot_Base_BP_C::PostAddedToLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "PostAddedToLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.PostEditChange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             PropertyName                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::PostEditChange(const class FName& PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "PostEditChange");

	Params::Hidespot_Base_BP_C_PostEditChange Parms{};

	Parms.PropertyName = PropertyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.PostEditMove
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFinished                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHidespot_Base_BP_C::PostEditMove(bool bFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "PostEditMove");

	Params::Hidespot_Base_BP_C_PostEditMove Parms{};

	Parms.bFinished = bFinished;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.TickSelected
// (Event, Public, BlueprintEvent)

void AHidespot_Base_BP_C::TickSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "TickSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.PostDuplicated
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           DuplicationParent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::PostDuplicated(class AActor* DuplicationParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "PostDuplicated");

	Params::Hidespot_Base_BP_C_PostDuplicated Parms{};

	Parms.DuplicationParent = DuplicationParent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.Event_OnResetStage
// (Event, Public, BlueprintEvent)

void AHidespot_Base_BP_C::Event_OnResetStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "Event_OnResetStage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.PostToggled
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bToggleEnabled                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHidespot_Base_BP_C::PostToggled(bool bToggleEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "PostToggled");

	Params::Hidespot_Base_BP_C_PostToggled Parms{};

	Parms.bToggleEnabled = bToggleEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.SetShouldBeIgnoredForLots
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHidespot_Base_BP_C::SetShouldBeIgnoredForLots(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "SetShouldBeIgnoredForLots");

	Params::Hidespot_Base_BP_C_SetShouldBeIgnoredForLots Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.SetState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStateA                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AHidespot_Base_BP_C::SetState(bool bStateA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "SetState");

	Params::Hidespot_Base_BP_C_SetState Parms{};

	Parms.bStateA = bStateA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.OnEditorPostLoad
// (Event, Public, BlueprintEvent)

void AHidespot_Base_BP_C::OnEditorPostLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "OnEditorPostLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.ExecuteUbergraph_Hidespot_Base_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHidespot_Base_BP_C::ExecuteUbergraph_Hidespot_Base_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "ExecuteUbergraph_Hidespot_Base_BP");

	Params::Hidespot_Base_BP_C_ExecuteUbergraph_Hidespot_Base_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.ShouldPingFollowActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    OutShouldFollow                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::ShouldPingFollowActor(bool* OutShouldFollow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "ShouldPingFollowActor");

	Params::Hidespot_Base_BP_C_ShouldPingFollowActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutShouldFollow != nullptr)
		*OutShouldFollow = Parms.OutShouldFollow;

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.GetPingItemName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             OutName                                                (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::GetPingItemName(class FText* OutName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "GetPingItemName");

	Params::Hidespot_Base_BP_C_GetPingItemName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.GetPingEnabled
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    OutIsEnabled                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::GetPingEnabled(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, bool* OutIsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "GetPingEnabled");

	Params::Hidespot_Base_BP_C_GetPingEnabled Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutIsEnabled != nullptr)
		*OutIsEnabled = Parms.OutIsEnabled;

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.GetPlayerPingData
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FPlayerPingData                  OutData                                                (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::GetPlayerPingData(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FPlayerPingData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "GetPlayerPingData");

	Params::Hidespot_Base_BP_C_GetPlayerPingData Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.GetPlayerPingWorldLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::GetPlayerPingWorldLocation(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FVector* OutLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "GetPlayerPingWorldLocation");

	Params::Hidespot_Base_BP_C_GetPlayerPingWorldLocation Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.IsRandomStateSet
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::IsRandomStateSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "IsRandomStateSet");

	Params::Hidespot_Base_BP_C_IsRandomStateSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.IsStateA
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::IsStateA() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "IsStateA");

	Params::Hidespot_Base_BP_C_IsStateA Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.ShouldBeIgnoredForLots
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::ShouldBeIgnoredForLots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "ShouldBeIgnoredForLots");

	Params::Hidespot_Base_BP_C_ShouldBeIgnoredForLots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Hidespot_Base_BP.Hidespot_Base_BP_C.IsTogglingStaticShadowComponentAllowed
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AHidespot_Base_BP_C::IsTogglingStaticShadowComponentAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Hidespot_Base_BP_C", "IsTogglingStaticShadowComponentAllowed");

	Params::Hidespot_Base_BP_C_IsTogglingStaticShadowComponentAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

