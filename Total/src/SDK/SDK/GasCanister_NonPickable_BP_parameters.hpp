#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GasCanister_NonPickable_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GasCanister_NonPickable_BP.GasCanister_NonPickable_BP_C.ExecuteUbergraph_GasCanister_NonPickable_BP
// 0x0008 (0x0008 - 0x0000)
struct GasCanister_NonPickable_BP_C_ExecuteUbergraph_GasCanister_NonPickable_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bEnabled;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GasCanister_NonPickable_BP_C_ExecuteUbergraph_GasCanister_NonPickable_BP) == 0x000004, "Wrong alignment on GasCanister_NonPickable_BP_C_ExecuteUbergraph_GasCanister_NonPickable_BP");
static_assert(sizeof(GasCanister_NonPickable_BP_C_ExecuteUbergraph_GasCanister_NonPickable_BP) == 0x000008, "Wrong size on GasCanister_NonPickable_BP_C_ExecuteUbergraph_GasCanister_NonPickable_BP");
static_assert(offsetof(GasCanister_NonPickable_BP_C_ExecuteUbergraph_GasCanister_NonPickable_BP, EntryPoint) == 0x000000, "Member 'GasCanister_NonPickable_BP_C_ExecuteUbergraph_GasCanister_NonPickable_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_ExecuteUbergraph_GasCanister_NonPickable_BP, K2Node_ComponentBoundEvent_bEnabled) == 0x000004, "Member 'GasCanister_NonPickable_BP_C_ExecuteUbergraph_GasCanister_NonPickable_BP::K2Node_ComponentBoundEvent_bEnabled' has a wrong offset!");

// Function GasCanister_NonPickable_BP.GasCanister_NonPickable_BP_C.BndEvt__GasCanister_NonPickable_BP_RBPropOptimizer_K2Node_ComponentBoundEvent_0_PropOptimizerComponentTickEnabledChangedEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct GasCanister_NonPickable_BP_C_BndEvt__GasCanister_NonPickable_BP_RBPropOptimizer_K2Node_ComponentBoundEvent_0_PropOptimizerComponentTickEnabledChangedEvent__DelegateSignature final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GasCanister_NonPickable_BP_C_BndEvt__GasCanister_NonPickable_BP_RBPropOptimizer_K2Node_ComponentBoundEvent_0_PropOptimizerComponentTickEnabledChangedEvent__DelegateSignature) == 0x000001, "Wrong alignment on GasCanister_NonPickable_BP_C_BndEvt__GasCanister_NonPickable_BP_RBPropOptimizer_K2Node_ComponentBoundEvent_0_PropOptimizerComponentTickEnabledChangedEvent__DelegateSignature");
static_assert(sizeof(GasCanister_NonPickable_BP_C_BndEvt__GasCanister_NonPickable_BP_RBPropOptimizer_K2Node_ComponentBoundEvent_0_PropOptimizerComponentTickEnabledChangedEvent__DelegateSignature) == 0x000001, "Wrong size on GasCanister_NonPickable_BP_C_BndEvt__GasCanister_NonPickable_BP_RBPropOptimizer_K2Node_ComponentBoundEvent_0_PropOptimizerComponentTickEnabledChangedEvent__DelegateSignature");
static_assert(offsetof(GasCanister_NonPickable_BP_C_BndEvt__GasCanister_NonPickable_BP_RBPropOptimizer_K2Node_ComponentBoundEvent_0_PropOptimizerComponentTickEnabledChangedEvent__DelegateSignature, bEnabled) == 0x000000, "Member 'GasCanister_NonPickable_BP_C_BndEvt__GasCanister_NonPickable_BP_RBPropOptimizer_K2Node_ComponentBoundEvent_0_PropOptimizerComponentTickEnabledChangedEvent__DelegateSignature::bEnabled' has a wrong offset!");

// Function GasCanister_NonPickable_BP.GasCanister_NonPickable_BP_C.TestGasDirection
// 0x01E0 (0x01E0 - 0x0000)
struct GasCanister_NonPickable_BP_C_TestGasDirection final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bClear;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0068(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00CC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_157[0x1];                                      // 0x0157(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GasCanister_NonPickable_BP_C_TestGasDirection) == 0x000010, "Wrong alignment on GasCanister_NonPickable_BP_C_TestGasDirection");
static_assert(sizeof(GasCanister_NonPickable_BP_C_TestGasDirection) == 0x0001E0, "Wrong size on GasCanister_NonPickable_BP_C_TestGasDirection");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, Direction) == 0x000000, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::Direction' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, bClear) == 0x00000C, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::bClear' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakTransform_Location) == 0x000040, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, Temp_object_Variable) == 0x000068, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000078, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000084, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00009C, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B4, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000C0, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_SphereTraceSingle_OutHit) == 0x0000CC, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_SphereTraceSingle_ReturnValue) == 0x000154, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_bBlockingHit) == 0x000155, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_bInitialOverlap) == 0x000156, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_Time) == 0x000158, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_Distance) == 0x00015C, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_Location) == 0x000160, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_ImpactPoint) == 0x00016C, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_Normal) == 0x000178, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_ImpactNormal) == 0x000184, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_HitItem) == 0x0001B0, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_ElementIndex) == 0x0001B4, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_FaceIndex) == 0x0001B8, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_TraceStart) == 0x0001BC, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_TestGasDirection, CallFunc_Not_PreBool_ReturnValue) == 0x0001D4, "Member 'GasCanister_NonPickable_BP_C_TestGasDirection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GasCanister_NonPickable_BP.GasCanister_NonPickable_BP_C.RefreshVFXActive
// 0x0068 (0x0068 - 0x0000)
struct GasCanister_NonPickable_BP_C_RefreshVFXActive final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_StopLoopingSound_ReturnValue;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PlayLoopingSound_ReturnValue;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GasCanister_NonPickable_BP_C_RefreshVFXActive) == 0x000008, "Wrong alignment on GasCanister_NonPickable_BP_C_RefreshVFXActive");
static_assert(sizeof(GasCanister_NonPickable_BP_C_RefreshVFXActive) == 0x000068, "Wrong size on GasCanister_NonPickable_BP_C_RefreshVFXActive");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, K2Node_MakeArray_Array) == 0x000020, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_Array_Get_Item) == 0x000030, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004D, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_BooleanOR_ReturnValue) == 0x00004E, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_BooleanOR_ReturnValue_1) == 0x00004F, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_BooleanOR_ReturnValue_2) == 0x000050, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_StopLoopingSound_ReturnValue) == 0x000054, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_StopLoopingSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_BooleanOR_ReturnValue_3) == 0x000058, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_PlayLoopingSound_ReturnValue) == 0x00005C, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_PlayLoopingSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_RefreshVFXActive, CallFunc_BooleanAND_ReturnValue_1) == 0x000061, "Member 'GasCanister_NonPickable_BP_C_RefreshVFXActive::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function GasCanister_NonPickable_BP.GasCanister_NonPickable_BP_C.OnWorldPopulateFinishedTimeSliced
// 0x000A (0x000A - 0x0000)
struct GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestGasDirection_bClear;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestGasDirection_bClear_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestGasDirection_bClear_2;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestGasDirection_bClear_3;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TestGasDirection_bClear_4;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced) == 0x000001, "Wrong alignment on GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced");
static_assert(sizeof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced) == 0x00000A, "Wrong size on GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, ReturnValue) == 0x000000, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, CallFunc_BooleanOR_ReturnValue_2) == 0x000003, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, CallFunc_BooleanOR_ReturnValue_3) == 0x000004, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, CallFunc_TestGasDirection_bClear) == 0x000005, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::CallFunc_TestGasDirection_bClear' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, CallFunc_TestGasDirection_bClear_1) == 0x000006, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::CallFunc_TestGasDirection_bClear_1' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, CallFunc_TestGasDirection_bClear_2) == 0x000007, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::CallFunc_TestGasDirection_bClear_2' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, CallFunc_TestGasDirection_bClear_3) == 0x000008, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::CallFunc_TestGasDirection_bClear_3' has a wrong offset!");
static_assert(offsetof(GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced, CallFunc_TestGasDirection_bClear_4) == 0x000009, "Member 'GasCanister_NonPickable_BP_C_OnWorldPopulateFinishedTimeSliced::CallFunc_TestGasDirection_bClear_4' has a wrong offset!");

// Function GasCanister_NonPickable_BP.GasCanister_NonPickable_BP_C.IsTriggered
// 0x0001 (0x0001 - 0x0000)
struct GasCanister_NonPickable_BP_C_IsTriggered final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GasCanister_NonPickable_BP_C_IsTriggered) == 0x000001, "Wrong alignment on GasCanister_NonPickable_BP_C_IsTriggered");
static_assert(sizeof(GasCanister_NonPickable_BP_C_IsTriggered) == 0x000001, "Wrong size on GasCanister_NonPickable_BP_C_IsTriggered");
static_assert(offsetof(GasCanister_NonPickable_BP_C_IsTriggered, ReturnValue) == 0x000000, "Member 'GasCanister_NonPickable_BP_C_IsTriggered::ReturnValue' has a wrong offset!");

}

