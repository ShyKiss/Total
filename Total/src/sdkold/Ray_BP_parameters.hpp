#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ray_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Ray_BP.Ray_BP_C.SetDetectionDistance
// 0x0098 (0x0098 - 0x0000)
struct Ray_BP_C_SetDetectionDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Ray_BP_C_SetDetectionDistance) == 0x000004, "Wrong alignment on Ray_BP_C_SetDetectionDistance");
static_assert(sizeof(Ray_BP_C_SetDetectionDistance) == 0x000098, "Wrong size on Ray_BP_C_SetDetectionDistance");
static_assert(offsetof(Ray_BP_C_SetDetectionDistance, Distance) == 0x000000, "Member 'Ray_BP_C_SetDetectionDistance::Distance' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_SetDetectionDistance, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'Ray_BP_C_SetDetectionDistance::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_SetDetectionDistance, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000010, "Member 'Ray_BP_C_SetDetectionDistance::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function Ray_BP.Ray_BP_C.Get Distace Ray
// 0x0148 (0x0148 - 0x0000)
struct Ray_BP_C_Get_Distace_Ray final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325B[0x1];                                     // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325C[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ray_BP_C_Get_Distace_Ray) == 0x000008, "Wrong alignment on Ray_BP_C_Get_Distace_Ray");
static_assert(sizeof(Ray_BP_C_Get_Distace_Ray) == 0x000148, "Wrong size on Ray_BP_C_Get_Distace_Ray");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00000C, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_LineTraceSingle_OutHit) == 0x000018, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_LineTraceSingle_ReturnValue) == 0x0000A0, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A1, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A2, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_Time) == 0x0000A4, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_Distance) == 0x0000A8, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_Location) == 0x0000AC, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B8, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_Normal) == 0x0000C4, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D0, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_PhysMat) == 0x0000E0, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_HitActor) == 0x0000E8, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_HitComponent) == 0x0000F0, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_HitBoneName) == 0x0000F8, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_HitItem) == 0x000100, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_ElementIndex) == 0x000104, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_FaceIndex) == 0x000108, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_TraceStart) == 0x00010C, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_BreakHitResult_TraceEnd) == 0x000118, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_SelectVector_ReturnValue) == 0x000124, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_Vector_Distance_ReturnValue) == 0x000130, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000134, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_Get_Distace_Ray, CallFunc_MakeVector_ReturnValue) == 0x000138, "Member 'Ray_BP_C_Get_Distace_Ray::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function Ray_BP.Ray_BP_C.UserConstructionScript
// 0x0094 (0x0094 - 0x0000)
struct Ray_BP_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Ray_BP_C_UserConstructionScript) == 0x000004, "Wrong alignment on Ray_BP_C_UserConstructionScript");
static_assert(sizeof(Ray_BP_C_UserConstructionScript) == 0x000094, "Wrong size on Ray_BP_C_UserConstructionScript");
static_assert(offsetof(Ray_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'Ray_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00000C, "Member 'Ray_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function Ray_BP.Ray_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Ray_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ray_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on Ray_BP_C_ReceiveTick");
static_assert(sizeof(Ray_BP_C_ReceiveTick) == 0x000004, "Wrong size on Ray_BP_C_ReceiveTick");
static_assert(offsetof(Ray_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Ray_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Ray_BP.Ray_BP_C.RayState
// 0x0001 (0x0001 - 0x0000)
struct Ray_BP_C_RayState final
{
public:
	bool                                          IsDetected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ray_BP_C_RayState) == 0x000001, "Wrong alignment on Ray_BP_C_RayState");
static_assert(sizeof(Ray_BP_C_RayState) == 0x000001, "Wrong size on Ray_BP_C_RayState");
static_assert(offsetof(Ray_BP_C_RayState, IsDetected) == 0x000000, "Member 'Ray_BP_C_RayState::IsDetected' has a wrong offset!");

// Function Ray_BP.Ray_BP_C.ExecuteUbergraph_Ray_BP
// 0x0030 (0x0030 - 0x0000)
struct Ray_BP_C_ExecuteUbergraph_Ray_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetParentActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325D[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isDetected;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ray_BP_C_ExecuteUbergraph_Ray_BP) == 0x000008, "Wrong alignment on Ray_BP_C_ExecuteUbergraph_Ray_BP");
static_assert(sizeof(Ray_BP_C_ExecuteUbergraph_Ray_BP) == 0x000030, "Wrong size on Ray_BP_C_ExecuteUbergraph_Ray_BP");
static_assert(offsetof(Ray_BP_C_ExecuteUbergraph_Ray_BP, EntryPoint) == 0x000000, "Member 'Ray_BP_C_ExecuteUbergraph_Ray_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_ExecuteUbergraph_Ray_BP, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Ray_BP_C_ExecuteUbergraph_Ray_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_ExecuteUbergraph_Ray_BP, CallFunc_GetParentActor_ReturnValue) == 0x000008, "Member 'Ray_BP_C_ExecuteUbergraph_Ray_BP::CallFunc_GetParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_ExecuteUbergraph_Ray_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'Ray_BP_C_ExecuteUbergraph_Ray_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_ExecuteUbergraph_Ray_BP, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'Ray_BP_C_ExecuteUbergraph_Ray_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_ExecuteUbergraph_Ray_BP, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'Ray_BP_C_ExecuteUbergraph_Ray_BP::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_ExecuteUbergraph_Ray_BP, CallFunc_RandomFloat_ReturnValue) == 0x000018, "Member 'Ray_BP_C_ExecuteUbergraph_Ray_BP::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_ExecuteUbergraph_Ray_BP, K2Node_CustomEvent_isDetected) == 0x00001C, "Member 'Ray_BP_C_ExecuteUbergraph_Ray_BP::K2Node_CustomEvent_isDetected' has a wrong offset!");
static_assert(offsetof(Ray_BP_C_ExecuteUbergraph_Ray_BP, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'Ray_BP_C_ExecuteUbergraph_Ray_BP::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

}

