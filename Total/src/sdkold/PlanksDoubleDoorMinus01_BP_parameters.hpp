#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlanksDoubleDoorMinus01_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PlanksDoubleDoor-01_BP.PlanksDoubleDoor-01_BP_C.BP_OverrideEditorCompTranform
// 0x0070 (0x0070 - 0x0000)
struct PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform final
{
public:
	class FName                                   CompName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EE[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FTransform                             ReturnValue;                                       // 0x0040(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform) == 0x000010, "Wrong alignment on PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform");
static_assert(sizeof(PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform) == 0x000070, "Wrong size on PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform, CompName) == 0x000000, "Member 'PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform::CompName' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform, bLocked) == 0x000008, "Member 'PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform::bLocked' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform, Transform) == 0x000010, "Member 'PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform::Transform' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform, ReturnValue) == 0x000040, "Member 'PlanksDoubleDoorMinus01_BP_C_BP_OverrideEditorCompTranform::ReturnValue' has a wrong offset!");

// Function PlanksDoubleDoor-01_BP.PlanksDoubleDoor-01_BP_C.OnSetup
// 0x00D0 (0x00D0 - 0x0000)
struct PlanksDoubleDoorMinus01_BP_C_OnSetup final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsLocked_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32EF[0xE];                                     // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default;                             // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlanksDoubleDoorMinus01_BP_C_OnSetup) == 0x000010, "Wrong alignment on PlanksDoubleDoorMinus01_BP_C_OnSetup");
static_assert(sizeof(PlanksDoubleDoorMinus01_BP_C_OnSetup) == 0x0000D0, "Wrong size on PlanksDoubleDoorMinus01_BP_C_OnSetup");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_OnSetup, Temp_bool_Variable) == 0x000000, "Member 'PlanksDoubleDoorMinus01_BP_C_OnSetup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_OnSetup, CallFunc_BP_IsLocked_ReturnValue) == 0x000001, "Member 'PlanksDoubleDoorMinus01_BP_C_OnSetup::CallFunc_BP_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_OnSetup, K2Node_Select_Default) == 0x000010, "Member 'PlanksDoubleDoorMinus01_BP_C_OnSetup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_OnSetup, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000040, "Member 'PlanksDoubleDoorMinus01_BP_C_OnSetup::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function PlanksDoubleDoor-01_BP.PlanksDoubleDoor-01_BP_C.BndEvt__RBDamageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PlanksDoubleDoorMinus01_BP_C_BndEvt__RBDamageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature final
{
public:
	class URBDamageableComponent*                 DamageableComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlanksDoubleDoorMinus01_BP_C_BndEvt__RBDamageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on PlanksDoubleDoorMinus01_BP_C_BndEvt__RBDamageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature");
static_assert(sizeof(PlanksDoubleDoorMinus01_BP_C_BndEvt__RBDamageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature) == 0x000008, "Wrong size on PlanksDoubleDoorMinus01_BP_C_BndEvt__RBDamageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_BndEvt__RBDamageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature, DamageableComponent) == 0x000000, "Member 'PlanksDoubleDoorMinus01_BP_C_BndEvt__RBDamageable_K2Node_ComponentBoundEvent_0_OnDamageableDestroyed__DelegateSignature::DamageableComponent' has a wrong offset!");

// Function PlanksDoubleDoor-01_BP.PlanksDoubleDoor-01_BP_C.ExecuteUbergraph_PlanksDoubleDoor-01_BP
// 0x0028 (0x0028 - 0x0000)
struct PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsLocked_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URBDamageableComponent*                 K2Node_ComponentBoundEvent_DamageableComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBDestructibleActor*                   K2Node_DynamicCast_AsRB_Destructible_Actor;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32F1[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP) == 0x000008, "Wrong alignment on PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP");
static_assert(sizeof(PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP) == 0x000028, "Wrong size on PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP, EntryPoint) == 0x000000, "Member 'PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP, CallFunc_BP_IsLocked_ReturnValue) == 0x000004, "Member 'PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP::CallFunc_BP_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP, K2Node_ComponentBoundEvent_DamageableComponent) == 0x000008, "Member 'PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP::K2Node_ComponentBoundEvent_DamageableComponent' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP, K2Node_DynamicCast_AsRB_Destructible_Actor) == 0x000010, "Member 'PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP::K2Node_DynamicCast_AsRB_Destructible_Actor' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'PlanksDoubleDoorMinus01_BP_C_ExecuteUbergraph_PlanksDoubleDoorMinus01_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

}

