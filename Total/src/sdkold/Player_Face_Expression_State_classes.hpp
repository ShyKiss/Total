#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_Face_Expression_State

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Player_Face_Expression_State.Player_Face_Expression_State_C
// 0x0008 (0x0038 - 0x0030)
class UPlayer_Face_Expression_State_C final : public UAnimNotifyState
{
public:
	EPlayerSpecificGesture                        WhichExpression;                                   // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetNotifyName() const;
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float AnimDeltaTime, float TotalDuration) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float AnimDeltaTime) const;
	bool ExpressionStateOverride(class USkeletalMeshComponent* Mesh_Comp, EPlayerSpecificGesture Which_Anim, bool Is_Expressing) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Player_Face_Expression_State_C">();
	}
	static class UPlayer_Face_Expression_State_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayer_Face_Expression_State_C>();
	}
};
static_assert(alignof(UPlayer_Face_Expression_State_C) == 0x000008, "Wrong alignment on UPlayer_Face_Expression_State_C");
static_assert(sizeof(UPlayer_Face_Expression_State_C) == 0x000038, "Wrong size on UPlayer_Face_Expression_State_C");
static_assert(offsetof(UPlayer_Face_Expression_State_C, WhichExpression) == 0x000030, "Member 'UPlayer_Face_Expression_State_C::WhichExpression' has a wrong offset!");

}

