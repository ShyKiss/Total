#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EvalCorridorEntrance_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function EvalCorridorEntrance_BP.EvalCorridorEntrance_BP_C.UpdateShadowVisual
// 0x0008 (0x0008 - 0x0000)
struct EvalCorridorEntrance_BP_C_UpdateShadowVisual final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EvalCorridorEntrance_BP_C_UpdateShadowVisual) == 0x000004, "Wrong alignment on EvalCorridorEntrance_BP_C_UpdateShadowVisual");
static_assert(sizeof(EvalCorridorEntrance_BP_C_UpdateShadowVisual) == 0x000008, "Wrong size on EvalCorridorEntrance_BP_C_UpdateShadowVisual");
static_assert(offsetof(EvalCorridorEntrance_BP_C_UpdateShadowVisual, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'EvalCorridorEntrance_BP_C_UpdateShadowVisual::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_UpdateShadowVisual, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'EvalCorridorEntrance_BP_C_UpdateShadowVisual::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function EvalCorridorEntrance_BP.EvalCorridorEntrance_BP_C.ForceLightDisabled
// 0x0001 (0x0001 - 0x0000)
struct EvalCorridorEntrance_BP_C_ForceLightDisabled final
{
public:
	bool                                          Disabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EvalCorridorEntrance_BP_C_ForceLightDisabled) == 0x000001, "Wrong alignment on EvalCorridorEntrance_BP_C_ForceLightDisabled");
static_assert(sizeof(EvalCorridorEntrance_BP_C_ForceLightDisabled) == 0x000001, "Wrong size on EvalCorridorEntrance_BP_C_ForceLightDisabled");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ForceLightDisabled, Disabled) == 0x000000, "Member 'EvalCorridorEntrance_BP_C_ForceLightDisabled::Disabled' has a wrong offset!");

// Function EvalCorridorEntrance_BP.EvalCorridorEntrance_BP_C.UpdateTubeLighting
// 0x0024 (0x0024 - 0x0000)
struct EvalCorridorEntrance_BP_C_UpdateTubeLighting final
{
public:
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EvalCorridorEntrance_BP_C_UpdateTubeLighting) == 0x000004, "Wrong alignment on EvalCorridorEntrance_BP_C_UpdateTubeLighting");
static_assert(sizeof(EvalCorridorEntrance_BP_C_UpdateTubeLighting) == 0x000024, "Wrong size on EvalCorridorEntrance_BP_C_UpdateTubeLighting");
static_assert(offsetof(EvalCorridorEntrance_BP_C_UpdateTubeLighting, K2Node_MakeStruct_LinearColor) == 0x000000, "Member 'EvalCorridorEntrance_BP_C_UpdateTubeLighting::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_UpdateTubeLighting, K2Node_MakeStruct_LinearColor_1) == 0x000010, "Member 'EvalCorridorEntrance_BP_C_UpdateTubeLighting::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_UpdateTubeLighting, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'EvalCorridorEntrance_BP_C_UpdateTubeLighting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_UpdateTubeLighting, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'EvalCorridorEntrance_BP_C_UpdateTubeLighting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function EvalCorridorEntrance_BP.EvalCorridorEntrance_BP_C.OnActivationChanged
// 0x0001 (0x0001 - 0x0000)
struct EvalCorridorEntrance_BP_C_OnActivationChanged final
{
public:
	bool                                          LightsEnabled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EvalCorridorEntrance_BP_C_OnActivationChanged) == 0x000001, "Wrong alignment on EvalCorridorEntrance_BP_C_OnActivationChanged");
static_assert(sizeof(EvalCorridorEntrance_BP_C_OnActivationChanged) == 0x000001, "Wrong size on EvalCorridorEntrance_BP_C_OnActivationChanged");
static_assert(offsetof(EvalCorridorEntrance_BP_C_OnActivationChanged, LightsEnabled) == 0x000000, "Member 'EvalCorridorEntrance_BP_C_OnActivationChanged::LightsEnabled' has a wrong offset!");

// Function EvalCorridorEntrance_BP.EvalCorridorEntrance_BP_C.Initialize
// 0x0004 (0x0004 - 0x0000)
struct EvalCorridorEntrance_BP_C_Initialize final
{
public:
	float                                         FogIntensity;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EvalCorridorEntrance_BP_C_Initialize) == 0x000004, "Wrong alignment on EvalCorridorEntrance_BP_C_Initialize");
static_assert(sizeof(EvalCorridorEntrance_BP_C_Initialize) == 0x000004, "Wrong size on EvalCorridorEntrance_BP_C_Initialize");
static_assert(offsetof(EvalCorridorEntrance_BP_C_Initialize, FogIntensity) == 0x000000, "Member 'EvalCorridorEntrance_BP_C_Initialize::FogIntensity' has a wrong offset!");

// Function EvalCorridorEntrance_BP.EvalCorridorEntrance_BP_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct EvalCorridorEntrance_BP_C_UserConstructionScript final
{
public:
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(EvalCorridorEntrance_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on EvalCorridorEntrance_BP_C_UserConstructionScript");
static_assert(sizeof(EvalCorridorEntrance_BP_C_UserConstructionScript) == 0x000010, "Wrong size on EvalCorridorEntrance_BP_C_UserConstructionScript");
static_assert(offsetof(EvalCorridorEntrance_BP_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'EvalCorridorEntrance_BP_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function EvalCorridorEntrance_BP.EvalCorridorEntrance_BP_C.ExecuteUbergraph_EvalCorridorEntrance_BP
// 0x0168 (0x0168 - 0x0000)
struct EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0014(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD7[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable_1;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_1;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP) == 0x000004, "Wrong alignment on EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP");
static_assert(sizeof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP) == 0x000168, "Wrong size on EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, EntryPoint) == 0x000000, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, Temp_delegate_Variable) == 0x000004, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, Temp_delegate_Variable_1) == 0x000014, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, Temp_bool_Variable) == 0x000024, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, Temp_float_Variable) == 0x00002C, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, Temp_float_Variable_1) == 0x00003C, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000040, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, K2Node_Select_Default) == 0x0000C8, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, CallFunc_MakeRotator_ReturnValue_1) == 0x0000CC, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000D8, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x000160, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP, CallFunc_PostEventOnActor_ReturnValue_1) == 0x000164, "Member 'EvalCorridorEntrance_BP_C_ExecuteUbergraph_EvalCorridorEntrance_BP::CallFunc_PostEventOnActor_ReturnValue_1' has a wrong offset!");

// Function EvalCorridorEntrance_BP.EvalCorridorEntrance_BP_C.OnOpenedStageChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct EvalCorridorEntrance_BP_C_OnOpenedStageChanged__DelegateSignature final
{
public:
	class ASASTubeMinus02_BP_C*                   SASTube;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EvalCorridorEntrance_BP_C_OnOpenedStageChanged__DelegateSignature) == 0x000008, "Wrong alignment on EvalCorridorEntrance_BP_C_OnOpenedStageChanged__DelegateSignature");
static_assert(sizeof(EvalCorridorEntrance_BP_C_OnOpenedStageChanged__DelegateSignature) == 0x000008, "Wrong size on EvalCorridorEntrance_BP_C_OnOpenedStageChanged__DelegateSignature");
static_assert(offsetof(EvalCorridorEntrance_BP_C_OnOpenedStageChanged__DelegateSignature, SASTube) == 0x000000, "Member 'EvalCorridorEntrance_BP_C_OnOpenedStageChanged__DelegateSignature::SASTube' has a wrong offset!");

}

