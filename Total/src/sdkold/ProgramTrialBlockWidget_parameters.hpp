#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgramTrialBlockWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.SetFocused
// 0x0001 (0x0001 - 0x0000)
struct ProgramTrialBlockWidget_C_SetFocused final
{
public:
	bool                                          Param_bFocused;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialBlockWidget_C_SetFocused) == 0x000001, "Wrong alignment on ProgramTrialBlockWidget_C_SetFocused");
static_assert(sizeof(ProgramTrialBlockWidget_C_SetFocused) == 0x000001, "Wrong size on ProgramTrialBlockWidget_C_SetFocused");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetFocused, Param_bFocused) == 0x000000, "Member 'ProgramTrialBlockWidget_C_SetFocused::Param_bFocused' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.SetHovered
// 0x0001 (0x0001 - 0x0000)
struct ProgramTrialBlockWidget_C_SetHovered final
{
public:
	bool                                          Param_bHovered;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialBlockWidget_C_SetHovered) == 0x000001, "Wrong alignment on ProgramTrialBlockWidget_C_SetHovered");
static_assert(sizeof(ProgramTrialBlockWidget_C_SetHovered) == 0x000001, "Wrong size on ProgramTrialBlockWidget_C_SetHovered");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetHovered, Param_bHovered) == 0x000000, "Member 'ProgramTrialBlockWidget_C_SetHovered::Param_bHovered' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.UpdateSelectedTrialArrow
// 0x0110 (0x0110 - 0x0000)
struct ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow final
{
public:
	bool                                          bFound;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3639[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363A[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363B[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialEntryContentWidget_C*      K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x008C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow) == 0x000008, "Wrong alignment on ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow");
static_assert(sizeof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow) == 0x000110, "Wrong size on ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, bFound) == 0x000000, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::bFound' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, Temp_bool_Variable) == 0x000001, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, Temp_byte_Variable) == 0x000002, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, Temp_byte_Variable_1) == 0x000003, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, K2Node_Select_Default) == 0x000048, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000050, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_GetAllChildren_ReturnValue) == 0x000058, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_Array_Get_Item) == 0x000070, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget) == 0x000080, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x00008C, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_GetAbsoluteSize_ReturnValue) == 0x0000C4, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_LocalToAbsolute_ReturnValue) == 0x0000CC, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_BreakVector2D_X) == 0x0000D4, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_BreakVector2D_Y) == 0x0000D8, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_BreakVector2D_X_1) == 0x0000DC, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_BreakVector2D_Y_1) == 0x0000E0, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E4, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000E8, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_MakeVector2D_ReturnValue) == 0x0000EC, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_AbsoluteToLocal_ReturnValue) == 0x0000F4, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_BreakVector2D_X_2) == 0x0000FC, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_BreakVector2D_Y_2) == 0x000100, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow, CallFunc_MakeVector2D_ReturnValue_1) == 0x000104, "Member 'ProgramTrialBlockWidget_C_UpdateSelectedTrialArrow::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.SetSelectedTrial
// 0x0050 (0x0050 - 0x0000)
struct ProgramTrialBlockWidget_C_SetSelectedTrial final
{
public:
	class FName                                   TrialId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363E[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363F[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialEntryContentWidget_C*      K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialBlockWidget_C_SetSelectedTrial) == 0x000008, "Wrong alignment on ProgramTrialBlockWidget_C_SetSelectedTrial");
static_assert(sizeof(ProgramTrialBlockWidget_C_SetSelectedTrial) == 0x000050, "Wrong size on ProgramTrialBlockWidget_C_SetSelectedTrial");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, TrialId) == 0x000000, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::TrialId' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, Temp_int_Array_Index_Variable) == 0x000008, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, CallFunc_Array_Get_Item) == 0x000030, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget) == 0x000040, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetSelectedTrial, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000049, "Member 'ProgramTrialBlockWidget_C_SetSelectedTrial::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.OnTrialSelectedInternal
// 0x0008 (0x0008 - 0x0000)
struct ProgramTrialBlockWidget_C_OnTrialSelectedInternal final
{
public:
	class FName                                   TrialId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialBlockWidget_C_OnTrialSelectedInternal) == 0x000004, "Wrong alignment on ProgramTrialBlockWidget_C_OnTrialSelectedInternal");
static_assert(sizeof(ProgramTrialBlockWidget_C_OnTrialSelectedInternal) == 0x000008, "Wrong size on ProgramTrialBlockWidget_C_OnTrialSelectedInternal");
static_assert(offsetof(ProgramTrialBlockWidget_C_OnTrialSelectedInternal, TrialId) == 0x000000, "Member 'ProgramTrialBlockWidget_C_OnTrialSelectedInternal::TrialId' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.AddTrial
// 0x01A0 (0x01A0 - 0x0000)
struct ProgramTrialBlockWidget_C_AddTrial final
{
public:
	struct FRBTrialInfoRow                        TrialInfo;                                         // 0x0000(0x0158)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Param_BlockNumber;                                 // 0x0158(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x015C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCompleted;                                        // 0x015D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3640[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BestScore;                                         // 0x0160(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelected;                                         // 0x0164(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3641[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_TryLoadSyncSoftRef_NewParam;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrialEnabled_ReturnValue;               // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3642[0x1];                                     // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName TrialId)>          K2Node_CreateDelegate_OutputDelegate;              // 0x017C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3643[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialEntryContentWidget_C*      CallFunc_Create_ReturnValue;                       // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialBlockWidget_C_AddTrial) == 0x000008, "Wrong alignment on ProgramTrialBlockWidget_C_AddTrial");
static_assert(sizeof(ProgramTrialBlockWidget_C_AddTrial) == 0x0001A0, "Wrong size on ProgramTrialBlockWidget_C_AddTrial");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, TrialInfo) == 0x000000, "Member 'ProgramTrialBlockWidget_C_AddTrial::TrialInfo' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, Param_BlockNumber) == 0x000158, "Member 'ProgramTrialBlockWidget_C_AddTrial::Param_BlockNumber' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, bLocked) == 0x00015C, "Member 'ProgramTrialBlockWidget_C_AddTrial::bLocked' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, bCompleted) == 0x00015D, "Member 'ProgramTrialBlockWidget_C_AddTrial::bCompleted' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, BestScore) == 0x000160, "Member 'ProgramTrialBlockWidget_C_AddTrial::BestScore' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, bSelected) == 0x000164, "Member 'ProgramTrialBlockWidget_C_AddTrial::bSelected' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, CallFunc_TryLoadSyncSoftRef_NewParam) == 0x000168, "Member 'ProgramTrialBlockWidget_C_AddTrial::CallFunc_TryLoadSyncSoftRef_NewParam' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, K2Node_DynamicCast_AsTexture_2D) == 0x000170, "Member 'ProgramTrialBlockWidget_C_AddTrial::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'ProgramTrialBlockWidget_C_AddTrial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, CallFunc_IsTrialEnabled_ReturnValue) == 0x000179, "Member 'ProgramTrialBlockWidget_C_AddTrial::CallFunc_IsTrialEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, CallFunc_BooleanOR_ReturnValue) == 0x00017A, "Member 'ProgramTrialBlockWidget_C_AddTrial::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, K2Node_CreateDelegate_OutputDelegate) == 0x00017C, "Member 'ProgramTrialBlockWidget_C_AddTrial::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, CallFunc_Create_ReturnValue) == 0x000190, "Member 'ProgramTrialBlockWidget_C_AddTrial::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_AddTrial, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000198, "Member 'ProgramTrialBlockWidget_C_AddTrial::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.SetIsMatchOwner
// 0x0048 (0x0048 - 0x0000)
struct ProgramTrialBlockWidget_C_SetIsMatchOwner final
{
public:
	bool                                          Param_bIsMatchOwner;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3644[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3645[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3646[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialEntryContentWidget_C*      K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialBlockWidget_C_SetIsMatchOwner) == 0x000008, "Wrong alignment on ProgramTrialBlockWidget_C_SetIsMatchOwner");
static_assert(sizeof(ProgramTrialBlockWidget_C_SetIsMatchOwner) == 0x000048, "Wrong size on ProgramTrialBlockWidget_C_SetIsMatchOwner");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, Param_bIsMatchOwner) == 0x000000, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::Param_bIsMatchOwner' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, CallFunc_Array_Get_Item) == 0x000028, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget) == 0x000038, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_SetIsMatchOwner, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ProgramTrialBlockWidget_C_SetIsMatchOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.Setup
// 0x0110 (0x0110 - 0x0000)
struct ProgramTrialBlockWidget_C_Setup final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3647[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3648[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3649[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0068(0x0028)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364A[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364B[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A8(0x0018)()
	struct FVector2D                              K2Node_Select_Default;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_1;                           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364C[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_2;                           // 0x00E0(0x0028)()
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialBlockWidget_C_Setup) == 0x000008, "Wrong alignment on ProgramTrialBlockWidget_C_Setup");
static_assert(sizeof(ProgramTrialBlockWidget_C_Setup) == 0x000110, "Wrong size on ProgramTrialBlockWidget_C_Setup");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, Temp_bool_Variable) == 0x000000, "Member 'ProgramTrialBlockWidget_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, Temp_struct_Variable) == 0x000004, "Member 'ProgramTrialBlockWidget_C_Setup::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, Temp_struct_Variable_1) == 0x00000C, "Member 'ProgramTrialBlockWidget_C_Setup::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, Temp_bool_Variable_1) == 0x000014, "Member 'ProgramTrialBlockWidget_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, K2Node_MakeStruct_Margin) == 0x000018, "Member 'ProgramTrialBlockWidget_C_Setup::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, K2Node_MakeStruct_Margin_1) == 0x000028, "Member 'ProgramTrialBlockWidget_C_Setup::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, Temp_bool_Variable_2) == 0x000038, "Member 'ProgramTrialBlockWidget_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'ProgramTrialBlockWidget_C_Setup::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, K2Node_MakeStruct_SlateColor_1) == 0x000068, "Member 'ProgramTrialBlockWidget_C_Setup::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_BooleanAND_ReturnValue_1) == 0x000092, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_BooleanAND_ReturnValue_2) == 0x000093, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000098, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A1, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A8, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, K2Node_Select_Default) == 0x0000C0, "Member 'ProgramTrialBlockWidget_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, K2Node_Select_Default_1) == 0x0000C8, "Member 'ProgramTrialBlockWidget_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, K2Node_Select_Default_2) == 0x0000E0, "Member 'ProgramTrialBlockWidget_C_Setup::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Setup, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000108, "Member 'ProgramTrialBlockWidget_C_Setup::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.Init
// 0x0001 (0x0001 - 0x0000)
struct ProgramTrialBlockWidget_C_Init final
{
public:
	bool                                          Param_bIsMatchOwner;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialBlockWidget_C_Init) == 0x000001, "Wrong alignment on ProgramTrialBlockWidget_C_Init");
static_assert(sizeof(ProgramTrialBlockWidget_C_Init) == 0x000001, "Wrong size on ProgramTrialBlockWidget_C_Init");
static_assert(offsetof(ProgramTrialBlockWidget_C_Init, Param_bIsMatchOwner) == 0x000000, "Member 'ProgramTrialBlockWidget_C_Init::Param_bIsMatchOwner' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ProgramTrialBlockWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialBlockWidget_C_PreConstruct) == 0x000001, "Wrong alignment on ProgramTrialBlockWidget_C_PreConstruct");
static_assert(sizeof(ProgramTrialBlockWidget_C_PreConstruct) == 0x000001, "Wrong size on ProgramTrialBlockWidget_C_PreConstruct");
static_assert(offsetof(ProgramTrialBlockWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ProgramTrialBlockWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct ProgramTrialBlockWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialBlockWidget_C_Tick) == 0x000004, "Wrong alignment on ProgramTrialBlockWidget_C_Tick");
static_assert(sizeof(ProgramTrialBlockWidget_C_Tick) == 0x00003C, "Wrong size on ProgramTrialBlockWidget_C_Tick");
static_assert(offsetof(ProgramTrialBlockWidget_C_Tick, MyGeometry) == 0x000000, "Member 'ProgramTrialBlockWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'ProgramTrialBlockWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.ExecuteUbergraph_ProgramTrialBlockWidget
// 0x0068 (0x0068 - 0x0000)
struct ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364E[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialEntryContentWidget_C*      CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_364F[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget) == 0x000008, "Wrong alignment on ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget");
static_assert(sizeof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget) == 0x000068, "Wrong size on ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget");
static_assert(offsetof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget, EntryPoint) == 0x000000, "Member 'ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget, K2Node_Event_MyGeometry) == 0x000008, "Member 'ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget, K2Node_Event_InDeltaTime) == 0x000040, "Member 'ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget, Temp_int_Variable) == 0x000044, "Member 'ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget, CallFunc_Create_ReturnValue) == 0x000050, "Member 'ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000060, "Member 'ProgramTrialBlockWidget_C_ExecuteUbergraph_ProgramTrialBlockWidget::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function ProgramTrialBlockWidget.ProgramTrialBlockWidget_C.OnTrialSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ProgramTrialBlockWidget_C_OnTrialSelected__DelegateSignature final
{
public:
	class FName                                   TrialId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialBlockWidget_C_OnTrialSelected__DelegateSignature) == 0x000004, "Wrong alignment on ProgramTrialBlockWidget_C_OnTrialSelected__DelegateSignature");
static_assert(sizeof(ProgramTrialBlockWidget_C_OnTrialSelected__DelegateSignature) == 0x000008, "Wrong size on ProgramTrialBlockWidget_C_OnTrialSelected__DelegateSignature");
static_assert(offsetof(ProgramTrialBlockWidget_C_OnTrialSelected__DelegateSignature, TrialId) == 0x000000, "Member 'ProgramTrialBlockWidget_C_OnTrialSelected__DelegateSignature::TrialId' has a wrong offset!");

}

