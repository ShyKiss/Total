#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Engineer_QuestGiver_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BaseAnimatedQuestGiver_BP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Engineer_QuestGiver_BP.Engineer_QuestGiver_BP_C
// 0x0040 (0x04F8 - 0x04B8)
class AEngineer_QuestGiver_BP_C final : public ABaseAnimatedQuestGiver_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Engineer_QuestGiver_BP_C;           // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   RepairPad;                                         // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ScrewDriver;                                       // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Engineer_HairCap;                                  // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Engineer_Hair;                                     // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Flipbook;                                          // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PadRepair;                                         // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBObjectiveActorComponent*             RBObjectiveActor;                                  // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void Purchase();
	void ExecuteUbergraph_Engineer_QuestGiver_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Engineer_QuestGiver_BP_C">();
	}
	static class AEngineer_QuestGiver_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEngineer_QuestGiver_BP_C>();
	}
};
static_assert(alignof(AEngineer_QuestGiver_BP_C) == 0x000008, "Wrong alignment on AEngineer_QuestGiver_BP_C");
static_assert(sizeof(AEngineer_QuestGiver_BP_C) == 0x0004F8, "Wrong size on AEngineer_QuestGiver_BP_C");
static_assert(offsetof(AEngineer_QuestGiver_BP_C, UberGraphFrame_Engineer_QuestGiver_BP_C) == 0x0004B8, "Member 'AEngineer_QuestGiver_BP_C::UberGraphFrame_Engineer_QuestGiver_BP_C' has a wrong offset!");
static_assert(offsetof(AEngineer_QuestGiver_BP_C, RepairPad) == 0x0004C0, "Member 'AEngineer_QuestGiver_BP_C::RepairPad' has a wrong offset!");
static_assert(offsetof(AEngineer_QuestGiver_BP_C, ScrewDriver) == 0x0004C8, "Member 'AEngineer_QuestGiver_BP_C::ScrewDriver' has a wrong offset!");
static_assert(offsetof(AEngineer_QuestGiver_BP_C, Engineer_HairCap) == 0x0004D0, "Member 'AEngineer_QuestGiver_BP_C::Engineer_HairCap' has a wrong offset!");
static_assert(offsetof(AEngineer_QuestGiver_BP_C, Engineer_Hair) == 0x0004D8, "Member 'AEngineer_QuestGiver_BP_C::Engineer_Hair' has a wrong offset!");
static_assert(offsetof(AEngineer_QuestGiver_BP_C, Flipbook) == 0x0004E0, "Member 'AEngineer_QuestGiver_BP_C::Flipbook' has a wrong offset!");
static_assert(offsetof(AEngineer_QuestGiver_BP_C, PadRepair) == 0x0004E8, "Member 'AEngineer_QuestGiver_BP_C::PadRepair' has a wrong offset!");
static_assert(offsetof(AEngineer_QuestGiver_BP_C, RBObjectiveActor) == 0x0004F0, "Member 'AEngineer_QuestGiver_BP_C::RBObjectiveActor' has a wrong offset!");

}

