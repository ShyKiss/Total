#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScientistStretcher_ABP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ScientistStretcher_ABP.ScientistStretcher_ABP_C
// 0x0240 (0x0500 - 0x02C0)
class UScientistStretcher_ABP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3406[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x02F8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x03E0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0410(0x00B0)()
	struct FVector                                RightHandIK;                                       // 0x04C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightHandJoint;                                    // 0x04CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftHandIK;                                        // 0x04D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftHandJoint;                                     // 0x04E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lean;                                              // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ScientistStretcher_ABP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ScientistStretcher_ABP_C">();
	}
	static class UScientistStretcher_ABP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScientistStretcher_ABP_C>();
	}
};
static_assert(alignof(UScientistStretcher_ABP_C) == 0x000010, "Wrong alignment on UScientistStretcher_ABP_C");
static_assert(sizeof(UScientistStretcher_ABP_C) == 0x000500, "Wrong size on UScientistStretcher_ABP_C");
static_assert(offsetof(UScientistStretcher_ABP_C, UberGraphFrame) == 0x0002C0, "Member 'UScientistStretcher_ABP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScientistStretcher_ABP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UScientistStretcher_ABP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UScientistStretcher_ABP_C, AnimGraphNode_BlendSpacePlayer) == 0x0002F8, "Member 'UScientistStretcher_ABP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UScientistStretcher_ABP_C, AnimGraphNode_StateResult) == 0x0003E0, "Member 'UScientistStretcher_ABP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UScientistStretcher_ABP_C, AnimGraphNode_StateMachine) == 0x000410, "Member 'UScientistStretcher_ABP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UScientistStretcher_ABP_C, RightHandIK) == 0x0004C0, "Member 'UScientistStretcher_ABP_C::RightHandIK' has a wrong offset!");
static_assert(offsetof(UScientistStretcher_ABP_C, RightHandJoint) == 0x0004CC, "Member 'UScientistStretcher_ABP_C::RightHandJoint' has a wrong offset!");
static_assert(offsetof(UScientistStretcher_ABP_C, LeftHandIK) == 0x0004D8, "Member 'UScientistStretcher_ABP_C::LeftHandIK' has a wrong offset!");
static_assert(offsetof(UScientistStretcher_ABP_C, LeftHandJoint) == 0x0004E4, "Member 'UScientistStretcher_ABP_C::LeftHandJoint' has a wrong offset!");
static_assert(offsetof(UScientistStretcher_ABP_C, Lean) == 0x0004F0, "Member 'UScientistStretcher_ABP_C::Lean' has a wrong offset!");

}

