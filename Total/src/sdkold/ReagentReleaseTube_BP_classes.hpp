#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReagentReleaseTube_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ReagentReleaseTube_BP.ReagentReleaseTube_BP_C
// 0x00D0 (0x0318 - 0x0248)
class AReagentReleaseTube_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          PlayerCollision;                                   // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RB_Sound;                                          // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TestGateLightMinus01;                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasInerRotatingDoor1;                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBVolumetricFogLightComponent*         RBVolumetricFogLight;                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  TopSpotLight;                                      // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasInerRotatingDoor;                               // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasExtRotatingDoor;                                // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_DoorOne_6E752357452A673AD9CD689B647C46EC; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_6E752357452A673AD9CD689B647C46EC; // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31D1[0x3];                                     // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          TriggeredForwardAKEvent;                           // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          UntriggeredForwardAKEvent;                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          TriggeredBackwardAKEvent;                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          UntriggeredBackwardAKEvent;                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             AnimationCompletedForward;                         // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             AnimationCompletedBackward;                        // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLightingChannels                      LightingChannels;                                  // 0x02E8(0x0001)(Edit, BlueprintVisible, NoDestructor)
	bool                                          IsOpenedBP;                                        // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D2[0x6];                                     // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnOpenedStageChanged;                              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         ActivatedFogLightIntensity;                        // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeactivatedFogLightIntensity;                      // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActivatedLightIntensity;                           // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeactivatedLightIntensity;                         // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedLightDisabled;                               // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D3[0x3];                                     // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FogLightIntensity;                                 // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ForceLightDisabled(bool Disabled);
	void UpdateTubeLighting();
	void OnActivationChanged(bool LightsEnabled);
	void ApplyLightChannel();
	void Initialize(class UStaticMeshComponent* Red_Light, class UStaticMeshComponent* Green_Light, float FogIntensity);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void ReceiveBeginPlay();
	void Open();
	void Close();
	void BndEvt__ReagentReleaseTube_BP_PlayerCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);
	void TryOpen();
	void ExecuteUbergraph_ReagentReleaseTube_BP(int32 EntryPoint);
	void OnOpenedStageChanged__DelegateSignature(class ASASTubeMinus02_BP_C* SASTube);
	void AnimationCompletedBackward__DelegateSignature();
	void AnimationCompletedForward__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ReagentReleaseTube_BP_C">();
	}
	static class AReagentReleaseTube_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AReagentReleaseTube_BP_C>();
	}
};
static_assert(alignof(AReagentReleaseTube_BP_C) == 0x000008, "Wrong alignment on AReagentReleaseTube_BP_C");
static_assert(sizeof(AReagentReleaseTube_BP_C) == 0x000318, "Wrong size on AReagentReleaseTube_BP_C");
static_assert(offsetof(AReagentReleaseTube_BP_C, UberGraphFrame) == 0x000248, "Member 'AReagentReleaseTube_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, PlayerCollision) == 0x000250, "Member 'AReagentReleaseTube_BP_C::PlayerCollision' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, RB_Sound) == 0x000258, "Member 'AReagentReleaseTube_BP_C::RB_Sound' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, TestGateLightMinus01) == 0x000260, "Member 'AReagentReleaseTube_BP_C::TestGateLightMinus01' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, SasInerRotatingDoor1) == 0x000268, "Member 'AReagentReleaseTube_BP_C::SasInerRotatingDoor1' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, RBVolumetricFogLight) == 0x000270, "Member 'AReagentReleaseTube_BP_C::RBVolumetricFogLight' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, PointLight) == 0x000278, "Member 'AReagentReleaseTube_BP_C::PointLight' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, TopSpotLight) == 0x000280, "Member 'AReagentReleaseTube_BP_C::TopSpotLight' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, SasInerRotatingDoor) == 0x000288, "Member 'AReagentReleaseTube_BP_C::SasInerRotatingDoor' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, SasExtRotatingDoor) == 0x000290, "Member 'AReagentReleaseTube_BP_C::SasExtRotatingDoor' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, Timeline_0_DoorOne_6E752357452A673AD9CD689B647C46EC) == 0x000298, "Member 'AReagentReleaseTube_BP_C::Timeline_0_DoorOne_6E752357452A673AD9CD689B647C46EC' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, Timeline_0__Direction_6E752357452A673AD9CD689B647C46EC) == 0x00029C, "Member 'AReagentReleaseTube_BP_C::Timeline_0__Direction_6E752357452A673AD9CD689B647C46EC' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, Timeline_0) == 0x0002A0, "Member 'AReagentReleaseTube_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, TriggeredForwardAKEvent) == 0x0002A8, "Member 'AReagentReleaseTube_BP_C::TriggeredForwardAKEvent' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, UntriggeredForwardAKEvent) == 0x0002B0, "Member 'AReagentReleaseTube_BP_C::UntriggeredForwardAKEvent' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, TriggeredBackwardAKEvent) == 0x0002B8, "Member 'AReagentReleaseTube_BP_C::TriggeredBackwardAKEvent' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, UntriggeredBackwardAKEvent) == 0x0002C0, "Member 'AReagentReleaseTube_BP_C::UntriggeredBackwardAKEvent' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, AnimationCompletedForward) == 0x0002C8, "Member 'AReagentReleaseTube_BP_C::AnimationCompletedForward' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, AnimationCompletedBackward) == 0x0002D8, "Member 'AReagentReleaseTube_BP_C::AnimationCompletedBackward' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, LightingChannels) == 0x0002E8, "Member 'AReagentReleaseTube_BP_C::LightingChannels' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, IsOpenedBP) == 0x0002E9, "Member 'AReagentReleaseTube_BP_C::IsOpenedBP' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, OnOpenedStageChanged) == 0x0002F0, "Member 'AReagentReleaseTube_BP_C::OnOpenedStageChanged' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, ActivatedFogLightIntensity) == 0x000300, "Member 'AReagentReleaseTube_BP_C::ActivatedFogLightIntensity' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, DeactivatedFogLightIntensity) == 0x000304, "Member 'AReagentReleaseTube_BP_C::DeactivatedFogLightIntensity' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, ActivatedLightIntensity) == 0x000308, "Member 'AReagentReleaseTube_BP_C::ActivatedLightIntensity' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, DeactivatedLightIntensity) == 0x00030C, "Member 'AReagentReleaseTube_BP_C::DeactivatedLightIntensity' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, ForcedLightDisabled) == 0x000310, "Member 'AReagentReleaseTube_BP_C::ForcedLightDisabled' has a wrong offset!");
static_assert(offsetof(AReagentReleaseTube_BP_C, FogLightIntensity) == 0x000314, "Member 'AReagentReleaseTube_BP_C::FogLightIntensity' has a wrong offset!");

}

