#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestFace_animBP

#include "Basic.hpp"

#include "Denizen_Names_Enum_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Denizen_Expression_State_Struct_structs.hpp"
#include "Denizen_Expressions_Enum_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Denizen_BaseEmotion_Enum_structs.hpp"
#include "OPP_structs.hpp"
#include "Denizen_Face_State_Struct_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass questFace_animBP.questFace_animBP_C
// 0x1FE0 (0x22A0 - 0x02C0)
class UQuestFace_animBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3BBC[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x02F8(0x01D8)(ContainsInstancedReference)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x04D0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0628(0x0028)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_1;                            // 0x0650(0x01B0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0800(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0820(0x0020)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x0840(0x01B0)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_1;               // 0x09F0(0x0038)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x0A28(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0AF0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0B18(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0B40(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0B68(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0BB0(0x00C0)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode_1;                     // 0x0C70(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0D10(0x0158)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0E68(0x00C8)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x0F30(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0FD0(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1050(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1098(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1118(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x11E0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1260(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x12E0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1360(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x13E0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1460(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x14E0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1560(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x15E0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1660(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x16E0(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1760(0x00C8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x1828(0x00B8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x18E0(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1988(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1A08(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1A88(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1B08(0x00B8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1BC0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1BF0(0x00B0)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x1CA0(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1CD8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1D00(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1DC0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1DE8(0x0048)()
	class UPoseAsset*                             Pose_Asset;                                        // 0x1E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x1E38(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookAtAlpha;                                       // 0x1E44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          LipSyncAnim;                                       // 0x1E48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExpressing;                                      // 0x1E50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BBD[0x3];                                     // 0x1E51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExpressHowMuch;                                    // 0x1E54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          ScriptedFaceAnim;                                  // 0x1E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDenizen_BaseEmotion_Enum                     WhichBaseEmotion;                                  // 0x1E60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBE[0x7];                                     // 0x1E61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDenizen_Face_State_Struct             BaseEmotionList;                                   // 0x1E68(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	EDenizen_Names_Enum                           WhichDenizen;                                      // 0x1F58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBF[0x7];                                     // 0x1F59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseAnimatedQuestGiver_BP_C*           QuestGiver;                                        // 0x1F60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDenizen_Expressions_Enum                     WhichExpression;                                   // 0x1F68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC0[0x7];                                     // 0x1F69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDenizen_Expression_State_Struct       ExpressionList;                                    // 0x1F70(0x0320)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsFromVO;                                          // 0x2290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BC1[0x7];                                     // 0x2291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest_AnimBP_C*                        QuestAnimBP;                                       // 0x2298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_C99DC25C478C0C8B6EACAC9A9CEB4A3E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_F5BC46F3401FF4736968B6B9EA0A36F9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_E0F8CB3C49A91F7ACBC8B4B746DF9F80();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_7D8329FE43A68E29BAF098821FA48477();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_04DC137148BB8EF75C06CB8A6FF8A2C0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_B0ADEA824CFAB6BF6F5D70B761A298D1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_0811A2D7445D3C190265BDACE8B2897C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_62ADBBA145728D22F7E058BE86F44F6B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_06F5FBDB4F79E980A3FA1B94F24EBCA0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_AB1E04E542D2D1B79DC162BCE384B8C1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_D57620934BB68AFDBBCA61AC0DBD4DC1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_00DD210644F0712C109EB7AEA8F7F65E();
	void BlueprintInitializeAnimation();
	void LipSyncFeed();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_55024DB14D8EF9B40CD29EA40D9016FD();
	void BlueprintBeginPlay();
	void Notice_Start();
	void Notice_End();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_questFace_animBP_AnimGraphNode_SequencePlayer_D41A1D7F47B31F05B9E880B45ED7FD29();
	void ScriptedFaceFeed();
	void ExecuteUbergraph_questFace_animBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"questFace_animBP_C">();
	}
	static class UQuestFace_animBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestFace_animBP_C>();
	}
};
static_assert(alignof(UQuestFace_animBP_C) == 0x000010, "Wrong alignment on UQuestFace_animBP_C");
static_assert(sizeof(UQuestFace_animBP_C) == 0x0022A0, "Wrong size on UQuestFace_animBP_C");
static_assert(offsetof(UQuestFace_animBP_C, UberGraphFrame) == 0x0002C0, "Member 'UQuestFace_animBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UQuestFace_animBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_CopyPoseFromMesh) == 0x0002F8, "Member 'UQuestFace_animBP_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SaveCachedPose_1) == 0x0004D0, "Member 'UQuestFace_animBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_UseCachedPose_5) == 0x000628, "Member 'UQuestFace_animBP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_LookAt_1) == 0x000650, "Member 'UQuestFace_animBP_C::AnimGraphNode_LookAt_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_LocalToComponentSpace) == 0x000800, "Member 'UQuestFace_animBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000820, "Member 'UQuestFace_animBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_LookAt) == 0x000840, "Member 'UQuestFace_animBP_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_MakeDynamicAdditive_1) == 0x0009F0, "Member 'UQuestFace_animBP_C::AnimGraphNode_MakeDynamicAdditive_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_ApplyAdditive_3) == 0x000A28, "Member 'UQuestFace_animBP_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_UseCachedPose_4) == 0x000AF0, "Member 'UQuestFace_animBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_UseCachedPose_3) == 0x000B18, "Member 'UQuestFace_animBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_UseCachedPose_2) == 0x000B40, "Member 'UQuestFace_animBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_Slot_2) == 0x000B68, "Member 'UQuestFace_animBP_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000BB0, "Member 'UQuestFace_animBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_PoseBlendNode_1) == 0x000C70, "Member 'UQuestFace_animBP_C::AnimGraphNode_PoseBlendNode_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SaveCachedPose) == 0x000D10, "Member 'UQuestFace_animBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_ApplyAdditive_2) == 0x000E68, "Member 'UQuestFace_animBP_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_PoseBlendNode) == 0x000F30, "Member 'UQuestFace_animBP_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_15) == 0x000FD0, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_Slot_1) == 0x001050, "Member 'UQuestFace_animBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_14) == 0x001098, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_ApplyAdditive_1) == 0x001118, "Member 'UQuestFace_animBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_13) == 0x0011E0, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_12) == 0x001260, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_11) == 0x0012E0, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_10) == 0x001360, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_9) == 0x0013E0, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_8) == 0x001460, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_7) == 0x0014E0, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_6) == 0x001560, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_5) == 0x0015E0, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_4) == 0x001660, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_3) == 0x0016E0, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_ApplyAdditive) == 0x001760, "Member 'UQuestFace_animBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_BlendListByEnum_1) == 0x001828, "Member 'UQuestFace_animBP_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_BlendListByBool) == 0x0018E0, "Member 'UQuestFace_animBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_2) == 0x001988, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer_1) == 0x001A08, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_SequencePlayer) == 0x001A88, "Member 'UQuestFace_animBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_BlendListByEnum) == 0x001B08, "Member 'UQuestFace_animBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_StateResult) == 0x001BC0, "Member 'UQuestFace_animBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_StateMachine) == 0x001BF0, "Member 'UQuestFace_animBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_MakeDynamicAdditive) == 0x001CA0, "Member 'UQuestFace_animBP_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_UseCachedPose_1) == 0x001CD8, "Member 'UQuestFace_animBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_LayeredBoneBlend) == 0x001D00, "Member 'UQuestFace_animBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_UseCachedPose) == 0x001DC0, "Member 'UQuestFace_animBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, AnimGraphNode_Slot) == 0x001DE8, "Member 'UQuestFace_animBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, Pose_Asset) == 0x001E30, "Member 'UQuestFace_animBP_C::Pose_Asset' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, LookAtLocation) == 0x001E38, "Member 'UQuestFace_animBP_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, LookAtAlpha) == 0x001E44, "Member 'UQuestFace_animBP_C::LookAtAlpha' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, LipSyncAnim) == 0x001E48, "Member 'UQuestFace_animBP_C::LipSyncAnim' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, IsExpressing) == 0x001E50, "Member 'UQuestFace_animBP_C::IsExpressing' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, ExpressHowMuch) == 0x001E54, "Member 'UQuestFace_animBP_C::ExpressHowMuch' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, ScriptedFaceAnim) == 0x001E58, "Member 'UQuestFace_animBP_C::ScriptedFaceAnim' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, WhichBaseEmotion) == 0x001E60, "Member 'UQuestFace_animBP_C::WhichBaseEmotion' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, BaseEmotionList) == 0x001E68, "Member 'UQuestFace_animBP_C::BaseEmotionList' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, WhichDenizen) == 0x001F58, "Member 'UQuestFace_animBP_C::WhichDenizen' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, QuestGiver) == 0x001F60, "Member 'UQuestFace_animBP_C::QuestGiver' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, WhichExpression) == 0x001F68, "Member 'UQuestFace_animBP_C::WhichExpression' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, ExpressionList) == 0x001F70, "Member 'UQuestFace_animBP_C::ExpressionList' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, IsFromVO) == 0x002290, "Member 'UQuestFace_animBP_C::IsFromVO' has a wrong offset!");
static_assert(offsetof(UQuestFace_animBP_C, QuestAnimBP) == 0x002298, "Member 'UQuestFace_animBP_C::QuestAnimBP' has a wrong offset!");

}

