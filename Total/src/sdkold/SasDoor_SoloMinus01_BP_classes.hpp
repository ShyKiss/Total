#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SasDoor_SoloMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SasDoor_Solo-01_BP.SasDoor_Solo-01_BP_C
// 0x0120 (0x0490 - 0x0370)
class ASasDoor_SoloMinus01_BP_C final : public ARBSASTubesDoor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        TubeChild1Ref;                                     // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      RBSound;                                           // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RedLightFrontMinus01;                              // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GreenLightFrontMinus01;                            // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasArmoredDoorMinus01;                             // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender3;                                       // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SasFrontFrame;                                     // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBBoxNavMeshBlockingComponent*         RBBoxNavMeshBlocking;                              // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBObjectiveActorComponent*             RBObjectiveActor;                                  // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Door2_067DAB35401A3567F63D0AB0BDE9E4DD; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_DoorOne_067DAB35401A3567F63D0AB0BDE9E4DD; // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_067DAB35401A3567F63D0AB0BDE9E4DD; // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315F[0x7];                                     // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Door2_A804723B4B5C1C2E01A91C8D5BF1B9D4; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_DoorOne_A804723B4B5C1C2E01A91C8D5BF1B9D4; // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A804723B4B5C1C2E01A91C8D5BF1B9D4; // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3160[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           GreenLights;                                       // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           RedLights;                                         // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector2D                              Screen_Size;                                       // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RenderTextureSize;                                 // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas;                                            // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasRenderTarget2D*                  CanvasRender;                                      // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArmoredDoorOpened;                                 // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3161[0x7];                                     // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrentText;                                       // 0x0448(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	bool                                          AutoCloseWhenPlayerInside;                         // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AutoOpenWhenPlayerInside;                          // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForceTubeLightDisabled;                            // 0x0462(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3162[0x1];                                     // 0x0463(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Fog_Intensity;                                     // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewVar_0;                                          // 0x0468(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Kerning;                                           // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FontScale;                                         // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysOpenedArmoredDoors;                          // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayingArmoredDoorAnimation;                     // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMainLobbySAS;                                    // 0x048A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void HasPlayersInside(bool* Value);
	void OnSASTubeDoorStateChanged();
	void IsStageExit(bool* NewParam);
	void SetAutoCloseWhenPlayerInside(bool AutoClose);
	void SetAutoOpenWhenPlayerInside(bool AutoOpen);
	void ForceLightDisabled(bool Disabled);
	void HasOpenedTube(bool* Out);
	void SpawnTubes();
	void UpdateArmoredDoors();
	void SetCurrentText(const class FText& Text);
	void OnRep_CurrentText();
	void GetCurrentStageText(class FText* Text);
	void OnActivationChanged();
	void InitializeTubes();
	void UserConstructionScript();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void BP_OnActivate();
	void BP_OnDeactivate();
	void OpenArmoredDoors();
	void CloseArmoredDoors();
	void ReceiveBeginPlay();
	void CanvasRenderUpdate(class UCanvas* Param_Canvas, int32 Width, int32 Height);
	void UpdateTextCanvas();
	void Event_OnCurrentDirectionChanged();
	void BindEventsOnTube(class ASASTubeMinus02_BP_C* Tube);
	void OnOpenedStageChanged(class ASASTubeMinus02_BP_C* SASTube);
	void Event_OnTubesChanged();
	void OnPlayersInsideChanged(class ARBSASTube* Tube);
	void ExecuteUbergraph_SasDoor_SoloMinus01_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SasDoor_Solo-01_BP_C">();
	}
	static class ASasDoor_SoloMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASasDoor_SoloMinus01_BP_C>();
	}
};
static_assert(alignof(ASasDoor_SoloMinus01_BP_C) == 0x000008, "Wrong alignment on ASasDoor_SoloMinus01_BP_C");
static_assert(sizeof(ASasDoor_SoloMinus01_BP_C) == 0x000490, "Wrong size on ASasDoor_SoloMinus01_BP_C");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, UberGraphFrame) == 0x000370, "Member 'ASasDoor_SoloMinus01_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, TubeChild1Ref) == 0x000378, "Member 'ASasDoor_SoloMinus01_BP_C::TubeChild1Ref' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, RBSound) == 0x000380, "Member 'ASasDoor_SoloMinus01_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, RedLightFrontMinus01) == 0x000388, "Member 'ASasDoor_SoloMinus01_BP_C::RedLightFrontMinus01' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, GreenLightFrontMinus01) == 0x000390, "Member 'ASasDoor_SoloMinus01_BP_C::GreenLightFrontMinus01' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, SasArmoredDoorMinus01) == 0x000398, "Member 'ASasDoor_SoloMinus01_BP_C::SasArmoredDoorMinus01' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, TextRender3) == 0x0003A0, "Member 'ASasDoor_SoloMinus01_BP_C::TextRender3' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, SasFrontFrame) == 0x0003A8, "Member 'ASasDoor_SoloMinus01_BP_C::SasFrontFrame' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, RBBoxNavMeshBlocking) == 0x0003B0, "Member 'ASasDoor_SoloMinus01_BP_C::RBBoxNavMeshBlocking' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, RBObjectiveActor) == 0x0003B8, "Member 'ASasDoor_SoloMinus01_BP_C::RBObjectiveActor' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, DefaultSceneRoot) == 0x0003C0, "Member 'ASasDoor_SoloMinus01_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Timeline_1_Door2_067DAB35401A3567F63D0AB0BDE9E4DD) == 0x0003C8, "Member 'ASasDoor_SoloMinus01_BP_C::Timeline_1_Door2_067DAB35401A3567F63D0AB0BDE9E4DD' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Timeline_1_DoorOne_067DAB35401A3567F63D0AB0BDE9E4DD) == 0x0003CC, "Member 'ASasDoor_SoloMinus01_BP_C::Timeline_1_DoorOne_067DAB35401A3567F63D0AB0BDE9E4DD' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Timeline_1__Direction_067DAB35401A3567F63D0AB0BDE9E4DD) == 0x0003D0, "Member 'ASasDoor_SoloMinus01_BP_C::Timeline_1__Direction_067DAB35401A3567F63D0AB0BDE9E4DD' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Timeline_1) == 0x0003D8, "Member 'ASasDoor_SoloMinus01_BP_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Timeline_0_Door2_A804723B4B5C1C2E01A91C8D5BF1B9D4) == 0x0003E0, "Member 'ASasDoor_SoloMinus01_BP_C::Timeline_0_Door2_A804723B4B5C1C2E01A91C8D5BF1B9D4' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Timeline_0_DoorOne_A804723B4B5C1C2E01A91C8D5BF1B9D4) == 0x0003E4, "Member 'ASasDoor_SoloMinus01_BP_C::Timeline_0_DoorOne_A804723B4B5C1C2E01A91C8D5BF1B9D4' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Timeline_0__Direction_A804723B4B5C1C2E01A91C8D5BF1B9D4) == 0x0003E8, "Member 'ASasDoor_SoloMinus01_BP_C::Timeline_0__Direction_A804723B4B5C1C2E01A91C8D5BF1B9D4' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Timeline_0) == 0x0003F0, "Member 'ASasDoor_SoloMinus01_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, GreenLights) == 0x0003F8, "Member 'ASasDoor_SoloMinus01_BP_C::GreenLights' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, RedLights) == 0x000408, "Member 'ASasDoor_SoloMinus01_BP_C::RedLights' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Screen_Size) == 0x000418, "Member 'ASasDoor_SoloMinus01_BP_C::Screen_Size' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, RenderTextureSize) == 0x000420, "Member 'ASasDoor_SoloMinus01_BP_C::RenderTextureSize' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Canvas) == 0x000428, "Member 'ASasDoor_SoloMinus01_BP_C::Canvas' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, CanvasRender) == 0x000430, "Member 'ASasDoor_SoloMinus01_BP_C::CanvasRender' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Material) == 0x000438, "Member 'ASasDoor_SoloMinus01_BP_C::Material' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, ArmoredDoorOpened) == 0x000440, "Member 'ASasDoor_SoloMinus01_BP_C::ArmoredDoorOpened' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, CurrentText) == 0x000448, "Member 'ASasDoor_SoloMinus01_BP_C::CurrentText' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, AutoCloseWhenPlayerInside) == 0x000460, "Member 'ASasDoor_SoloMinus01_BP_C::AutoCloseWhenPlayerInside' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, AutoOpenWhenPlayerInside) == 0x000461, "Member 'ASasDoor_SoloMinus01_BP_C::AutoOpenWhenPlayerInside' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, ForceTubeLightDisabled) == 0x000462, "Member 'ASasDoor_SoloMinus01_BP_C::ForceTubeLightDisabled' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Fog_Intensity) == 0x000464, "Member 'ASasDoor_SoloMinus01_BP_C::Fog_Intensity' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, NewVar_0) == 0x000468, "Member 'ASasDoor_SoloMinus01_BP_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, Kerning) == 0x000480, "Member 'ASasDoor_SoloMinus01_BP_C::Kerning' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, FontScale) == 0x000484, "Member 'ASasDoor_SoloMinus01_BP_C::FontScale' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, AlwaysOpenedArmoredDoors) == 0x000488, "Member 'ASasDoor_SoloMinus01_BP_C::AlwaysOpenedArmoredDoors' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, IsPlayingArmoredDoorAnimation) == 0x000489, "Member 'ASasDoor_SoloMinus01_BP_C::IsPlayingArmoredDoorAnimation' has a wrong offset!");
static_assert(offsetof(ASasDoor_SoloMinus01_BP_C, IsMainLobbySAS) == 0x00048A, "Member 'ASasDoor_SoloMinus01_BP_C::IsMainLobbySAS' has a wrong offset!");

}

