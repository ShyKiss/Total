#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBController_BP

#include "Basic.hpp"


namespace SDK::Params
{

// Function RBController_BP.RBController_BP_C.ExecuteUbergraph_RBController_BP
// 0x0004 (0x0004 - 0x0000)
struct RBController_BP_C_ExecuteUbergraph_RBController_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBController_BP_C_ExecuteUbergraph_RBController_BP) == 0x000004, "Wrong alignment on RBController_BP_C_ExecuteUbergraph_RBController_BP");
static_assert(sizeof(RBController_BP_C_ExecuteUbergraph_RBController_BP) == 0x000004, "Wrong size on RBController_BP_C_ExecuteUbergraph_RBController_BP");
static_assert(offsetof(RBController_BP_C_ExecuteUbergraph_RBController_BP, EntryPoint) == 0x000000, "Member 'RBController_BP_C_ExecuteUbergraph_RBController_BP::EntryPoint' has a wrong offset!");

// Function RBController_BP.RBController_BP_C.MouseWheel__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct RBController_BP_C_MouseWheel__DelegateSignature final
{
public:
	float                                         Axis;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shift;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Alt;                                               // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBController_BP_C_MouseWheel__DelegateSignature) == 0x000004, "Wrong alignment on RBController_BP_C_MouseWheel__DelegateSignature");
static_assert(sizeof(RBController_BP_C_MouseWheel__DelegateSignature) == 0x000008, "Wrong size on RBController_BP_C_MouseWheel__DelegateSignature");
static_assert(offsetof(RBController_BP_C_MouseWheel__DelegateSignature, Axis) == 0x000000, "Member 'RBController_BP_C_MouseWheel__DelegateSignature::Axis' has a wrong offset!");
static_assert(offsetof(RBController_BP_C_MouseWheel__DelegateSignature, Shift) == 0x000004, "Member 'RBController_BP_C_MouseWheel__DelegateSignature::Shift' has a wrong offset!");
static_assert(offsetof(RBController_BP_C_MouseWheel__DelegateSignature, Alt) == 0x000005, "Member 'RBController_BP_C_MouseWheel__DelegateSignature::Alt' has a wrong offset!");

}

