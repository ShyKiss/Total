#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Denizen_Face_Expression_Notify

#include "Basic.hpp"


namespace SDK::Params
{

// Function Denizen_Face_Expression_Notify.Denizen_Face_Expression_Notify_C.ExpressionNotifyChange
// 0x0040 (0x0040 - 0x0000)
struct Denizen_Face_Expression_Notify_C_ExpressionNotifyChange final
{
public:
	class USkeletalMeshComponent*                 Mesh_Comp;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3272[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseAnimatedQuestGiver_BP_C*           K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3273[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuestFace_animBP_C*                    K2Node_DynamicCast_AsQuest_Face_Anim_BP;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange) == 0x000008, "Wrong alignment on Denizen_Face_Expression_Notify_C_ExpressionNotifyChange");
static_assert(sizeof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange) == 0x000040, "Wrong size on Denizen_Face_Expression_Notify_C_ExpressionNotifyChange");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange, Mesh_Comp) == 0x000000, "Member 'Denizen_Face_Expression_Notify_C_ExpressionNotifyChange::Mesh_Comp' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange, ReturnValue) == 0x000008, "Member 'Denizen_Face_Expression_Notify_C_ExpressionNotifyChange::ReturnValue' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'Denizen_Face_Expression_Notify_C_ExpressionNotifyChange::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange, K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP) == 0x000018, "Member 'Denizen_Face_Expression_Notify_C_ExpressionNotifyChange::K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Denizen_Face_Expression_Notify_C_ExpressionNotifyChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'Denizen_Face_Expression_Notify_C_ExpressionNotifyChange::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange, K2Node_DynamicCast_AsQuest_Face_Anim_BP) == 0x000030, "Member 'Denizen_Face_Expression_Notify_C_ExpressionNotifyChange::K2Node_DynamicCast_AsQuest_Face_Anim_BP' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_ExpressionNotifyChange, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Denizen_Face_Expression_Notify_C_ExpressionNotifyChange::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Denizen_Face_Expression_Notify.Denizen_Face_Expression_Notify_C.Received_Notify
// 0x0018 (0x0018 - 0x0000)
struct Denizen_Face_Expression_Notify_C_Received_Notify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExpressionNotifyChange_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Denizen_Face_Expression_Notify_C_Received_Notify) == 0x000008, "Wrong alignment on Denizen_Face_Expression_Notify_C_Received_Notify");
static_assert(sizeof(Denizen_Face_Expression_Notify_C_Received_Notify) == 0x000018, "Wrong size on Denizen_Face_Expression_Notify_C_Received_Notify");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_Received_Notify, MeshComp) == 0x000000, "Member 'Denizen_Face_Expression_Notify_C_Received_Notify::MeshComp' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_Received_Notify, Animation) == 0x000008, "Member 'Denizen_Face_Expression_Notify_C_Received_Notify::Animation' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_Received_Notify, ReturnValue) == 0x000010, "Member 'Denizen_Face_Expression_Notify_C_Received_Notify::ReturnValue' has a wrong offset!");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_Received_Notify, CallFunc_ExpressionNotifyChange_ReturnValue) == 0x000011, "Member 'Denizen_Face_Expression_Notify_C_Received_Notify::CallFunc_ExpressionNotifyChange_ReturnValue' has a wrong offset!");

// Function Denizen_Face_Expression_Notify.Denizen_Face_Expression_Notify_C.GetNotifyName
// 0x0010 (0x0010 - 0x0000)
struct Denizen_Face_Expression_Notify_C_GetNotifyName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Denizen_Face_Expression_Notify_C_GetNotifyName) == 0x000008, "Wrong alignment on Denizen_Face_Expression_Notify_C_GetNotifyName");
static_assert(sizeof(Denizen_Face_Expression_Notify_C_GetNotifyName) == 0x000010, "Wrong size on Denizen_Face_Expression_Notify_C_GetNotifyName");
static_assert(offsetof(Denizen_Face_Expression_Notify_C_GetNotifyName, ReturnValue) == 0x000000, "Member 'Denizen_Face_Expression_Notify_C_GetNotifyName::ReturnValue' has a wrong offset!");

}

