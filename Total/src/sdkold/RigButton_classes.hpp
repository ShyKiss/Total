#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RigButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RigButton.RigButton_C
// 0x0250 (0x04B0 - 0x0260)
class URigButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       buyAnimation;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             ActiveSkillName;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ActiveSkillTier;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundImage;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundImage_1;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CostAmountText;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurrencyTypeImage;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedIcon;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedImage;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocussedBottomLeftBracket_1;                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocussedBottomRightBracket_1;                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocussedTopLeftBracket_1;                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocussedTopRightBracket_1;                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           HoverBackground;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HoverBackgroundImage;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_163;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                InteractionButton;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockImage;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NewNotification;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           SelectionBorderPanel;                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsLoadout;                                        // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsHeader;                                         // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_373F[0x6];                                     // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuUpgradeItemInfo                   UpgradeInfo;                                       // 0x0320(0x0128)(Edit, BlueprintVisible)
	int32                                         CurrentUpgradeTier;                                // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsGamepad;                                        // 0x044C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHovered;                                          // 0x044D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFocused;                                          // 0x044E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEquipped;                                         // 0x044F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Item_Id;                                           // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleased;                                        // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         CostAmount;                                        // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasNew;                                           // 0x04AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNewItem;                                         // 0x04AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetIsNew(bool InIsNew);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void IsConsideredHovered(bool* bConsideredHovered);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void ComputeTier();
	void SetFocused(bool bInFocused);
	void SetHovered(bool bInHovered);
	void Refresh();
	void Init(bool Param_bIsLoadout, class FName ItemId, bool Param_bIsHeader);
	void Setup();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__RigButton_InteractionButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__RigButton_InteractionButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__RigButton_InteractionButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__RigButton_InteractionButton_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__RigButton_InteractionButton_K2Node_ComponentBoundEvent_4_OnButtonReleasedEvent__DelegateSignature();
	void Construct();
	void OnMenuInputSourceChanged();
	void Destruct();
	void ExecuteUbergraph_RigButton(int32 EntryPoint);
	void OnReleased__DelegateSignature(class FName ItemId, EActiveSkillType ActiveSkillType);
	void OnPressed__DelegateSignature(class FName ItemId, EActiveSkillType ActiveSkillType);
	void OnClicked__DelegateSignature(class FName ItemId, EActiveSkillType ActiveSkillType);
	void OnUnhovered__DelegateSignature(class FName ItemId, EActiveSkillType ActiveSkillType);
	void OnHovered__DelegateSignature(class FName ItemId, EActiveSkillType ActiveSkillType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RigButton_C">();
	}
	static class URigButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigButton_C>();
	}
};
static_assert(alignof(URigButton_C) == 0x000008, "Wrong alignment on URigButton_C");
static_assert(sizeof(URigButton_C) == 0x0004B0, "Wrong size on URigButton_C");
static_assert(offsetof(URigButton_C, UberGraphFrame) == 0x000260, "Member 'URigButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URigButton_C, buyAnimation) == 0x000268, "Member 'URigButton_C::buyAnimation' has a wrong offset!");
static_assert(offsetof(URigButton_C, ActiveSkillName) == 0x000270, "Member 'URigButton_C::ActiveSkillName' has a wrong offset!");
static_assert(offsetof(URigButton_C, ActiveSkillTier) == 0x000278, "Member 'URigButton_C::ActiveSkillTier' has a wrong offset!");
static_assert(offsetof(URigButton_C, BackgroundImage) == 0x000280, "Member 'URigButton_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(URigButton_C, BackgroundImage_1) == 0x000288, "Member 'URigButton_C::BackgroundImage_1' has a wrong offset!");
static_assert(offsetof(URigButton_C, CostAmountText) == 0x000290, "Member 'URigButton_C::CostAmountText' has a wrong offset!");
static_assert(offsetof(URigButton_C, CurrencyTypeImage) == 0x000298, "Member 'URigButton_C::CurrencyTypeImage' has a wrong offset!");
static_assert(offsetof(URigButton_C, EquippedIcon) == 0x0002A0, "Member 'URigButton_C::EquippedIcon' has a wrong offset!");
static_assert(offsetof(URigButton_C, EquippedImage) == 0x0002A8, "Member 'URigButton_C::EquippedImage' has a wrong offset!");
static_assert(offsetof(URigButton_C, FocussedBottomLeftBracket_1) == 0x0002B0, "Member 'URigButton_C::FocussedBottomLeftBracket_1' has a wrong offset!");
static_assert(offsetof(URigButton_C, FocussedBottomRightBracket_1) == 0x0002B8, "Member 'URigButton_C::FocussedBottomRightBracket_1' has a wrong offset!");
static_assert(offsetof(URigButton_C, FocussedTopLeftBracket_1) == 0x0002C0, "Member 'URigButton_C::FocussedTopLeftBracket_1' has a wrong offset!");
static_assert(offsetof(URigButton_C, FocussedTopRightBracket_1) == 0x0002C8, "Member 'URigButton_C::FocussedTopRightBracket_1' has a wrong offset!");
static_assert(offsetof(URigButton_C, HoverBackground) == 0x0002D0, "Member 'URigButton_C::HoverBackground' has a wrong offset!");
static_assert(offsetof(URigButton_C, HoverBackgroundImage) == 0x0002D8, "Member 'URigButton_C::HoverBackgroundImage' has a wrong offset!");
static_assert(offsetof(URigButton_C, Icon) == 0x0002E0, "Member 'URigButton_C::Icon' has a wrong offset!");
static_assert(offsetof(URigButton_C, Image) == 0x0002E8, "Member 'URigButton_C::Image' has a wrong offset!");
static_assert(offsetof(URigButton_C, Image_163) == 0x0002F0, "Member 'URigButton_C::Image_163' has a wrong offset!");
static_assert(offsetof(URigButton_C, InteractionButton) == 0x0002F8, "Member 'URigButton_C::InteractionButton' has a wrong offset!");
static_assert(offsetof(URigButton_C, LockImage) == 0x000300, "Member 'URigButton_C::LockImage' has a wrong offset!");
static_assert(offsetof(URigButton_C, NewNotification) == 0x000308, "Member 'URigButton_C::NewNotification' has a wrong offset!");
static_assert(offsetof(URigButton_C, SelectionBorderPanel) == 0x000310, "Member 'URigButton_C::SelectionBorderPanel' has a wrong offset!");
static_assert(offsetof(URigButton_C, bIsLoadout) == 0x000318, "Member 'URigButton_C::bIsLoadout' has a wrong offset!");
static_assert(offsetof(URigButton_C, bIsHeader) == 0x000319, "Member 'URigButton_C::bIsHeader' has a wrong offset!");
static_assert(offsetof(URigButton_C, UpgradeInfo) == 0x000320, "Member 'URigButton_C::UpgradeInfo' has a wrong offset!");
static_assert(offsetof(URigButton_C, CurrentUpgradeTier) == 0x000448, "Member 'URigButton_C::CurrentUpgradeTier' has a wrong offset!");
static_assert(offsetof(URigButton_C, bIsGamepad) == 0x00044C, "Member 'URigButton_C::bIsGamepad' has a wrong offset!");
static_assert(offsetof(URigButton_C, bHovered) == 0x00044D, "Member 'URigButton_C::bHovered' has a wrong offset!");
static_assert(offsetof(URigButton_C, bFocused) == 0x00044E, "Member 'URigButton_C::bFocused' has a wrong offset!");
static_assert(offsetof(URigButton_C, bEquipped) == 0x00044F, "Member 'URigButton_C::bEquipped' has a wrong offset!");
static_assert(offsetof(URigButton_C, Item_Id) == 0x000450, "Member 'URigButton_C::Item_Id' has a wrong offset!");
static_assert(offsetof(URigButton_C, OnHovered) == 0x000458, "Member 'URigButton_C::OnHovered' has a wrong offset!");
static_assert(offsetof(URigButton_C, OnUnhovered) == 0x000468, "Member 'URigButton_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(URigButton_C, OnClicked) == 0x000478, "Member 'URigButton_C::OnClicked' has a wrong offset!");
static_assert(offsetof(URigButton_C, OnPressed) == 0x000488, "Member 'URigButton_C::OnPressed' has a wrong offset!");
static_assert(offsetof(URigButton_C, OnReleased) == 0x000498, "Member 'URigButton_C::OnReleased' has a wrong offset!");
static_assert(offsetof(URigButton_C, CostAmount) == 0x0004A8, "Member 'URigButton_C::CostAmount' has a wrong offset!");
static_assert(offsetof(URigButton_C, bWasNew) == 0x0004AC, "Member 'URigButton_C::bWasNew' has a wrong offset!");
static_assert(offsetof(URigButton_C, IsNewItem) == 0x0004AD, "Member 'URigButton_C::IsNewItem' has a wrong offset!");

}

