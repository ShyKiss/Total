#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModuleMeshData

#include "Basic.hpp"

#include "ModuleAlternativeMeshData_structs.hpp"


namespace SDK
{

// UserDefinedStruct ModuleMeshData.ModuleMeshData
// 0x0020 (0x0020 - 0x0000)
struct FModuleMeshData final
{
public:
	class UStaticMesh*                            Mesh_6_6DA698EE4D7D9FAA5C983C9AD3EA5F30;           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FModuleAlternativeMeshData>     MeshAlteratif_16_F197DA984E508A9BA03884B3FF8F5C03; // 0x0008(0x0010)(Edit, BlueprintVisible)
	float                                         MeshSize_7_F259B0FB42FC3100A87A15A0144A11FC;       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CenterOffset_8_31C03F6741D174323CFBF1889D91A821;   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FModuleMeshData) == 0x000008, "Wrong alignment on FModuleMeshData");
static_assert(sizeof(FModuleMeshData) == 0x000020, "Wrong size on FModuleMeshData");
static_assert(offsetof(FModuleMeshData, Mesh_6_6DA698EE4D7D9FAA5C983C9AD3EA5F30) == 0x000000, "Member 'FModuleMeshData::Mesh_6_6DA698EE4D7D9FAA5C983C9AD3EA5F30' has a wrong offset!");
static_assert(offsetof(FModuleMeshData, MeshAlteratif_16_F197DA984E508A9BA03884B3FF8F5C03) == 0x000008, "Member 'FModuleMeshData::MeshAlteratif_16_F197DA984E508A9BA03884B3FF8F5C03' has a wrong offset!");
static_assert(offsetof(FModuleMeshData, MeshSize_7_F259B0FB42FC3100A87A15A0144A11FC) == 0x000018, "Member 'FModuleMeshData::MeshSize_7_F259B0FB42FC3100A87A15A0144A11FC' has a wrong offset!");
static_assert(offsetof(FModuleMeshData, CenterOffset_8_31C03F6741D174323CFBF1889D91A821) == 0x00001C, "Member 'FModuleMeshData::CenterOffset_8_31C03F6741D174323CFBF1889D91A821' has a wrong offset!");

}

