#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LobbyStretcher_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LobbyStretcher_BP.LobbyStretcher_BP_C
// 0x00E0 (0x0710 - 0x0630)
class ALobbyStretcher_BP_C final : public ARBBackgroundCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   LobbyFakeStretcherSequenceCollisionMinus01;        // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPropOptimizerComponent*              RBPropOptimizer;                                   // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          NavCollision;                                      // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 UpperBody;                                         // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LowerBody;                                         // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Scientist;                                         // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Stretcher;                                         // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFemale;                                          // 0x0678(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FC[0x3];                                     // 0x0679(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Randomizer_ID;                                     // 0x067C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMesh*>                  Male_Heads;                                        // 0x0680(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USkeletalMesh*>                  Male_UpperBodies;                                  // 0x0690(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USkeletalMesh*>                  Male_LowerBodies;                                  // 0x06A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USkeletalMesh*>                  Female_Heads;                                      // 0x06B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USkeletalMesh*>                  Female_UpperBodies;                                // 0x06C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USkeletalMesh*>                  Female_LowerBodies;                                // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          UseCollisions;                                     // 0x06E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FD[0x3];                                     // 0x06E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Handle1;                                           // 0x06E4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Handle2;                                           // 0x06F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevDelta;                                         // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Orientation;                                       // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnDelta;                                         // 0x0704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NavCollisionLastUpdateTimestamp;                   // 0x0708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevYaw;                                           // 0x070C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Update_Nav_Collision();
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_LobbyStretcher_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LobbyStretcher_BP_C">();
	}
	static class ALobbyStretcher_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobbyStretcher_BP_C>();
	}
};
static_assert(alignof(ALobbyStretcher_BP_C) == 0x000010, "Wrong alignment on ALobbyStretcher_BP_C");
static_assert(sizeof(ALobbyStretcher_BP_C) == 0x000710, "Wrong size on ALobbyStretcher_BP_C");
static_assert(offsetof(ALobbyStretcher_BP_C, UberGraphFrame) == 0x000630, "Member 'ALobbyStretcher_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, LobbyFakeStretcherSequenceCollisionMinus01) == 0x000638, "Member 'ALobbyStretcher_BP_C::LobbyFakeStretcherSequenceCollisionMinus01' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, RBPropOptimizer) == 0x000640, "Member 'ALobbyStretcher_BP_C::RBPropOptimizer' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, NavCollision) == 0x000648, "Member 'ALobbyStretcher_BP_C::NavCollision' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, UpperBody) == 0x000650, "Member 'ALobbyStretcher_BP_C::UpperBody' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Head) == 0x000658, "Member 'ALobbyStretcher_BP_C::Head' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, LowerBody) == 0x000660, "Member 'ALobbyStretcher_BP_C::LowerBody' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Scientist) == 0x000668, "Member 'ALobbyStretcher_BP_C::Scientist' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Stretcher) == 0x000670, "Member 'ALobbyStretcher_BP_C::Stretcher' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, IsFemale) == 0x000678, "Member 'ALobbyStretcher_BP_C::IsFemale' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Randomizer_ID) == 0x00067C, "Member 'ALobbyStretcher_BP_C::Randomizer_ID' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Male_Heads) == 0x000680, "Member 'ALobbyStretcher_BP_C::Male_Heads' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Male_UpperBodies) == 0x000690, "Member 'ALobbyStretcher_BP_C::Male_UpperBodies' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Male_LowerBodies) == 0x0006A0, "Member 'ALobbyStretcher_BP_C::Male_LowerBodies' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Female_Heads) == 0x0006B0, "Member 'ALobbyStretcher_BP_C::Female_Heads' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Female_UpperBodies) == 0x0006C0, "Member 'ALobbyStretcher_BP_C::Female_UpperBodies' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Female_LowerBodies) == 0x0006D0, "Member 'ALobbyStretcher_BP_C::Female_LowerBodies' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, UseCollisions) == 0x0006E0, "Member 'ALobbyStretcher_BP_C::UseCollisions' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Handle1) == 0x0006E4, "Member 'ALobbyStretcher_BP_C::Handle1' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Handle2) == 0x0006F0, "Member 'ALobbyStretcher_BP_C::Handle2' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, PrevDelta) == 0x0006FC, "Member 'ALobbyStretcher_BP_C::PrevDelta' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, Orientation) == 0x000700, "Member 'ALobbyStretcher_BP_C::Orientation' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, TurnDelta) == 0x000704, "Member 'ALobbyStretcher_BP_C::TurnDelta' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, NavCollisionLastUpdateTimestamp) == 0x000708, "Member 'ALobbyStretcher_BP_C::NavCollisionLastUpdateTimestamp' has a wrong offset!");
static_assert(offsetof(ALobbyStretcher_BP_C, PrevYaw) == 0x00070C, "Member 'ALobbyStretcher_BP_C::PrevYaw' has a wrong offset!");

}

