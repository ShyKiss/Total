#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScoreDetailLineEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ScoreDetailLineEntry.ScoreDetailLineEntry_C.Show
// 0x0008 (0x0008 - 0x0000)
struct ScoreDetailLineEntry_C_Show final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScoreDetailLineEntry_C_Show) == 0x000008, "Wrong alignment on ScoreDetailLineEntry_C_Show");
static_assert(sizeof(ScoreDetailLineEntry_C_Show) == 0x000008, "Wrong size on ScoreDetailLineEntry_C_Show");
static_assert(offsetof(ScoreDetailLineEntry_C_Show, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'ScoreDetailLineEntry_C_Show::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function ScoreDetailLineEntry.ScoreDetailLineEntry_C.Setup
// 0x0080 (0x0080 - 0x0000)
struct ScoreDetailLineEntry_C_Setup final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0058(0x0028)()
};
static_assert(alignof(ScoreDetailLineEntry_C_Setup) == 0x000008, "Wrong alignment on ScoreDetailLineEntry_C_Setup");
static_assert(sizeof(ScoreDetailLineEntry_C_Setup) == 0x000080, "Wrong size on ScoreDetailLineEntry_C_Setup");
static_assert(offsetof(ScoreDetailLineEntry_C_Setup, Temp_bool_Variable) == 0x000000, "Member 'ScoreDetailLineEntry_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ScoreDetailLineEntry_C_Setup, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'ScoreDetailLineEntry_C_Setup::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ScoreDetailLineEntry_C_Setup, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'ScoreDetailLineEntry_C_Setup::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ScoreDetailLineEntry_C_Setup, K2Node_Select_Default) == 0x000058, "Member 'ScoreDetailLineEntry_C_Setup::K2Node_Select_Default' has a wrong offset!");

// Function ScoreDetailLineEntry.ScoreDetailLineEntry_C.Init
// 0x0038 (0x0038 - 0x0000)
struct ScoreDetailLineEntry_C_Init final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Value;                                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Param_bPositive;                                   // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bStartVisible;                                     // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37A4[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScoreDetailLineEntry_C_Init) == 0x000008, "Wrong alignment on ScoreDetailLineEntry_C_Init");
static_assert(sizeof(ScoreDetailLineEntry_C_Init) == 0x000038, "Wrong size on ScoreDetailLineEntry_C_Init");
static_assert(offsetof(ScoreDetailLineEntry_C_Init, Param_Name) == 0x000000, "Member 'ScoreDetailLineEntry_C_Init::Param_Name' has a wrong offset!");
static_assert(offsetof(ScoreDetailLineEntry_C_Init, Value) == 0x000018, "Member 'ScoreDetailLineEntry_C_Init::Value' has a wrong offset!");
static_assert(offsetof(ScoreDetailLineEntry_C_Init, Param_bPositive) == 0x000030, "Member 'ScoreDetailLineEntry_C_Init::Param_bPositive' has a wrong offset!");
static_assert(offsetof(ScoreDetailLineEntry_C_Init, bStartVisible) == 0x000031, "Member 'ScoreDetailLineEntry_C_Init::bStartVisible' has a wrong offset!");
static_assert(offsetof(ScoreDetailLineEntry_C_Init, CallFunc_SelectFloat_ReturnValue) == 0x000034, "Member 'ScoreDetailLineEntry_C_Init::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function ScoreDetailLineEntry.ScoreDetailLineEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ScoreDetailLineEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScoreDetailLineEntry_C_PreConstruct) == 0x000001, "Wrong alignment on ScoreDetailLineEntry_C_PreConstruct");
static_assert(sizeof(ScoreDetailLineEntry_C_PreConstruct) == 0x000001, "Wrong size on ScoreDetailLineEntry_C_PreConstruct");
static_assert(offsetof(ScoreDetailLineEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ScoreDetailLineEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ScoreDetailLineEntry.ScoreDetailLineEntry_C.ExecuteUbergraph_ScoreDetailLineEntry
// 0x0008 (0x0008 - 0x0000)
struct ScoreDetailLineEntry_C_ExecuteUbergraph_ScoreDetailLineEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScoreDetailLineEntry_C_ExecuteUbergraph_ScoreDetailLineEntry) == 0x000004, "Wrong alignment on ScoreDetailLineEntry_C_ExecuteUbergraph_ScoreDetailLineEntry");
static_assert(sizeof(ScoreDetailLineEntry_C_ExecuteUbergraph_ScoreDetailLineEntry) == 0x000008, "Wrong size on ScoreDetailLineEntry_C_ExecuteUbergraph_ScoreDetailLineEntry");
static_assert(offsetof(ScoreDetailLineEntry_C_ExecuteUbergraph_ScoreDetailLineEntry, EntryPoint) == 0x000000, "Member 'ScoreDetailLineEntry_C_ExecuteUbergraph_ScoreDetailLineEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(ScoreDetailLineEntry_C_ExecuteUbergraph_ScoreDetailLineEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ScoreDetailLineEntry_C_ExecuteUbergraph_ScoreDetailLineEntry::K2Node_Event_IsDesignTime' has a wrong offset!");

}

