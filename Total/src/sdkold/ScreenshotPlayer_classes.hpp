#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScreenshotPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ScreenshotPlayer.ScreenshotPlayer_C
// 0x0110 (0x0358 - 0x0248)
class AScreenshotPlayer_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Watch;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 GloveMesh3P;                                       // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Arm2;                                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Arm1;                                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Legs2;                                             // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ItemSkeletalMesh;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ItemStaticMesh;                                    // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 NightVision;                                       // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ESOP_Lever;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ESOP_Battery;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ESOP_Apparatus;                                    // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Straps;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ESOP;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Legs;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Torso;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Sequence;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Offset;                                            // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          NightVisionOn;                                     // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341A[0x3];                                     // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          HeadMesh;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USkeletalMesh*                          TorsoMesh;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USkeletalMesh*                          LegMesh;                                           // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USkeletalMesh*                          StrapsMesh;                                        // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UStaticMesh*                            BatteryMesh;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UStaticMesh*                            ApparatusMesh;                                     // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          FirstPersonCharacter;                              // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_341B[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            ItemMeshStatic;                                    // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          ItemMeshSkeletal;                                  // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageIntensity1;                                  // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageIntensity2;                                  // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageIntensity3;                                  // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageRadius1;                                     // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageRadius2;                                     // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageRadius3;                                     // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HandBloodIntensity;                                // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetBlood();
	void UpdateStaticMesh(class UStaticMeshComponent* Component, class UStaticMesh* Param_Mesh);
	void UpdateSkeletalMesh(class USkeletalMeshComponent* Component, class USkeletalMesh* Param_Mesh);
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_ScreenshotPlayer(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ScreenshotPlayer_C">();
	}
	static class AScreenshotPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AScreenshotPlayer_C>();
	}
};
static_assert(alignof(AScreenshotPlayer_C) == 0x000008, "Wrong alignment on AScreenshotPlayer_C");
static_assert(sizeof(AScreenshotPlayer_C) == 0x000358, "Wrong size on AScreenshotPlayer_C");
static_assert(offsetof(AScreenshotPlayer_C, UberGraphFrame) == 0x000248, "Member 'AScreenshotPlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Watch) == 0x000250, "Member 'AScreenshotPlayer_C::Watch' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, GloveMesh3P) == 0x000258, "Member 'AScreenshotPlayer_C::GloveMesh3P' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Arm2) == 0x000260, "Member 'AScreenshotPlayer_C::Arm2' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Arm1) == 0x000268, "Member 'AScreenshotPlayer_C::Arm1' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Legs2) == 0x000270, "Member 'AScreenshotPlayer_C::Legs2' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, ItemSkeletalMesh) == 0x000278, "Member 'AScreenshotPlayer_C::ItemSkeletalMesh' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, ItemStaticMesh) == 0x000280, "Member 'AScreenshotPlayer_C::ItemStaticMesh' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, NightVision) == 0x000288, "Member 'AScreenshotPlayer_C::NightVision' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, ESOP_Lever) == 0x000290, "Member 'AScreenshotPlayer_C::ESOP_Lever' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, ESOP_Battery) == 0x000298, "Member 'AScreenshotPlayer_C::ESOP_Battery' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, ESOP_Apparatus) == 0x0002A0, "Member 'AScreenshotPlayer_C::ESOP_Apparatus' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Straps) == 0x0002A8, "Member 'AScreenshotPlayer_C::Straps' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, ESOP) == 0x0002B0, "Member 'AScreenshotPlayer_C::ESOP' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Legs) == 0x0002B8, "Member 'AScreenshotPlayer_C::Legs' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Torso) == 0x0002C0, "Member 'AScreenshotPlayer_C::Torso' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Head) == 0x0002C8, "Member 'AScreenshotPlayer_C::Head' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Mesh) == 0x0002D0, "Member 'AScreenshotPlayer_C::Mesh' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, DefaultSceneRoot) == 0x0002D8, "Member 'AScreenshotPlayer_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Sequence) == 0x0002E0, "Member 'AScreenshotPlayer_C::Sequence' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, Offset) == 0x0002E8, "Member 'AScreenshotPlayer_C::Offset' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, NightVisionOn) == 0x0002EC, "Member 'AScreenshotPlayer_C::NightVisionOn' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, HeadMesh) == 0x0002F0, "Member 'AScreenshotPlayer_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, TorsoMesh) == 0x0002F8, "Member 'AScreenshotPlayer_C::TorsoMesh' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, LegMesh) == 0x000300, "Member 'AScreenshotPlayer_C::LegMesh' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, StrapsMesh) == 0x000308, "Member 'AScreenshotPlayer_C::StrapsMesh' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, BatteryMesh) == 0x000310, "Member 'AScreenshotPlayer_C::BatteryMesh' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, ApparatusMesh) == 0x000318, "Member 'AScreenshotPlayer_C::ApparatusMesh' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, FirstPersonCharacter) == 0x000320, "Member 'AScreenshotPlayer_C::FirstPersonCharacter' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, ItemMeshStatic) == 0x000328, "Member 'AScreenshotPlayer_C::ItemMeshStatic' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, ItemMeshSkeletal) == 0x000330, "Member 'AScreenshotPlayer_C::ItemMeshSkeletal' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, DamageIntensity1) == 0x000338, "Member 'AScreenshotPlayer_C::DamageIntensity1' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, DamageIntensity2) == 0x00033C, "Member 'AScreenshotPlayer_C::DamageIntensity2' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, DamageIntensity3) == 0x000340, "Member 'AScreenshotPlayer_C::DamageIntensity3' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, DamageRadius1) == 0x000344, "Member 'AScreenshotPlayer_C::DamageRadius1' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, DamageRadius2) == 0x000348, "Member 'AScreenshotPlayer_C::DamageRadius2' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, DamageRadius3) == 0x00034C, "Member 'AScreenshotPlayer_C::DamageRadius3' has a wrong offset!");
static_assert(offsetof(AScreenshotPlayer_C, HandBloodIntensity) == 0x000350, "Member 'AScreenshotPlayer_C::HandBloodIntensity' has a wrong offset!");

}

