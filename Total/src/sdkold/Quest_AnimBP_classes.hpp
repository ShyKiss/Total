#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Quest_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Body_GestureState_Enum_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass quest_AnimBP.quest_AnimBP_C
// 0x1400 (0x16C0 - 0x02C0)
class UQuest_AnimBP_C : public UAnimInstance
{
public:
	uint8                                         Pad_3BAD[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x04D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0500(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0528(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x05A8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x05D8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0658(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x06D8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0758(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x07D8(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0880(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x08B0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0930(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x0960(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x0A48(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x0B30(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0C18(0x00E8)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x0D00(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0DA8(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0DD8(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0E80(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0F00(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0F80(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1000(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1080(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x10B0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1198(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x11C8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x12B0(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x12E0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x13C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x13F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1478(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x14A8(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1558(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1588(0x00B0)()
	class ABaseAnimatedQuestGiver_BP_C*           QuestGiver;                                        // 0x1638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          BodyGestureAnim;                                   // 0x1640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          GestureHeadAnim;                                   // 0x1648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBody_GestureState_Enum                       BodyGestureState;                                  // 0x1650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGesturing;                                       // 0x1651(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInMenu;                                          // 0x1652(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInGameIdle;                                      // 0x1653(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInServingPlayerState;                            // 0x1654(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BAE[0x3];                                     // 0x1655(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequence*>                  ReactToPlayerActionSequences;                      // 0x1658(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         WhichNoticeBreaker;                                // 0x1668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WhichMenuBreaker;                                  // 0x166C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WhichWaitBreaker;                                  // 0x1670(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BAF[0x4];                                     // 0x1674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ReactionMontage;                                   // 0x1678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReacting;                                        // 0x1680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPurchasing;                                      // 0x1681(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTaskAccept;                                      // 0x1682(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTaskRemove;                                      // 0x1683(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTaskComplete;                                    // 0x1684(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsBusy;                                            // 0x1685(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShopping;                                        // 0x1686(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNewCategory;                                     // 0x1687(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCategoryUp;                                      // 0x1688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFirstTimeShopping;                               // 0x1689(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFirstTimeServing;                                // 0x168A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCallingOut;                                      // 0x168B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsProgressDone;                                    // 0x168C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStoryProgress;                                   // 0x168D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNoticing;                                        // 0x168E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsExitSudden;                                      // 0x168F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TaskRemoveProgress;                                // 0x1690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStanding;                                        // 0x1694(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasGainedLevel;                                    // 0x1695(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasGainedXp;                                       // 0x1696(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB0[0x1];                                     // 0x1697(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LookYaw;                                           // 0x1698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookAlpha;                                         // 0x169C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookPitch;                                         // 0x16A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTellingStory;                                    // 0x16A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB1[0x3];                                     // 0x16A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBarlow_Novel_AnimBP_C*                 Novel;                                             // 0x16A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMenuBreaking;                                    // 0x16B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB2[0x7];                                     // 0x16B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer;                                             // 0x16B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void EvaluateGraphExposedInputs_ExecuteUbergraph_quest_AnimBP_AnimGraphNode_TransitionResult_54DE063948BB931ED73B60A6CA91381A();
	void AnimNotify_ReactionReset();
	void CategoryChangeUP();
	void CategoryChangeDOWN();
	void StartShopping();
	void StopShopping();
	void StartServing();
	void AnimNotify_TaskReset();
	void AcceptTask();
	void CompleteTask();
	void AnimNotify_CategoryReset();
	void AnimNotify_ProgressReset();
	void BuySomethin();
	void AnimNotify_PurchaseDone();
	void BodyFeed();
	void AnimNotify_IsWaitBreaker();
	void AnimNotify_IsNoticeBreaker();
	void StartMenuState();
	void StopMenuState();
	void AnimNotify_IsMenuBreaker();
	void AnimNotify_IsMenuIdle();
	void GoToBreaker();
	void ExecuteUbergraph_quest_AnimBP(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_quest_AnimBP_AnimGraphNode_TransitionResult_248DA7DC478306ABB09205B30955FD08();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_quest_AnimBP_AnimGraphNode_TransitionResult_CF7098FF4FAD73EA823ED68BDBB8838C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_quest_AnimBP_AnimGraphNode_TransitionResult_FA4FB40B408066EC5CCBC99638BD8F72();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void AnimNotify_InGameIdle();
	void AnimNotify_ExitGameIdle();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_quest_AnimBP_AnimGraphNode_TransitionResult_1EAD20D9478CB251B162C79680F1644C();
	void ReactToPlayerPurchase();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_quest_AnimBP_AnimGraphNode_TransitionResult_763DC7EF410C9A88DD19E4BD84B86A67();
	void FinishedPlayingReaction(class UAnimMontage* Montage, bool bInterrupted);
	void AnimNotify_InServingPlayer();
	void AnimNotify_ExitServingPlayer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"quest_AnimBP_C">();
	}
	static class UQuest_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuest_AnimBP_C>();
	}
};
static_assert(alignof(UQuest_AnimBP_C) == 0x000010, "Wrong alignment on UQuest_AnimBP_C");
static_assert(sizeof(UQuest_AnimBP_C) == 0x0016C0, "Wrong size on UQuest_AnimBP_C");
static_assert(offsetof(UQuest_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UQuest_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UQuest_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x0002F8, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x000320, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x000348, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000370, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000398, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x0003C0, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x0003E8, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000410, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000438, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000460, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000488, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x0004B0, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x0004D8, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000500, "Member 'UQuest_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x000528, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult_9) == 0x0005A8, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x0005D8, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x000658, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x0006D8, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000758, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendListByInt_2) == 0x0007D8, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult_8) == 0x000880, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x0008B0, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult_7) == 0x000930, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x000960, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x000A48, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x000B30, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000C18, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendListByInt_1) == 0x000D00, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult_6) == 0x000DA8, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendListByInt) == 0x000DD8, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000E80, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000F00, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000F80, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001000, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult_5) == 0x001080, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0010B0, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult_4) == 0x001198, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0011C8, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult_3) == 0x0012B0, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x0012E0, "Member 'UQuest_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult_2) == 0x0013C8, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0013F8, "Member 'UQuest_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult_1) == 0x001478, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x0014A8, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateResult) == 0x001558, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, AnimGraphNode_StateMachine) == 0x001588, "Member 'UQuest_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, QuestGiver) == 0x001638, "Member 'UQuest_AnimBP_C::QuestGiver' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, BodyGestureAnim) == 0x001640, "Member 'UQuest_AnimBP_C::BodyGestureAnim' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, GestureHeadAnim) == 0x001648, "Member 'UQuest_AnimBP_C::GestureHeadAnim' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, BodyGestureState) == 0x001650, "Member 'UQuest_AnimBP_C::BodyGestureState' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsGesturing) == 0x001651, "Member 'UQuest_AnimBP_C::IsGesturing' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsInMenu) == 0x001652, "Member 'UQuest_AnimBP_C::IsInMenu' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsInGameIdle) == 0x001653, "Member 'UQuest_AnimBP_C::IsInGameIdle' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsInServingPlayerState) == 0x001654, "Member 'UQuest_AnimBP_C::IsInServingPlayerState' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, ReactToPlayerActionSequences) == 0x001658, "Member 'UQuest_AnimBP_C::ReactToPlayerActionSequences' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, WhichNoticeBreaker) == 0x001668, "Member 'UQuest_AnimBP_C::WhichNoticeBreaker' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, WhichMenuBreaker) == 0x00166C, "Member 'UQuest_AnimBP_C::WhichMenuBreaker' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, WhichWaitBreaker) == 0x001670, "Member 'UQuest_AnimBP_C::WhichWaitBreaker' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, ReactionMontage) == 0x001678, "Member 'UQuest_AnimBP_C::ReactionMontage' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsReacting) == 0x001680, "Member 'UQuest_AnimBP_C::IsReacting' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsPurchasing) == 0x001681, "Member 'UQuest_AnimBP_C::IsPurchasing' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsTaskAccept) == 0x001682, "Member 'UQuest_AnimBP_C::IsTaskAccept' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsTaskRemove) == 0x001683, "Member 'UQuest_AnimBP_C::IsTaskRemove' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsTaskComplete) == 0x001684, "Member 'UQuest_AnimBP_C::IsTaskComplete' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsBusy) == 0x001685, "Member 'UQuest_AnimBP_C::IsBusy' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsShopping) == 0x001686, "Member 'UQuest_AnimBP_C::IsShopping' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsNewCategory) == 0x001687, "Member 'UQuest_AnimBP_C::IsNewCategory' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsCategoryUp) == 0x001688, "Member 'UQuest_AnimBP_C::IsCategoryUp' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsFirstTimeShopping) == 0x001689, "Member 'UQuest_AnimBP_C::IsFirstTimeShopping' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsFirstTimeServing) == 0x00168A, "Member 'UQuest_AnimBP_C::IsFirstTimeServing' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsCallingOut) == 0x00168B, "Member 'UQuest_AnimBP_C::IsCallingOut' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsProgressDone) == 0x00168C, "Member 'UQuest_AnimBP_C::IsProgressDone' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsStoryProgress) == 0x00168D, "Member 'UQuest_AnimBP_C::IsStoryProgress' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsNoticing) == 0x00168E, "Member 'UQuest_AnimBP_C::IsNoticing' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsExitSudden) == 0x00168F, "Member 'UQuest_AnimBP_C::IsExitSudden' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, TaskRemoveProgress) == 0x001690, "Member 'UQuest_AnimBP_C::TaskRemoveProgress' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsStanding) == 0x001694, "Member 'UQuest_AnimBP_C::IsStanding' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, HasGainedLevel) == 0x001695, "Member 'UQuest_AnimBP_C::HasGainedLevel' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, HasGainedXp) == 0x001696, "Member 'UQuest_AnimBP_C::HasGainedXp' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, LookYaw) == 0x001698, "Member 'UQuest_AnimBP_C::LookYaw' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, LookAlpha) == 0x00169C, "Member 'UQuest_AnimBP_C::LookAlpha' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, LookPitch) == 0x0016A0, "Member 'UQuest_AnimBP_C::LookPitch' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsTellingStory) == 0x0016A4, "Member 'UQuest_AnimBP_C::IsTellingStory' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, Novel) == 0x0016A8, "Member 'UQuest_AnimBP_C::Novel' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, IsMenuBreaking) == 0x0016B0, "Member 'UQuest_AnimBP_C::IsMenuBreaking' has a wrong offset!");
static_assert(offsetof(UQuest_AnimBP_C, Timer) == 0x0016B8, "Member 'UQuest_AnimBP_C::Timer' has a wrong offset!");

}

