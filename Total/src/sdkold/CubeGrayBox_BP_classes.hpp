#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CubeGrayBox_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GrayBoxMat_ENU_structs.hpp"
#include "GrayBoxShape_ENU_structs.hpp"
#include "MeshPopulate_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CubeGrayBox_BP.CubeGrayBox_BP_C
// 0x0038 (0x0418 - 0x03E0)
class ACubeGrayBox_BP_C final : public AMeshPopulate_Parent_C
{
public:
	class UStaticMeshComponent*                   Cube;                                              // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EGrayBoxMat_ENU                               SetMaterial;                                       // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3926[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LockSize;                                          // 0x03EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseOverwriteMaterials;                             // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGrayBoxShape_ENU                             ShapeSelection;                                    // 0x03F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3927[0x6];                                     // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            MeshA;                                             // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            MeshB;                                             // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HiddenInGame;                                      // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CastShadow;                                        // 0x0411(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseMaterialOverride;                               // 0x0412(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CubeGrayBox_BP_C">();
	}
	static class ACubeGrayBox_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACubeGrayBox_BP_C>();
	}
};
static_assert(alignof(ACubeGrayBox_BP_C) == 0x000008, "Wrong alignment on ACubeGrayBox_BP_C");
static_assert(sizeof(ACubeGrayBox_BP_C) == 0x000418, "Wrong size on ACubeGrayBox_BP_C");
static_assert(offsetof(ACubeGrayBox_BP_C, Cube) == 0x0003E0, "Member 'ACubeGrayBox_BP_C::Cube' has a wrong offset!");
static_assert(offsetof(ACubeGrayBox_BP_C, SetMaterial) == 0x0003E8, "Member 'ACubeGrayBox_BP_C::SetMaterial' has a wrong offset!");
static_assert(offsetof(ACubeGrayBox_BP_C, LockSize) == 0x0003EC, "Member 'ACubeGrayBox_BP_C::LockSize' has a wrong offset!");
static_assert(offsetof(ACubeGrayBox_BP_C, UseOverwriteMaterials) == 0x0003F8, "Member 'ACubeGrayBox_BP_C::UseOverwriteMaterials' has a wrong offset!");
static_assert(offsetof(ACubeGrayBox_BP_C, ShapeSelection) == 0x0003F9, "Member 'ACubeGrayBox_BP_C::ShapeSelection' has a wrong offset!");
static_assert(offsetof(ACubeGrayBox_BP_C, MeshA) == 0x000400, "Member 'ACubeGrayBox_BP_C::MeshA' has a wrong offset!");
static_assert(offsetof(ACubeGrayBox_BP_C, MeshB) == 0x000408, "Member 'ACubeGrayBox_BP_C::MeshB' has a wrong offset!");
static_assert(offsetof(ACubeGrayBox_BP_C, HiddenInGame) == 0x000410, "Member 'ACubeGrayBox_BP_C::HiddenInGame' has a wrong offset!");
static_assert(offsetof(ACubeGrayBox_BP_C, CastShadow) == 0x000411, "Member 'ACubeGrayBox_BP_C::CastShadow' has a wrong offset!");
static_assert(offsetof(ACubeGrayBox_BP_C, UseMaterialOverride) == 0x000412, "Member 'ACubeGrayBox_BP_C::UseMaterialOverride' has a wrong offset!");

}

