#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArmWrestleSpectator_Ghost_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ArmWrestleSpectator_Ghost_AnimBP.ArmWrestleSpectator_Ghost_AnimBP_C
// 0x10A0 (0x1390 - 0x02F0)
class UArmWrestleSpectator_Ghost_AnimBP_C : public URBGhostAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02F8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0328(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0350(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0378(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0418(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0468(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x0490(0x0190)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0620(0x0080)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_5;                    // 0x06A0(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0748(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x07C8(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_4;                    // 0x07F8(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x08A0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0920(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x09A0(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_3;                    // 0x09D0(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0A78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0AF8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0B78(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x0BA8(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0C50(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0CD0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0D50(0x0030)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x0D80(0x0190)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x0F10(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0FB8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1038(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x10B8(0x0030)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x10E8(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1190(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1210(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1290(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x12C0(0x00B0)()
	bool                                          IsShopping;                                        // 0x1370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOut;                                              // 0x1371(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsCheering;                                       // 0x1372(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsAngry;                                          // 0x1373(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPounding;                                       // 0x1374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BAA[0x3];                                     // 0x1375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpectatorAnimStyleIndex;                           // 0x1378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookPitch;                                         // 0x137C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookYaw;                                           // 0x1380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ManageLookAt();
	bool FinishGhost(EGhostFinishReason FinishReason, int32 GhostFinishCustomReason);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWrestleSpectator_Ghost_AnimBP_AnimGraphNode_TransitionResult_4F51A7C94F42142CA814908C71A93227();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWrestleSpectator_Ghost_AnimBP_AnimGraphNode_TransitionResult_309205454121CBD9A4949C97D4287D8B();
	void AnimNotify_Toto();
	void AnimNotify_Exit();
	void AnimNotify_Emote();
	void AnimNotify_EnteredPounding();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ArmWrestleSpectator_Ghost_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ArmWrestleSpectator_Ghost_AnimBP_C">();
	}
	static class UArmWrestleSpectator_Ghost_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArmWrestleSpectator_Ghost_AnimBP_C>();
	}
};
static_assert(alignof(UArmWrestleSpectator_Ghost_AnimBP_C) == 0x000010, "Wrong alignment on UArmWrestleSpectator_Ghost_AnimBP_C");
static_assert(sizeof(UArmWrestleSpectator_Ghost_AnimBP_C) == 0x001390, "Wrong size on UArmWrestleSpectator_Ghost_AnimBP_C");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, UberGraphFrame) == 0x0002F0, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_Root) == 0x0002F8, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000328, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000350, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000378, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0003A0, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0003C8, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0003F0, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000418, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000440, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000468, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x000490, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x000620, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_BlendListByInt_5) == 0x0006A0, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_BlendListByInt_5' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x000748, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_StateResult_5) == 0x0007C8, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_BlendListByInt_4) == 0x0007F8, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_BlendListByInt_4' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x0008A0, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x000920, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_StateResult_4) == 0x0009A0, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_BlendListByInt_3) == 0x0009D0, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_BlendListByInt_3' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000A78, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000AF8, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_StateResult_3) == 0x000B78, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_BlendListByInt_2) == 0x000BA8, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000C50, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000CD0, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000D50, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x000D80, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_BlendListByInt_1) == 0x000F10, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000FB8, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x001038, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_StateResult_1) == 0x0010B8, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_BlendListByInt) == 0x0010E8, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001190, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x001210, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_StateResult) == 0x001290, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, AnimGraphNode_StateMachine) == 0x0012C0, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, IsShopping) == 0x001370, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::IsShopping' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, bOut) == 0x001371, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::bOut' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, bIsCheering) == 0x001372, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::bIsCheering' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, bIsAngry) == 0x001373, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::bIsAngry' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, bIsPounding) == 0x001374, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::bIsPounding' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, SpectatorAnimStyleIndex) == 0x001378, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::SpectatorAnimStyleIndex' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, LookPitch) == 0x00137C, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::LookPitch' has a wrong offset!");
static_assert(offsetof(UArmWrestleSpectator_Ghost_AnimBP_C, LookYaw) == 0x001380, "Member 'UArmWrestleSpectator_Ghost_AnimBP_C::LookYaw' has a wrong offset!");

}

