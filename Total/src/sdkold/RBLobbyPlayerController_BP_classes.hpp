#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBLobbyPlayerController_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CellCustomizationObjectType_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C
// 0x0020 (0x4588 - 0x4568)
class ARBLobbyPlayerController_BP_C final : public ARBLobbyPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x4568(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	FMulticastInlineDelegateProperty_             MouseWheel;                                        // 0x4570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class URBMenuWidget*                          CameraModeMenu;                                    // 0x4580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_Shift_MouseScrollDown_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Alt_MouseScrollDown_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_Shift_MouseScrollUp_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Alt_MouseScrollUp_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void SetNewFlyingObjectLength(float Length, class AFlyingObject_C* Actor);
	void ServerSetNewCustomizableCellObject(ECellCustomizationObjectType ObjectType, int32 Param_Index, class ACustomizableCellObject_C* Actor);
	void SetCustomizeDecalSettings(class ALobbyDecalActorMinus01_BP_C* Actor, float Rotation, float Scale);
	void ChangeCustomizeDecalMaterial(class ALobbyDecalActorMinus01_BP_C* Decal, bool Next);
	void StopLobbyAmbiance();
	void RequestTravelToPendingMatchWithDelay();
	void ExecuteUbergraph_RBLobbyPlayerController_BP(int32 EntryPoint);
	void MouseWheel__DelegateSignature(float Axis, bool Shift, bool Alt);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RBLobbyPlayerController_BP_C">();
	}
	static class ARBLobbyPlayerController_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARBLobbyPlayerController_BP_C>();
	}
};
static_assert(alignof(ARBLobbyPlayerController_BP_C) == 0x000008, "Wrong alignment on ARBLobbyPlayerController_BP_C");
static_assert(sizeof(ARBLobbyPlayerController_BP_C) == 0x004588, "Wrong size on ARBLobbyPlayerController_BP_C");
static_assert(offsetof(ARBLobbyPlayerController_BP_C, UberGraphFrame) == 0x004568, "Member 'ARBLobbyPlayerController_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARBLobbyPlayerController_BP_C, MouseWheel) == 0x004570, "Member 'ARBLobbyPlayerController_BP_C::MouseWheel' has a wrong offset!");
static_assert(offsetof(ARBLobbyPlayerController_BP_C, CameraModeMenu) == 0x004580, "Member 'ARBLobbyPlayerController_BP_C::CameraModeMenu' has a wrong offset!");

}

