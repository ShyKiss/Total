#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBChessBoardPanelComponentBase

#include "Basic.hpp"

#include "RBChessBoardPanelComponentBase_classes.hpp"
#include "RBChessBoardPanelComponentBase_parameters.hpp"


namespace SDK
{

// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.SetPlayerAnimState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChessGamePlayerAnimState               PlayerAnimState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::SetPlayerAnimState(EChessGamePlayerAnimState PlayerAnimState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "SetPlayerAnimState");

	Params::RBChessBoardPanelComponentBase_C_SetPlayerAnimState Parms{};

	Parms.PlayerAnimState = PlayerAnimState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.RefreshAllOtherPiecesPositions
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URBChessPieceComponent*           PieceToIgnore                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::RefreshAllOtherPiecesPositions(class URBChessPieceComponent* PieceToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "RefreshAllOtherPiecesPositions");

	Params::RBChessBoardPanelComponentBase_C_RefreshAllOtherPiecesPositions Parms{};

	Parms.PieceToIgnore = PieceToIgnore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.MovePieceWithHand
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URBChessPieceComponent*           Piece                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::MovePieceWithHand(class URBChessPieceComponent* Piece)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "MovePieceWithHand");

	Params::RBChessBoardPanelComponentBase_C_MovePieceWithHand Parms{};

	Parms.Piece = Piece;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.SetClockTickingSoundActivated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActivated                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URBChessBoardPanelComponentBase_C::SetClockTickingSoundActivated(bool bActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "SetClockTickingSoundActivated");

	Params::RBChessBoardPanelComponentBase_C_SetClockTickingSoundActivated Parms{};

	Parms.bActivated = bActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.ManageClockTickingSound
// (Public, BlueprintCallable, BlueprintEvent)

void URBChessBoardPanelComponentBase_C::ManageClockTickingSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "ManageClockTickingSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.OnChessGameStateChangedEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChessGameState                         ChessGameState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::OnChessGameStateChangedEvent(EChessGameState ChessGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "OnChessGameStateChangedEvent");

	Params::RBChessBoardPanelComponentBase_C_OnChessGameStateChangedEvent Parms{};

	Parms.ChessGameState = ChessGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.SnapGhostAnimsToState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBPawn*                          RBPawn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::SnapGhostAnimsToState(class ARBPawn* RBPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "SnapGhostAnimsToState");

	Params::RBChessBoardPanelComponentBase_C_SnapGhostAnimsToState Parms{};

	Parms.RBPawn = RBPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.OnRep_bWon
// (BlueprintCallable, BlueprintEvent)

void URBChessBoardPanelComponentBase_C::OnRep_bWon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "OnRep_bWon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.OnRep_bGameTied
// (BlueprintCallable, BlueprintEvent)

void URBChessBoardPanelComponentBase_C::OnRep_bGameTied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "OnRep_bGameTied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.GetChessGhostAnimBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UChessPanel_GhostAnimBP_C*        NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::GetChessGhostAnimBP(class UChessPanel_GhostAnimBP_C** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "GetChessGhostAnimBP");

	Params::RBChessBoardPanelComponentBase_C_GetChessGhostAnimBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.OnChessGameEndReasonChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChessGameEndReason                     ChessGameEndReason                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EChessTeam                              WinningTeam                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::OnChessGameEndReasonChanged(EChessGameEndReason ChessGameEndReason, EChessTeam WinningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "OnChessGameEndReasonChanged");

	Params::RBChessBoardPanelComponentBase_C_OnChessGameEndReasonChanged Parms{};

	Parms.ChessGameEndReason = ChessGameEndReason;
	Parms.WinningTeam = WinningTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.ChessGameTurnTypeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChessGameTurnType                      NewTurnType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARBChessBoard*                    Param_ChessBoard                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::ChessGameTurnTypeChanged(EChessGameTurnType NewTurnType, class ARBChessBoard* Param_ChessBoard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "ChessGameTurnTypeChanged");

	Params::RBChessBoardPanelComponentBase_C_ChessGameTurnTypeChanged Parms{};

	Parms.NewTurnType = NewTurnType;
	Parms.Param_ChessBoard = Param_ChessBoard;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.FlashKingRed
// (Public, BlueprintCallable, BlueprintEvent)

void URBChessBoardPanelComponentBase_C::FlashKingRed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "FlashKingRed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.ManageHoldingPiece
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void URBChessBoardPanelComponentBase_C::ManageHoldingPiece()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "ManageHoldingPiece");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.TryRemoveHud
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Player1                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URBChessBoardPanelComponentBase_C::TryRemoveHud(bool Player1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "TryRemoveHud");

	Params::RBChessBoardPanelComponentBase_C_TryRemoveHud Parms{};

	Parms.Player1 = Player1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.ShowHUD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URBChessBoardPanelComponentBase_C::ShowHUD(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "ShowHUD");

	Params::RBChessBoardPanelComponentBase_C_ShowHUD Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.SetSpinningPromotingPiece
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChessPieceType                         PieceType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::SetSpinningPromotingPiece(EChessPieceType PieceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "SetSpinningPromotingPiece");

	Params::RBChessBoardPanelComponentBase_C_SetSpinningPromotingPiece Parms{};

	Parms.PieceType = PieceType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.PromotingPieceFocusChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EChessPieceType                         PieceType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::PromotingPieceFocusChanged(EChessPieceType PieceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "PromotingPieceFocusChanged");

	Params::RBChessBoardPanelComponentBase_C_PromotingPieceFocusChanged Parms{};

	Parms.PieceType = PieceType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "ReceiveTick");

	Params::RBChessBoardPanelComponentBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.Event_PlayerEnteredGame
// (Event, Public, BlueprintEvent)
// Parameters:
// class ARBPlayer*                        Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::Event_PlayerEnteredGame(class ARBPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "Event_PlayerEnteredGame");

	Params::RBChessBoardPanelComponentBase_C_Event_PlayerEnteredGame Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.Event_PlayerLeftGame
// (Event, Public, BlueprintEvent)
// Parameters:
// class ARBPlayer*                        Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::Event_PlayerLeftGame(class ARBPlayer* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "Event_PlayerLeftGame");

	Params::RBChessBoardPanelComponentBase_C_Event_PlayerLeftGame Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.OnWorldPopulateFinished
// (Event, Public, BlueprintCallable, BlueprintEvent)

void URBChessBoardPanelComponentBase_C::OnWorldPopulateFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "OnWorldPopulateFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.Event_PlayerDropPieceAt
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector2D                        Coords                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::Event_PlayerDropPieceAt(const struct FVector2D& Coords)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "Event_PlayerDropPieceAt");

	Params::RBChessBoardPanelComponentBase_C_Event_PlayerDropPieceAt Parms{};

	Parms.Coords = std::move(Coords);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.Event_ShowMoveLeavesOwnKingChecked
// (Event, Public, BlueprintEvent)
// Parameters:
// class URBChessPieceComponent*           KingPiece                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::Event_ShowMoveLeavesOwnKingChecked(class URBChessPieceComponent* KingPiece)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "Event_ShowMoveLeavesOwnKingChecked");

	Params::RBChessBoardPanelComponentBase_C_Event_ShowMoveLeavesOwnKingChecked Parms{};

	Parms.KingPiece = KingPiece;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.OnChessGameTurnTypeChanged_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EChessGameTurnType                      ChessGameTurnType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::OnChessGameTurnTypeChanged_Event_0(EChessGameTurnType ChessGameTurnType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "OnChessGameTurnTypeChanged_Event_0");

	Params::RBChessBoardPanelComponentBase_C_OnChessGameTurnTypeChanged_Event_0 Parms{};

	Parms.ChessGameTurnType = ChessGameTurnType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.BindEvents
// (BlueprintCallable, BlueprintEvent)

void URBChessBoardPanelComponentBase_C::BindEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "BindEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.BP_OnPawnInteractingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ARBPawn*                          NewPawnInteracting                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::BP_OnPawnInteractingChanged(class ARBPawn* NewPawnInteracting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "BP_OnPawnInteractingChanged");

	Params::RBChessBoardPanelComponentBase_C_BP_OnPawnInteractingChanged Parms{};

	Parms.NewPawnInteracting = NewPawnInteracting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.BP_ChessGamePlayerAnimStateChanged
// (Event, Public, BlueprintEvent)

void URBChessBoardPanelComponentBase_C::BP_ChessGamePlayerAnimStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "BP_ChessGamePlayerAnimStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "ReceiveEndPlay");

	Params::RBChessBoardPanelComponentBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.ExecuteUbergraph_RBChessBoardPanelComponentBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URBChessBoardPanelComponentBase_C::ExecuteUbergraph_RBChessBoardPanelComponentBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "ExecuteUbergraph_RBChessBoardPanelComponentBase");

	Params::RBChessBoardPanelComponentBase_C_ExecuteUbergraph_RBChessBoardPanelComponentBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.GetPingEnabled
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    OutIsEnabled                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool URBChessBoardPanelComponentBase_C::GetPingEnabled(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, bool* OutIsEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "GetPingEnabled");

	Params::RBChessBoardPanelComponentBase_C_GetPingEnabled Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutIsEnabled != nullptr)
		*OutIsEnabled = Parms.OutIsEnabled;

	return Parms.ReturnValue;
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.GetPingItemName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             OutName                                                (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool URBChessBoardPanelComponentBase_C::GetPingItemName(class FText* OutName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "GetPingItemName");

	Params::RBChessBoardPanelComponentBase_C_GetPingItemName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutName != nullptr)
		*OutName = std::move(Parms.OutName);

	return Parms.ReturnValue;
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.GetPlayerPingData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FPlayerPingData                  OutData                                                (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool URBChessBoardPanelComponentBase_C::GetPlayerPingData(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FPlayerPingData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "GetPlayerPingData");

	Params::RBChessBoardPanelComponentBase_C_GetPlayerPingData Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.GetPlayerPingWorldLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ARBPlayer*                        PingOwner                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool URBChessBoardPanelComponentBase_C::GetPlayerPingWorldLocation(class ARBPlayer* PingOwner, const struct FHitResult& HitResult, struct FVector* OutLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "GetPlayerPingWorldLocation");

	Params::RBChessBoardPanelComponentBase_C_GetPlayerPingWorldLocation Parms{};

	Parms.PingOwner = PingOwner;
	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	return Parms.ReturnValue;
}


// Function RBChessBoardPanelComponentBase.RBChessBoardPanelComponentBase_C.ShouldBPTick
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool URBChessBoardPanelComponentBase_C::ShouldBPTick() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RBChessBoardPanelComponentBase_C", "ShouldBPTick");

	Params::RBChessBoardPanelComponentBase_C_ShouldBPTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

