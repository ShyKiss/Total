#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChessClock_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "OPP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ChessClock_BP.ChessClock_BP_C
// 0x0060 (0x02A8 - 0x0248)
class AChessClock_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ChessClockTimerButtonMinus02;                      // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ChessClockTimerButtonMinus01;                      // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Player1SecondsNeedle;                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Player1MinuteNeedle;                               // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene1;                                            // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Player2SecondsNeedle;                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Player2MinuteNeedle;                               // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ChessClockTimerMinus01;                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ARBChessBoardBase_C*                    ChessBoard;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool OnWorldPopulateFinishedTimeSliced();
	void OnTeamTurnChanged(EChessTeam Team);
	void OnGameStateChanged(EChessGameState ChessGameState);
	void ResetButtons();
	void SetButtonsTurnTo(bool bPlayer1);
	void UpdateTime();
	void SetTimeForPlayer(float TimeSeconds, bool IsPlayer1);
	void OnWorldFullyLoaded();
	void ReceiveTick(float DeltaSeconds);
	void OnWorldPopulateFinished();
	void SwitchButtonDelayed(bool bPlayer1);
	void ExecuteUbergraph_ChessClock_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChessClock_BP_C">();
	}
	static class AChessClock_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AChessClock_BP_C>();
	}
};
static_assert(alignof(AChessClock_BP_C) == 0x000008, "Wrong alignment on AChessClock_BP_C");
static_assert(sizeof(AChessClock_BP_C) == 0x0002A8, "Wrong size on AChessClock_BP_C");
static_assert(offsetof(AChessClock_BP_C, UberGraphFrame) == 0x000248, "Member 'AChessClock_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, ChessClockTimerButtonMinus02) == 0x000250, "Member 'AChessClock_BP_C::ChessClockTimerButtonMinus02' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, ChessClockTimerButtonMinus01) == 0x000258, "Member 'AChessClock_BP_C::ChessClockTimerButtonMinus01' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, Player1SecondsNeedle) == 0x000260, "Member 'AChessClock_BP_C::Player1SecondsNeedle' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, Player1MinuteNeedle) == 0x000268, "Member 'AChessClock_BP_C::Player1MinuteNeedle' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, Scene1) == 0x000270, "Member 'AChessClock_BP_C::Scene1' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, Player2SecondsNeedle) == 0x000278, "Member 'AChessClock_BP_C::Player2SecondsNeedle' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, Player2MinuteNeedle) == 0x000280, "Member 'AChessClock_BP_C::Player2MinuteNeedle' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, Scene) == 0x000288, "Member 'AChessClock_BP_C::Scene' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, ChessClockTimerMinus01) == 0x000290, "Member 'AChessClock_BP_C::ChessClockTimerMinus01' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, DefaultSceneRoot) == 0x000298, "Member 'AChessClock_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AChessClock_BP_C, ChessBoard) == 0x0002A0, "Member 'AChessClock_BP_C::ChessBoard' has a wrong offset!");

}

