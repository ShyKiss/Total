#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArmWreslingTable_BP

#include "Basic.hpp"

#include "ArmWreslingTable_BP_classes.hpp"
#include "ArmWreslingTable_BP_parameters.hpp"


namespace SDK
{

// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.ArmWreslingTable_BP_AutoGenFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBPawn*                          PawnInteracting                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AArmWreslingTable_BP_C::ArmWreslingTable_BP_AutoGenFunc(class ARBPawn* PawnInteracting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "ArmWreslingTable_BP_AutoGenFunc");

	Params::ArmWreslingTable_BP_C_ArmWreslingTable_BP_AutoGenFunc Parms{};

	Parms.PawnInteracting = PawnInteracting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.ApplyNoise
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AArmWreslingTable_BP_C::ApplyNoise(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "ApplyNoise");

	Params::ArmWreslingTable_BP_C_ApplyNoise Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.ApplyVisualPush
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AArmWreslingTable_BP_C::ApplyVisualPush(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "ApplyVisualPush");

	Params::ArmWreslingTable_BP_C_ApplyVisualPush Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.SetPawnReaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Win                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class URBInteractiblePanelComponent*    SpectatorComponent                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AArmWreslingTable_BP_C::SetPawnReaction(bool Win, class URBInteractiblePanelComponent* SpectatorComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "SetPawnReaction");

	Params::ArmWreslingTable_BP_C_SetPawnReaction Parms{};

	Parms.Win = Win;
	Parms.SpectatorComponent = SpectatorComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.PlayReactions
// (Public, BlueprintCallable, BlueprintEvent)

void AArmWreslingTable_BP_C::PlayReactions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "PlayReactions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.SetTargetWinRatio
// (Public, BlueprintCallable, BlueprintEvent)

void AArmWreslingTable_BP_C::SetTargetWinRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "SetTargetWinRatio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.Reset Players
// (Public, BlueprintCallable, BlueprintEvent)

void AArmWreslingTable_BP_C::Reset_Players()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "Reset Players");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.EndRound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AArmWreslingTable_BP_C::EndRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "EndRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.StartRound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AArmWreslingTable_BP_C::StartRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "StartRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.SetPlayersRatio
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_ArmWrestleRatio                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AArmWreslingTable_BP_C::SetPlayersRatio(float Param_ArmWrestleRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "SetPlayersRatio");

	Params::ArmWreslingTable_BP_C_SetPlayersRatio Parms{};

	Parms.Param_ArmWrestleRatio = Param_ArmWrestleRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.SetPlayersReady
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReady                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AArmWreslingTable_BP_C::SetPlayersReady(bool bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "SetPlayersReady");

	Params::ArmWreslingTable_BP_C_SetPlayersReady Parms{};

	Parms.bReady = bReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.Event_OnTableStateChanged
// (Event, Protected, BlueprintEvent)

void AArmWreslingTable_BP_C::Event_OnTableStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "Event_OnTableStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.CustomEvent_0
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FArmWreslingPlayerRoundData      PlayerRoundData                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AArmWreslingTable_BP_C::CustomEvent_0(const struct FArmWreslingPlayerRoundData& PlayerRoundData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "CustomEvent_0");

	Params::ArmWreslingTable_BP_C_CustomEvent_0 Parms{};

	Parms.PlayerRoundData = std::move(PlayerRoundData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AArmWreslingTable_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "ReceiveTick");

	Params::ArmWreslingTable_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.BindOnPlayerTaunt
// (BlueprintCallable, BlueprintEvent)

void AArmWreslingTable_BP_C::BindOnPlayerTaunt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "BindOnPlayerTaunt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.SnapTableToState
// (BlueprintCallable, BlueprintEvent)

void AArmWreslingTable_BP_C::SnapTableToState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "SnapTableToState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.OnWorldPopulateFinished
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AArmWreslingTable_BP_C::OnWorldPopulateFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "OnWorldPopulateFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.ExecuteUbergraph_ArmWreslingTable_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AArmWreslingTable_BP_C::ExecuteUbergraph_ArmWreslingTable_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "ExecuteUbergraph_ArmWreslingTable_BP");

	Params::ArmWreslingTable_BP_C_ExecuteUbergraph_ArmWreslingTable_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWreslingTable_BP.ArmWreslingTable_BP_C.PlayerLeaving__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AArmWreslingTable_BP_C::PlayerLeaving__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWreslingTable_BP_C", "PlayerLeaving__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}

}

