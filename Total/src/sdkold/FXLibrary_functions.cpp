#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FXLibrary

#include "Basic.hpp"

#include "FXLibrary_classes.hpp"
#include "FXLibrary_parameters.hpp"


namespace SDK
{

// Function FXLibrary.FXLibrary_C.GetPPFXManager
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APPManager_BP_C*                  Manager                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFXLibrary_C::GetPPFXManager(class UObject* __WorldContext, class APPManager_BP_C** Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FXLibrary_C", "GetPPFXManager");

	Params::FXLibrary_C_GetPPFXManager Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Manager != nullptr)
		*Manager = Parms.Manager;
}


// Function FXLibrary.FXLibrary_C.RefreshScapegoatLights
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ProgressRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bProgressLocked                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UStaticMeshComponent*>     Meshes                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<class ULightComponent*>          Lights                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFXLibrary_C::RefreshScapegoatLights(float ProgressRatio, int32 CurrentLevel, bool bProgressLocked, TArray<class UStaticMeshComponent*>& Meshes, TArray<class ULightComponent*>& Lights, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FXLibrary_C", "RefreshScapegoatLights");

	Params::FXLibrary_C_RefreshScapegoatLights Parms{};

	Parms.ProgressRatio = ProgressRatio;
	Parms.CurrentLevel = CurrentLevel;
	Parms.bProgressLocked = bProgressLocked;
	Parms.Meshes = std::move(Meshes);
	Parms.Lights = std::move(Lights);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Meshes = std::move(Parms.Meshes);
	Lights = std::move(Parms.Lights);
}


// Function FXLibrary.FXLibrary_C.Get Scapegoat Bulb Flash Ratio
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ProgressLock                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutFlashRatio                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFXLibrary_C::Get_Scapegoat_Bulb_Flash_Ratio(float Value, bool ProgressLock, class UObject* __WorldContext, float* OutFlashRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FXLibrary_C", "Get Scapegoat Bulb Flash Ratio");

	Params::FXLibrary_C_Get_Scapegoat_Bulb_Flash_Ratio Parms{};

	Parms.Value = Value;
	Parms.ProgressLock = ProgressLock;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutFlashRatio != nullptr)
		*OutFlashRatio = Parms.OutFlashRatio;
}


// Function FXLibrary.FXLibrary_C.TrySpawnBloodSplatterDecal
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TraceForSurface                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          OriginLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceConstant*        Decal                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DecalSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RandomOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSpawned                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          DecalLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DecalNormal                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFXLibrary_C::TrySpawnBloodSplatterDecal(bool TraceForSurface, const struct FVector& OriginLocation, const struct FVector& Direction, class UMaterialInstanceConstant* Decal, float DecalSize, float RandomOffset, class UObject* __WorldContext, bool* bSpawned, struct FVector* DecalLocation, struct FVector* DecalNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FXLibrary_C", "TrySpawnBloodSplatterDecal");

	Params::FXLibrary_C_TrySpawnBloodSplatterDecal Parms{};

	Parms.TraceForSurface = TraceForSurface;
	Parms.OriginLocation = std::move(OriginLocation);
	Parms.Direction = std::move(Direction);
	Parms.Decal = Decal;
	Parms.DecalSize = DecalSize;
	Parms.RandomOffset = RandomOffset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bSpawned != nullptr)
		*bSpawned = Parms.bSpawned;

	if (DecalLocation != nullptr)
		*DecalLocation = std::move(Parms.DecalLocation);

	if (DecalNormal != nullptr)
		*DecalNormal = std::move(Parms.DecalNormal);
}


// Function FXLibrary.FXLibrary_C.GetScapegoatLockedBulbData
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   FlashRatio                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     MeshMaterialData                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     LightColor                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFXLibrary_C::GetScapegoatLockedBulbData(float FlashRatio, class UObject* __WorldContext, struct FLinearColor* MeshMaterialData, struct FLinearColor* LightColor, float* Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FXLibrary_C", "GetScapegoatLockedBulbData");

	Params::FXLibrary_C_GetScapegoatLockedBulbData Parms{};

	Parms.FlashRatio = FlashRatio;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MeshMaterialData != nullptr)
		*MeshMaterialData = std::move(Parms.MeshMaterialData);

	if (LightColor != nullptr)
		*LightColor = std::move(Parms.LightColor);

	if (Intensity != nullptr)
		*Intensity = Parms.Intensity;
}


// Function FXLibrary.FXLibrary_C.GetScapegoatBulbData
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   FlashRatio                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     MeshMaterialColor                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     LightColor                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LightIntensity                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFXLibrary_C::GetScapegoatBulbData(float FlashRatio, class UObject* __WorldContext, struct FLinearColor* MeshMaterialColor, struct FLinearColor* LightColor, float* LightIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FXLibrary_C", "GetScapegoatBulbData");

	Params::FXLibrary_C_GetScapegoatBulbData Parms{};

	Parms.FlashRatio = FlashRatio;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MeshMaterialColor != nullptr)
		*MeshMaterialColor = std::move(Parms.MeshMaterialColor);

	if (LightColor != nullptr)
		*LightColor = std::move(Parms.LightColor);

	if (LightIntensity != nullptr)
		*LightIntensity = Parms.LightIntensity;
}

}

