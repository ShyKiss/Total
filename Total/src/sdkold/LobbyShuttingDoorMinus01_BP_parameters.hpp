#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LobbyShuttingDoorMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LobbyShuttingDoor-01_BP.LobbyShuttingDoor-01_BP_C.UpdateAllowedPlayer
// 0x0038 (0x0038 - 0x0000)
struct LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer final
{
public:
	class ARBPlayer*                              ReleasingPlayer;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E67[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBLobbyPlayerState*                    CallFunc_GetPlayerReleasePlayerState_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E68[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer) == 0x000008, "Wrong alignment on LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer");
static_assert(sizeof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer) == 0x000038, "Wrong size on LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, ReleasingPlayer) == 0x000000, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::ReleasingPlayer' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x000010, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, CallFunc_GetPlayerReleasePlayerState_ReturnValue) == 0x000018, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::CallFunc_GetPlayerReleasePlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, K2Node_DynamicCast_AsRB_Player) == 0x000028, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'LobbyShuttingDoorMinus01_BP_C_UpdateAllowedPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LobbyShuttingDoor-01_BP.LobbyShuttingDoor-01_BP_C.SetIgnoreActor
// 0x0010 (0x0010 - 0x0000)
struct LobbyShuttingDoorMinus01_BP_C_SetIgnoreActor final
{
public:
	class ARBPlayer*                              Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ignore;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyShuttingDoorMinus01_BP_C_SetIgnoreActor) == 0x000008, "Wrong alignment on LobbyShuttingDoorMinus01_BP_C_SetIgnoreActor");
static_assert(sizeof(LobbyShuttingDoorMinus01_BP_C_SetIgnoreActor) == 0x000010, "Wrong size on LobbyShuttingDoorMinus01_BP_C_SetIgnoreActor");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_SetIgnoreActor, Actor) == 0x000000, "Member 'LobbyShuttingDoorMinus01_BP_C_SetIgnoreActor::Actor' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_SetIgnoreActor, Ignore) == 0x000008, "Member 'LobbyShuttingDoorMinus01_BP_C_SetIgnoreActor::Ignore' has a wrong offset!");

// Function LobbyShuttingDoor-01_BP.LobbyShuttingDoor-01_BP_C.B Should Bars be Locked
// 0x0068 (0x0068 - 0x0000)
struct LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked final
{
public:
	bool                                          bShouldBeBlocked;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasBlockingPlayer;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E69[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBLobbyPlayerState*                    CallFunc_GetPlayerReleasePlayerState_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6A[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6C[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLobbyPlayerState*                    K2Node_DynamicCast_AsRB_Lobby_Player_State;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked) == 0x000008, "Wrong alignment on LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked");
static_assert(sizeof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked) == 0x000068, "Wrong size on LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, bShouldBeBlocked) == 0x000000, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::bShouldBeBlocked' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, bHasBlockingPlayer) == 0x000001, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::bHasBlockingPlayer' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, Temp_int_Array_Index_Variable) == 0x000004, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x000010, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, CallFunc_GetPlayerReleasePlayerState_ReturnValue) == 0x000018, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::CallFunc_GetPlayerReleasePlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000020, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, CallFunc_Array_Get_Item) == 0x000038, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, K2Node_DynamicCast_AsRB_Player) == 0x000048, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, K2Node_DynamicCast_AsRB_Lobby_Player_State) == 0x000058, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::K2Node_DynamicCast_AsRB_Lobby_Player_State' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000061, "Member 'LobbyShuttingDoorMinus01_BP_C_B_Should_Bars_be_Locked::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function LobbyShuttingDoor-01_BP.LobbyShuttingDoor-01_BP_C.BndEvt__LobbyShuttingDoor-01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function LobbyShuttingDoor-01_BP.LobbyShuttingDoor-01_BP_C.BndEvt__LobbyShuttingDoor-01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'LobbyShuttingDoorMinus01_BP_C_BndEvt__LobbyShuttingDoorMinus01_BP_Trigger_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function LobbyShuttingDoor-01_BP.LobbyShuttingDoor-01_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct LobbyShuttingDoorMinus01_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyShuttingDoorMinus01_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on LobbyShuttingDoorMinus01_BP_C_ReceiveTick");
static_assert(sizeof(LobbyShuttingDoorMinus01_BP_C_ReceiveTick) == 0x000004, "Wrong size on LobbyShuttingDoorMinus01_BP_C_ReceiveTick");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'LobbyShuttingDoorMinus01_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function LobbyShuttingDoor-01_BP.LobbyShuttingDoor-01_BP_C.SetBarsLocked
// 0x0001 (0x0001 - 0x0000)
struct LobbyShuttingDoorMinus01_BP_C_SetBarsLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyShuttingDoorMinus01_BP_C_SetBarsLocked) == 0x000001, "Wrong alignment on LobbyShuttingDoorMinus01_BP_C_SetBarsLocked");
static_assert(sizeof(LobbyShuttingDoorMinus01_BP_C_SetBarsLocked) == 0x000001, "Wrong size on LobbyShuttingDoorMinus01_BP_C_SetBarsLocked");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_SetBarsLocked, Locked) == 0x000000, "Member 'LobbyShuttingDoorMinus01_BP_C_SetBarsLocked::Locked' has a wrong offset!");

// Function LobbyShuttingDoor-01_BP.LobbyShuttingDoor-01_BP_C.ExecuteUbergraph_LobbyShuttingDoor-01_BP
// 0x0220 (0x0220 - 0x0000)
struct LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6E[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E70[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0040(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_B_Should_Bars_be_Locked_bShouldBeBlocked; // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E71[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0194(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Locked;                         // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP) == 0x000008, "Wrong alignment on LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP");
static_assert(sizeof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP) == 0x000220, "Wrong size on LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, EntryPoint) == 0x000000, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, Temp_delegate_Variable) == 0x000004, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x000018, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000020, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000028, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000030, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000038, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x00003C, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000040, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000C8, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x0000D0, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x0000D8, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000E0, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_Event_DeltaSeconds) == 0x0000E4, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, CallFunc_Lerp_ReturnValue) == 0x0000E8, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, CallFunc_MakeVector_ReturnValue) == 0x0000EC, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000F8, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000FC, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, CallFunc_MakeVector_ReturnValue_1) == 0x000184, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, CallFunc_B_Should_Bars_be_Locked_bShouldBeBlocked) == 0x000190, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::CallFunc_B_Should_Bars_be_Locked_bShouldBeBlocked' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000194, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, K2Node_CustomEvent_Locked) == 0x00021C, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::K2Node_CustomEvent_Locked' has a wrong offset!");
static_assert(offsetof(LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00021D, "Member 'LobbyShuttingDoorMinus01_BP_C_ExecuteUbergraph_LobbyShuttingDoorMinus01_BP::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

}

