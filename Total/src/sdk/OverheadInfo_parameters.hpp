#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OverheadInfo

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function OverheadInfo.OverheadInfo_C.ExecuteUbergraph_OverheadInfo
// 0x0008 (0x0008 - 0x0000)
struct OverheadInfo_C_ExecuteUbergraph_OverheadInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OverheadInfo_C_ExecuteUbergraph_OverheadInfo) == 0x000004, "Wrong alignment on OverheadInfo_C_ExecuteUbergraph_OverheadInfo");
static_assert(sizeof(OverheadInfo_C_ExecuteUbergraph_OverheadInfo) == 0x000008, "Wrong size on OverheadInfo_C_ExecuteUbergraph_OverheadInfo");
static_assert(offsetof(OverheadInfo_C_ExecuteUbergraph_OverheadInfo, EntryPoint) == 0x000000, "Member 'OverheadInfo_C_ExecuteUbergraph_OverheadInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_ExecuteUbergraph_OverheadInfo, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'OverheadInfo_C_ExecuteUbergraph_OverheadInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.UpdateTradeItem
// 0x0020 (0x0020 - 0x0000)
struct OverheadInfo_C_UpdateTradeItem final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLargePickup*                         CallFunc_GetCarriedLargePickup_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPickup*                              CallFunc_GetCurrentEquippedItem_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OverheadInfo_C_UpdateTradeItem) == 0x000008, "Wrong alignment on OverheadInfo_C_UpdateTradeItem");
static_assert(sizeof(OverheadInfo_C_UpdateTradeItem) == 0x000020, "Wrong size on OverheadInfo_C_UpdateTradeItem");
static_assert(offsetof(OverheadInfo_C_UpdateTradeItem, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'OverheadInfo_C_UpdateTradeItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateTradeItem, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'OverheadInfo_C_UpdateTradeItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateTradeItem, CallFunc_GetCarriedLargePickup_ReturnValue) == 0x000008, "Member 'OverheadInfo_C_UpdateTradeItem::CallFunc_GetCarriedLargePickup_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateTradeItem, CallFunc_GetCurrentEquippedItem_ReturnValue) == 0x000010, "Member 'OverheadInfo_C_UpdateTradeItem::CallFunc_GetCurrentEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateTradeItem, CallFunc_IsValid_ReturnValue_2) == 0x000018, "Member 'OverheadInfo_C_UpdateTradeItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateTradeItem, CallFunc_IsValid_ReturnValue_3) == 0x000019, "Member 'OverheadInfo_C_UpdateTradeItem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateTradeItem, CallFunc_IsValid_ReturnValue_4) == 0x00001A, "Member 'OverheadInfo_C_UpdateTradeItem::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateTradeItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'OverheadInfo_C_UpdateTradeItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.SetImposterName
// 0x0118 (0x0118 - 0x0000)
struct OverheadInfo_C_SetImposterName final
{
public:
	class FString                                 CopiedName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RandomTriesCounter;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ImposterName;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 RandomIndexes;                                     // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_FormatPlayerDisplayName_formatedDisplayName; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelRandomIntRange_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GenerateDeterministicRandomString_ReturnValue; // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue_1; // 0x00E0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OverheadInfo_C_SetImposterName) == 0x000008, "Wrong alignment on OverheadInfo_C_SetImposterName");
static_assert(sizeof(OverheadInfo_C_SetImposterName) == 0x000118, "Wrong size on OverheadInfo_C_SetImposterName");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CopiedName) == 0x000000, "Member 'OverheadInfo_C_SetImposterName::CopiedName' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, RandomTriesCounter) == 0x000010, "Member 'OverheadInfo_C_SetImposterName::RandomTriesCounter' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, ImposterName) == 0x000018, "Member 'OverheadInfo_C_SetImposterName::ImposterName' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, RandomIndexes) == 0x000028, "Member 'OverheadInfo_C_SetImposterName::RandomIndexes' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000038, "Member 'OverheadInfo_C_SetImposterName::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, Temp_int_Array_Index_Variable) == 0x000048, "Member 'OverheadInfo_C_SetImposterName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'OverheadInfo_C_SetImposterName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_JoinStringArray_ReturnValue) == 0x000050, "Member 'OverheadInfo_C_SetImposterName::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_FormatPlayerDisplayName_formatedDisplayName) == 0x000068, "Member 'OverheadInfo_C_SetImposterName::CallFunc_FormatPlayerDisplayName_formatedDisplayName' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, Temp_int_Variable) == 0x0000A0, "Member 'OverheadInfo_C_SetImposterName::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A8, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x0000B0, "Member 'OverheadInfo_C_SetImposterName::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_LevelRandomIntRange_ReturnValue) == 0x0000B8, "Member 'OverheadInfo_C_SetImposterName::CallFunc_LevelRandomIntRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000BC, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_FFloor_ReturnValue) == 0x0000C0, "Member 'OverheadInfo_C_SetImposterName::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_GenerateDeterministicRandomString_ReturnValue) == 0x0000C8, "Member 'OverheadInfo_C_SetImposterName::CallFunc_GenerateDeterministicRandomString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_GetCharacterArrayFromString_ReturnValue_1) == 0x0000E0, "Member 'OverheadInfo_C_SetImposterName::CallFunc_GetCharacterArrayFromString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Array_AddUnique_ReturnValue) == 0x000100, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Array_Length_ReturnValue_2) == 0x000104, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Array_Length_ReturnValue_3) == 0x00010C, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_SetImposterName, CallFunc_Less_IntInt_ReturnValue_1) == 0x000110, "Member 'OverheadInfo_C_SetImposterName::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.InithHealthBarVisibility
// 0x0008 (0x0008 - 0x0000)
struct OverheadInfo_C_InithHealthBarVisibility final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetMaxHealth_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OverheadInfo_C_InithHealthBarVisibility) == 0x000004, "Wrong alignment on OverheadInfo_C_InithHealthBarVisibility");
static_assert(sizeof(OverheadInfo_C_InithHealthBarVisibility) == 0x000008, "Wrong size on OverheadInfo_C_InithHealthBarVisibility");
static_assert(offsetof(OverheadInfo_C_InithHealthBarVisibility, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'OverheadInfo_C_InithHealthBarVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_InithHealthBarVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'OverheadInfo_C_InithHealthBarVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_InithHealthBarVisibility, CallFunc_BP_GetMaxHealth_ReturnValue) == 0x000004, "Member 'OverheadInfo_C_InithHealthBarVisibility::CallFunc_BP_GetMaxHealth_ReturnValue' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.UpdatePartyState
// 0x0098 (0x0098 - 0x0000)
struct OverheadInfo_C_UpdatePartyState final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0030(0x0028)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerStatus_C*                        K2Node_DynamicCast_AsPlayer_Status;                // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0070(0x0028)()
};
static_assert(alignof(OverheadInfo_C_UpdatePartyState) == 0x000008, "Wrong alignment on OverheadInfo_C_UpdatePartyState");
static_assert(sizeof(OverheadInfo_C_UpdatePartyState) == 0x000098, "Wrong size on OverheadInfo_C_UpdatePartyState");
static_assert(offsetof(OverheadInfo_C_UpdatePartyState, Temp_bool_Variable) == 0x000000, "Member 'OverheadInfo_C_UpdatePartyState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdatePartyState, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'OverheadInfo_C_UpdatePartyState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdatePartyState, K2Node_MakeStruct_SlateColor_1) == 0x000030, "Member 'OverheadInfo_C_UpdatePartyState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdatePartyState, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'OverheadInfo_C_UpdatePartyState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdatePartyState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000059, "Member 'OverheadInfo_C_UpdatePartyState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdatePartyState, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'OverheadInfo_C_UpdatePartyState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdatePartyState, K2Node_DynamicCast_AsPlayer_Status) == 0x000060, "Member 'OverheadInfo_C_UpdatePartyState::K2Node_DynamicCast_AsPlayer_Status' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdatePartyState, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'OverheadInfo_C_UpdatePartyState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdatePartyState, K2Node_Select_Default) == 0x000070, "Member 'OverheadInfo_C_UpdatePartyState::K2Node_Select_Default' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.UpdateElementVisibility
// 0x000F (0x000F - 0x0000)
struct OverheadInfo_C_UpdateElementVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUniqueVariatorTypeActive_ReturnValue;   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OverheadInfo_C_UpdateElementVisibility) == 0x000001, "Wrong alignment on OverheadInfo_C_UpdateElementVisibility");
static_assert(sizeof(OverheadInfo_C_UpdateElementVisibility) == 0x00000F, "Wrong size on OverheadInfo_C_UpdateElementVisibility");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, Temp_bool_Variable) == 0x000000, "Member 'OverheadInfo_C_UpdateElementVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, Temp_byte_Variable) == 0x000001, "Member 'OverheadInfo_C_UpdateElementVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'OverheadInfo_C_UpdateElementVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, Temp_bool_Variable_1) == 0x000003, "Member 'OverheadInfo_C_UpdateElementVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, Temp_byte_Variable_2) == 0x000004, "Member 'OverheadInfo_C_UpdateElementVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, Temp_byte_Variable_3) == 0x000005, "Member 'OverheadInfo_C_UpdateElementVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, CallFunc_IsUniqueVariatorTypeActive_ReturnValue) == 0x000006, "Member 'OverheadInfo_C_UpdateElementVisibility::CallFunc_IsUniqueVariatorTypeActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000007, "Member 'OverheadInfo_C_UpdateElementVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'OverheadInfo_C_UpdateElementVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'OverheadInfo_C_UpdateElementVisibility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'OverheadInfo_C_UpdateElementVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'OverheadInfo_C_UpdateElementVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'OverheadInfo_C_UpdateElementVisibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, K2Node_Select_Default) == 0x00000D, "Member 'OverheadInfo_C_UpdateElementVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateElementVisibility, K2Node_Select_Default_1) == 0x00000E, "Member 'OverheadInfo_C_UpdateElementVisibility::K2Node_Select_Default_1' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.UpdateActiveSkillType
// 0x0030 (0x0030 - 0x0000)
struct OverheadInfo_C_UpdateActiveSkillType final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	EActiveSkillType                              CallFunc_GetSelectedActiveSkill_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OverheadInfo_C_UpdateActiveSkillType) == 0x000008, "Wrong alignment on OverheadInfo_C_UpdateActiveSkillType");
static_assert(sizeof(OverheadInfo_C_UpdateActiveSkillType) == 0x000030, "Wrong size on OverheadInfo_C_UpdateActiveSkillType");
static_assert(offsetof(OverheadInfo_C_UpdateActiveSkillType, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'OverheadInfo_C_UpdateActiveSkillType::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateActiveSkillType, CallFunc_GetSelectedActiveSkill_ReturnValue) == 0x000028, "Member 'OverheadInfo_C_UpdateActiveSkillType::CallFunc_GetSelectedActiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateActiveSkillType, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'OverheadInfo_C_UpdateActiveSkillType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.UpdateDistanceEffects_DEPRECATED_NOT_USED
// 0x00A0 (0x00A0 - 0x0000)
struct OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED final
{
public:
	float                                         FadeOutDistanceEnd;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutDistanceIntermediate;                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutDistanceStart;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsIndicatorOfIncapacitatedType_ReturnValue; // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsIndicatorOfIncapacitatedType_ReturnValue_1; // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue_1;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue_2;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue_3;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue_4;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_ToNewOpacity_ReturnValue;     // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED) == 0x000008, "Wrong alignment on OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED");
static_assert(sizeof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED) == 0x0000A0, "Wrong size on OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, FadeOutDistanceEnd) == 0x000000, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::FadeOutDistanceEnd' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, FadeOutDistanceIntermediate) == 0x000004, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::FadeOutDistanceIntermediate' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, FadeOutDistanceStart) == 0x000008, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::FadeOutDistanceStart' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, Temp_bool_Variable) == 0x00000C, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, Temp_bool_Variable_1) == 0x00000D, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, Temp_bool_Variable_2) == 0x00000E, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, Temp_bool_Variable_3) == 0x00000F, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, Temp_bool_Variable_4) == 0x000010, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, Temp_bool_Variable_5) == 0x000011, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000012, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_BP_IsIndicatorOfIncapacitatedType_ReturnValue) == 0x000013, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_BP_IsIndicatorOfIncapacitatedType_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_BP_IsIndicatorOfIncapacitatedType_ReturnValue_1) == 0x000014, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_BP_IsIndicatorOfIncapacitatedType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000018, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_GetGlobalUIConfig_ReturnValue_1) == 0x000020, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_GetGlobalUIConfig_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_SelectFloat_ReturnValue_1) == 0x00002C, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, K2Node_Select_Default) == 0x000030, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_SelectFloat_ReturnValue_2) == 0x000034, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_SelectFloat_ReturnValue_3) == 0x000038, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, K2Node_Select_Default_1) == 0x00003C, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_GetGlobalUIConfig_ReturnValue_2) == 0x000040, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_GetGlobalUIConfig_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000048, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, K2Node_Select_Default_2) == 0x00004C, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_Lerp_ReturnValue) == 0x000054, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_GetGlobalUIConfig_ReturnValue_3) == 0x000058, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_GetGlobalUIConfig_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_GetGlobalUIConfig_ReturnValue_4) == 0x000060, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_GetGlobalUIConfig_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, K2Node_Select_Default_3) == 0x000068, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_SelectFloat_ReturnValue_4) == 0x00006C, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000070, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_SelectFloat_ReturnValue_5) == 0x000074, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_Lerp_ReturnValue_1) == 0x000078, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, K2Node_Select_Default_4) == 0x00007C, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_Lerp_ReturnValue_2) == 0x000088, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, K2Node_Select_Default_5) == 0x00008C, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED, CallFunc_LinearColor_ToNewOpacity_ReturnValue) == 0x000090, "Member 'OverheadInfo_C_UpdateDistanceEffects_DEPRECATED_NOT_USED::CallFunc_LinearColor_ToNewOpacity_ReturnValue' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.UpdateDisplay_old_DEPRECATED_NOT_USED
// 0x0050 (0x0050 - 0x0000)
struct OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED final
{
public:
	class ARBHUD*                                 HUD_0;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsIndicatorOfObjectiveType_ReturnValue; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFollower_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetWatchedPlayer_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              CallFunc_GetWatchedPlayer_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsIndicatorOfObjectiveType_ReturnValue_1; // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED) == 0x000008, "Wrong alignment on OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED");
static_assert(sizeof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED) == 0x000050, "Wrong size on OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, HUD_0) == 0x000000, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::HUD_0' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, Temp_byte_Variable) == 0x000008, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BP_IsIndicatorOfObjectiveType_ReturnValue) == 0x00000C, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BP_IsIndicatorOfObjectiveType_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_IsFollower_ReturnValue) == 0x00000D, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_IsFollower_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_GetWatchedPlayer_ReturnValue) == 0x000010, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_GetWatchedPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_GetWatchedPlayer_ReturnValue_1) == 0x000018, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_GetWatchedPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_IsValid_ReturnValue_3) == 0x000020, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000022, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_IsValid_ReturnValue_4) == 0x000024, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x00002C, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x000030, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000038, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, Temp_byte_Variable_1) == 0x00003C, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x00003D, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, Temp_bool_Variable) == 0x00003E, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BP_IsIndicatorOfObjectiveType_ReturnValue_1) == 0x00003F, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BP_IsIndicatorOfObjectiveType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000040, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000041, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BooleanAND_ReturnValue_1) == 0x000042, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BooleanAND_ReturnValue_2) == 0x000043, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000044, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000045, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BooleanAND_ReturnValue_3) == 0x000046, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BooleanOR_ReturnValue) == 0x000047, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BooleanOR_ReturnValue_1) == 0x000048, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BooleanOR_ReturnValue_2) == 0x000049, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, CallFunc_BooleanOR_ReturnValue_3) == 0x00004A, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED, K2Node_Select_Default) == 0x00004B, "Member 'OverheadInfo_C_UpdateDisplay_old_DEPRECATED_NOT_USED::K2Node_Select_Default' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.Event_PlayerMaxHealthChanged
// 0x0004 (0x0004 - 0x0000)
struct OverheadInfo_C_Event_PlayerMaxHealthChanged final
{
public:
	float                                         NewMaxHealth;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OverheadInfo_C_Event_PlayerMaxHealthChanged) == 0x000004, "Wrong alignment on OverheadInfo_C_Event_PlayerMaxHealthChanged");
static_assert(sizeof(OverheadInfo_C_Event_PlayerMaxHealthChanged) == 0x000004, "Wrong size on OverheadInfo_C_Event_PlayerMaxHealthChanged");
static_assert(offsetof(OverheadInfo_C_Event_PlayerMaxHealthChanged, NewMaxHealth) == 0x000000, "Member 'OverheadInfo_C_Event_PlayerMaxHealthChanged::NewMaxHealth' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.Event_PlayerIndicatorTypeChanged
// 0x0005 (0x0005 - 0x0000)
struct OverheadInfo_C_Event_PlayerIndicatorTypeChanged final
{
public:
	EPlayerIndicatorType                          PlayerIndicatorType;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OverheadInfo_C_Event_PlayerIndicatorTypeChanged) == 0x000001, "Wrong alignment on OverheadInfo_C_Event_PlayerIndicatorTypeChanged");
static_assert(sizeof(OverheadInfo_C_Event_PlayerIndicatorTypeChanged) == 0x000005, "Wrong size on OverheadInfo_C_Event_PlayerIndicatorTypeChanged");
static_assert(offsetof(OverheadInfo_C_Event_PlayerIndicatorTypeChanged, PlayerIndicatorType) == 0x000000, "Member 'OverheadInfo_C_Event_PlayerIndicatorTypeChanged::PlayerIndicatorType' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerIndicatorTypeChanged, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'OverheadInfo_C_Event_PlayerIndicatorTypeChanged::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerIndicatorTypeChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'OverheadInfo_C_Event_PlayerIndicatorTypeChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerIndicatorTypeChanged, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'OverheadInfo_C_Event_PlayerIndicatorTypeChanged::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerIndicatorTypeChanged, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'OverheadInfo_C_Event_PlayerIndicatorTypeChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.Event_PlayerStateUpdated
// 0x0058 (0x0058 - 0x0000)
struct OverheadInfo_C_Event_PlayerStateUpdated final
{
public:
	struct FProfileId                             CallFunc_GetProfileId_ReturnValue;                 // 0x0000(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatPlayerName_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OverheadInfo_C_Event_PlayerStateUpdated) == 0x000008, "Wrong alignment on OverheadInfo_C_Event_PlayerStateUpdated");
static_assert(sizeof(OverheadInfo_C_Event_PlayerStateUpdated) == 0x000058, "Wrong size on OverheadInfo_C_Event_PlayerStateUpdated");
static_assert(offsetof(OverheadInfo_C_Event_PlayerStateUpdated, CallFunc_GetProfileId_ReturnValue) == 0x000000, "Member 'OverheadInfo_C_Event_PlayerStateUpdated::CallFunc_GetProfileId_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerStateUpdated, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'OverheadInfo_C_Event_PlayerStateUpdated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerStateUpdated, CallFunc_GetPlayerName_ReturnValue) == 0x000018, "Member 'OverheadInfo_C_Event_PlayerStateUpdated::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerStateUpdated, CallFunc_FormatPlayerName_ReturnValue) == 0x000028, "Member 'OverheadInfo_C_Event_PlayerStateUpdated::CallFunc_FormatPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerStateUpdated, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'OverheadInfo_C_Event_PlayerStateUpdated::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerStateUpdated, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'OverheadInfo_C_Event_PlayerStateUpdated::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.Event_ImposterUpdated
// 0x0001 (0x0001 - 0x0000)
struct OverheadInfo_C_Event_ImposterUpdated final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OverheadInfo_C_Event_ImposterUpdated) == 0x000001, "Wrong alignment on OverheadInfo_C_Event_ImposterUpdated");
static_assert(sizeof(OverheadInfo_C_Event_ImposterUpdated) == 0x000001, "Wrong size on OverheadInfo_C_Event_ImposterUpdated");
static_assert(offsetof(OverheadInfo_C_Event_ImposterUpdated, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'OverheadInfo_C_Event_ImposterUpdated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.Event_PlayerHealthChanged
// 0x0010 (0x0010 - 0x0000)
struct OverheadInfo_C_Event_PlayerHealthChanged final
{
public:
	float                                         NewHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkipAnims;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredDead_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredKnockedDown_ReturnValue;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OverheadInfo_C_Event_PlayerHealthChanged) == 0x000004, "Wrong alignment on OverheadInfo_C_Event_PlayerHealthChanged");
static_assert(sizeof(OverheadInfo_C_Event_PlayerHealthChanged) == 0x000010, "Wrong size on OverheadInfo_C_Event_PlayerHealthChanged");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, NewHealth) == 0x000000, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::NewHealth' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, bSkipAnims) == 0x000004, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::bSkipAnims' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, Temp_byte_Variable) == 0x000005, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, Temp_byte_Variable_1) == 0x000006, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, Temp_bool_Variable) == 0x000007, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, CallFunc_IsConsideredDead_ReturnValue) == 0x000009, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::CallFunc_IsConsideredDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, CallFunc_IsConsideredKnockedDown_ReturnValue) == 0x00000B, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::CallFunc_IsConsideredKnockedDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_PlayerHealthChanged, K2Node_Select_Default) == 0x00000D, "Member 'OverheadInfo_C_Event_PlayerHealthChanged::K2Node_Select_Default' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.Event_InventoryUpdated
// 0x00D0 (0x00D0 - 0x0000)
struct OverheadInfo_C_Event_InventoryUpdated final
{
public:
	EInventoryUpdateEventType                     InventoryEventType;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImageWidget_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARBPickup*>                      CallFunc_BP_GetItemsForCategory_ReturnValue;       // 0x0028(0x0010)(ReferenceParm)
	class ARBPickup*                              CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x0048(0x0088)()
};
static_assert(alignof(OverheadInfo_C_Event_InventoryUpdated) == 0x000008, "Wrong alignment on OverheadInfo_C_Event_InventoryUpdated");
static_assert(sizeof(OverheadInfo_C_Event_InventoryUpdated) == 0x0000D0, "Wrong size on OverheadInfo_C_Event_InventoryUpdated");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, InventoryEventType) == 0x000000, "Member 'OverheadInfo_C_Event_InventoryUpdated::InventoryEventType' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, Temp_int_Array_Index_Variable) == 0x000004, "Member 'OverheadInfo_C_Event_InventoryUpdated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_Create_ReturnValue) == 0x000008, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'OverheadInfo_C_Event_InventoryUpdated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000020, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_BP_GetItemsForCategory_ReturnValue) == 0x000028, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_BP_GetItemsForCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_Array_Get_Item) == 0x000038, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_IsValid_ReturnValue_2) == 0x000044, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_Event_InventoryUpdated, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x000048, "Member 'OverheadInfo_C_Event_InventoryUpdated::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");

// Function OverheadInfo.OverheadInfo_C.UpdateActiveSkillIconDisplay
// 0x00B0 (0x00B0 - 0x0000)
struct OverheadInfo_C_UpdateActiveSkillIconDisplay final
{
public:
	EActiveSkillType                              Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveSkillCommonParams               CallFunc_GetActiveSkillCommonParams_ReturnValue;   // 0x0038(0x0078)(ConstParm)
};
static_assert(alignof(OverheadInfo_C_UpdateActiveSkillIconDisplay) == 0x000008, "Wrong alignment on OverheadInfo_C_UpdateActiveSkillIconDisplay");
static_assert(sizeof(OverheadInfo_C_UpdateActiveSkillIconDisplay) == 0x0000B0, "Wrong size on OverheadInfo_C_UpdateActiveSkillIconDisplay");
static_assert(offsetof(OverheadInfo_C_UpdateActiveSkillIconDisplay, Type) == 0x000000, "Member 'OverheadInfo_C_UpdateActiveSkillIconDisplay::Type' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateActiveSkillIconDisplay, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'OverheadInfo_C_UpdateActiveSkillIconDisplay::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateActiveSkillIconDisplay, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'OverheadInfo_C_UpdateActiveSkillIconDisplay::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OverheadInfo_C_UpdateActiveSkillIconDisplay, CallFunc_GetActiveSkillCommonParams_ReturnValue) == 0x000038, "Member 'OverheadInfo_C_UpdateActiveSkillIconDisplay::CallFunc_GetActiveSkillCommonParams_ReturnValue' has a wrong offset!");

}

