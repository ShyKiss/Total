#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BrightnessCalibrationMenu

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BrightnessCalibrationMenu.BrightnessCalibrationMenu_C.ExecuteUbergraph_BrightnessCalibrationMenu
// 0x01F8 (0x01F8 - 0x0000)
struct BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0048(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0080(0x0018)()
	class URBMenuOptionsEntry*                    CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuButton_C*                        K2Node_ComponentBoundEvent_Button_1;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBFXManager*                           CallFunc_GetFXManager_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuButton_C*                        K2Node_ComponentBoundEvent_Button;                 // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00D0(0x0018)()
	class URBGameUserSettings*                    CallFunc_GetRBGameUserSettings_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentHDRDisplayNits_ReturnValue;     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0138(0x0010)(ReferenceParm)
	class URBMenuOptionsEntry*                    K2Node_ComponentBoundEvent_OptionEntry_2;          // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0150(0x0018)()
	class URBMenuOptionsEntry*                    K2Node_ComponentBoundEvent_OptionEntry_1;          // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBMenuOptionsEntry*                    K2Node_ComponentBoundEvent_OptionEntry;            // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class URBMenuOptionsEntry*>            K2Node_MakeArray_Array_3;                          // 0x0180(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuOptionsEntry*                    CallFunc_Array_Get_Item_1;                         // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x01A8(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x01C8(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameUserPreferences*                 CallFunc_GetRBGameUserPreferences_ReturnValue;     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGameUserPreferences*                 CallFunc_GetRBGameUserPreferences_ReturnValue_1;   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu) == 0x000008, "Wrong alignment on BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu");
static_assert(sizeof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu) == 0x0001F8, "Wrong size on BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, EntryPoint) == 0x000000, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, Temp_bool_Variable) == 0x000004, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, Temp_text_Variable) == 0x000008, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, Temp_text_Variable_1) == 0x000020, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_MakeArray_Array) == 0x000038, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Format_ReturnValue) == 0x000048, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, Temp_bool_Variable_1) == 0x000064, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_MakeArray_Array_1) == 0x000068, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Format_ReturnValue_1) == 0x000080, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Array_Get_Item) == 0x000098, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_ComponentBoundEvent_Button_1) == 0x0000B0, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_GetFXManager_ReturnValue) == 0x0000B8, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_GetFXManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_ComponentBoundEvent_Button) == 0x0000C8, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_Select_Default) == 0x0000D0, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_GetRBGameUserSettings_ReturnValue) == 0x0000E8, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_GetRBGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_GetCurrentHDRDisplayNits_ReturnValue) == 0x0000F0, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_GetCurrentHDRDisplayNits_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_MakeStruct_FormatArgumentData) == 0x0000F8, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_MakeArray_Array_2) == 0x000138, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_ComponentBoundEvent_OptionEntry_2) == 0x000148, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_ComponentBoundEvent_OptionEntry_2' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Format_ReturnValue_2) == 0x000150, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_ComponentBoundEvent_OptionEntry_1) == 0x000168, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_ComponentBoundEvent_OptionEntry_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_ComponentBoundEvent_OptionEntry) == 0x000170, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_ComponentBoundEvent_OptionEntry' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, Temp_bool_Variable_2) == 0x000178, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, Temp_int_Loop_Counter_Variable_1) == 0x00017C, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_MakeArray_Array_3) == 0x000180, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Add_IntInt_ReturnValue_1) == 0x000194, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_IsConsole_ReturnValue) == 0x000198, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Array_Get_Item_1) == 0x0001A0, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_Select_Default_1) == 0x0001A8, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, K2Node_Select_Default_2) == 0x0001C8, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E0, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_GetRBGameUserPreferences_ReturnValue) == 0x0001E8, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_GetRBGameUserPreferences_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu, CallFunc_GetRBGameUserPreferences_ReturnValue_1) == 0x0001F0, "Member 'BrightnessCalibrationMenu_C_ExecuteUbergraph_BrightnessCalibrationMenu::CallFunc_GetRBGameUserPreferences_ReturnValue_1' has a wrong offset!");

// Function BrightnessCalibrationMenu.BrightnessCalibrationMenu_C.BndEvt__BrightnessCalibrationMenu_BrightnessEntry_K2Node_ComponentBoundEvent_7_OnOptionValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_BrightnessEntry_K2Node_ComponentBoundEvent_7_OnOptionValueChanged__DelegateSignature final
{
public:
	class URBMenuOptionsEntry*                    OptionEntry;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_BrightnessEntry_K2Node_ComponentBoundEvent_7_OnOptionValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_BrightnessEntry_K2Node_ComponentBoundEvent_7_OnOptionValueChanged__DelegateSignature");
static_assert(sizeof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_BrightnessEntry_K2Node_ComponentBoundEvent_7_OnOptionValueChanged__DelegateSignature) == 0x000008, "Wrong size on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_BrightnessEntry_K2Node_ComponentBoundEvent_7_OnOptionValueChanged__DelegateSignature");
static_assert(offsetof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_BrightnessEntry_K2Node_ComponentBoundEvent_7_OnOptionValueChanged__DelegateSignature, OptionEntry) == 0x000000, "Member 'BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_BrightnessEntry_K2Node_ComponentBoundEvent_7_OnOptionValueChanged__DelegateSignature::OptionEntry' has a wrong offset!");

// Function BrightnessCalibrationMenu.BrightnessCalibrationMenu_C.BndEvt__BrightnessCalibrationMenu_HDRUserInterfaceEntry_K2Node_ComponentBoundEvent_6_OnOptionValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRUserInterfaceEntry_K2Node_ComponentBoundEvent_6_OnOptionValueChanged__DelegateSignature final
{
public:
	class URBMenuOptionsEntry*                    OptionEntry;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRUserInterfaceEntry_K2Node_ComponentBoundEvent_6_OnOptionValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRUserInterfaceEntry_K2Node_ComponentBoundEvent_6_OnOptionValueChanged__DelegateSignature");
static_assert(sizeof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRUserInterfaceEntry_K2Node_ComponentBoundEvent_6_OnOptionValueChanged__DelegateSignature) == 0x000008, "Wrong size on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRUserInterfaceEntry_K2Node_ComponentBoundEvent_6_OnOptionValueChanged__DelegateSignature");
static_assert(offsetof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRUserInterfaceEntry_K2Node_ComponentBoundEvent_6_OnOptionValueChanged__DelegateSignature, OptionEntry) == 0x000000, "Member 'BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRUserInterfaceEntry_K2Node_ComponentBoundEvent_6_OnOptionValueChanged__DelegateSignature::OptionEntry' has a wrong offset!");

// Function BrightnessCalibrationMenu.BrightnessCalibrationMenu_C.BndEvt__BrightnessCalibrationMenu_HDRPaperwhiteEntry_K2Node_ComponentBoundEvent_4_OnOptionValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRPaperwhiteEntry_K2Node_ComponentBoundEvent_4_OnOptionValueChanged__DelegateSignature final
{
public:
	class URBMenuOptionsEntry*                    OptionEntry;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRPaperwhiteEntry_K2Node_ComponentBoundEvent_4_OnOptionValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRPaperwhiteEntry_K2Node_ComponentBoundEvent_4_OnOptionValueChanged__DelegateSignature");
static_assert(sizeof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRPaperwhiteEntry_K2Node_ComponentBoundEvent_4_OnOptionValueChanged__DelegateSignature) == 0x000008, "Wrong size on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRPaperwhiteEntry_K2Node_ComponentBoundEvent_4_OnOptionValueChanged__DelegateSignature");
static_assert(offsetof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRPaperwhiteEntry_K2Node_ComponentBoundEvent_4_OnOptionValueChanged__DelegateSignature, OptionEntry) == 0x000000, "Member 'BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_HDRPaperwhiteEntry_K2Node_ComponentBoundEvent_4_OnOptionValueChanged__DelegateSignature::OptionEntry' has a wrong offset!");

// Function BrightnessCalibrationMenu.BrightnessCalibrationMenu_C.BndEvt__BrightnessCalibrationMenu_ResetDefaultsBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ResetDefaultsBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature final
{
public:
	class URBMenuButton_C*                        Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ResetDefaultsBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ResetDefaultsBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(sizeof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ResetDefaultsBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ResetDefaultsBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(offsetof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ResetDefaultsBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ResetDefaultsBtn_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function BrightnessCalibrationMenu.BrightnessCalibrationMenu_C.BndEvt__BrightnessCalibrationMenu_ExitBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ExitBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	class URBMenuButton_C*                        Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ExitBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ExitBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ExitBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong size on BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ExitBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ExitBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'BrightnessCalibrationMenu_C_BndEvt__BrightnessCalibrationMenu_ExitBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function BrightnessCalibrationMenu.BrightnessCalibrationMenu_C.OnFocusReceived
// 0x01C0 (0x01C0 - 0x0000)
struct BrightnessCalibrationMenu_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0100(0x00B8)()
	class UOptionsEntry_C*                        K2Node_Select_Default;                             // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BrightnessCalibrationMenu_C_OnFocusReceived) == 0x000008, "Wrong alignment on BrightnessCalibrationMenu_C_OnFocusReceived");
static_assert(sizeof(BrightnessCalibrationMenu_C_OnFocusReceived) == 0x0001C0, "Wrong size on BrightnessCalibrationMenu_C_OnFocusReceived");
static_assert(offsetof(BrightnessCalibrationMenu_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'BrightnessCalibrationMenu_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'BrightnessCalibrationMenu_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'BrightnessCalibrationMenu_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_OnFocusReceived, Temp_bool_Variable) == 0x0000F8, "Member 'BrightnessCalibrationMenu_C_OnFocusReceived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_OnFocusReceived, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x0000F9, "Member 'BrightnessCalibrationMenu_C_OnFocusReceived::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000100, "Member 'BrightnessCalibrationMenu_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BrightnessCalibrationMenu_C_OnFocusReceived, K2Node_Select_Default) == 0x0001B8, "Member 'BrightnessCalibrationMenu_C_OnFocusReceived::K2Node_Select_Default' has a wrong offset!");

}

