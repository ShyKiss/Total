#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StageIntroVariatorEntry

#include "Basic.hpp"

#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function StageIntroVariatorEntry.StageIntroVariatorEntry_C.ExecuteUbergraph_StageIntroVariatorEntry
// 0x0018 (0x0018 - 0x0000)
struct StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry) == 0x000004, "Wrong alignment on StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry");
static_assert(sizeof(StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry) == 0x000018, "Wrong size on StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry");
static_assert(offsetof(StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry, EntryPoint) == 0x000000, "Member 'StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry, K2Node_Event_IsDesignTime) == 0x000014, "Member 'StageIntroVariatorEntry_C_ExecuteUbergraph_StageIntroVariatorEntry::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function StageIntroVariatorEntry.StageIntroVariatorEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct StageIntroVariatorEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StageIntroVariatorEntry_C_PreConstruct) == 0x000001, "Wrong alignment on StageIntroVariatorEntry_C_PreConstruct");
static_assert(sizeof(StageIntroVariatorEntry_C_PreConstruct) == 0x000001, "Wrong size on StageIntroVariatorEntry_C_PreConstruct");
static_assert(offsetof(StageIntroVariatorEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'StageIntroVariatorEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function StageIntroVariatorEntry.StageIntroVariatorEntry_C.InitFromDifficulty
// 0x0100 (0x0100 - 0x0000)
struct StageIntroVariatorEntry_C_InitFromDifficulty final
{
public:
	EGameDifficulty                               Difficulty;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBSettings_Gameplay*                   CallFunc_GetRBSettings_Gameplay_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDifficultyConfig                      CallFunc_Map_Find_Value;                           // 0x0010(0x00E0)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetBrushResourceAsTexture2D_ReturnValue;  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StageIntroVariatorEntry_C_InitFromDifficulty) == 0x000008, "Wrong alignment on StageIntroVariatorEntry_C_InitFromDifficulty");
static_assert(sizeof(StageIntroVariatorEntry_C_InitFromDifficulty) == 0x000100, "Wrong size on StageIntroVariatorEntry_C_InitFromDifficulty");
static_assert(offsetof(StageIntroVariatorEntry_C_InitFromDifficulty, Difficulty) == 0x000000, "Member 'StageIntroVariatorEntry_C_InitFromDifficulty::Difficulty' has a wrong offset!");
static_assert(offsetof(StageIntroVariatorEntry_C_InitFromDifficulty, CallFunc_GetRBSettings_Gameplay_ReturnValue) == 0x000008, "Member 'StageIntroVariatorEntry_C_InitFromDifficulty::CallFunc_GetRBSettings_Gameplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(StageIntroVariatorEntry_C_InitFromDifficulty, CallFunc_Map_Find_Value) == 0x000010, "Member 'StageIntroVariatorEntry_C_InitFromDifficulty::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(StageIntroVariatorEntry_C_InitFromDifficulty, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'StageIntroVariatorEntry_C_InitFromDifficulty::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(StageIntroVariatorEntry_C_InitFromDifficulty, CallFunc_GetBrushResourceAsTexture2D_ReturnValue) == 0x0000F8, "Member 'StageIntroVariatorEntry_C_InitFromDifficulty::CallFunc_GetBrushResourceAsTexture2D_ReturnValue' has a wrong offset!");

// Function StageIntroVariatorEntry.StageIntroVariatorEntry_C.InitFromVariatorInfo
// 0x0008 (0x0008 - 0x0000)
struct StageIntroVariatorEntry_C_InitFromVariatorInfo final
{
public:
	class URBVariatorInfo*                        VariatorInfo;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StageIntroVariatorEntry_C_InitFromVariatorInfo) == 0x000008, "Wrong alignment on StageIntroVariatorEntry_C_InitFromVariatorInfo");
static_assert(sizeof(StageIntroVariatorEntry_C_InitFromVariatorInfo) == 0x000008, "Wrong size on StageIntroVariatorEntry_C_InitFromVariatorInfo");
static_assert(offsetof(StageIntroVariatorEntry_C_InitFromVariatorInfo, VariatorInfo) == 0x000000, "Member 'StageIntroVariatorEntry_C_InitFromVariatorInfo::VariatorInfo' has a wrong offset!");

// Function StageIntroVariatorEntry.StageIntroVariatorEntry_C.StartAnimation
// 0x0008 (0x0008 - 0x0000)
struct StageIntroVariatorEntry_C_StartAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StageIntroVariatorEntry_C_StartAnimation) == 0x000008, "Wrong alignment on StageIntroVariatorEntry_C_StartAnimation");
static_assert(sizeof(StageIntroVariatorEntry_C_StartAnimation) == 0x000008, "Wrong size on StageIntroVariatorEntry_C_StartAnimation");
static_assert(offsetof(StageIntroVariatorEntry_C_StartAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'StageIntroVariatorEntry_C_StartAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

}

