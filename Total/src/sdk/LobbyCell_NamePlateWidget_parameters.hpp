#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LobbyCell_NamePlateWidget

#include "Basic.hpp"

#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function LobbyCell_NamePlateWidget.LobbyCell_NamePlateWidget_C.SetJustification
// 0x0005 (0x0005 - 0x0000)
struct LobbyCell_NamePlateWidget_C_SetJustification final
{
public:
	bool                                          bRight;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyCell_NamePlateWidget_C_SetJustification) == 0x000001, "Wrong alignment on LobbyCell_NamePlateWidget_C_SetJustification");
static_assert(sizeof(LobbyCell_NamePlateWidget_C_SetJustification) == 0x000005, "Wrong size on LobbyCell_NamePlateWidget_C_SetJustification");
static_assert(offsetof(LobbyCell_NamePlateWidget_C_SetJustification, bRight) == 0x000000, "Member 'LobbyCell_NamePlateWidget_C_SetJustification::bRight' has a wrong offset!");
static_assert(offsetof(LobbyCell_NamePlateWidget_C_SetJustification, Temp_bool_Variable) == 0x000001, "Member 'LobbyCell_NamePlateWidget_C_SetJustification::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LobbyCell_NamePlateWidget_C_SetJustification, Temp_byte_Variable) == 0x000002, "Member 'LobbyCell_NamePlateWidget_C_SetJustification::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LobbyCell_NamePlateWidget_C_SetJustification, Temp_byte_Variable_1) == 0x000003, "Member 'LobbyCell_NamePlateWidget_C_SetJustification::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(LobbyCell_NamePlateWidget_C_SetJustification, K2Node_Select_Default) == 0x000004, "Member 'LobbyCell_NamePlateWidget_C_SetJustification::K2Node_Select_Default' has a wrong offset!");

// Function LobbyCell_NamePlateWidget.LobbyCell_NamePlateWidget_C.SetText
// 0x0020 (0x0020 - 0x0000)
struct LobbyCell_NamePlateWidget_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bRight;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyCell_NamePlateWidget_C_SetText) == 0x000008, "Wrong alignment on LobbyCell_NamePlateWidget_C_SetText");
static_assert(sizeof(LobbyCell_NamePlateWidget_C_SetText) == 0x000020, "Wrong size on LobbyCell_NamePlateWidget_C_SetText");
static_assert(offsetof(LobbyCell_NamePlateWidget_C_SetText, InText) == 0x000000, "Member 'LobbyCell_NamePlateWidget_C_SetText::InText' has a wrong offset!");
static_assert(offsetof(LobbyCell_NamePlateWidget_C_SetText, bRight) == 0x000018, "Member 'LobbyCell_NamePlateWidget_C_SetText::bRight' has a wrong offset!");

}

