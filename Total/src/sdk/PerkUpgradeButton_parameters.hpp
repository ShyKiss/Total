#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PerkUpgradeButton

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PerkUpgradeButton.PerkUpgradeButton_C.OnClickedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PerkUpgradeButton_C_OnClickedEvent__DelegateSignature final
{
public:
	class UPerkUpgradeButton_C*                   Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PerkUpgradeButton_C_OnClickedEvent__DelegateSignature) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_OnClickedEvent__DelegateSignature");
static_assert(sizeof(PerkUpgradeButton_C_OnClickedEvent__DelegateSignature) == 0x000008, "Wrong size on PerkUpgradeButton_C_OnClickedEvent__DelegateSignature");
static_assert(offsetof(PerkUpgradeButton_C_OnClickedEvent__DelegateSignature, Button) == 0x000000, "Member 'PerkUpgradeButton_C_OnClickedEvent__DelegateSignature::Button' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.OnHoveredEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PerkUpgradeButton_C_OnHoveredEvent__DelegateSignature final
{
public:
	class UPerkUpgradeButton_C*                   Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PerkUpgradeButton_C_OnHoveredEvent__DelegateSignature) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_OnHoveredEvent__DelegateSignature");
static_assert(sizeof(PerkUpgradeButton_C_OnHoveredEvent__DelegateSignature) == 0x000008, "Wrong size on PerkUpgradeButton_C_OnHoveredEvent__DelegateSignature");
static_assert(offsetof(PerkUpgradeButton_C_OnHoveredEvent__DelegateSignature, Button) == 0x000000, "Member 'PerkUpgradeButton_C_OnHoveredEvent__DelegateSignature::Button' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.OnUnhoveredEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PerkUpgradeButton_C_OnUnhoveredEvent__DelegateSignature final
{
public:
	class UPerkUpgradeButton_C*                   Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PerkUpgradeButton_C_OnUnhoveredEvent__DelegateSignature) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_OnUnhoveredEvent__DelegateSignature");
static_assert(sizeof(PerkUpgradeButton_C_OnUnhoveredEvent__DelegateSignature) == 0x000008, "Wrong size on PerkUpgradeButton_C_OnUnhoveredEvent__DelegateSignature");
static_assert(offsetof(PerkUpgradeButton_C_OnUnhoveredEvent__DelegateSignature, Button) == 0x000000, "Member 'PerkUpgradeButton_C_OnUnhoveredEvent__DelegateSignature::Button' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.OnPressedEvent__DelegateSignature
// 0x0128 (0x0128 - 0x0000)
struct PerkUpgradeButton_C_OnPressedEvent__DelegateSignature final
{
public:
	struct FMenuUpgradeItemInfo                   Param_ItemInfo;                                    // 0x0000(0x0128)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PerkUpgradeButton_C_OnPressedEvent__DelegateSignature) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_OnPressedEvent__DelegateSignature");
static_assert(sizeof(PerkUpgradeButton_C_OnPressedEvent__DelegateSignature) == 0x000128, "Wrong size on PerkUpgradeButton_C_OnPressedEvent__DelegateSignature");
static_assert(offsetof(PerkUpgradeButton_C_OnPressedEvent__DelegateSignature, Param_ItemInfo) == 0x000000, "Member 'PerkUpgradeButton_C_OnPressedEvent__DelegateSignature::Param_ItemInfo' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.OnReleasedEvent__DelegateSignature
// 0x0128 (0x0128 - 0x0000)
struct PerkUpgradeButton_C_OnReleasedEvent__DelegateSignature final
{
public:
	struct FMenuUpgradeItemInfo                   Param_ItemInfo;                                    // 0x0000(0x0128)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PerkUpgradeButton_C_OnReleasedEvent__DelegateSignature) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_OnReleasedEvent__DelegateSignature");
static_assert(sizeof(PerkUpgradeButton_C_OnReleasedEvent__DelegateSignature) == 0x000128, "Wrong size on PerkUpgradeButton_C_OnReleasedEvent__DelegateSignature");
static_assert(offsetof(PerkUpgradeButton_C_OnReleasedEvent__DelegateSignature, Param_ItemInfo) == 0x000000, "Member 'PerkUpgradeButton_C_OnReleasedEvent__DelegateSignature::Param_ItemInfo' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.OnBuyAnimationEndedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PerkUpgradeButton_C_OnBuyAnimationEndedEvent__DelegateSignature final
{
public:
	class UPerkUpgradeButton_C*                   PerkUpgradeButton;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PerkUpgradeButton_C_OnBuyAnimationEndedEvent__DelegateSignature) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_OnBuyAnimationEndedEvent__DelegateSignature");
static_assert(sizeof(PerkUpgradeButton_C_OnBuyAnimationEndedEvent__DelegateSignature) == 0x000008, "Wrong size on PerkUpgradeButton_C_OnBuyAnimationEndedEvent__DelegateSignature");
static_assert(offsetof(PerkUpgradeButton_C_OnBuyAnimationEndedEvent__DelegateSignature, PerkUpgradeButton) == 0x000000, "Member 'PerkUpgradeButton_C_OnBuyAnimationEndedEvent__DelegateSignature::PerkUpgradeButton' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.ExecuteUbergraph_PerkUpgradeButton
// 0x0010 (0x0010 - 0x0000)
struct PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton");
static_assert(sizeof(PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton) == 0x000010, "Wrong size on PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton");
static_assert(offsetof(PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton, EntryPoint) == 0x000000, "Member 'PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton, K2Node_Event_IsDesignTime) == 0x000004, "Member 'PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton, CallFunc_GetMenuManager_ReturnValue) == 0x000008, "Member 'PerkUpgradeButton_C_ExecuteUbergraph_PerkUpgradeButton::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PerkUpgradeButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkUpgradeButton_C_PreConstruct) == 0x000001, "Wrong alignment on PerkUpgradeButton_C_PreConstruct");
static_assert(sizeof(PerkUpgradeButton_C_PreConstruct) == 0x000001, "Wrong size on PerkUpgradeButton_C_PreConstruct");
static_assert(offsetof(PerkUpgradeButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PerkUpgradeButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.Initialize
// 0x0418 (0x0418 - 0x0000)
struct PerkUpgradeButton_C_Initialize final
{
public:
	struct FMenuUpgradeItemInfo                   ItemUpgradeInfo;                                   // 0x0000(0x0128)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          InIsLoadout;                                       // 0x0128(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInIsSlot;                                         // 0x0129(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308D[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayerState*                         PlayerState;                                       // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayerState*                         RB_Player_State;                                   // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMenuUpgradeItemState                         Temp_byte_Variable;                                // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELoadoutElementType                           Temp_byte_Variable_1;                              // 0x0144(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308E[0x1];                                     // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuUpgradeItemInfo                   CallFunc_GetUpgradeItemInfoForPlayer_ReturnValue;  // 0x0148(0x0128)()
	bool                                          CallFunc_HasRecentlyBoughtUpgradeOfType_ReturnValue; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasUpgradeRecentlyBought_ReturnValue;     // 0x0277(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasSeenInMenu_ReturnValue;                // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x027E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x027F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ARBPlayerState*                         CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayerState*                         K2Node_Select_Default;                             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBPlayerProgressionData*               CallFunc_GetPlayerProgressionData_ReturnValue;     // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_308F[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBItemProgressionData                 CallFunc_GetItemProgressionData_ReturnValue;       // 0x02A0(0x00E8)(ConstParm)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0390(0x0028)()
	struct FSlateColor                            CallFunc_Map_Find_Value;                           // 0x03B8(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3090[0x7];                                     // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x03E8(0x0028)()
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkUpgradeButton_C_Initialize) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_Initialize");
static_assert(sizeof(PerkUpgradeButton_C_Initialize) == 0x000418, "Wrong size on PerkUpgradeButton_C_Initialize");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, ItemUpgradeInfo) == 0x000000, "Member 'PerkUpgradeButton_C_Initialize::ItemUpgradeInfo' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, InIsLoadout) == 0x000128, "Member 'PerkUpgradeButton_C_Initialize::InIsLoadout' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, bInIsSlot) == 0x000129, "Member 'PerkUpgradeButton_C_Initialize::bInIsSlot' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, PlayerState) == 0x000130, "Member 'PerkUpgradeButton_C_Initialize::PlayerState' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, RB_Player_State) == 0x000138, "Member 'PerkUpgradeButton_C_Initialize::RB_Player_State' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, Temp_bool_Variable) == 0x000140, "Member 'PerkUpgradeButton_C_Initialize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000141, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_Not_PreBool_ReturnValue) == 0x000142, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, Temp_byte_Variable) == 0x000143, "Member 'PerkUpgradeButton_C_Initialize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, Temp_byte_Variable_1) == 0x000144, "Member 'PerkUpgradeButton_C_Initialize::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_Not_PreBool_ReturnValue_1) == 0x000145, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_Not_PreBool_ReturnValue_2) == 0x000146, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_GetUpgradeItemInfoForPlayer_ReturnValue) == 0x000148, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_GetUpgradeItemInfoForPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_HasRecentlyBoughtUpgradeOfType_ReturnValue) == 0x000270, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_HasRecentlyBoughtUpgradeOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000271, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_BooleanAND_ReturnValue) == 0x000272, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_BooleanAND_ReturnValue_1) == 0x000273, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_BooleanAND_ReturnValue_2) == 0x000274, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000275, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000276, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_WasUpgradeRecentlyBought_ReturnValue) == 0x000277, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_WasUpgradeRecentlyBought_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_BooleanOR_ReturnValue) == 0x000278, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_BooleanAND_ReturnValue_3) == 0x000279, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_BooleanAND_ReturnValue_4) == 0x00027A, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_WasSeenInMenu_ReturnValue) == 0x00027B, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_WasSeenInMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_Not_PreBool_ReturnValue_3) == 0x00027C, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_BooleanAND_ReturnValue_5) == 0x00027D, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_BooleanAND_ReturnValue_6) == 0x00027E, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_BooleanOR_ReturnValue_1) == 0x00027F, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000280, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, K2Node_Select_Default) == 0x000288, "Member 'PerkUpgradeButton_C_Initialize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_GetPlayerProgressionData_ReturnValue) == 0x000290, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_GetPlayerProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000298, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_GetItemProgressionData_ReturnValue) == 0x0002A0, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_GetItemProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000388, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, K2Node_MakeStruct_SlateColor) == 0x000390, "Member 'PerkUpgradeButton_C_Initialize::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_Map_Find_Value) == 0x0003B8, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_Map_Find_ReturnValue) == 0x0003E0, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, K2Node_Select_Default_1) == 0x0003E8, "Member 'PerkUpgradeButton_C_Initialize::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Initialize, CallFunc_NotEqual_NameName_ReturnValue) == 0x000410, "Member 'PerkUpgradeButton_C_Initialize::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.Initialize Locked Slot
// 0x0028 (0x0028 - 0x0000)
struct PerkUpgradeButton_C_Initialize_Locked_Slot final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
};
static_assert(alignof(PerkUpgradeButton_C_Initialize_Locked_Slot) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_Initialize_Locked_Slot");
static_assert(sizeof(PerkUpgradeButton_C_Initialize_Locked_Slot) == 0x000028, "Wrong size on PerkUpgradeButton_C_Initialize_Locked_Slot");
static_assert(offsetof(PerkUpgradeButton_C_Initialize_Locked_Slot, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'PerkUpgradeButton_C_Initialize_Locked_Slot::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.InitializeEmptySlot
// 0x0058 (0x0058 - 0x0000)
struct PerkUpgradeButton_C_InitializeEmptySlot final
{
public:
	bool                                          DisplayPlus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InIsLoadout;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPerkCategory                                 PerkCategory;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3091[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
	bool                                          CallFunc_HasRecentlyBoughtUpgradeOfType_ReturnValue; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3092[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkUpgradeButton_C_InitializeEmptySlot) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_InitializeEmptySlot");
static_assert(sizeof(PerkUpgradeButton_C_InitializeEmptySlot) == 0x000058, "Wrong size on PerkUpgradeButton_C_InitializeEmptySlot");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, DisplayPlus) == 0x000000, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::DisplayPlus' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, InIsLoadout) == 0x000001, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::InIsLoadout' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, PerkCategory) == 0x000002, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::PerkCategory' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, Temp_bool_Variable) == 0x000003, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, Temp_object_Variable) == 0x000008, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, Temp_object_Variable_1) == 0x000010, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, CallFunc_HasRecentlyBoughtUpgradeOfType_ReturnValue) == 0x000040, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::CallFunc_HasRecentlyBoughtUpgradeOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, K2Node_Select_Default) == 0x000048, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_InitializeEmptySlot, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'PerkUpgradeButton_C_InitializeEmptySlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.SetIsEquipped
// 0x0001 (0x0001 - 0x0000)
struct PerkUpgradeButton_C_SetIsEquipped final
{
public:
	bool                                          IsEquipped;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkUpgradeButton_C_SetIsEquipped) == 0x000001, "Wrong alignment on PerkUpgradeButton_C_SetIsEquipped");
static_assert(sizeof(PerkUpgradeButton_C_SetIsEquipped) == 0x000001, "Wrong size on PerkUpgradeButton_C_SetIsEquipped");
static_assert(offsetof(PerkUpgradeButton_C_SetIsEquipped, IsEquipped) == 0x000000, "Member 'PerkUpgradeButton_C_SetIsEquipped::IsEquipped' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.GetIsEquipped
// 0x0001 (0x0001 - 0x0000)
struct PerkUpgradeButton_C_GetIsEquipped final
{
public:
	bool                                          IsEquipped;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkUpgradeButton_C_GetIsEquipped) == 0x000001, "Wrong alignment on PerkUpgradeButton_C_GetIsEquipped");
static_assert(sizeof(PerkUpgradeButton_C_GetIsEquipped) == 0x000001, "Wrong size on PerkUpgradeButton_C_GetIsEquipped");
static_assert(offsetof(PerkUpgradeButton_C_GetIsEquipped, IsEquipped) == 0x000000, "Member 'PerkUpgradeButton_C_GetIsEquipped::IsEquipped' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.OnFocusReceived
// 0x01D0 (0x01D0 - 0x0000)
struct PerkUpgradeButton_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0118(0x00B8)()
};
static_assert(alignof(PerkUpgradeButton_C_OnFocusReceived) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_OnFocusReceived");
static_assert(sizeof(PerkUpgradeButton_C_OnFocusReceived) == 0x0001D0, "Wrong size on PerkUpgradeButton_C_OnFocusReceived");
static_assert(offsetof(PerkUpgradeButton_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'PerkUpgradeButton_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'PerkUpgradeButton_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'PerkUpgradeButton_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_OnFocusReceived, K2Node_CreateDelegate_OutputDelegate) == 0x0000F8, "Member 'PerkUpgradeButton_C_OnFocusReceived::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_OnFocusReceived, K2Node_CreateDelegate_OutputDelegate_1) == 0x000108, "Member 'PerkUpgradeButton_C_OnFocusReceived::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000118, "Member 'PerkUpgradeButton_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct PerkUpgradeButton_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(PerkUpgradeButton_C_OnFocusLost) == 0x000004, "Wrong alignment on PerkUpgradeButton_C_OnFocusLost");
static_assert(sizeof(PerkUpgradeButton_C_OnFocusLost) == 0x000008, "Wrong size on PerkUpgradeButton_C_OnFocusLost");
static_assert(offsetof(PerkUpgradeButton_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'PerkUpgradeButton_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.Setup
// 0x0128 (0x0128 - 0x0000)
struct PerkUpgradeButton_C_Setup final
{
public:
	ECurrencyType                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMenuUpgradeItemState                         Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBPlayerProgressionData*               CallFunc_GetLocalPlayerProgressionData_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBItemProgressionData                 CallFunc_GetItemProgressionData_ReturnValue;       // 0x0018(0x00E8)(ConstParm)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3093[0x2];                                     // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0108(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PerkUpgradeButton_C_Setup) == 0x000008, "Wrong alignment on PerkUpgradeButton_C_Setup");
static_assert(sizeof(PerkUpgradeButton_C_Setup) == 0x000128, "Wrong size on PerkUpgradeButton_C_Setup");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_byte_Variable) == 0x000000, "Member 'PerkUpgradeButton_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_byte_Variable_1) == 0x000001, "Member 'PerkUpgradeButton_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable) == 0x000002, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable_1) == 0x000003, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable_2) == 0x000004, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable_3) == 0x000005, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable_4) == 0x000006, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable_5) == 0x000007, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable_6) == 0x000008, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable_7) == 0x000009, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable_8) == 0x00000A, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_byte_Variable_2) == 0x00000B, "Member 'PerkUpgradeButton_C_Setup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_byte_Variable_3) == 0x00000C, "Member 'PerkUpgradeButton_C_Setup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_bool_Variable_9) == 0x00000D, "Member 'PerkUpgradeButton_C_Setup::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_byte_Variable_4) == 0x00000E, "Member 'PerkUpgradeButton_C_Setup::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, Temp_byte_Variable_5) == 0x00000F, "Member 'PerkUpgradeButton_C_Setup::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, CallFunc_GetLocalPlayerProgressionData_ReturnValue) == 0x000010, "Member 'PerkUpgradeButton_C_Setup::CallFunc_GetLocalPlayerProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, CallFunc_GetItemProgressionData_ReturnValue) == 0x000018, "Member 'PerkUpgradeButton_C_Setup::CallFunc_GetItemProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, CallFunc_Map_Find_Value) == 0x000100, "Member 'PerkUpgradeButton_C_Setup::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, CallFunc_Map_Find_ReturnValue) == 0x000104, "Member 'PerkUpgradeButton_C_Setup::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, K2Node_Select_Default) == 0x000105, "Member 'PerkUpgradeButton_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, CallFunc_Conv_IntToText_ReturnValue) == 0x000108, "Member 'PerkUpgradeButton_C_Setup::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, CallFunc_Not_PreBool_ReturnValue) == 0x000120, "Member 'PerkUpgradeButton_C_Setup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, CallFunc_BooleanAND_ReturnValue) == 0x000121, "Member 'PerkUpgradeButton_C_Setup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, K2Node_Select_Default_1) == 0x000122, "Member 'PerkUpgradeButton_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, CallFunc_BooleanAND_ReturnValue_1) == 0x000123, "Member 'PerkUpgradeButton_C_Setup::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PerkUpgradeButton_C_Setup, K2Node_Select_Default_2) == 0x000124, "Member 'PerkUpgradeButton_C_Setup::K2Node_Select_Default_2' has a wrong offset!");

// Function PerkUpgradeButton.PerkUpgradeButton_C.IsElementEmpty
// 0x0001 (0x0001 - 0x0000)
struct PerkUpgradeButton_C_IsElementEmpty final
{
public:
	bool                                          bIsEmpty;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PerkUpgradeButton_C_IsElementEmpty) == 0x000001, "Wrong alignment on PerkUpgradeButton_C_IsElementEmpty");
static_assert(sizeof(PerkUpgradeButton_C_IsElementEmpty) == 0x000001, "Wrong size on PerkUpgradeButton_C_IsElementEmpty");
static_assert(offsetof(PerkUpgradeButton_C_IsElementEmpty, bIsEmpty) == 0x000000, "Member 'PerkUpgradeButton_C_IsElementEmpty::bIsEmpty' has a wrong offset!");

}

