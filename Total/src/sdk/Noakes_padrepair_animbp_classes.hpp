#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Noakes_padrepair_animbp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass noakes_padrepair_animbp.noakes_padrepair_animbp_C
// 0x0A90 (0x0D50 - 0x02C0)
class UNoakes_padrepair_animbp_C final : public UAnimInstance
{
public:
	uint8                                         Pad_342F[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x03C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x03E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0468(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0498(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0518(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0548(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x05C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x05F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0678(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x06A8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0728(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0758(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0780(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x07A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x07D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x07F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0820(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0848(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x08C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x08F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0978(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x09A8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0A28(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0A58(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0AD8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0B08(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0B88(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0BB8(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0C68(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0C98(0x00B0)()
	bool                                          IsNoticing;                                        // 0x0D48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsBreakIdle;                                       // 0x0D49(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStanding;                                        // 0x0D4A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasGainedXp;                                       // 0x0D4B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsServingCustomer;                                 // 0x0D4C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasGainedLevel;                                    // 0x0D4D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsProgressDone;                                    // 0x0D4E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void Serving();
	void ExecuteUbergraph_noakes_padrepair_animbp(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"noakes_padrepair_animbp_C">();
	}
	static class UNoakes_padrepair_animbp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoakes_padrepair_animbp_C>();
	}
};
static_assert(alignof(UNoakes_padrepair_animbp_C) == 0x000010, "Wrong alignment on UNoakes_padrepair_animbp_C");
static_assert(sizeof(UNoakes_padrepair_animbp_C) == 0x000D50, "Wrong size on UNoakes_padrepair_animbp_C");
static_assert(offsetof(UNoakes_padrepair_animbp_C, UberGraphFrame) == 0x0002C0, "Member 'UNoakes_padrepair_animbp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_11) == 0x0002F8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_10) == 0x000320, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_9) == 0x000348, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_8) == 0x000370, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_7) == 0x000398, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_6) == 0x0003C0, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer_9) == 0x0003E8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_10) == 0x000468, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer_8) == 0x000498, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_9) == 0x000518, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer_7) == 0x000548, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_8) == 0x0005C8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer_6) == 0x0005F8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_7) == 0x000678, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer_5) == 0x0006A8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_6) == 0x000728, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_5) == 0x000758, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_4) == 0x000780, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_3) == 0x0007A8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_2) == 0x0007D0, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult_1) == 0x0007F8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_TransitionResult) == 0x000820, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer_4) == 0x000848, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_5) == 0x0008C8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer_3) == 0x0008F8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_4) == 0x000978, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer_2) == 0x0009A8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_3) == 0x000A28, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer_1) == 0x000A58, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_2) == 0x000AD8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_SequencePlayer) == 0x000B08, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult_1) == 0x000B88, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateMachine_1) == 0x000BB8, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateResult) == 0x000C68, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, AnimGraphNode_StateMachine) == 0x000C98, "Member 'UNoakes_padrepair_animbp_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, IsNoticing) == 0x000D48, "Member 'UNoakes_padrepair_animbp_C::IsNoticing' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, IsBreakIdle) == 0x000D49, "Member 'UNoakes_padrepair_animbp_C::IsBreakIdle' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, IsStanding) == 0x000D4A, "Member 'UNoakes_padrepair_animbp_C::IsStanding' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, HasGainedXp) == 0x000D4B, "Member 'UNoakes_padrepair_animbp_C::HasGainedXp' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, IsServingCustomer) == 0x000D4C, "Member 'UNoakes_padrepair_animbp_C::IsServingCustomer' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, HasGainedLevel) == 0x000D4D, "Member 'UNoakes_padrepair_animbp_C::HasGainedLevel' has a wrong offset!");
static_assert(offsetof(UNoakes_padrepair_animbp_C, IsProgressDone) == 0x000D4E, "Member 'UNoakes_padrepair_animbp_C::IsProgressDone' has a wrong offset!");

}

