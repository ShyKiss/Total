#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Disclaimer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Disclaimer.Disclaimer_C.ExecuteUbergraph_Disclaimer
// 0x0068 (0x0068 - 0x0000)
struct Disclaimer_C_ExecuteUbergraph_Disclaimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBGameModeMainMenu*                    CallFunc_GetRBGameModeMainMenu_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URBLocalProfile*                        CallFunc_GetProfile_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTime_ReturnValue;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Disclaimer_C_ExecuteUbergraph_Disclaimer) == 0x000008, "Wrong alignment on Disclaimer_C_ExecuteUbergraph_Disclaimer");
static_assert(sizeof(Disclaimer_C_ExecuteUbergraph_Disclaimer) == 0x000068, "Wrong size on Disclaimer_C_ExecuteUbergraph_Disclaimer");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, EntryPoint) == 0x000000, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, K2Node_Event_MyGeometry) == 0x000004, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, CallFunc_GetRBGameModeMainMenu_ReturnValue) == 0x000040, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::CallFunc_GetRBGameModeMainMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, CallFunc_GetProfile_ReturnValue) == 0x000050, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::CallFunc_GetProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, CallFunc_GetGameTime_ReturnValue) == 0x00005C, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::CallFunc_GetGameTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, CallFunc_GetElapsedTime_ReturnValue) == 0x000060, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_ExecuteUbergraph_Disclaimer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000064, "Member 'Disclaimer_C_ExecuteUbergraph_Disclaimer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function Disclaimer.Disclaimer_C.Tick
// 0x003C (0x003C - 0x0000)
struct Disclaimer_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Disclaimer_C_Tick) == 0x000004, "Wrong alignment on Disclaimer_C_Tick");
static_assert(sizeof(Disclaimer_C_Tick) == 0x00003C, "Wrong size on Disclaimer_C_Tick");
static_assert(offsetof(Disclaimer_C_Tick, MyGeometry) == 0x000000, "Member 'Disclaimer_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Disclaimer_C_Tick, InDeltaTime) == 0x000038, "Member 'Disclaimer_C_Tick::InDeltaTime' has a wrong offset!");

}

