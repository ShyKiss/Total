#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LinearInventoryEntry

#include "Basic.hpp"

#include "LinearInventoryEntry_classes.hpp"
#include "LinearInventoryEntry_parameters.hpp"


namespace SDK
{

// Function LinearInventoryEntry.LinearInventoryEntry_C.ExecuteUbergraph_LinearInventoryEntry
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULinearInventoryEntry_C::ExecuteUbergraph_LinearInventoryEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "ExecuteUbergraph_LinearInventoryEntry");

	Params::LinearInventoryEntry_C_ExecuteUbergraph_LinearInventoryEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.Event_InputSourceChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsGamepad                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULinearInventoryEntry_C::Event_InputSourceChanged(bool bIsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "Event_InputSourceChanged");

	Params::LinearInventoryEntry_C_Event_InputSourceChanged Parms{};

	Parms.bIsGamepad = bIsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ULinearInventoryEntry_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULinearInventoryEntry_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "PreConstruct");

	Params::LinearInventoryEntry_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.Init
// (Public, BlueprintCallable, BlueprintEvent)

void ULinearInventoryEntry_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.SetSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSelected                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULinearInventoryEntry_C::SetSelected(bool IsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "SetSelected");

	Params::LinearInventoryEntry_C_SetSelected Parms{};

	Parms.IsSelected = IsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.UpdateInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUILinearInventoryItem           ItemInfo_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void ULinearInventoryEntry_C::UpdateInfo(const struct FUILinearInventoryItem& ItemInfo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "UpdateInfo");

	Params::LinearInventoryEntry_C_UpdateInfo Parms{};

	Parms.ItemInfo_0 = std::move(ItemInfo_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.UpdatePrompt
// (Public, BlueprintCallable, BlueprintEvent)

void ULinearInventoryEntry_C::UpdatePrompt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "UpdatePrompt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.UpdateSpecialColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     SpecialColor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULinearInventoryEntry_C::UpdateSpecialColor(const struct FLinearColor& SpecialColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "UpdateSpecialColor");

	Params::LinearInventoryEntry_C_UpdateSpecialColor Parms{};

	Parms.SpecialColor = std::move(SpecialColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.UpdateSwapIconVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Swap                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULinearInventoryEntry_C::UpdateSwapIconVisibility(bool Swap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "UpdateSwapIconVisibility");

	Params::LinearInventoryEntry_C_UpdateSwapIconVisibility Parms{};

	Parms.Swap = Swap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LinearInventoryEntry.LinearInventoryEntry_C.ShouldShow
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ULinearInventoryEntry_C::ShouldShow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearInventoryEntry_C", "ShouldShow");

	Params::LinearInventoryEntry_C_ShouldShow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

