#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Barlow_Novel_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Barlow_Novel_AnimBP.Barlow_Novel_AnimBP_C
// 0x0540 (0x0800 - 0x02C0)
class UBarlow_Novel_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3BFB[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0370(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0398(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0418(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0448(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x04C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x04F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0578(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x05A8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0628(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0658(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0708(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0738(0x00B0)()
	bool                                          IsNoticing;                                        // 0x07E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsIdleBreaker;                                     // 0x07E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStanding;                                        // 0x07EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasGainedXp;                                       // 0x07EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsServingCustomer;                                 // 0x07EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasGainedLevel;                                    // 0x07ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsProgressDone;                                    // 0x07EE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTellingStory;                                    // 0x07EF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCallingOut;                                      // 0x07F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShopping;                                        // 0x07F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Barlow_Novel_AnimBP_AnimGraphNode_TransitionResult_73A750814A66AC2C19992E8AE1488F3D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Barlow_Novel_AnimBP_AnimGraphNode_TransitionResult_1BB9637D417E9CABF47593AB8FC89FD1();
	void ExecuteUbergraph_Barlow_Novel_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Barlow_Novel_AnimBP_C">();
	}
	static class UBarlow_Novel_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBarlow_Novel_AnimBP_C>();
	}
};
static_assert(alignof(UBarlow_Novel_AnimBP_C) == 0x000010, "Wrong alignment on UBarlow_Novel_AnimBP_C");
static_assert(sizeof(UBarlow_Novel_AnimBP_C) == 0x000800, "Wrong size on UBarlow_Novel_AnimBP_C");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UBarlow_Novel_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0002F8, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000320, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000348, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000370, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000398, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_StateResult_4) == 0x000418, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000448, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_StateResult_3) == 0x0004C8, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0004F8, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000578, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0005A8, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000628, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x000658, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_StateResult) == 0x000708, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, AnimGraphNode_StateMachine) == 0x000738, "Member 'UBarlow_Novel_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, IsNoticing) == 0x0007E8, "Member 'UBarlow_Novel_AnimBP_C::IsNoticing' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, IsIdleBreaker) == 0x0007E9, "Member 'UBarlow_Novel_AnimBP_C::IsIdleBreaker' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, IsStanding) == 0x0007EA, "Member 'UBarlow_Novel_AnimBP_C::IsStanding' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, HasGainedXp) == 0x0007EB, "Member 'UBarlow_Novel_AnimBP_C::HasGainedXp' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, IsServingCustomer) == 0x0007EC, "Member 'UBarlow_Novel_AnimBP_C::IsServingCustomer' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, HasGainedLevel) == 0x0007ED, "Member 'UBarlow_Novel_AnimBP_C::HasGainedLevel' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, IsProgressDone) == 0x0007EE, "Member 'UBarlow_Novel_AnimBP_C::IsProgressDone' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, IsTellingStory) == 0x0007EF, "Member 'UBarlow_Novel_AnimBP_C::IsTellingStory' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, IsCallingOut) == 0x0007F0, "Member 'UBarlow_Novel_AnimBP_C::IsCallingOut' has a wrong offset!");
static_assert(offsetof(UBarlow_Novel_AnimBP_C, IsShopping) == 0x0007F1, "Member 'UBarlow_Novel_AnimBP_C::IsShopping' has a wrong offset!");

}

