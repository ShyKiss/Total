#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArmWrestlingMinigameWidget

#include "Basic.hpp"

#include "ArmWrestlingMinigameWidget_classes.hpp"
#include "ArmWrestlingMinigameWidget_parameters.hpp"


namespace SDK
{

// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.SequenceEvent__ENTRYPOINTArmWrestlingMinigameWidget_1
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::SequenceEvent__ENTRYPOINTArmWrestlingMinigameWidget_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "SequenceEvent__ENTRYPOINTArmWrestlingMinigameWidget_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.SequenceEvent__ENTRYPOINTArmWrestlingMinigameWidget_0
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::SequenceEvent__ENTRYPOINTArmWrestlingMinigameWidget_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "SequenceEvent__ENTRYPOINTArmWrestlingMinigameWidget_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.OnPlayerLeaving
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::OnPlayerLeaving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "OnPlayerLeaving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.UpdateLeavingUI
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::UpdateLeavingUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "UpdateLeavingUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.GetExitingPercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UArmWrestlingMinigameWidget_C::GetExitingPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "GetExitingPercent");

	Params::ArmWrestlingMinigameWidget_C_GetExitingPercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.OnStartExitingGame
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bExiting                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   StartExitTimestamp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::OnStartExitingGame(bool bExiting, float StartExitTimestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "OnStartExitingGame");

	Params::ArmWrestlingMinigameWidget_C_OnStartExitingGame Parms{};

	Parms.bExiting = bExiting;
	Parms.StartExitTimestamp = StartExitTimestamp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.SetupPlayerNames
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::SetupPlayerNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "SetupPlayerNames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.ResetRTPCs
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::ResetRTPCs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "ResetRTPCs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.UpdateRTPCs
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::UpdateRTPCs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "UpdateRTPCs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.UpdateStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBArmWreslingTable*              Param_Table                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::UpdateStats(class ARBArmWreslingTable* Param_Table)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "UpdateStats");

	Params::ArmWrestlingMinigameWidget_C_UpdateStats Parms{};

	Parms.Param_Table = Param_Table;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.ShouldShowPlayerHits
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::ShouldShowPlayerHits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "ShouldShowPlayerHits");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.OnPlayerDisconnected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBArmWreslingTable*              Param_Table                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URBArmWreslingPanelComponent*     Panel                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARBPlayer*                        InteractingPlayer                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::OnPlayerDisconnected(class ARBArmWreslingTable* Param_Table, class URBArmWreslingPanelComponent* Panel, class ARBPlayer* InteractingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "OnPlayerDisconnected");

	Params::ArmWrestlingMinigameWidget_C_OnPlayerDisconnected Parms{};

	Parms.Param_Table = Param_Table;
	Parms.Panel = Panel;
	Parms.InteractingPlayer = InteractingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.UpdateHitZoneImages
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumZones                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::UpdateHitZoneImages(int32 NumZones)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "UpdateHitZoneImages");

	Params::ArmWrestlingMinigameWidget_C_UpdateHitZoneImages Parms{};

	Parms.NumZones = NumZones;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.ResetMatchVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::ResetMatchVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "ResetMatchVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.PlayerConnectionEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBArmWreslingTable*              Param_Table                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URBArmWreslingPanelComponent*     Panel                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARBPlayer*                        InteractingPlayer                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::PlayerConnectionEvent(class ARBArmWreslingTable* Param_Table, class URBArmWreslingPanelComponent* Panel, class ARBPlayer* InteractingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "PlayerConnectionEvent");

	Params::ArmWrestlingMinigameWidget_C_PlayerConnectionEvent Parms{};

	Parms.Param_Table = Param_Table;
	Parms.Panel = Panel;
	Parms.InteractingPlayer = InteractingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.PlayerInputCallback
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FArmWreslingPlayerRoundData      PlayerRoundData                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UArmWrestlingMinigameWidget_C::PlayerInputCallback(const struct FArmWreslingPlayerRoundData& PlayerRoundData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "PlayerInputCallback");

	Params::ArmWrestlingMinigameWidget_C_PlayerInputCallback Parms{};

	Parms.PlayerRoundData = std::move(PlayerRoundData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.AddConsecutiveHitFeedbackInBox
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHorizontalBox*                   HorizontalBox                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HitIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::AddConsecutiveHitFeedbackInBox(class UHorizontalBox* HorizontalBox, int32 HitIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "AddConsecutiveHitFeedbackInBox");

	Params::ArmWrestlingMinigameWidget_C_AddConsecutiveHitFeedbackInBox Parms{};

	Parms.HorizontalBox = HorizontalBox;
	Parms.HitIndex = HitIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.Success Event
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URBArmWreslingPanelComponent*     Panel                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CursorPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Multiplier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InputLevel                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::Success_Event(class URBArmWreslingPanelComponent* Panel, float CursorPosition, float Multiplier, int32 InputLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "Success Event");

	Params::ArmWrestlingMinigameWidget_C_Success_Event Parms{};

	Parms.Panel = Panel;
	Parms.CursorPosition = CursorPosition;
	Parms.Multiplier = Multiplier;
	Parms.InputLevel = InputLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.UpdateHitZone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   EndZoneOffset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EndZoneSize                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::UpdateHitZone(float EndZoneOffset, int32 EndZoneSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "UpdateHitZone");

	Params::ArmWrestlingMinigameWidget_C_UpdateHitZone Parms{};

	Parms.EndZoneOffset = EndZoneOffset;
	Parms.EndZoneSize = EndZoneSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.GetOpposingPanel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class URBArmWreslingPanelComponent*     Panel                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::GetOpposingPanel(class URBArmWreslingPanelComponent** Panel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "GetOpposingPanel");

	Params::ArmWrestlingMinigameWidget_C_GetOpposingPanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Panel != nullptr)
		*Panel = Parms.Panel;
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.SetVisibilityToInGame
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::SetVisibilityToInGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "SetVisibilityToInGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.SetVisibilityToWaiting
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::SetVisibilityToWaiting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "SetVisibilityToWaiting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.Shake Camera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::Shake_Camera(float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "Shake Camera");

	Params::ArmWrestlingMinigameWidget_C_Shake_Camera Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.Round Ended Event
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FArmWreslingPlayerRoundData      Player1RoundData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FArmWreslingPlayerRoundData      Player2RoundData                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UArmWrestlingMinigameWidget_C::Round_Ended_Event(const struct FArmWreslingPlayerRoundData& Player1RoundData, const struct FArmWreslingPlayerRoundData& Player2RoundData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "Round Ended Event");

	Params::ArmWrestlingMinigameWidget_C_Round_Ended_Event Parms{};

	Parms.Player1RoundData = std::move(Player1RoundData);
	Parms.Player2RoundData = std::move(Player2RoundData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.TableStateChangedEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBArmWreslingTable*              Param_Table                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::TableStateChangedEvent(class ARBArmWreslingTable* Param_Table)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "TableStateChangedEvent");

	Params::ArmWrestlingMinigameWidget_C_TableStateChangedEvent Parms{};

	Parms.Param_Table = Param_Table;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.FailedEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URBArmWreslingPanelComponent*     Panel                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartCursorPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EndCursorPosition                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EArmWreslingPanelInputFailType          FailType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::FailedEvent(class URBArmWreslingPanelComponent* Panel, float StartCursorPosition, float EndCursorPosition, EArmWreslingPanelInputFailType FailType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "FailedEvent");

	Params::ArmWrestlingMinigameWidget_C_FailedEvent Parms{};

	Parms.Panel = Panel;
	Parms.StartCursorPosition = StartCursorPosition;
	Parms.EndCursorPosition = EndCursorPosition;
	Parms.FailType = FailType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.BindArmWrestlingEvents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Unbind                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UArmWrestlingMinigameWidget_C::BindArmWrestlingEvents(bool Unbind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "BindArmWrestlingEvents");

	Params::ArmWrestlingMinigameWidget_C_BindArmWrestlingEvents Parms{};

	Parms.Unbind = Unbind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.GetOpponentPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ARBPlayer*                        RBPlayer                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::GetOpponentPlayer(class ARBPlayer** RBPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "GetOpponentPlayer");

	Params::ArmWrestlingMinigameWidget_C_GetOpponentPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RBPlayer != nullptr)
		*RBPlayer = Parms.RBPlayer;
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.CreateDynMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::CreateDynMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "CreateDynMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.UpdateNeedle
// (Public, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::UpdateNeedle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "UpdateNeedle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.UpdateWinner
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::UpdateWinner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "UpdateWinner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.UpdateTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::UpdateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "UpdateTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.Init
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARBArmWreslingTable*              Param_Table                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UArmWreslingPanelComponent_BP_C*  Param_LocalPanel                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::Init(class ARBArmWreslingTable* Param_Table, class UArmWreslingPanelComponent_BP_C* Param_LocalPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "Init");

	Params::ArmWrestlingMinigameWidget_C_Init Parms{};

	Parms.Param_Table = Param_Table;
	Parms.Param_LocalPanel = Param_LocalPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.Event_FadeInWaitingForPlayer
// (BlueprintCallable, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::Event_FadeInWaitingForPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "Event_FadeInWaitingForPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "Tick");

	Params::ArmWrestlingMinigameWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UArmWrestlingMinigameWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmWrestlingMinigameWidget.ArmWrestlingMinigameWidget_C.ExecuteUbergraph_ArmWrestlingMinigameWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmWrestlingMinigameWidget_C::ExecuteUbergraph_ArmWrestlingMinigameWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmWrestlingMinigameWidget_C", "ExecuteUbergraph_ArmWrestlingMinigameWidget");

	Params::ArmWrestlingMinigameWidget_C_ExecuteUbergraph_ArmWrestlingMinigameWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

