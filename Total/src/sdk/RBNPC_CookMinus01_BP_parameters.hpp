#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBNPC_CookMinus01_BP

#include "Basic.hpp"


namespace SDK::Params
{

// Function RBNPC_Cook-01_BP.RBNPC_Cook-01_BP_C.SetSpecialEventHat
// 0x0002 (0x0002 - 0x0000)
struct RBNPC_CookMinus01_BP_C_SetSpecialEventHat final
{
public:
	bool                                          CallFunc_CheckFeatureSwitch_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFeatureSwitch_ReturnValue_1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBNPC_CookMinus01_BP_C_SetSpecialEventHat) == 0x000001, "Wrong alignment on RBNPC_CookMinus01_BP_C_SetSpecialEventHat");
static_assert(sizeof(RBNPC_CookMinus01_BP_C_SetSpecialEventHat) == 0x000002, "Wrong size on RBNPC_CookMinus01_BP_C_SetSpecialEventHat");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_SetSpecialEventHat, CallFunc_CheckFeatureSwitch_ReturnValue) == 0x000000, "Member 'RBNPC_CookMinus01_BP_C_SetSpecialEventHat::CallFunc_CheckFeatureSwitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_SetSpecialEventHat, CallFunc_CheckFeatureSwitch_ReturnValue_1) == 0x000001, "Member 'RBNPC_CookMinus01_BP_C_SetSpecialEventHat::CallFunc_CheckFeatureSwitch_ReturnValue_1' has a wrong offset!");

// Function RBNPC_Cook-01_BP.RBNPC_Cook-01_BP_C.GetFaceAnimBP
// 0x0020 (0x0020 - 0x0000)
struct RBNPC_CookMinus01_BP_C_GetFaceAnimBP final
{
public:
	class UEnemyFace_AnimBlueprint_C*             EnemyFaceAnimBP;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemyFace_AnimBlueprint_C*             K2Node_DynamicCast_AsEnemy_Face_Anim_Blueprint;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBNPC_CookMinus01_BP_C_GetFaceAnimBP) == 0x000008, "Wrong alignment on RBNPC_CookMinus01_BP_C_GetFaceAnimBP");
static_assert(sizeof(RBNPC_CookMinus01_BP_C_GetFaceAnimBP) == 0x000020, "Wrong size on RBNPC_CookMinus01_BP_C_GetFaceAnimBP");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_GetFaceAnimBP, EnemyFaceAnimBP) == 0x000000, "Member 'RBNPC_CookMinus01_BP_C_GetFaceAnimBP::EnemyFaceAnimBP' has a wrong offset!");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_GetFaceAnimBP, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'RBNPC_CookMinus01_BP_C_GetFaceAnimBP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_GetFaceAnimBP, K2Node_DynamicCast_AsEnemy_Face_Anim_Blueprint) == 0x000010, "Member 'RBNPC_CookMinus01_BP_C_GetFaceAnimBP::K2Node_DynamicCast_AsEnemy_Face_Anim_Blueprint' has a wrong offset!");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_GetFaceAnimBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'RBNPC_CookMinus01_BP_C_GetFaceAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function RBNPC_Cook-01_BP.RBNPC_Cook-01_BP_C.GetFacePoseAsset
// 0x0008 (0x0008 - 0x0000)
struct RBNPC_CookMinus01_BP_C_GetFacePoseAsset final
{
public:
	class UPoseAsset*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBNPC_CookMinus01_BP_C_GetFacePoseAsset) == 0x000008, "Wrong alignment on RBNPC_CookMinus01_BP_C_GetFacePoseAsset");
static_assert(sizeof(RBNPC_CookMinus01_BP_C_GetFacePoseAsset) == 0x000008, "Wrong size on RBNPC_CookMinus01_BP_C_GetFacePoseAsset");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_GetFacePoseAsset, ReturnValue) == 0x000000, "Member 'RBNPC_CookMinus01_BP_C_GetFacePoseAsset::ReturnValue' has a wrong offset!");

// Function RBNPC_Cook-01_BP.RBNPC_Cook-01_BP_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct RBNPC_CookMinus01_BP_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3072[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(RBNPC_CookMinus01_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on RBNPC_CookMinus01_BP_C_UserConstructionScript");
static_assert(sizeof(RBNPC_CookMinus01_BP_C_UserConstructionScript) == 0x000018, "Wrong size on RBNPC_CookMinus01_BP_C_UserConstructionScript");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'RBNPC_CookMinus01_BP_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000008, "Member 'RBNPC_CookMinus01_BP_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function RBNPC_Cook-01_BP.RBNPC_Cook-01_BP_C.SetNormalMeshVisibility
// 0x0001 (0x0001 - 0x0000)
struct RBNPC_CookMinus01_BP_C_SetNormalMeshVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBNPC_CookMinus01_BP_C_SetNormalMeshVisibility) == 0x000001, "Wrong alignment on RBNPC_CookMinus01_BP_C_SetNormalMeshVisibility");
static_assert(sizeof(RBNPC_CookMinus01_BP_C_SetNormalMeshVisibility) == 0x000001, "Wrong size on RBNPC_CookMinus01_BP_C_SetNormalMeshVisibility");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_SetNormalMeshVisibility, bVisible) == 0x000000, "Member 'RBNPC_CookMinus01_BP_C_SetNormalMeshVisibility::bVisible' has a wrong offset!");

// Function RBNPC_Cook-01_BP.RBNPC_Cook-01_BP_C.ExecuteUbergraph_RBNPC_Cook-01_BP
// 0x0008 (0x0008 - 0x0000)
struct RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bVisible;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP) == 0x000004, "Wrong alignment on RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP");
static_assert(sizeof(RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP) == 0x000008, "Wrong size on RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP, EntryPoint) == 0x000000, "Member 'RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000005, "Member 'RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP, K2Node_Event_bVisible) == 0x000006, "Member 'RBNPC_CookMinus01_BP_C_ExecuteUbergraph_RBNPC_CookMinus01_BP::K2Node_Event_bVisible' has a wrong offset!");

// Function RBNPC_Cook-01_BP.RBNPC_Cook-01_BP_C.GetFaceFXSkeletalMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct RBNPC_CookMinus01_BP_C_GetFaceFXSkeletalMeshComponent final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBNPC_CookMinus01_BP_C_GetFaceFXSkeletalMeshComponent) == 0x000008, "Wrong alignment on RBNPC_CookMinus01_BP_C_GetFaceFXSkeletalMeshComponent");
static_assert(sizeof(RBNPC_CookMinus01_BP_C_GetFaceFXSkeletalMeshComponent) == 0x000008, "Wrong size on RBNPC_CookMinus01_BP_C_GetFaceFXSkeletalMeshComponent");
static_assert(offsetof(RBNPC_CookMinus01_BP_C_GetFaceFXSkeletalMeshComponent, ReturnValue) == 0x000000, "Member 'RBNPC_CookMinus01_BP_C_GetFaceFXSkeletalMeshComponent::ReturnValue' has a wrong offset!");

}

