#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoadingVideoWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LoadingVideoWidget.LoadingVideoWidget_C
// 0x0060 (0x02F8 - 0x0298)
class ULoadingVideoWidget_C final : public URBMenuTransition
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideAnim;                                          // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowAnim;                                          // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_0;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VideoTransition;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fade;                                              // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClosing;                                         // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentFade;                                       // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetFade;                                        // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFading;                                          // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x02E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_LoadingVideoWidget(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void UpdateSize();
	void Close();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Show();
	void Hide(bool WithAnim);
	void UpdateFade(float Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LoadingVideoWidget_C">();
	}
	static class ULoadingVideoWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadingVideoWidget_C>();
	}
};
static_assert(alignof(ULoadingVideoWidget_C) == 0x000008, "Wrong alignment on ULoadingVideoWidget_C");
static_assert(sizeof(ULoadingVideoWidget_C) == 0x0002F8, "Wrong size on ULoadingVideoWidget_C");
static_assert(offsetof(ULoadingVideoWidget_C, UberGraphFrame) == 0x000298, "Member 'ULoadingVideoWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, HideAnim) == 0x0002A0, "Member 'ULoadingVideoWidget_C::HideAnim' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, ShowAnim) == 0x0002A8, "Member 'ULoadingVideoWidget_C::ShowAnim' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, CanvasPanel_0) == 0x0002B0, "Member 'ULoadingVideoWidget_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, ScaleBox_0) == 0x0002B8, "Member 'ULoadingVideoWidget_C::ScaleBox_0' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, VideoTransition) == 0x0002C0, "Member 'ULoadingVideoWidget_C::VideoTransition' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, Material) == 0x0002C8, "Member 'ULoadingVideoWidget_C::Material' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, Fade) == 0x0002D0, "Member 'ULoadingVideoWidget_C::Fade' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, IsClosing) == 0x0002D4, "Member 'ULoadingVideoWidget_C::IsClosing' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, CurrentFade) == 0x0002D8, "Member 'ULoadingVideoWidget_C::CurrentFade' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, TargetFade) == 0x0002DC, "Member 'ULoadingVideoWidget_C::TargetFade' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, IsFading) == 0x0002E0, "Member 'ULoadingVideoWidget_C::IsFading' has a wrong offset!");
static_assert(offsetof(ULoadingVideoWidget_C, Color) == 0x0002E4, "Member 'ULoadingVideoWidget_C::Color' has a wrong offset!");

}

