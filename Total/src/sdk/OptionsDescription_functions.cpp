#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsDescription

#include "Basic.hpp"

#include "OptionsDescription_classes.hpp"
#include "OptionsDescription_parameters.hpp"


namespace SDK
{

// Function OptionsDescription.OptionsDescription_C.ExecuteUbergraph_OptionsDescription
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsDescription_C::ExecuteUbergraph_OptionsDescription(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsDescription_C", "ExecuteUbergraph_OptionsDescription");

	Params::OptionsDescription_C_ExecuteUbergraph_OptionsDescription Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsDescription.OptionsDescription_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsDescription_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsDescription_C", "Tick");

	Params::OptionsDescription_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsDescription.OptionsDescription_C.UpdateDescription
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FOptionData                      OptionData                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UOptionsDescription_C::UpdateDescription(const struct FOptionData& OptionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsDescription_C", "UpdateDescription");

	Params::OptionsDescription_C_UpdateDescription Parms{};

	Parms.OptionData = std::move(OptionData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsDescription.OptionsDescription_C.UpdateRestartRequired
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FOptionData                      Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UOptionsDescription_C::UpdateRestartRequired(const struct FOptionData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsDescription_C", "UpdateRestartRequired");

	Params::OptionsDescription_C_UpdateRestartRequired Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}

}

