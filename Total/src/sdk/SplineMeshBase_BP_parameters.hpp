#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SplineMeshBase_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MeshIndex_structs.hpp"
#include "Engine_structs.hpp"
#include "SplineMeshData_structs.hpp"


namespace SDK::Params
{

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.ExecuteUbergraph_SplineMeshBase_BP
// 0x0048 (0x0048 - 0x0000)
struct SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bToggleEnabled;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_GetComponentsByTag_ReturnValue;           // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP) == 0x000008, "Wrong alignment on SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP");
static_assert(sizeof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP) == 0x000048, "Wrong size on SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, EntryPoint) == 0x000000, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, Temp_bool_Variable) == 0x000004, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, Temp_byte_Variable) == 0x000005, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, Temp_byte_Variable_1) == 0x000006, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, Temp_int_Array_Index_Variable) == 0x000008, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, K2Node_Event_bToggleEnabled) == 0x000014, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::K2Node_Event_bToggleEnabled' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, CallFunc_GetComponentsByTag_ReturnValue) == 0x000018, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, CallFunc_Array_Get_Item) == 0x000030, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, K2Node_Select_Default) == 0x000038, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'SplineMeshBase_BP_C_ExecuteUbergraph_SplineMeshBase_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.PostToggled
// 0x0001 (0x0001 - 0x0000)
struct SplineMeshBase_BP_C_PostToggled final
{
public:
	bool                                          bToggleEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMeshBase_BP_C_PostToggled) == 0x000001, "Wrong alignment on SplineMeshBase_BP_C_PostToggled");
static_assert(sizeof(SplineMeshBase_BP_C_PostToggled) == 0x000001, "Wrong size on SplineMeshBase_BP_C_PostToggled");
static_assert(offsetof(SplineMeshBase_BP_C_PostToggled, bToggleEnabled) == 0x000000, "Member 'SplineMeshBase_BP_C_PostToggled::bToggleEnabled' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.AddDetailsMeshes
// 0x00F0 (0x00F0 - 0x0000)
struct SplineMeshBase_BP_C_AddDetailsMeshes final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Relative_Transform_Rotation;                       // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SplineMeshBase_BP_C_AddDetailsMeshes) == 0x000010, "Wrong alignment on SplineMeshBase_BP_C_AddDetailsMeshes");
static_assert(sizeof(SplineMeshBase_BP_C_AddDetailsMeshes) == 0x0000F0, "Wrong size on SplineMeshBase_BP_C_AddDetailsMeshes");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, Distance) == 0x000000, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::Distance' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, Location) == 0x000004, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::Location' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, Relative_Transform_Rotation) == 0x000010, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::Relative_Transform_Rotation' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, Temp_name_Variable) == 0x000028, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, Temp_int_Variable) == 0x000030, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Array_Get_Item) == 0x00003C, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_BreakVector2D_X) == 0x000048, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_BreakVector2D_Y) == 0x00004C, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_GetSplineLength_ReturnValue) == 0x000054, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_FMax_ReturnValue) == 0x000058, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_FTrunc_ReturnValue) == 0x000060, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000064, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000074, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Add_FloatFloat_ReturnValue) == 0x00007C, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000080, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_InRange_FloatFloat_ReturnValue) == 0x00008C, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x000090, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_AddComponent_ReturnValue) == 0x0000D0, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_SetStaticMesh_ReturnValue) == 0x0000DC, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddDetailsMeshes, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E0, "Member 'SplineMeshBase_BP_C_AddDetailsMeshes::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.AddStaticMesh
// 0x00F0 (0x00F0 - 0x0000)
struct SplineMeshBase_BP_C_AddStaticMesh final
{
public:
	struct FVector                                StartPos;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartTangent;                                      // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPos;                                            // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndTangent;                                        // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            NewMesh;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELightmapType                                 NewLocalVar_0;                                     // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x007C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMeshBase_BP_C_AddStaticMesh) == 0x000010, "Wrong alignment on SplineMeshBase_BP_C_AddStaticMesh");
static_assert(sizeof(SplineMeshBase_BP_C_AddStaticMesh) == 0x0000F0, "Wrong size on SplineMeshBase_BP_C_AddStaticMesh");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, StartPos) == 0x000000, "Member 'SplineMeshBase_BP_C_AddStaticMesh::StartPos' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, StartTangent) == 0x00000C, "Member 'SplineMeshBase_BP_C_AddStaticMesh::StartTangent' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, EndPos) == 0x000018, "Member 'SplineMeshBase_BP_C_AddStaticMesh::EndPos' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, EndTangent) == 0x000024, "Member 'SplineMeshBase_BP_C_AddStaticMesh::EndTangent' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, NewMesh) == 0x000030, "Member 'SplineMeshBase_BP_C_AddStaticMesh::NewMesh' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, Index_0) == 0x000038, "Member 'SplineMeshBase_BP_C_AddStaticMesh::Index_0' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, NewLocalVar_0) == 0x00003C, "Member 'SplineMeshBase_BP_C_AddStaticMesh::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, Temp_int_Array_Index_Variable) == 0x000044, "Member 'SplineMeshBase_BP_C_AddStaticMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_GetSplineLength_ReturnValue) == 0x000048, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x00004C, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x000050, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000058, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000060, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, K2Node_MakeStruct_LinearColor) == 0x000064, "Member 'SplineMeshBase_BP_C_AddStaticMesh::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'SplineMeshBase_BP_C_AddStaticMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, Temp_name_Variable) == 0x00007C, "Member 'SplineMeshBase_BP_C_AddStaticMesh::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_AddComponent_ReturnValue) == 0x0000C0, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x0000C8, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Array_AddUnique_ReturnValue) == 0x0000D0, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_AddStaticMesh, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'SplineMeshBase_BP_C_AddStaticMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.FindClosetMeshes
// 0x00B0 (0x00B0 - 0x0000)
struct SplineMeshBase_BP_C_FindClosetMeshes final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       Target_0;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSplineMeshData>                Meshes_0;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _ClosestDistIndex;                                 // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _ClosestDist;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplineMeshData                        CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x0064(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMeshBase_BP_C_FindClosetMeshes) == 0x000008, "Wrong alignment on SplineMeshBase_BP_C_FindClosetMeshes");
static_assert(sizeof(SplineMeshBase_BP_C_FindClosetMeshes) == 0x0000B0, "Wrong size on SplineMeshBase_BP_C_FindClosetMeshes");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, A) == 0x000000, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::A' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, Target_0) == 0x000008, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::Target_0' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, Meshes_0) == 0x000010, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::Meshes_0' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, Index_0) == 0x000020, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::Index_0' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, _ClosestDistIndex) == 0x000024, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::_ClosestDistIndex' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, _ClosestDist) == 0x000028, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::_ClosestDist' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000030, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x00003C, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, Temp_int_Array_Index_Variable) == 0x000040, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_Array_Get_Item) == 0x000048, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_GetBoundingBox_ReturnValue) == 0x000064, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_BreakVector_X) == 0x000084, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_BreakVector_Y) == 0x000088, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_BreakVector_Z) == 0x00008C, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, Temp_byte_Variable) == 0x000098, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, K2Node_Select_Default) == 0x00009C, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_Abs_ReturnValue) == 0x0000A4, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000A8, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A9, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FindClosetMeshes, CallFunc_BooleanOR_ReturnValue) == 0x0000AA, "Member 'SplineMeshBase_BP_C_FindClosetMeshes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.SnapPointOnGrid
// 0x0070 (0x0070 - 0x0000)
struct SplineMeshBase_BP_C_SnapPointOnGrid final
{
public:
	class USplineComponent*                       Spline_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector;                       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntVectorToVector_ReturnValue;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SplineMeshBase_BP_C_SnapPointOnGrid) == 0x000008, "Wrong alignment on SplineMeshBase_BP_C_SnapPointOnGrid");
static_assert(sizeof(SplineMeshBase_BP_C_SnapPointOnGrid) == 0x000070, "Wrong size on SplineMeshBase_BP_C_SnapPointOnGrid");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, Spline_0) == 0x000000, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::Spline_0' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, Temp_int_Variable) == 0x00000C, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000018, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000024, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_BreakVector_X) == 0x000030, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_BreakVector_Y) == 0x000034, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_BreakVector_Z) == 0x000038, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_Round_ReturnValue) == 0x00003C, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_Round_ReturnValue_1) == 0x000040, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_Round_ReturnValue_2) == 0x000044, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, K2Node_MakeStruct_IntVector) == 0x000048, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::K2Node_MakeStruct_IntVector' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_Conv_IntVectorToVector_ReturnValue) == 0x000054, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_Conv_IntVectorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SnapPointOnGrid, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'SplineMeshBase_BP_C_SnapPointOnGrid::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.Construct Spline Meshes
// 0x00E0 (0x00E0 - 0x0000)
struct SplineMeshBase_BP_C_Construct_Spline_Meshes final
{
public:
	int32                                         _currentIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue;      // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue_1;    // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshIndex                             CallFunc_Array_Get_Item_1;                         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default;                             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_2;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindClosetMeshes_Index;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplineMeshData                        CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(SplineMeshBase_BP_C_Construct_Spline_Meshes) == 0x000008, "Wrong alignment on SplineMeshBase_BP_C_Construct_Spline_Meshes");
static_assert(sizeof(SplineMeshBase_BP_C_Construct_Spline_Meshes) == 0x0000E0, "Wrong size on SplineMeshBase_BP_C_Construct_Spline_Meshes");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, _currentIndex) == 0x000000, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::_currentIndex' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, Temp_int_Variable) == 0x000004, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, Temp_int_Array_Index_Variable) == 0x000018, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, Temp_int_Variable_1) == 0x00001C, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, Temp_int_Variable_2) == 0x000020, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Array_IsEmpty_ReturnValue) == 0x00002C, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Add_IntInt_ReturnValue_4) == 0x000034, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000038, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x00003C, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, Temp_bool_Variable) == 0x00004C, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000050, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_GetTangentAtSplinePoint_ReturnValue) == 0x000054, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_GetTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000064, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_GetTangentAtSplinePoint_ReturnValue_1) == 0x000070, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_GetTangentAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x00007C, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Array_Get_Item) == 0x000088, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008D, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000095, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Not_PreBool_ReturnValue_1) == 0x000096, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000AC, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AD, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_IsValid_ReturnValue_1) == 0x0000AE, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_BooleanAND_ReturnValue) == 0x0000AF, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, K2Node_Select_Default) == 0x0000B0, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B4, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Array_IsEmpty_ReturnValue_2) == 0x0000B8, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Array_IsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000B9, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_BooleanOR_ReturnValue) == 0x0000BA, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BB, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BC, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_FindClosetMeshes_Index) == 0x0000C0, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_FindClosetMeshes_Index' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Construct_Spline_Meshes, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'SplineMeshBase_BP_C_Construct_Spline_Meshes::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.ClearGeneratedMeshes
// 0x0040 (0x0040 - 0x0000)
struct SplineMeshBase_BP_C_ClearGeneratedMeshes final
{
public:
	TArray<class UActorComponent*>                List;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMeshBase_BP_C_ClearGeneratedMeshes) == 0x000008, "Wrong alignment on SplineMeshBase_BP_C_ClearGeneratedMeshes");
static_assert(sizeof(SplineMeshBase_BP_C_ClearGeneratedMeshes) == 0x000040, "Wrong size on SplineMeshBase_BP_C_ClearGeneratedMeshes");
static_assert(offsetof(SplineMeshBase_BP_C_ClearGeneratedMeshes, List) == 0x000000, "Member 'SplineMeshBase_BP_C_ClearGeneratedMeshes::List' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ClearGeneratedMeshes, Temp_int_Array_Index_Variable) == 0x000010, "Member 'SplineMeshBase_BP_C_ClearGeneratedMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ClearGeneratedMeshes, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'SplineMeshBase_BP_C_ClearGeneratedMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ClearGeneratedMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'SplineMeshBase_BP_C_ClearGeneratedMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ClearGeneratedMeshes, CallFunc_GetComponentsByTag_ReturnValue) == 0x000020, "Member 'SplineMeshBase_BP_C_ClearGeneratedMeshes::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ClearGeneratedMeshes, CallFunc_Array_Get_Item) == 0x000030, "Member 'SplineMeshBase_BP_C_ClearGeneratedMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ClearGeneratedMeshes, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'SplineMeshBase_BP_C_ClearGeneratedMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_ClearGeneratedMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'SplineMeshBase_BP_C_ClearGeneratedMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.SetSplinePosition
// 0x00D4 (0x00D4 - 0x0000)
struct SplineMeshBase_BP_C_SetSplinePosition final
{
public:
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0030(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_2;   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SplineMeshBase_BP_C_SetSplinePosition) == 0x000004, "Wrong alignment on SplineMeshBase_BP_C_SetSplinePosition");
static_assert(sizeof(SplineMeshBase_BP_C_SetSplinePosition) == 0x0000D4, "Wrong size on SplineMeshBase_BP_C_SetSplinePosition");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000000, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, Temp_int_Variable) == 0x000004, "Member 'SplineMeshBase_BP_C_SetSplinePosition::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x00000C, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000018, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000030, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000B8, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x0000BC, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_SetSplinePosition, CallFunc_GetLocationAtSplinePoint_ReturnValue_2) == 0x0000C8, "Member 'SplineMeshBase_BP_C_SetSplinePosition::CallFunc_GetLocationAtSplinePoint_ReturnValue_2' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.FlattenTangent
// 0x0030 (0x0030 - 0x0000)
struct SplineMeshBase_BP_C_FlattenTangent final
{
public:
	class USplineComponent*                       Spline_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtSplinePoint_ReturnValue;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SplineMeshBase_BP_C_FlattenTangent) == 0x000008, "Wrong alignment on SplineMeshBase_BP_C_FlattenTangent");
static_assert(sizeof(SplineMeshBase_BP_C_FlattenTangent) == 0x000030, "Wrong size on SplineMeshBase_BP_C_FlattenTangent");
static_assert(offsetof(SplineMeshBase_BP_C_FlattenTangent, Spline_0) == 0x000000, "Member 'SplineMeshBase_BP_C_FlattenTangent::Spline_0' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FlattenTangent, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000008, "Member 'SplineMeshBase_BP_C_FlattenTangent::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FlattenTangent, Temp_int_Variable) == 0x00000C, "Member 'SplineMeshBase_BP_C_FlattenTangent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FlattenTangent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'SplineMeshBase_BP_C_FlattenTangent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FlattenTangent, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'SplineMeshBase_BP_C_FlattenTangent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FlattenTangent, CallFunc_GetTangentAtSplinePoint_ReturnValue) == 0x000018, "Member 'SplineMeshBase_BP_C_FlattenTangent::CallFunc_GetTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_FlattenTangent, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000024, "Member 'SplineMeshBase_BP_C_FlattenTangent::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.Reorder Point
// 0x00C0 (0x00C0 - 0x0000)
struct SplineMeshBase_BP_C_Reorder_Point final
{
public:
	int32                                         LastPoint;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAdded;                                           // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMeshIndex                             CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0068(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshIndex                             K2Node_MakeStruct_MeshIndex;                       // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_3;    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMeshBase_BP_C_Reorder_Point) == 0x000008, "Wrong alignment on SplineMeshBase_BP_C_Reorder_Point");
static_assert(sizeof(SplineMeshBase_BP_C_Reorder_Point) == 0x0000C0, "Wrong size on SplineMeshBase_BP_C_Reorder_Point");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, LastPoint) == 0x000000, "Member 'SplineMeshBase_BP_C_Reorder_Point::LastPoint' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, IsAdded) == 0x000004, "Member 'SplineMeshBase_BP_C_Reorder_Point::IsAdded' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, Temp_int_Array_Index_Variable) == 0x000008, "Member 'SplineMeshBase_BP_C_Reorder_Point::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'SplineMeshBase_BP_C_Reorder_Point::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'SplineMeshBase_BP_C_Reorder_Point::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, Temp_bool_Variable) == 0x000018, "Member 'SplineMeshBase_BP_C_Reorder_Point::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, Temp_int_Variable) == 0x00001C, "Member 'SplineMeshBase_BP_C_Reorder_Point::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, Temp_bool_Variable_1) == 0x000028, "Member 'SplineMeshBase_BP_C_Reorder_Point::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00002C, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Array_Get_Item) == 0x000030, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_SelectInt_ReturnValue) == 0x000040, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000048, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_SelectInt_ReturnValue_1) == 0x000050, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'SplineMeshBase_BP_C_Reorder_Point::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000060, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000065, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Less_IntInt_ReturnValue_1) == 0x000066, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, K2Node_Select_Default) == 0x000068, "Member 'SplineMeshBase_BP_C_Reorder_Point::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, Temp_bool_Variable_2) == 0x000070, "Member 'SplineMeshBase_BP_C_Reorder_Point::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Array_Get_Item_2) == 0x000074, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, K2Node_Select_Default_1) == 0x000080, "Member 'SplineMeshBase_BP_C_Reorder_Point::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, K2Node_MakeStruct_MeshIndex) == 0x000088, "Member 'SplineMeshBase_BP_C_Reorder_Point::K2Node_MakeStruct_MeshIndex' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000098, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0000A4, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x0000A8, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000AC, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000B1, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B3, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x0000B4, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_GetNumberOfSplinePoints_ReturnValue_3) == 0x0000B8, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_GetNumberOfSplinePoints_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_Reorder_Point, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000BC, "Member 'SplineMeshBase_BP_C_Reorder_Point::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.getAllPointsPositions
// 0x0024 (0x0024 - 0x0000)
struct SplineMeshBase_BP_C_GetAllPointsPositions final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SplineMeshBase_BP_C_GetAllPointsPositions) == 0x000004, "Wrong alignment on SplineMeshBase_BP_C_GetAllPointsPositions");
static_assert(sizeof(SplineMeshBase_BP_C_GetAllPointsPositions) == 0x000024, "Wrong size on SplineMeshBase_BP_C_GetAllPointsPositions");
static_assert(offsetof(SplineMeshBase_BP_C_GetAllPointsPositions, Temp_int_Variable) == 0x000000, "Member 'SplineMeshBase_BP_C_GetAllPointsPositions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_GetAllPointsPositions, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000004, "Member 'SplineMeshBase_BP_C_GetAllPointsPositions::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_GetAllPointsPositions, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000010, "Member 'SplineMeshBase_BP_C_GetAllPointsPositions::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_GetAllPointsPositions, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'SplineMeshBase_BP_C_GetAllPointsPositions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_GetAllPointsPositions, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'SplineMeshBase_BP_C_GetAllPointsPositions::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_GetAllPointsPositions, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'SplineMeshBase_BP_C_GetAllPointsPositions::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SplineMeshBase_BP_C_GetAllPointsPositions, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'SplineMeshBase_BP_C_GetAllPointsPositions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function SplineMeshBase_BP.SplineMeshBase_BP_C.IsTogglingStaticShadowComponentAllowed
// 0x0001 (0x0001 - 0x0000)
struct SplineMeshBase_BP_C_IsTogglingStaticShadowComponentAllowed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SplineMeshBase_BP_C_IsTogglingStaticShadowComponentAllowed) == 0x000001, "Wrong alignment on SplineMeshBase_BP_C_IsTogglingStaticShadowComponentAllowed");
static_assert(sizeof(SplineMeshBase_BP_C_IsTogglingStaticShadowComponentAllowed) == 0x000001, "Wrong size on SplineMeshBase_BP_C_IsTogglingStaticShadowComponentAllowed");
static_assert(offsetof(SplineMeshBase_BP_C_IsTogglingStaticShadowComponentAllowed, ReturnValue) == 0x000000, "Member 'SplineMeshBase_BP_C_IsTogglingStaticShadowComponentAllowed::ReturnValue' has a wrong offset!");

}

