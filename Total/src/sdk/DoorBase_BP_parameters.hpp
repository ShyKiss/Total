#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DoorBase_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function DoorBase_BP.DoorBase_BP_C.FixUp
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_FixUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_FixUp) == 0x000001, "Wrong alignment on DoorBase_BP_C_FixUp");
static_assert(sizeof(DoorBase_BP_C_FixUp) == 0x000001, "Wrong size on DoorBase_BP_C_FixUp");
static_assert(offsetof(DoorBase_BP_C_FixUp, ReturnValue) == 0x000000, "Member 'DoorBase_BP_C_FixUp::ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.UpdateCollision
// 0x0006 (0x0006 - 0x0000)
struct DoorBase_BP_C_UpdateCollision final
{
public:
	bool                                          bToggledOn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_UpdateCollision) == 0x000001, "Wrong alignment on DoorBase_BP_C_UpdateCollision");
static_assert(sizeof(DoorBase_BP_C_UpdateCollision) == 0x000006, "Wrong size on DoorBase_BP_C_UpdateCollision");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, bToggledOn) == 0x000000, "Member 'DoorBase_BP_C_UpdateCollision::bToggledOn' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, Temp_bool_Variable) == 0x000001, "Member 'DoorBase_BP_C_UpdateCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, Temp_byte_Variable) == 0x000002, "Member 'DoorBase_BP_C_UpdateCollision::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, Temp_byte_Variable_1) == 0x000003, "Member 'DoorBase_BP_C_UpdateCollision::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'DoorBase_BP_C_UpdateCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdateCollision, K2Node_Select_Default) == 0x000005, "Member 'DoorBase_BP_C_UpdateCollision::K2Node_Select_Default' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.ApplyDoorLightingSettings
// 0x0040 (0x0040 - 0x0000)
struct DoorBase_BP_C_ApplyDoorLightingSettings final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3278[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3279[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_ApplyDoorLightingSettings) == 0x000008, "Wrong alignment on DoorBase_BP_C_ApplyDoorLightingSettings");
static_assert(sizeof(DoorBase_BP_C_ApplyDoorLightingSettings) == 0x000040, "Wrong size on DoorBase_BP_C_ApplyDoorLightingSettings");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_GetChildrenComponents_Children) == 0x000010, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_Array_Get_Item) == 0x000020, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000030, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorLightingSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'DoorBase_BP_C_ApplyDoorLightingSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.UpdatePostLoadDoorLightingSettings
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_UpdatePostLoadDoorLightingSettings final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_UpdatePostLoadDoorLightingSettings) == 0x000001, "Wrong alignment on DoorBase_BP_C_UpdatePostLoadDoorLightingSettings");
static_assert(sizeof(DoorBase_BP_C_UpdatePostLoadDoorLightingSettings) == 0x000002, "Wrong size on DoorBase_BP_C_UpdatePostLoadDoorLightingSettings");
static_assert(offsetof(DoorBase_BP_C_UpdatePostLoadDoorLightingSettings, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'DoorBase_BP_C_UpdatePostLoadDoorLightingSettings::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_UpdatePostLoadDoorLightingSettings, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'DoorBase_BP_C_UpdatePostLoadDoorLightingSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.AddWindowCollision
// 0x0050 (0x0050 - 0x0000)
struct DoorBase_BP_C_AddWindowCollision final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachBase;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_AddWindowCollision) == 0x000010, "Wrong alignment on DoorBase_BP_C_AddWindowCollision");
static_assert(sizeof(DoorBase_BP_C_AddWindowCollision) == 0x000050, "Wrong size on DoorBase_BP_C_AddWindowCollision");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, Actor) == 0x000000, "Member 'DoorBase_BP_C_AddWindowCollision::Actor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, AttachBase) == 0x000008, "Member 'DoorBase_BP_C_AddWindowCollision::AttachBase' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, Temp_struct_Variable) == 0x000010, "Member 'DoorBase_BP_C_AddWindowCollision::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'DoorBase_BP_C_AddWindowCollision::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000048, "Member 'DoorBase_BP_C_AddWindowCollision::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_AddWindowCollision, CallFunc_SetStaticMesh_ReturnValue) == 0x000049, "Member 'DoorBase_BP_C_AddWindowCollision::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.HasDestructibleDoor
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_HasDestructibleDoor final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_HasDestructibleDoor) == 0x000001, "Wrong alignment on DoorBase_BP_C_HasDestructibleDoor");
static_assert(sizeof(DoorBase_BP_C_HasDestructibleDoor) == 0x000001, "Wrong size on DoorBase_BP_C_HasDestructibleDoor");
static_assert(offsetof(DoorBase_BP_C_HasDestructibleDoor, NewParam) == 0x000000, "Member 'DoorBase_BP_C_HasDestructibleDoor::NewParam' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.ApplyDoorCollisionTypeToDoor
// 0x0005 (0x0005 - 0x0000)
struct DoorBase_BP_C_ApplyDoorCollisionTypeToDoor final
{
public:
	bool                                          CallFunc_HasDestructibleDoor_NewParam;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor) == 0x000001, "Wrong alignment on DoorBase_BP_C_ApplyDoorCollisionTypeToDoor");
static_assert(sizeof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor) == 0x000005, "Wrong size on DoorBase_BP_C_ApplyDoorCollisionTypeToDoor");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_HasDestructibleDoor_NewParam) == 0x000000, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_HasDestructibleDoor_NewParam' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_SetStaticMesh_ReturnValue) == 0x000002, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000003, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ApplyDoorCollisionTypeToDoor, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000004, "Member 'DoorBase_BP_C_ApplyDoorCollisionTypeToDoor::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.GetTrapTellMaxIndex
// 0x0004 (0x0004 - 0x0000)
struct DoorBase_BP_C_GetTrapTellMaxIndex final
{
public:
	int32                                         TrapTellMaxIndex;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_GetTrapTellMaxIndex) == 0x000004, "Wrong alignment on DoorBase_BP_C_GetTrapTellMaxIndex");
static_assert(sizeof(DoorBase_BP_C_GetTrapTellMaxIndex) == 0x000004, "Wrong size on DoorBase_BP_C_GetTrapTellMaxIndex");
static_assert(offsetof(DoorBase_BP_C_GetTrapTellMaxIndex, TrapTellMaxIndex) == 0x000000, "Member 'DoorBase_BP_C_GetTrapTellMaxIndex::TrapTellMaxIndex' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.ClearAllTrapTells
// 0x0098 (0x0098 - 0x0000)
struct DoorBase_BP_C_ClearAllTrapTells final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_327A[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USpotLightComponent*>            CallFunc_Map_Values_Values;                        // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USpotLightComponent*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_Map_Values_Values_1;                      // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_327B[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327C[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327D[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_Map_Values_Values_2;                      // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_327E[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_ClearAllTrapTells) == 0x000008, "Wrong alignment on DoorBase_BP_C_ClearAllTrapTells");
static_assert(sizeof(DoorBase_BP_C_ClearAllTrapTells) == 0x000098, "Wrong size on DoorBase_BP_C_ClearAllTrapTells");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Array_Index_Variable_1) == 0x000004, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Array_Index_Variable_2) == 0x000010, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'DoorBase_BP_C_ClearAllTrapTells::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Map_Values_Values) == 0x000028, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Get_Item) == 0x000038, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Map_Values_Values_1) == 0x000040, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Map_Values_Values_2) == 0x000070, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Map_Values_Values_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ClearAllTrapTells, CallFunc_Less_IntInt_ReturnValue_2) == 0x000090, "Member 'DoorBase_BP_C_ClearAllTrapTells::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.TryAddNewTrapTell
// 0x0520 (0x0520 - 0x0000)
struct DoorBase_BP_C_TryAddNewTrapTell final
{
public:
	bool                                          bFromFront;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327F[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TrapTellTransform;                                 // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3280[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3281[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable;                              // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3282[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3283[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x01B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0240(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3284[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBSpotLightComponent*                  CallFunc_AddComponent_ReturnValue_1;               // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0288(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3285[0xB];                                     // 0x0315(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetRandomTrapIndicator_TellIndex;         // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3286[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_GetRandomTrapIndicator_Mesh;              // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRandomTrapIndicator_RelativeTransform; // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_2;               // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3287[0x8];                                     // 0x03F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0400(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0430(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ApplyDoorframeOffsetToTransform_ReturnValue; // 0x0460(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x0490(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x051A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x051B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_TryAddNewTrapTell) == 0x000010, "Wrong alignment on DoorBase_BP_C_TryAddNewTrapTell");
static_assert(sizeof(DoorBase_BP_C_TryAddNewTrapTell) == 0x000520, "Wrong size on DoorBase_BP_C_TryAddNewTrapTell");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, bFromFront) == 0x000000, "Member 'DoorBase_BP_C_TryAddNewTrapTell::bFromFront' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, TrapTellTransform) == 0x000010, "Member 'DoorBase_BP_C_TryAddNewTrapTell::TrapTellTransform' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, Temp_name_Variable) == 0x000040, "Member 'DoorBase_BP_C_TryAddNewTrapTell::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, Temp_name_Variable_1) == 0x000080, "Member 'DoorBase_BP_C_TryAddNewTrapTell::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue_1) == 0x000090, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, Temp_struct_Variable) == 0x0000C0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_GetRelativeTransform_ReturnValue) == 0x0000F0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_AddComponent_ReturnValue) == 0x000120, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_BreakTransform_Location) == 0x000128, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_BreakTransform_Rotation) == 0x000134, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_BreakTransform_Scale) == 0x000140, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue_2) == 0x000150, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_InvertTransform_ReturnValue) == 0x000180, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_SetStaticMesh_ReturnValue) == 0x0001B4, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0001B8, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, Temp_struct_Variable_1) == 0x000240, "Member 'DoorBase_BP_C_TryAddNewTrapTell::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeVector_ReturnValue) == 0x000270, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_AddComponent_ReturnValue_1) == 0x000280, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000288, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_Array_Add_ReturnValue_1) == 0x000310, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000314, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue_3) == 0x000320, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_MakeTransform_ReturnValue_4) == 0x000350, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_GetRandomTrapIndicator_TellIndex) == 0x000380, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_GetRandomTrapIndicator_TellIndex' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_GetRandomTrapIndicator_Mesh) == 0x000388, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_GetRandomTrapIndicator_Mesh' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_GetRandomTrapIndicator_RelativeTransform) == 0x000390, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_GetRandomTrapIndicator_RelativeTransform' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_SelectTransform_ReturnValue) == 0x0003C0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_AddComponent_ReturnValue_2) == 0x0003F0, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_ComposeTransforms_ReturnValue) == 0x000400, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000430, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_ApplyDoorframeOffsetToTransform_ReturnValue) == 0x000460, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_ApplyDoorframeOffsetToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x000490, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000518, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000519, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x00051A, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_TryAddNewTrapTell, CallFunc_IsValid_ReturnValue) == 0x00051B, "Member 'DoorBase_BP_C_TryAddNewTrapTell::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.GetRandomTrapIndicator
// 0x0140 (0x0140 - 0x0000)
struct DoorBase_BP_C_GetRandomTrapIndicator final
{
public:
	int32                                         TellIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3288[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Mesh;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RelativeTransform;                                 // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	int32                                         Retries;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomTellIndex;                                   // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTrapTellMaxIndex_TrapTellMaxIndex;     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3289[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328A[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelRandomInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328B[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LevelRandomFloatRange_ReturnValue;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328C[0xC];                                     // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue_1;                      // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue_2;                      // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelRandomInt_ReturnValue_1;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_GetRandomTrapIndicator) == 0x000010, "Wrong alignment on DoorBase_BP_C_GetRandomTrapIndicator");
static_assert(sizeof(DoorBase_BP_C_GetRandomTrapIndicator) == 0x000140, "Wrong size on DoorBase_BP_C_GetRandomTrapIndicator");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, TellIndex) == 0x000000, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::TellIndex' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Mesh) == 0x000008, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Mesh' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, RelativeTransform) == 0x000010, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::RelativeTransform' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Retries) == 0x000040, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Retries' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, RandomTellIndex) == 0x000044, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::RandomTellIndex' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_GetTrapTellMaxIndex_TrapTellMaxIndex) == 0x000048, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_GetTrapTellMaxIndex_TrapTellMaxIndex' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, K2Node_SwitchInteger_CmpSuccess) == 0x000050, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Map_Contains_ReturnValue) == 0x000051, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Map_Length_ReturnValue) == 0x000054, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Temp_object_Variable) == 0x000058, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Temp_object_Variable_1) == 0x000068, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_LevelRandomInt_ReturnValue) == 0x000070, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_LevelRandomInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Temp_int_Variable) == 0x000074, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_LevelRandomFloatRange_ReturnValue) == 0x000080, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_LevelRandomFloatRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_TLerp_ReturnValue) == 0x000090, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_TLerp_ReturnValue_1) == 0x0000C0, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_TLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_TLerp_ReturnValue_2) == 0x0000F0, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_TLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, Temp_int_Variable_1) == 0x000120, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_3) == 0x000124, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, K2Node_Select_Default) == 0x000128, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_4) == 0x000130, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_Add_IntInt_ReturnValue_5) == 0x000134, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_GetRandomTrapIndicator, CallFunc_LevelRandomInt_ReturnValue_1) == 0x000138, "Member 'DoorBase_BP_C_GetRandomTrapIndicator::CallFunc_LevelRandomInt_ReturnValue_1' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.InitializeSettings
// 0x00C0 (0x00C0 - 0x0000)
struct DoorBase_BP_C_InitializeSettings final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0008(0x0010)(ReferenceParm)
	TArray<class UChildActorComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_2;    // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328D[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328E[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328F[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3290[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3291[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_3;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3292[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_InitializeSettings) == 0x000008, "Wrong alignment on DoorBase_BP_C_InitializeSettings");
static_assert(sizeof(DoorBase_BP_C_InitializeSettings) == 0x0000C0, "Wrong size on DoorBase_BP_C_InitializeSettings");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Actor) == 0x000000, "Member 'DoorBase_BP_C_InitializeSettings::Actor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_GetAttachedActors_OutActors) == 0x000008, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000030, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_K2_GetComponentsByClass_ReturnValue_2) == 0x000040, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_K2_GetComponentsByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Length_ReturnValue_3) == 0x000054, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Array_Index_Variable) == 0x000058, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Get_Item) == 0x000060, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Less_IntInt_ReturnValue_1) == 0x000091, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Loop_Counter_Variable_2) == 0x000098, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Less_IntInt_ReturnValue_2) == 0x00009C, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Array_Index_Variable_3) == 0x0000A4, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, Temp_int_Loop_Counter_Variable_3) == 0x0000A8, "Member 'DoorBase_BP_C_InitializeSettings::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Array_Get_Item_3) == 0x0000B0, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_IsValid_ReturnValue_3) == 0x0000B8, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000B9, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_InitializeSettings, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000BC, "Member 'DoorBase_BP_C_InitializeSettings::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.SetLockBarsVisibility
// 0x0040 (0x0040 - 0x0000)
struct DoorBase_BP_C_SetLockBarsVisibility final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3293[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3294[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_SetLockBarsVisibility) == 0x000008, "Wrong alignment on DoorBase_BP_C_SetLockBarsVisibility");
static_assert(sizeof(DoorBase_BP_C_SetLockBarsVisibility) == 0x000040, "Wrong size on DoorBase_BP_C_SetLockBarsVisibility");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'DoorBase_BP_C_SetLockBarsVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, Temp_int_Array_Index_Variable) == 0x000008, "Member 'DoorBase_BP_C_SetLockBarsVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, Temp_name_Variable) == 0x00000C, "Member 'DoorBase_BP_C_SetLockBarsVisibility::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Array_Get_Item) == 0x000030, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_SetLockBarsVisibility, CallFunc_Array_Contains_ReturnValue) == 0x00003E, "Member 'DoorBase_BP_C_SetLockBarsVisibility::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.DisableDestructibleDoorCollision
// 0x0040 (0x0040 - 0x0000)
struct DoorBase_BP_C_DisableDestructibleDoorCollision final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3295[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumChildrenComponents_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3296[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   K2Node_DynamicCast_AsChild_Actor_Component;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3297[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3298[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AParent_DestructibleDoor_BP_C*          K2Node_DynamicCast_AsParent_Destructible_Door_BP;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3299[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_DisableDestructibleDoorCollision) == 0x000008, "Wrong alignment on DoorBase_BP_C_DisableDestructibleDoorCollision");
static_assert(sizeof(DoorBase_BP_C_DisableDestructibleDoorCollision) == 0x000040, "Wrong size on DoorBase_BP_C_DisableDestructibleDoorCollision");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, Temp_int_Variable) == 0x000000, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_GetChildComponent_ReturnValue) == 0x000008, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_GetNumChildrenComponents_ReturnValue) == 0x000010, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_GetNumChildrenComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, K2Node_DynamicCast_AsChild_Actor_Component) == 0x000018, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::K2Node_DynamicCast_AsChild_Actor_Component' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, K2Node_DynamicCast_AsParent_Destructible_Door_BP) == 0x000030, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::K2Node_DynamicCast_AsParent_Destructible_Door_BP' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_DisableDestructibleDoorCollision, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'DoorBase_BP_C_DisableDestructibleDoorCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.OnPostActorsPasted
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_OnPostActorsPasted final
{
public:
	TArray<class AActor*>                         PastedActors;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(DoorBase_BP_C_OnPostActorsPasted) == 0x000008, "Wrong alignment on DoorBase_BP_C_OnPostActorsPasted");
static_assert(sizeof(DoorBase_BP_C_OnPostActorsPasted) == 0x000010, "Wrong size on DoorBase_BP_C_OnPostActorsPasted");
static_assert(offsetof(DoorBase_BP_C_OnPostActorsPasted, PastedActors) == 0x000000, "Member 'DoorBase_BP_C_OnPostActorsPasted::PastedActors' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.PostDuplicated
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_PostDuplicated final
{
public:
	class AActor*                                 DuplicationParent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_PostDuplicated) == 0x000008, "Wrong alignment on DoorBase_BP_C_PostDuplicated");
static_assert(sizeof(DoorBase_BP_C_PostDuplicated) == 0x000008, "Wrong size on DoorBase_BP_C_PostDuplicated");
static_assert(offsetof(DoorBase_BP_C_PostDuplicated, DuplicationParent) == 0x000000, "Member 'DoorBase_BP_C_PostDuplicated::DuplicationParent' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.PostEditChange
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_PostEditChange final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_PostEditChange) == 0x000004, "Wrong alignment on DoorBase_BP_C_PostEditChange");
static_assert(sizeof(DoorBase_BP_C_PostEditChange) == 0x000008, "Wrong size on DoorBase_BP_C_PostEditChange");
static_assert(offsetof(DoorBase_BP_C_PostEditChange, PropertyName) == 0x000000, "Member 'DoorBase_BP_C_PostEditChange::PropertyName' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.PostEditMove
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_PostEditMove final
{
public:
	bool                                          bFinished;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_PostEditMove) == 0x000001, "Wrong alignment on DoorBase_BP_C_PostEditMove");
static_assert(sizeof(DoorBase_BP_C_PostEditMove) == 0x000001, "Wrong size on DoorBase_BP_C_PostEditMove");
static_assert(offsetof(DoorBase_BP_C_PostEditMove, bFinished) == 0x000000, "Member 'DoorBase_BP_C_PostEditMove::bFinished' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnDoorBashEvent
// 0x0010 (0x0010 - 0x0000)
struct DoorBase_BP_C_BP_OnDoorBashEvent final
{
public:
	class ARBPawn*                                Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bApplyVisualDoorDamage;                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBashDoorType                                 bashType;                                          // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BP_OnDoorBashEvent) == 0x000008, "Wrong alignment on DoorBase_BP_C_BP_OnDoorBashEvent");
static_assert(sizeof(DoorBase_BP_C_BP_OnDoorBashEvent) == 0x000010, "Wrong size on DoorBase_BP_C_BP_OnDoorBashEvent");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBashEvent, Pawn) == 0x000000, "Member 'DoorBase_BP_C_BP_OnDoorBashEvent::Pawn' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBashEvent, bSuccess) == 0x000008, "Member 'DoorBase_BP_C_BP_OnDoorBashEvent::bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBashEvent, bApplyVisualDoorDamage) == 0x000009, "Member 'DoorBase_BP_C_BP_OnDoorBashEvent::bApplyVisualDoorDamage' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBashEvent, bashType) == 0x00000A, "Member 'DoorBase_BP_C_BP_OnDoorBashEvent::bashType' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnDoorBarsLockingEvent
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_BP_OnDoorBarsLockingEvent final
{
public:
	bool                                          bLocking;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_BP_OnDoorBarsLockingEvent) == 0x000001, "Wrong alignment on DoorBase_BP_C_BP_OnDoorBarsLockingEvent");
static_assert(sizeof(DoorBase_BP_C_BP_OnDoorBarsLockingEvent) == 0x000001, "Wrong size on DoorBase_BP_C_BP_OnDoorBarsLockingEvent");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorBarsLockingEvent, bLocking) == 0x000000, "Member 'DoorBase_BP_C_BP_OnDoorBarsLockingEvent::bLocking' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnDoorUnhingeEvent
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BP_OnDoorUnhingeEvent final
{
public:
	class ARBPawn*                                Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BP_OnDoorUnhingeEvent) == 0x000008, "Wrong alignment on DoorBase_BP_C_BP_OnDoorUnhingeEvent");
static_assert(sizeof(DoorBase_BP_C_BP_OnDoorUnhingeEvent) == 0x000008, "Wrong size on DoorBase_BP_C_BP_OnDoorUnhingeEvent");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorUnhingeEvent, Pawn) == 0x000000, "Member 'DoorBase_BP_C_BP_OnDoorUnhingeEvent::Pawn' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnActorAttachedToDoor
// 0x0008 (0x0008 - 0x0000)
struct DoorBase_BP_C_BP_OnActorAttachedToDoor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_BP_OnActorAttachedToDoor) == 0x000008, "Wrong alignment on DoorBase_BP_C_BP_OnActorAttachedToDoor");
static_assert(sizeof(DoorBase_BP_C_BP_OnActorAttachedToDoor) == 0x000008, "Wrong size on DoorBase_BP_C_BP_OnActorAttachedToDoor");
static_assert(offsetof(DoorBase_BP_C_BP_OnActorAttachedToDoor, Actor) == 0x000000, "Member 'DoorBase_BP_C_BP_OnActorAttachedToDoor::Actor' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.BP_OnDoorTrappedStateChanged
// 0x0002 (0x0002 - 0x0000)
struct DoorBase_BP_C_BP_OnDoorTrappedStateChanged final
{
public:
	bool                                          bTrapped;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFromFront;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_BP_OnDoorTrappedStateChanged) == 0x000001, "Wrong alignment on DoorBase_BP_C_BP_OnDoorTrappedStateChanged");
static_assert(sizeof(DoorBase_BP_C_BP_OnDoorTrappedStateChanged) == 0x000002, "Wrong size on DoorBase_BP_C_BP_OnDoorTrappedStateChanged");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorTrappedStateChanged, bTrapped) == 0x000000, "Member 'DoorBase_BP_C_BP_OnDoorTrappedStateChanged::bTrapped' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_BP_OnDoorTrappedStateChanged, bFromFront) == 0x000001, "Member 'DoorBase_BP_C_BP_OnDoorTrappedStateChanged::bFromFront' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.PostToggled
// 0x0001 (0x0001 - 0x0000)
struct DoorBase_BP_C_PostToggled final
{
public:
	bool                                          bToggleEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DoorBase_BP_C_PostToggled) == 0x000001, "Wrong alignment on DoorBase_BP_C_PostToggled");
static_assert(sizeof(DoorBase_BP_C_PostToggled) == 0x000001, "Wrong size on DoorBase_BP_C_PostToggled");
static_assert(offsetof(DoorBase_BP_C_PostToggled, bToggleEnabled) == 0x000000, "Member 'DoorBase_BP_C_PostToggled::bToggleEnabled' has a wrong offset!");

// Function DoorBase_BP.DoorBase_BP_C.ExecuteUbergraph_DoorBase_BP
// 0x0270 (0x0270 - 0x0000)
struct DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0014(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0024(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0034(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_Event_pastedActors;                         // 0x0068(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 K2Node_Event_duplicationParent;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_propertyName;                         // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFinished;                            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329A[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                K2Node_Event_pawn_1;                               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSuccess;                             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bApplyVisualDoorDamage;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBashDoorType                                 K2Node_Event_bashType;                             // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329B[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329C[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bLocking;                             // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329D[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                K2Node_Event_pawn;                                 // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_actor;                                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTrapped;                             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFromFront;                           // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329E[0x2];                                     // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329F[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AParent_DestructibleDoor_BP_C*          K2Node_DynamicCast_AsParent_Destructible_Door_BP;  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A0[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_Map_Values_Values;                        // 0x01D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A1[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetChildComponentByTag_outComponent;      // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A2[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A3[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsLinkedTrapTriggered_ReturnValue;     // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsLinkedTrapArmed_ReturnValue;         // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsLinkedTrapTriggered_ReturnValue_1;   // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x022F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UPointLightComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0230(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A4[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   CallFunc_Array_Get_Item_2;                         // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A5[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bToggleEnabled;                       // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A6[0x2];                                     // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_1;           // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_2;           // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue_3;           // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP) == 0x000010, "Wrong alignment on DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP");
static_assert(sizeof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP) == 0x000270, "Wrong size on DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, EntryPoint) == 0x000000, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_delegate_Variable) == 0x000004, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_delegate_Variable_1) == 0x000014, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_delegate_Variable_2) == 0x000024, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_delegate_Variable_3) == 0x000034, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Variable) == 0x000054, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_pastedActors) == 0x000068, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_pastedActors' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_duplicationParent) == 0x000078, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_duplicationParent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_propertyName) == 0x000080, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_propertyName' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bFinished) == 0x000088, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bFinished' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_pawn_1) == 0x000090, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_pawn_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bSuccess) == 0x000098, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bApplyVisualDoorDamage) == 0x000099, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bApplyVisualDoorDamage' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bashType) == 0x00009A, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bashType' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_GetAttachedActors_OutActors) == 0x0000A0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Loop_Counter_Variable_2) == 0x0000B4, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000BC, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_TLerp_ReturnValue) == 0x0000C0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BreakTransform_Rotation) == 0x0000FC, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BreakTransform_Scale) == 0x000108, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000114, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bLocking) == 0x00019C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bLocking' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_pawn) == 0x0001A0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_pawn' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_actor) == 0x0001A8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bTrapped) == 0x0001B0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bTrapped' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bFromFront) == 0x0001B1, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bFromFront' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, Temp_int_Array_Index_Variable_2) == 0x0001B4, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_AsParent_Destructible_Door_BP) == 0x0001C8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_AsParent_Destructible_Door_BP' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Map_Values_Values) == 0x0001D8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Get_Item_1) == 0x0001E8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Length_ReturnValue_1) == 0x0001F0, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_GetChildComponentByTag_outComponent) == 0x0001F8, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_GetChildComponentByTag_outComponent' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x000200, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000208, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_DynamicCast_bSuccess_1) == 0x000210, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_GetRightVector_ReturnValue) == 0x000214, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000220, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BP_IsLinkedTrapTriggered_ReturnValue) == 0x00022C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BP_IsLinkedTrapTriggered_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BP_IsLinkedTrapArmed_ReturnValue) == 0x00022D, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BP_IsLinkedTrapArmed_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BP_IsLinkedTrapTriggered_ReturnValue_1) == 0x00022E, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BP_IsLinkedTrapTriggered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Not_PreBool_ReturnValue) == 0x00022F, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000230, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_BooleanOR_ReturnValue) == 0x000240, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Get_Item_2) == 0x000248, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_ComponentHasTag_ReturnValue) == 0x000250, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Array_Length_ReturnValue_2) == 0x000254, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_Less_IntInt_ReturnValue_2) == 0x000258, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, K2Node_Event_bToggleEnabled) == 0x000259, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::K2Node_Event_bToggleEnabled' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x00025C, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventOnActor_ReturnValue_1) == 0x000260, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventOnActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventOnActor_ReturnValue_2) == 0x000264, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventOnActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP, CallFunc_PostEventOnActor_ReturnValue_3) == 0x000268, "Member 'DoorBase_BP_C_ExecuteUbergraph_DoorBase_BP::CallFunc_PostEventOnActor_ReturnValue_3' has a wrong offset!");

}

