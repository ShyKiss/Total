#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerHud

#include "Basic.hpp"

#include "PlayerHud_classes.hpp"
#include "PlayerHud_parameters.hpp"


namespace SDK
{

// Function PlayerHud.PlayerHud_C.FadeInCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UPlayerHud_C::FadeInCompleted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "FadeInCompleted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.ExecuteUbergraph_PlayerHud
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerHud_C::ExecuteUbergraph_PlayerHud(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "ExecuteUbergraph_PlayerHud");

	Params::PlayerHud_C_ExecuteUbergraph_PlayerHud Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHud.PlayerHud_C.Event_UpdateTerminalPromptDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bHasUnseenTerminalElements                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHud_C::Event_UpdateTerminalPromptDisplay(const bool bHasUnseenTerminalElements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_UpdateTerminalPromptDisplay");

	Params::PlayerHud_C_Event_UpdateTerminalPromptDisplay Parms{};

	Parms.bHasUnseenTerminalElements = bHasUnseenTerminalElements;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHud.PlayerHud_C.Event_UpdateNewsPromptDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bHasUnseenNews                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHud_C::Event_UpdateNewsPromptDisplay(const bool bHasUnseenNews)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_UpdateNewsPromptDisplay");

	Params::PlayerHud_C_Event_UpdateNewsPromptDisplay Parms{};

	Parms.bHasUnseenNews = bHasUnseenNews;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHud.PlayerHud_C.OnObjectiveStartedMessageSent
// (BlueprintCallable, BlueprintEvent)

void UPlayerHud_C::OnObjectiveStartedMessageSent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "OnObjectiveStartedMessageSent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.OnObjectiveCompletedMessageSent
// (BlueprintCallable, BlueprintEvent)

void UPlayerHud_C::OnObjectiveCompletedMessageSent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "OnObjectiveCompletedMessageSent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPlayerHud_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.ChangeCrosshairVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHud_C::ChangeCrosshairVisibility(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "ChangeCrosshairVisibility");

	Params::PlayerHud_C_ChangeCrosshairVisibility Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHud.PlayerHud_C.Event_OnHUDOpacityChanged
// (Event, Public, BlueprintEvent)

void UPlayerHud_C::Event_OnHUDOpacityChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_OnHUDOpacityChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.Event_ForceUpdateSwapIcons
// (Event, Public, BlueprintEvent)

void UPlayerHud_C::Event_ForceUpdateSwapIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_ForceUpdateSwapIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPlayerHud_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.Event_HideInteractionMessage
// (Event, Public, BlueprintEvent)

void UPlayerHud_C::Event_HideInteractionMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_HideInteractionMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.Event_ShowInteractionMessage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EGameMessageCategory                    GameMessageCategory                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerHud_C::Event_ShowInteractionMessage(const class FText& Message, const EGameMessageCategory GameMessageCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_ShowInteractionMessage");

	Params::PlayerHud_C_Event_ShowInteractionMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.GameMessageCategory = GameMessageCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHud.PlayerHud_C.TransitionFeedbackFinished
// (BlueprintCallable, BlueprintEvent)

void UPlayerHud_C::TransitionFeedbackFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "TransitionFeedbackFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.Event_StartTransitionFeedback
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   blackoutDuration_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerHud_C::Event_StartTransitionFeedback(float blackoutDuration_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_StartTransitionFeedback");

	Params::PlayerHud_C_Event_StartTransitionFeedback Parms{};

	Parms.blackoutDuration_0 = blackoutDuration_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHud.PlayerHud_C.Event_OnResetHud
// (Event, Public, BlueprintEvent)

void UPlayerHud_C::Event_OnResetHud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_OnResetHud");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.BlackoutCompleted
// (BlueprintCallable, BlueprintEvent)

void UPlayerHud_C::BlackoutCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "BlackoutCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.PlayTransitionFeedback
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerHud_C::PlayTransitionFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "PlayTransitionFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.Event_ShowBadgeProgress
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBBadgeHudProgressDisplayDetailsProgress                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerHud_C::Event_ShowBadgeProgress(const struct FRBBadgeHudProgressDisplayDetails& Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_ShowBadgeProgress");

	Params::PlayerHud_C_Event_ShowBadgeProgress Parms{};

	Parms.Progress = std::move(Progress);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHud.PlayerHud_C.Event_HideBadgeProgress
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UPlayerHud_C::Event_HideBadgeProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_HideBadgeProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.Event_ShowTrialDetailsNotification
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBTrialHudNotificationDetails   Details                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerHud_C::Event_ShowTrialDetailsNotification(const struct FRBTrialHudNotificationDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_ShowTrialDetailsNotification");

	Params::PlayerHud_C_Event_ShowTrialDetailsNotification Parms{};

	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHud.PlayerHud_C.Event_HideTrialDetailsNotification
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPlayTransition                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHud_C::Event_HideTrialDetailsNotification(bool bPlayTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "Event_HideTrialDetailsNotification");

	Params::PlayerHud_C_Event_HideTrialDetailsNotification Parms{};

	Parms.bPlayTransition = bPlayTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHud.PlayerHud_C.SequenceEvent__ENTRYPOINTPlayerHud_0
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerHud_C::SequenceEvent__ENTRYPOINTPlayerHud_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "SequenceEvent__ENTRYPOINTPlayerHud_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHud.PlayerHud_C.SequenceEvent__ENTRYPOINTPlayerHud_1
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerHud_C::SequenceEvent__ENTRYPOINTPlayerHud_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHud_C", "SequenceEvent__ENTRYPOINTPlayerHud_1");

	UObject::ProcessEvent(Func, nullptr);
}

}

