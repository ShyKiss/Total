#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LeaveWithPartyButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function LeaveWithPartyButton.LeaveWithPartyButton_C.ExecuteUbergraph_LeaveWithPartyButton
// 0x0120 (0x0120 - 0x0000)
struct LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B0(0x0070)(ConstParm)
};
static_assert(alignof(LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton) == 0x000008, "Wrong alignment on LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton");
static_assert(sizeof(LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton) == 0x000120, "Wrong size on LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton");
static_assert(offsetof(LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton, EntryPoint) == 0x000000, "Member 'LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton, K2Node_Event_IsDesignTime) == 0x000005, "Member 'LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton, K2Node_Event_MyGeometry) == 0x000008, "Member 'LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton, K2Node_Event_MouseEvent) == 0x0000B0, "Member 'LeaveWithPartyButton_C_ExecuteUbergraph_LeaveWithPartyButton::K2Node_Event_MouseEvent' has a wrong offset!");

// Function LeaveWithPartyButton.LeaveWithPartyButton_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct LeaveWithPartyButton_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LeaveWithPartyButton_C_OnMouseLeave) == 0x000008, "Wrong alignment on LeaveWithPartyButton_C_OnMouseLeave");
static_assert(sizeof(LeaveWithPartyButton_C_OnMouseLeave) == 0x000070, "Wrong size on LeaveWithPartyButton_C_OnMouseLeave");
static_assert(offsetof(LeaveWithPartyButton_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'LeaveWithPartyButton_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function LeaveWithPartyButton.LeaveWithPartyButton_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct LeaveWithPartyButton_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LeaveWithPartyButton_C_OnMouseEnter) == 0x000008, "Wrong alignment on LeaveWithPartyButton_C_OnMouseEnter");
static_assert(sizeof(LeaveWithPartyButton_C_OnMouseEnter) == 0x0000A8, "Wrong size on LeaveWithPartyButton_C_OnMouseEnter");
static_assert(offsetof(LeaveWithPartyButton_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'LeaveWithPartyButton_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(LeaveWithPartyButton_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'LeaveWithPartyButton_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function LeaveWithPartyButton.LeaveWithPartyButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct LeaveWithPartyButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LeaveWithPartyButton_C_PreConstruct) == 0x000001, "Wrong alignment on LeaveWithPartyButton_C_PreConstruct");
static_assert(sizeof(LeaveWithPartyButton_C_PreConstruct) == 0x000001, "Wrong size on LeaveWithPartyButton_C_PreConstruct");
static_assert(offsetof(LeaveWithPartyButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'LeaveWithPartyButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function LeaveWithPartyButton.LeaveWithPartyButton_C.UpdateState
// 0x0050 (0x0050 - 0x0000)
struct LeaveWithPartyButton_C_UpdateState final
{
public:
	struct FSlateColor                            NormalColor;                                       // 0x0000(0x0028)(Edit, BlueprintVisible)
	struct FSlateColor                            SelectedColor;                                     // 0x0028(0x0028)(Edit, BlueprintVisible)
};
static_assert(alignof(LeaveWithPartyButton_C_UpdateState) == 0x000008, "Wrong alignment on LeaveWithPartyButton_C_UpdateState");
static_assert(sizeof(LeaveWithPartyButton_C_UpdateState) == 0x000050, "Wrong size on LeaveWithPartyButton_C_UpdateState");
static_assert(offsetof(LeaveWithPartyButton_C_UpdateState, NormalColor) == 0x000000, "Member 'LeaveWithPartyButton_C_UpdateState::NormalColor' has a wrong offset!");
static_assert(offsetof(LeaveWithPartyButton_C_UpdateState, SelectedColor) == 0x000028, "Member 'LeaveWithPartyButton_C_UpdateState::SelectedColor' has a wrong offset!");

// Function LeaveWithPartyButton.LeaveWithPartyButton_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct LeaveWithPartyButton_C_SetSelected final
{
public:
	bool                                          bInSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LeaveWithPartyButton_C_SetSelected) == 0x000001, "Wrong alignment on LeaveWithPartyButton_C_SetSelected");
static_assert(sizeof(LeaveWithPartyButton_C_SetSelected) == 0x000001, "Wrong size on LeaveWithPartyButton_C_SetSelected");
static_assert(offsetof(LeaveWithPartyButton_C_SetSelected, bInSelected) == 0x000000, "Member 'LeaveWithPartyButton_C_SetSelected::bInSelected' has a wrong offset!");

// Function LeaveWithPartyButton.LeaveWithPartyButton_C.SetEnabled
// 0x0001 (0x0001 - 0x0000)
struct LeaveWithPartyButton_C_SetEnabled final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LeaveWithPartyButton_C_SetEnabled) == 0x000001, "Wrong alignment on LeaveWithPartyButton_C_SetEnabled");
static_assert(sizeof(LeaveWithPartyButton_C_SetEnabled) == 0x000001, "Wrong size on LeaveWithPartyButton_C_SetEnabled");
static_assert(offsetof(LeaveWithPartyButton_C_SetEnabled, bInEnabled) == 0x000000, "Member 'LeaveWithPartyButton_C_SetEnabled::bInEnabled' has a wrong offset!");

// Function LeaveWithPartyButton.LeaveWithPartyButton_C.SetButtonText
// 0x0018 (0x0018 - 0x0000)
struct LeaveWithPartyButton_C_SetButtonText final
{
public:
	class FText                                   ButtonText_0;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(LeaveWithPartyButton_C_SetButtonText) == 0x000008, "Wrong alignment on LeaveWithPartyButton_C_SetButtonText");
static_assert(sizeof(LeaveWithPartyButton_C_SetButtonText) == 0x000018, "Wrong size on LeaveWithPartyButton_C_SetButtonText");
static_assert(offsetof(LeaveWithPartyButton_C_SetButtonText, ButtonText_0) == 0x000000, "Member 'LeaveWithPartyButton_C_SetButtonText::ButtonText_0' has a wrong offset!");

}

