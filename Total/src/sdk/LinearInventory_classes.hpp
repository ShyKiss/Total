#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LinearInventory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LinearInventory.LinearInventory_C
// 0x00F0 (0x03F0 - 0x0300)
class ULinearInventory_C final : public URBHUDLinearInventory
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       RestrictionFadeOut;                                // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InactivityFadeOut_OnDemand;                        // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InitialFadeIn;                                     // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InactivityFadeOut_Permanent;                       // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutItemName;                                   // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UActiveSkillCountdown_C*                ActiveSkillCountdown;                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULinearInventoryEntry_C*                ActiveSkillEntry;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ActiveSkillRestricted;                             // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BasicSlots;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentItemName;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DarknessDetectionImage;                            // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULinearInventoryEntry_C*                FistsEntry;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         InventorySlots;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ItemsSlots;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ObjectiveItemsBox;                                 // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULinearInventoryEntry_C*                Slot1;                                             // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULinearInventoryEntry_C*                Slot2;                                             // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULinearInventoryEntry_C*                Slot3;                                             // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULinearInventoryEntry_C*                Slot4;                                             // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULinearInventoryEntry_C*                Slot5;                                             // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer;                                            // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVoiceChatOverheadWidget_C*             VoiceChatOverheadWidget;                           // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               VoiceChatSize;                                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULinearInventoryEntry_C*                PreviousEquippedItem;                              // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULinearInventoryEntry_C*                PreviousSwapItem;                                  // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ASBaseMaterial;                                    // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ASIconMaterial;                                    // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ASCooldownOngoing;                                 // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ObjectiveItemsIconSize;                            // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FadeInOnNextValidHUDMode;                          // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EActiveSkillType                              CurrentActiveSkillType;                            // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_LinearInventory(int32 EntryPoint);
	void Event_RefreshASRestriction(bool IsRestricted);
	void Event_OnHudModeChanged(EHudMode NewHudMode);
	void OnHide();
	void Event_Show();
	void Event_Hide();
	void Event_OnIsInCooldownChanged(class ARBActiveSkill* ActiveSkill, bool bIsInCooldown);
	void StartFadeOutTimer();
	void Event_RefreshDarknessIndicator(bool NewDarknessState);
	void OnInventorySizeChanged();
	void OnSpeakerVisibilityChanged(ESlateVisibility InVisibility);
	void Event_OnWatchedPlayerChanged(class ARBPlayer* OldPlayer, class ARBPlayer* NewPlayer);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Event_RefreshPrompts();
	void OnMenuExit();
	void Event_RefreshActiveSkill();
	void Event_Refresh(EInventoryUpdateEventType EventType);
	void Construct();
	void UpdateText();
	void UpdateEquippedItem();
	void RefreshInventory();
	void UpdateObjectiveItems();
	void UpdateRigSlot();
	void UpdateASCooldown();
	void RefreshPrompts();
	void GetActiveSkillInfo(bool* ActiveSkillFound, struct FUILinearInventoryItem* ActiveSkillInfo);
	void GetActiveSkillIndex(int32* ActiveSkillIndex, bool* ActiveSkillFound);
	void UpdateDarknessDetection(bool InDarkness);
	void OnASCooldownStateChanged(class ARBActiveSkill* ActiveSkill, bool bIsInCooldown);
	void SequenceEvent__ENTRYPOINTLinearInventory_0();
	void SequenceEvent__ENTRYPOINTLinearInventory_1();

	bool ShouldShow() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LinearInventory_C">();
	}
	static class ULinearInventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULinearInventory_C>();
	}
};
static_assert(alignof(ULinearInventory_C) == 0x000008, "Wrong alignment on ULinearInventory_C");
static_assert(sizeof(ULinearInventory_C) == 0x0003F0, "Wrong size on ULinearInventory_C");
static_assert(offsetof(ULinearInventory_C, UberGraphFrame) == 0x000300, "Member 'ULinearInventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, RestrictionFadeOut) == 0x000308, "Member 'ULinearInventory_C::RestrictionFadeOut' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, InactivityFadeOut_OnDemand) == 0x000310, "Member 'ULinearInventory_C::InactivityFadeOut_OnDemand' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, InitialFadeIn) == 0x000318, "Member 'ULinearInventory_C::InitialFadeIn' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, InactivityFadeOut_Permanent) == 0x000320, "Member 'ULinearInventory_C::InactivityFadeOut_Permanent' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, FadeOutItemName) == 0x000328, "Member 'ULinearInventory_C::FadeOutItemName' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, ActiveSkillCountdown) == 0x000330, "Member 'ULinearInventory_C::ActiveSkillCountdown' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, ActiveSkillEntry) == 0x000338, "Member 'ULinearInventory_C::ActiveSkillEntry' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, ActiveSkillRestricted) == 0x000340, "Member 'ULinearInventory_C::ActiveSkillRestricted' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, BasicSlots) == 0x000348, "Member 'ULinearInventory_C::BasicSlots' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, CurrentItemName) == 0x000350, "Member 'ULinearInventory_C::CurrentItemName' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, DarknessDetectionImage) == 0x000358, "Member 'ULinearInventory_C::DarknessDetectionImage' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, FistsEntry) == 0x000360, "Member 'ULinearInventory_C::FistsEntry' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, InventorySlots) == 0x000368, "Member 'ULinearInventory_C::InventorySlots' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, ItemsSlots) == 0x000370, "Member 'ULinearInventory_C::ItemsSlots' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, ObjectiveItemsBox) == 0x000378, "Member 'ULinearInventory_C::ObjectiveItemsBox' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, Slot1) == 0x000380, "Member 'ULinearInventory_C::Slot1' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, Slot2) == 0x000388, "Member 'ULinearInventory_C::Slot2' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, Slot3) == 0x000390, "Member 'ULinearInventory_C::Slot3' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, Slot4) == 0x000398, "Member 'ULinearInventory_C::Slot4' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, Slot5) == 0x0003A0, "Member 'ULinearInventory_C::Slot5' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, Spacer) == 0x0003A8, "Member 'ULinearInventory_C::Spacer' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, VoiceChatOverheadWidget) == 0x0003B0, "Member 'ULinearInventory_C::VoiceChatOverheadWidget' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, VoiceChatSize) == 0x0003B8, "Member 'ULinearInventory_C::VoiceChatSize' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, PreviousEquippedItem) == 0x0003C0, "Member 'ULinearInventory_C::PreviousEquippedItem' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, PreviousSwapItem) == 0x0003C8, "Member 'ULinearInventory_C::PreviousSwapItem' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, ASBaseMaterial) == 0x0003D0, "Member 'ULinearInventory_C::ASBaseMaterial' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, ASIconMaterial) == 0x0003D8, "Member 'ULinearInventory_C::ASIconMaterial' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, ASCooldownOngoing) == 0x0003E0, "Member 'ULinearInventory_C::ASCooldownOngoing' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, ObjectiveItemsIconSize) == 0x0003E4, "Member 'ULinearInventory_C::ObjectiveItemsIconSize' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, FadeInOnNextValidHUDMode) == 0x0003E8, "Member 'ULinearInventory_C::FadeInOnNextValidHUDMode' has a wrong offset!");
static_assert(offsetof(ULinearInventory_C, CurrentActiveSkillType) == 0x0003E9, "Member 'ULinearInventory_C::CurrentActiveSkillType' has a wrong offset!");

}

