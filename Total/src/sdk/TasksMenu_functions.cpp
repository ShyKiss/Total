#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TasksMenu

#include "Basic.hpp"

#include "TasksMenu_classes.hpp"
#include "TasksMenu_parameters.hpp"


namespace SDK
{

// Function TasksMenu.TasksMenu_C.ExecuteUbergraph_TasksMenu
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTasksMenu_C::ExecuteUbergraph_TasksMenu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TasksMenu_C", "ExecuteUbergraph_TasksMenu");

	Params::TasksMenu_C_ExecuteUbergraph_TasksMenu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TasksMenu.TasksMenu_C.OnPopShortcutPressed
// (BlueprintCallable, BlueprintEvent)

void UTasksMenu_C::OnPopShortcutPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TasksMenu_C", "OnPopShortcutPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TasksMenu.TasksMenu_C.BndEvt__TasksMenu_ExitButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class URBMenuButton_C*                  Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTasksMenu_C::BndEvt__TasksMenu_ExitButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(class URBMenuButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TasksMenu_C", "BndEvt__TasksMenu_ExitButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	Params::TasksMenu_C_BndEvt__TasksMenu_ExitButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TasksMenu.TasksMenu_C.Event_OnFocusMenu
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTasksMenu_C::Event_OnFocusMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TasksMenu_C", "Event_OnFocusMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TasksMenu.TasksMenu_C.Event_OnUnfocusMenu
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldHide                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTasksMenu_C::Event_OnUnfocusMenu(bool bShouldHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TasksMenu_C", "Event_OnUnfocusMenu");

	Params::TasksMenu_C_Event_OnUnfocusMenu Parms{};

	Parms.bShouldHide = bShouldHide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TasksMenu.TasksMenu_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UTasksMenu_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TasksMenu_C", "OnFocusReceived");

	Params::TasksMenu_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

