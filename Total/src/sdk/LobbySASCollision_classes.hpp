#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LobbySASCollision

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LobbySASCollision.LobbySASCollision_C
// 0x0038 (0x0280 - 0x0248)
class ALobbySASCollision_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          OverlapBox;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ARBPlayer*>                      AllowedPlayers;                                    // 0x0268(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bIsReleaseReagentTube;                             // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void RespawnPlayerIfNeeded(const class ARBPlayer* RBPlayer);
	void SetIgnoreActor(class ARBPlayer* Actor, bool Ignore);
	void UpdateAllowedPlayers();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_LobbySASCollision(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LobbySASCollision_C">();
	}
	static class ALobbySASCollision_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobbySASCollision_C>();
	}
};
static_assert(alignof(ALobbySASCollision_C) == 0x000008, "Wrong alignment on ALobbySASCollision_C");
static_assert(sizeof(ALobbySASCollision_C) == 0x000280, "Wrong size on ALobbySASCollision_C");
static_assert(offsetof(ALobbySASCollision_C, UberGraphFrame) == 0x000248, "Member 'ALobbySASCollision_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALobbySASCollision_C, OverlapBox) == 0x000250, "Member 'ALobbySASCollision_C::OverlapBox' has a wrong offset!");
static_assert(offsetof(ALobbySASCollision_C, Box) == 0x000258, "Member 'ALobbySASCollision_C::Box' has a wrong offset!");
static_assert(offsetof(ALobbySASCollision_C, DefaultSceneRoot) == 0x000260, "Member 'ALobbySASCollision_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ALobbySASCollision_C, AllowedPlayers) == 0x000268, "Member 'ALobbySASCollision_C::AllowedPlayers' has a wrong offset!");
static_assert(offsetof(ALobbySASCollision_C, bIsReleaseReagentTube) == 0x000278, "Member 'ALobbySASCollision_C::bIsReleaseReagentTube' has a wrong offset!");

}

