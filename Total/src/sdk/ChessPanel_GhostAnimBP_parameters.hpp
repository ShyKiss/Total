#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChessPanel_GhostAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ChessPanel_GhostAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on ChessPanel_GhostAnimBP_C_AnimGraph");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_AnimGraph) == 0x000010, "Wrong size on ChessPanel_GhostAnimBP_C_AnimGraph");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.ValidateBothPlayers
// 0x0005 (0x0005 - 0x0000)
struct ChessPanel_GhostAnimBP_C_ValidateBothPlayers final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_ValidateBothPlayers) == 0x000001, "Wrong alignment on ChessPanel_GhostAnimBP_C_ValidateBothPlayers");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_ValidateBothPlayers) == 0x000005, "Wrong size on ChessPanel_GhostAnimBP_C_ValidateBothPlayers");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ValidateBothPlayers, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_ValidateBothPlayers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ValidateBothPlayers, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'ChessPanel_GhostAnimBP_C_ValidateBothPlayers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ValidateBothPlayers, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'ChessPanel_GhostAnimBP_C_ValidateBothPlayers::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ValidateBothPlayers, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ChessPanel_GhostAnimBP_C_ValidateBothPlayers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ValidateBothPlayers, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'ChessPanel_GhostAnimBP_C_ValidateBothPlayers::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.UpdateResetMove
// 0x0038 (0x0038 - 0x0000)
struct ChessPanel_GhostAnimBP_C_UpdateResetMove final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalPosFromProjPos_ReturnValue;       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4C[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetPlayerInteracting_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4D[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWSFocusedLocation_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4E[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_UpdateResetMove) == 0x000008, "Wrong alignment on ChessPanel_GhostAnimBP_C_UpdateResetMove");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_UpdateResetMove) == 0x000038, "Wrong size on ChessPanel_GhostAnimBP_C_UpdateResetMove");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, DeltaTime) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::DeltaTime' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, CallFunc_GetLocalPosFromProjPos_ReturnValue) == 0x000004, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::CallFunc_GetLocalPosFromProjPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, CallFunc_GetPlayerInteracting_ReturnValue) == 0x000010, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::CallFunc_GetPlayerInteracting_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, CallFunc_IsLocallyControlled_ReturnValue) == 0x000018, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, CallFunc_GetWSFocusedLocation_ReturnValue) == 0x00001C, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::CallFunc_GetWSFocusedLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_UpdateResetMove, CallFunc_VInterpTo_ReturnValue) == 0x00002C, "Member 'ChessPanel_GhostAnimBP_C_UpdateResetMove::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.InitPanelData
// 0x0020 (0x0020 - 0x0000)
struct ChessPanel_GhostAnimBP_C_InitPanelData final
{
public:
	bool                                          CallFunc_IsPlayer1_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBChessBoardPanelComponentBase_C*      K2Node_DynamicCast_AsRB_Chess_Board_Panel_Component_Base; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_InitPanelData) == 0x000008, "Wrong alignment on ChessPanel_GhostAnimBP_C_InitPanelData");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_InitPanelData) == 0x000020, "Wrong size on ChessPanel_GhostAnimBP_C_InitPanelData");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_InitPanelData, CallFunc_IsPlayer1_ReturnValue) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_InitPanelData::CallFunc_IsPlayer1_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_InitPanelData, CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue) == 0x000008, "Member 'ChessPanel_GhostAnimBP_C_InitPanelData::CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_InitPanelData, K2Node_DynamicCast_AsRB_Chess_Board_Panel_Component_Base) == 0x000010, "Member 'ChessPanel_GhostAnimBP_C_InitPanelData::K2Node_DynamicCast_AsRB_Chess_Board_Panel_Component_Base' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_InitPanelData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ChessPanel_GhostAnimBP_C_InitPanelData::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.SetHandIK
// 0x0190 (0x0190 - 0x0000)
struct ChessPanel_GhostAnimBP_C_SetHandIK final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C50[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C51[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C52[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPawn*                                CallFunc_GetPawnInteracting_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C53[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                CallFunc_GetPawnInteracting_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPawn*                                CallFunc_GetPawnInteracting_ReturnValue_2;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C54[0xF];                                     // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetWSFocusedLocation_ReturnValue;         // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_4;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_5;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_6;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_7;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C55[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C56[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_3;                           // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_SetHandIK) == 0x000010, "Wrong alignment on ChessPanel_GhostAnimBP_C_SetHandIK");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_SetHandIK) == 0x000190, "Wrong size on ChessPanel_GhostAnimBP_C_SetHandIK");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, DeltaTime) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::DeltaTime' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, Temp_bool_Variable) == 0x000004, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, Temp_float_Variable) == 0x000008, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, Temp_float_Variable_1) == 0x00000C, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, Temp_bool_Variable_1) == 0x000010, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, Temp_float_Variable_2) == 0x000014, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, Temp_float_Variable_3) == 0x000018, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, Temp_bool_Variable_2) == 0x00001C, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, Temp_bool_Variable_3) == 0x00001D, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector2D_X) == 0x000020, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00002C, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, K2Node_Select_Default) == 0x000034, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, K2Node_Select_Default_1) == 0x000038, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_FInterpTo_ReturnValue) == 0x00003C, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_GetPawnInteracting_ReturnValue) == 0x000040, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_GetPawnInteracting_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_IsLocallyControlled_ReturnValue) == 0x000048, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_GetPawnInteracting_ReturnValue_1) == 0x000050, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_GetPawnInteracting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_GetPawnInteracting_ReturnValue_2) == 0x000058, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_GetPawnInteracting_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_GetWSFocusedLocation_ReturnValue) == 0x0000A0, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_GetWSFocusedLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector_X) == 0x0000AC, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector_Z) == 0x0000B4, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_ClampVectorSize_ReturnValue) == 0x0000B8, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector2D_X_1) == 0x0000C4, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector2D_Y_1) == 0x0000C8, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector2D_X_2) == 0x0000CC, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector2D_Y_2) == 0x0000D0, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0000D4, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000D8, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0000DC, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MapRangeClamped_ReturnValue_5) == 0x0000E0, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000E4, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000E8, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector2D_X_3) == 0x0000EC, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector2D_Y_3) == 0x0000F0, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000F4, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MapRangeClamped_ReturnValue_6) == 0x000100, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector_X_1) == 0x000104, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector_Y_1) == 0x000108, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector_Z_1) == 0x00010C, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MapRangeClamped_ReturnValue_7) == 0x000110, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MapRangeClamped_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MakeVector_ReturnValue) == 0x000114, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000120, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, Temp_bool_Variable_4) == 0x000124, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000128, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, K2Node_Select_Default_2) == 0x00012C, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000130, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, K2Node_Select_Default_3) == 0x000134, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, K2Node_Select_Default_4) == 0x000140, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_InverseTransformLocation_ReturnValue) == 0x000144, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_MakeVector_ReturnValue_1) == 0x000150, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_Add_VectorVector_ReturnValue) == 0x00015C, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000168, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000174, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_SetHandIK, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'ChessPanel_GhostAnimBP_C_SetHandIK::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.ManageIK
// 0x0028 (0x0028 - 0x0000)
struct ChessPanel_GhostAnimBP_C_ManageIK final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C57[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C58[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_ManageIK) == 0x000004, "Wrong alignment on ChessPanel_GhostAnimBP_C_ManageIK");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_ManageIK) == 0x000028, "Wrong size on ChessPanel_GhostAnimBP_C_ManageIK");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, DeltaTime) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::DeltaTime' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, Temp_bool_Variable) == 0x000004, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, Temp_float_Variable) == 0x000008, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, Temp_float_Variable_1) == 0x00000C, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, Temp_bool_Variable_1) == 0x000010, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, Temp_float_Variable_2) == 0x000014, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, Temp_float_Variable_3) == 0x000018, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, K2Node_Select_Default) == 0x00001C, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, K2Node_Select_Default_1) == 0x000020, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageIK, CallFunc_FInterpTo_ReturnValue) == 0x000024, "Member 'ChessPanel_GhostAnimBP_C_ManageIK::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.ManageLookAt
// 0x0038 (0x0038 - 0x0000)
struct ChessPanel_GhostAnimBP_C_ManageLookAt final
{
public:
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C59[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeRotationAngle_ReturnValue;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_ManageLookAt) == 0x000008, "Wrong alignment on ChessPanel_GhostAnimBP_C_ManageLookAt");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_ManageLookAt) == 0x000038, "Wrong size on ChessPanel_GhostAnimBP_C_ManageLookAt");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, K2Node_DynamicCast_AsRB_Player) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Roll) == 0x00000C, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Pitch) == 0x000010, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Yaw) == 0x000014, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Roll_1) == 0x000018, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Pitch_1) == 0x00001C, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Yaw_1) == 0x000020, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Roll_2) == 0x000024, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Pitch_2) == 0x000028, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Yaw_2) == 0x00002C, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ManageLookAt, CallFunc_NormalizeRotationAngle_ReturnValue) == 0x000034, "Member 'ChessPanel_GhostAnimBP_C_ManageLookAt::CallFunc_NormalizeRotationAngle_ReturnValue' has a wrong offset!");

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.FinishGhost
// 0x000C (0x000C - 0x0000)
struct ChessPanel_GhostAnimBP_C_FinishGhost final
{
public:
	EGhostFinishReason                            FinishReason;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GhostFinishCustomReason;                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_FinishGhost) == 0x000004, "Wrong alignment on ChessPanel_GhostAnimBP_C_FinishGhost");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_FinishGhost) == 0x00000C, "Wrong size on ChessPanel_GhostAnimBP_C_FinishGhost");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_FinishGhost, FinishReason) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_FinishGhost::FinishReason' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_FinishGhost, GhostFinishCustomReason) == 0x000004, "Member 'ChessPanel_GhostAnimBP_C_FinishGhost::GhostFinishCustomReason' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_FinishGhost, ReturnValue) == 0x000008, "Member 'ChessPanel_GhostAnimBP_C_FinishGhost::ReturnValue' has a wrong offset!");

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ChessPanel_GhostAnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ChessPanel_GhostAnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ChessPanel_GhostAnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C.ExecuteUbergraph_ChessPanel_GhostAnimBP
// 0x0150 (0x0150 - 0x0000)
struct ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5B[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5C[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5E[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C60[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C61[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C62[0x1];                                     // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C63[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C64[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_8;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C65[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_10;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C66[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_5;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C67[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GhostAnimTransition_ReturnValue;          // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GhostAnimTransition_ReturnValue_1;        // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C68[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BP_GetRandomSelector_ReturnValue;         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C69[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetPlayerInteracting_ReturnValue;         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6A[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWSFocusedLocation_ReturnValue;         // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetCoordinates_ReturnValue;               // 0x0100(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWorldPosFromCoord_ReturnValue;         // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C6B[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBChessPieceComponent*                 CallFunc_GetHoldingPiece_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6C[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelRandomInt_ReturnValue;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6D[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBChessBoardPanelComponentBase_C*      K2Node_DynamicCast_AsRB_Chess_Board_Panel_Component_Base; // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP) == 0x000008, "Wrong alignment on ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP");
static_assert(sizeof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP) == 0x000150, "Wrong size on ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, EntryPoint) == 0x000000, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000007, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000008, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000009, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x00000C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000011, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000014, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000018, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BreakVector2D_X) == 0x00001C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable) == 0x000024, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_1) == 0x000028, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable) == 0x00002C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_2) == 0x000030, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_3) == 0x000034, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_1) == 0x000038, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_4) == 0x00003C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_5) == 0x000040, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_2) == 0x000044, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000045, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000046, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000047, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanOR_ReturnValue_1) == 0x000048, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000049, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x00004A, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanOR_ReturnValue_2) == 0x00004B, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00004C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_2) == 0x00004D, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00004E, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x00004F, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanOR_ReturnValue_3) == 0x000050, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x000054, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000058, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x000059, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x00005A, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x00005B, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_3) == 0x00005C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_4) == 0x00005D, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_5) == 0x00005E, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_6) == 0x00005F, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_7) == 0x000060, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, K2Node_Select_Default) == 0x000064, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, K2Node_Select_Default_1) == 0x000068, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_8) == 0x000074, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x000075, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_3) == 0x000076, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, K2Node_Select_Default_2) == 0x000078, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00007C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x000080, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BreakVector2D_X_1) == 0x000084, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BreakVector2D_Y_1) == 0x000088, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_6) == 0x00008C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_7) == 0x000090, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_9) == 0x000094, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_8) == 0x000098, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_9) == 0x00009C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, K2Node_Select_Default_3) == 0x0000A0, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000A4, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_10) == 0x0000A8, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_10) == 0x0000AC, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_float_Variable_11) == 0x0000B0, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, K2Node_Select_Default_4) == 0x0000B4, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000B8, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_bool_Variable_11) == 0x0000BC, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, K2Node_Select_Default_5) == 0x0000C0, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000C4, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x0000C8, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x0000C9, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanOR_ReturnValue_4) == 0x0000CA, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_4) == 0x0000CB, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x0000CC, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x0000CD, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, K2Node_Event_DeltaTimeX) == 0x0000D0, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x0000D4, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BooleanOR_ReturnValue_5) == 0x0000D5, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GhostAnimTransition_ReturnValue) == 0x0000D6, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GhostAnimTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GhostAnimTransition_ReturnValue_1) == 0x0000D7, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GhostAnimTransition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x0000D8, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_BP_GetRandomSelector_ReturnValue) == 0x0000DC, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_BP_GetRandomSelector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000E4, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GetPlayerInteracting_ReturnValue) == 0x0000E8, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GetPlayerInteracting_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0000F0, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x0000F2, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GetWSFocusedLocation_ReturnValue) == 0x0000F4, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GetWSFocusedLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GetCoordinates_ReturnValue) == 0x000100, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GetCoordinates_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GetWorldPosFromCoord_ReturnValue) == 0x000108, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GetWorldPosFromCoord_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GetHoldingPiece_ReturnValue) == 0x000118, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GetHoldingPiece_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, Temp_int_Variable) == 0x000124, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000128, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_LevelRandomInt_ReturnValue) == 0x00012C, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_LevelRandomInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_IsValid_ReturnValue_2) == 0x000130, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_IsValid_ReturnValue_3) == 0x000131, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue) == 0x000138, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, K2Node_DynamicCast_AsRB_Chess_Board_Panel_Component_Base) == 0x000140, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::K2Node_DynamicCast_AsRB_Chess_Board_Panel_Component_Base' has a wrong offset!");
static_assert(offsetof(ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'ChessPanel_GhostAnimBP_C_ExecuteUbergraph_ChessPanel_GhostAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

