#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PerkUpgradeButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PerkUpgradeButton.PerkUpgradeButton_C
// 0x01C0 (0x0420 - 0x0260)
class UPerkUpgradeButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCategoryButtonWidget_C*                CategoryButtonWidget;                              // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CostAmountText;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CurrencyTypeImage;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedImage;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClickedEvent;                                    // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHoveredEvent;                                    // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhoveredEvent;                                  // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FMenuUpgradeItemInfo                   ItemInfo;                                          // 0x02B8(0x0128)(Edit, BlueprintVisible)
	bool                                          bIsLoadout;                                        // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB8[0x7];                                     // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPressedEvent;                                    // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleasedEvent;                                   // 0x03F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         SlotIndex;                                         // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSlot;                                           // 0x040C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsLockedSlot;                                     // 0x040D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsEquipped;                                       // 0x040E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnableLoadoutHoverEvents;                         // 0x040F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	FMulticastInlineDelegateProperty_             OnBuyAnimationEndedEvent;                          // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnClickedEvent__DelegateSignature(class UPerkUpgradeButton_C* Button);
	void OnHoveredEvent__DelegateSignature(class UPerkUpgradeButton_C* Button);
	void OnUnhoveredEvent__DelegateSignature(class UPerkUpgradeButton_C* Button);
	void OnPressedEvent__DelegateSignature(const struct FMenuUpgradeItemInfo& Param_ItemInfo);
	void OnReleasedEvent__DelegateSignature(const struct FMenuUpgradeItemInfo& Param_ItemInfo);
	void OnBuyAnimationEndedEvent__DelegateSignature(class UPerkUpgradeButton_C* PerkUpgradeButton);
	void ExecuteUbergraph_PerkUpgradeButton(int32 EntryPoint);
	void BndEvt__PerkUpgradeButton_CategoryButtonWidget_K2Node_ComponentBoundEvent_6_Event_HasSeenItem__DelegateSignature();
	void BndEvt__PerkUpgradeButton_CategoryButtonWidget_K2Node_ComponentBoundEvent_5_Event_BuyAnimationEnded__DelegateSignature();
	void BndEvt__CategoryButtonWidget_K2Node_ComponentBoundEvent_4_Event_OnReleased__DelegateSignature();
	void BndEvt__CategoryButtonWidget_K2Node_ComponentBoundEvent_3_Event_OnPressed__DelegateSignature();
	void BndEvt__CategoryButtonWidget_K2Node_ComponentBoundEvent_2_Event_OnUnhovered__DelegateSignature();
	void BndEvt__CategoryButtonWidget_K2Node_ComponentBoundEvent_1_Event_OnHovered__DelegateSignature();
	void BndEvt__CategoryButtonWidget_K2Node_ComponentBoundEvent_0_Event_OnClicked__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void Initialize(const struct FMenuUpgradeItemInfo& ItemUpgradeInfo, bool InIsLoadout, bool bInIsSlot, class ARBPlayerState* PlayerState);
	void Initialize_Locked_Slot();
	void InitializeEmptySlot(bool DisplayPlus, EPerkCategory PerkCategory);
	void SetIsEquipped(bool IsEquipped);
	void GetIsEquipped(bool* IsEquipped);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void GamepadNav_MenuConfirm();
	void GamepadNav_MenuConfirm_Release();
	void Setup();
	void IsElementEmpty(bool* bIsEmpty);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PerkUpgradeButton_C">();
	}
	static class UPerkUpgradeButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPerkUpgradeButton_C>();
	}
};
static_assert(alignof(UPerkUpgradeButton_C) == 0x000008, "Wrong alignment on UPerkUpgradeButton_C");
static_assert(sizeof(UPerkUpgradeButton_C) == 0x000420, "Wrong size on UPerkUpgradeButton_C");
static_assert(offsetof(UPerkUpgradeButton_C, UberGraphFrame) == 0x000260, "Member 'UPerkUpgradeButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, CategoryButtonWidget) == 0x000268, "Member 'UPerkUpgradeButton_C::CategoryButtonWidget' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, CostAmountText) == 0x000270, "Member 'UPerkUpgradeButton_C::CostAmountText' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, CurrencyTypeImage) == 0x000278, "Member 'UPerkUpgradeButton_C::CurrencyTypeImage' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, EquippedImage) == 0x000280, "Member 'UPerkUpgradeButton_C::EquippedImage' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, OnClickedEvent) == 0x000288, "Member 'UPerkUpgradeButton_C::OnClickedEvent' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, OnHoveredEvent) == 0x000298, "Member 'UPerkUpgradeButton_C::OnHoveredEvent' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, OnUnhoveredEvent) == 0x0002A8, "Member 'UPerkUpgradeButton_C::OnUnhoveredEvent' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, ItemInfo) == 0x0002B8, "Member 'UPerkUpgradeButton_C::ItemInfo' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, bIsLoadout) == 0x0003E0, "Member 'UPerkUpgradeButton_C::bIsLoadout' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, OnPressedEvent) == 0x0003E8, "Member 'UPerkUpgradeButton_C::OnPressedEvent' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, OnReleasedEvent) == 0x0003F8, "Member 'UPerkUpgradeButton_C::OnReleasedEvent' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, SlotIndex) == 0x000408, "Member 'UPerkUpgradeButton_C::SlotIndex' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, bIsSlot) == 0x00040C, "Member 'UPerkUpgradeButton_C::bIsSlot' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, bIsLockedSlot) == 0x00040D, "Member 'UPerkUpgradeButton_C::bIsLockedSlot' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, bIsEquipped) == 0x00040E, "Member 'UPerkUpgradeButton_C::bIsEquipped' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, bEnableLoadoutHoverEvents) == 0x00040F, "Member 'UPerkUpgradeButton_C::bEnableLoadoutHoverEvents' has a wrong offset!");
static_assert(offsetof(UPerkUpgradeButton_C, OnBuyAnimationEndedEvent) == 0x000410, "Member 'UPerkUpgradeButton_C::OnBuyAnimationEndedEvent' has a wrong offset!");

}

