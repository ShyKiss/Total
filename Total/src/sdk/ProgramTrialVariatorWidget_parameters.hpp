#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgramTrialVariatorWidget

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.TriggerHoverEvent
// 0x0001 (0x0001 - 0x0000)
struct ProgramTrialVariatorWidget_C_TriggerHoverEvent final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_TriggerHoverEvent) == 0x000001, "Wrong alignment on ProgramTrialVariatorWidget_C_TriggerHoverEvent");
static_assert(sizeof(ProgramTrialVariatorWidget_C_TriggerHoverEvent) == 0x000001, "Wrong size on ProgramTrialVariatorWidget_C_TriggerHoverEvent");
static_assert(offsetof(ProgramTrialVariatorWidget_C_TriggerHoverEvent, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_TriggerHoverEvent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.SetDetailsDisplayed
// 0x0002 (0x0002 - 0x0000)
struct ProgramTrialVariatorWidget_C_SetDetailsDisplayed final
{
public:
	bool                                          Param_bDetailsDisplayed;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_SetDetailsDisplayed) == 0x000001, "Wrong alignment on ProgramTrialVariatorWidget_C_SetDetailsDisplayed");
static_assert(sizeof(ProgramTrialVariatorWidget_C_SetDetailsDisplayed) == 0x000002, "Wrong size on ProgramTrialVariatorWidget_C_SetDetailsDisplayed");
static_assert(offsetof(ProgramTrialVariatorWidget_C_SetDetailsDisplayed, Param_bDetailsDisplayed) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_SetDetailsDisplayed::Param_bDetailsDisplayed' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_SetDetailsDisplayed, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'ProgramTrialVariatorWidget_C_SetDetailsDisplayed::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.SetFocused
// 0x0002 (0x0002 - 0x0000)
struct ProgramTrialVariatorWidget_C_SetFocused final
{
public:
	bool                                          Param_bFocused;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_SetFocused) == 0x000001, "Wrong alignment on ProgramTrialVariatorWidget_C_SetFocused");
static_assert(sizeof(ProgramTrialVariatorWidget_C_SetFocused) == 0x000002, "Wrong size on ProgramTrialVariatorWidget_C_SetFocused");
static_assert(offsetof(ProgramTrialVariatorWidget_C_SetFocused, Param_bFocused) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_SetFocused::Param_bFocused' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'ProgramTrialVariatorWidget_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.SetHovered
// 0x0002 (0x0002 - 0x0000)
struct ProgramTrialVariatorWidget_C_SetHovered final
{
public:
	bool                                          Param_bHovered;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_SetHovered) == 0x000001, "Wrong alignment on ProgramTrialVariatorWidget_C_SetHovered");
static_assert(sizeof(ProgramTrialVariatorWidget_C_SetHovered) == 0x000002, "Wrong size on ProgramTrialVariatorWidget_C_SetHovered");
static_assert(offsetof(ProgramTrialVariatorWidget_C_SetHovered, Param_bHovered) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_SetHovered::Param_bHovered' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'ProgramTrialVariatorWidget_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.InitFromVariatorInfo
// 0x0008 (0x0008 - 0x0000)
struct ProgramTrialVariatorWidget_C_InitFromVariatorInfo final
{
public:
	class URBVariatorInfo*                        VariatorInfo;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_InitFromVariatorInfo) == 0x000008, "Wrong alignment on ProgramTrialVariatorWidget_C_InitFromVariatorInfo");
static_assert(sizeof(ProgramTrialVariatorWidget_C_InitFromVariatorInfo) == 0x000008, "Wrong size on ProgramTrialVariatorWidget_C_InitFromVariatorInfo");
static_assert(offsetof(ProgramTrialVariatorWidget_C_InitFromVariatorInfo, VariatorInfo) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_InitFromVariatorInfo::VariatorInfo' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.InitFromDifficulty
// 0x0118 (0x0118 - 0x0000)
struct ProgramTrialVariatorWidget_C_InitFromDifficulty final
{
public:
	EGameDifficulty                               Difficulty;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3652[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3653[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSettings_Gameplay*                   CallFunc_GetRBSettings_Gameplay_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDifficultyConfig                      CallFunc_Map_Find_Value;                           // 0x0028(0x00E0)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3654[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetBrushResourceAsTexture2D_ReturnValue;  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_InitFromDifficulty) == 0x000008, "Wrong alignment on ProgramTrialVariatorWidget_C_InitFromDifficulty");
static_assert(sizeof(ProgramTrialVariatorWidget_C_InitFromDifficulty) == 0x000118, "Wrong size on ProgramTrialVariatorWidget_C_InitFromDifficulty");
static_assert(offsetof(ProgramTrialVariatorWidget_C_InitFromDifficulty, Difficulty) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_InitFromDifficulty::Difficulty' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_InitFromDifficulty, K2Node_MakeStruct_Margin) == 0x000004, "Member 'ProgramTrialVariatorWidget_C_InitFromDifficulty::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_InitFromDifficulty, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000018, "Member 'ProgramTrialVariatorWidget_C_InitFromDifficulty::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_InitFromDifficulty, CallFunc_GetRBSettings_Gameplay_ReturnValue) == 0x000020, "Member 'ProgramTrialVariatorWidget_C_InitFromDifficulty::CallFunc_GetRBSettings_Gameplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_InitFromDifficulty, CallFunc_Map_Find_Value) == 0x000028, "Member 'ProgramTrialVariatorWidget_C_InitFromDifficulty::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_InitFromDifficulty, CallFunc_Map_Find_ReturnValue) == 0x000108, "Member 'ProgramTrialVariatorWidget_C_InitFromDifficulty::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_InitFromDifficulty, CallFunc_GetBrushResourceAsTexture2D_ReturnValue) == 0x000110, "Member 'ProgramTrialVariatorWidget_C_InitFromDifficulty::CallFunc_GetBrushResourceAsTexture2D_ReturnValue' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.Refresh
// 0x00E8 (0x00E8 - 0x0000)
struct ProgramTrialVariatorWidget_C_Refresh final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3655[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
	struct FMargin                                K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScaleBoxSlot*                          CallFunc_SlotAsScaleBoxSlot_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3656[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_3;                           // 0x00C0(0x0028)()
};
static_assert(alignof(ProgramTrialVariatorWidget_C_Refresh) == 0x000008, "Wrong alignment on ProgramTrialVariatorWidget_C_Refresh");
static_assert(sizeof(ProgramTrialVariatorWidget_C_Refresh) == 0x0000E8, "Wrong size on ProgramTrialVariatorWidget_C_Refresh");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, Temp_bool_Variable) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_Refresh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, Temp_bool_Variable_1) == 0x000001, "Member 'ProgramTrialVariatorWidget_C_Refresh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, K2Node_MakeStruct_Margin) == 0x000004, "Member 'ProgramTrialVariatorWidget_C_Refresh::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, K2Node_MakeStruct_Margin_1) == 0x000014, "Member 'ProgramTrialVariatorWidget_C_Refresh::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, Temp_bool_Variable_2) == 0x000024, "Member 'ProgramTrialVariatorWidget_C_Refresh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, Temp_byte_Variable) == 0x000025, "Member 'ProgramTrialVariatorWidget_C_Refresh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, Temp_byte_Variable_1) == 0x000026, "Member 'ProgramTrialVariatorWidget_C_Refresh::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, Temp_bool_Variable_3) == 0x000027, "Member 'ProgramTrialVariatorWidget_C_Refresh::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'ProgramTrialVariatorWidget_C_Refresh::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'ProgramTrialVariatorWidget_C_Refresh::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, K2Node_Select_Default) == 0x000078, "Member 'ProgramTrialVariatorWidget_C_Refresh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000088, "Member 'ProgramTrialVariatorWidget_C_Refresh::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, CallFunc_SlotAsScaleBoxSlot_ReturnValue) == 0x000090, "Member 'ProgramTrialVariatorWidget_C_Refresh::CallFunc_SlotAsScaleBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000098, "Member 'ProgramTrialVariatorWidget_C_Refresh::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00009C, "Member 'ProgramTrialVariatorWidget_C_Refresh::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'ProgramTrialVariatorWidget_C_Refresh::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A8, "Member 'ProgramTrialVariatorWidget_C_Refresh::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, K2Node_Select_Default_1) == 0x0000B0, "Member 'ProgramTrialVariatorWidget_C_Refresh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, K2Node_Select_Default_2) == 0x0000B8, "Member 'ProgramTrialVariatorWidget_C_Refresh::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, CallFunc_BooleanOR_ReturnValue) == 0x0000B9, "Member 'ProgramTrialVariatorWidget_C_Refresh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_Refresh, K2Node_Select_Default_3) == 0x0000C0, "Member 'ProgramTrialVariatorWidget_C_Refresh::K2Node_Select_Default_3' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ProgramTrialVariatorWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_PreConstruct) == 0x000001, "Wrong alignment on ProgramTrialVariatorWidget_C_PreConstruct");
static_assert(sizeof(ProgramTrialVariatorWidget_C_PreConstruct) == 0x000001, "Wrong size on ProgramTrialVariatorWidget_C_PreConstruct");
static_assert(offsetof(ProgramTrialVariatorWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.ExecuteUbergraph_ProgramTrialVariatorWidget
// 0x0008 (0x0008 - 0x0000)
struct ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget) == 0x000004, "Wrong alignment on ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget");
static_assert(sizeof(ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget) == 0x000008, "Wrong size on ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget");
static_assert(offsetof(ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget, EntryPoint) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ProgramTrialVariatorWidget_C_ExecuteUbergraph_ProgramTrialVariatorWidget::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ProgramTrialVariatorWidget_C_OnUnhovered__DelegateSignature final
{
public:
	class UProgramTrialVariatorWidget_C*          Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on ProgramTrialVariatorWidget_C_OnUnhovered__DelegateSignature");
static_assert(sizeof(ProgramTrialVariatorWidget_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on ProgramTrialVariatorWidget_C_OnUnhovered__DelegateSignature");
static_assert(offsetof(ProgramTrialVariatorWidget_C_OnUnhovered__DelegateSignature, Widget) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_OnUnhovered__DelegateSignature::Widget' has a wrong offset!");

// Function ProgramTrialVariatorWidget.ProgramTrialVariatorWidget_C.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ProgramTrialVariatorWidget_C_OnHovered__DelegateSignature final
{
public:
	class UProgramTrialVariatorWidget_C*          Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialVariatorWidget_C_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on ProgramTrialVariatorWidget_C_OnHovered__DelegateSignature");
static_assert(sizeof(ProgramTrialVariatorWidget_C_OnHovered__DelegateSignature) == 0x000008, "Wrong size on ProgramTrialVariatorWidget_C_OnHovered__DelegateSignature");
static_assert(offsetof(ProgramTrialVariatorWidget_C_OnHovered__DelegateSignature, Widget) == 0x000000, "Member 'ProgramTrialVariatorWidget_C_OnHovered__DelegateSignature::Widget' has a wrong offset!");

}

