#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBPlayer_BP

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RBPlayer_BP.RBPlayer_BP_C.ExecuteUbergraph_RBPlayer_BP
// 0x0350 (0x0350 - 0x0000)
struct RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsideredDead_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0E[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0038(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0048(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventGlobal_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0060(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventOnActor_ReturnValue;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0078(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0088(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0F[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ARBPickup* OldItem, class ARBPickup* NewItem)> K2Node_CreateDelegate_OutputDelegate;              // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C10[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x00C0(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FDamageInfo                            K2Node_Event_info;                                 // 0x00D0(0x0050)(ConstParm, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bOn;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENVState                                      CallFunc_GetCurrentState_ReturnValue;              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          K2Node_CustomEvent_AkEvent;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0130(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemType                                     K2Node_Event_batteryType;                          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C11[0x2];                                     // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C12[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFootstepData                          K2Node_Event_footstepData;                         // 0x0150(0x0028)(ConstParm, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C13[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Footstep_FX_Run_Index;                    // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlledOrSpectated_ReturnValue; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlledOrSpectated_ReturnValue_1; // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue;           // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C14[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue_1;         // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class USkeletalMeshComponent*>         K2Node_Event_addedExtraMeshes;                     // 0x0198(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	EPlayerCustomizationSlot                      K2Node_Event_slot;                                 // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue_2;         // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Should_Hide_Customization_Slot_in_1P_ShouldHide; // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C15[0x5];                                     // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C16[0x2];                                     // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C17[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C18[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPickup*                              K2Node_CustomEvent_oldItem;                        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPickup*                              K2Node_CustomEvent_newItem;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C19[0x1];                                     // 0x01EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_CustomEvent_Event;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1A[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APPManager_BP_C*                        CallFunc_GetPPFXManager_Manager;                   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isNvActive;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWantsNvOn;                           // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENightVisionAnimNotifyType                    K2Node_Event_type;                                 // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x020F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1B[0x3];                                     // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1C[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1D[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsUnderwater;                        // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1E[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5;                          // 0x023C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsNvActive)>              K2Node_CreateDelegate_OutputDelegate_1;            // 0x024C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEventGlobal_ReturnValue_2;            // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue_3;         // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1F[0xF];                                     // 0x0261(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0270(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsideredUsingSpectraActiveSkill_ReturnValue; // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C20[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FX_ItemConsume_Heal_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_activeSkillActor;                     // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue_4;         // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C21[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x02D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FX_ItemConsume_Respawn_C*           CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C22[0x6];                                     // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0320(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0338(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP) == 0x000010, "Wrong alignment on RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP");
static_assert(sizeof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP) == 0x000350, "Wrong size on RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, EntryPoint) == 0x000000, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsConsideredDead_ReturnValue) == 0x000004, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsConsideredDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_object_Variable) == 0x000010, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000018, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_bool_Variable) == 0x000021, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_object_Variable_1) == 0x000028, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_object_Variable_2) == 0x000030, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_delegate_Variable) == 0x000038, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_delegate_Variable_1) == 0x000048, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_PostEventGlobal_ReturnValue) == 0x000058, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_PostEventGlobal_ReturnValue_1) == 0x00005C, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_PostEventGlobal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_delegate_Variable_2) == 0x000060, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_int_Array_Index_Variable) == 0x000070, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_PostEventOnActor_ReturnValue) == 0x000074, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_PostEventOnActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_delegate_Variable_3) == 0x000078, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_struct_Variable) == 0x000088, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000098, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_int_Array_Index_Variable_1) == 0x0000B4, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_float_Variable) == 0x0000B8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000BC, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_delegate_Variable_4) == 0x0000C0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_info) == 0x0000D0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_info' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_ComponentBoundEvent_bOn) == 0x000120, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_ComponentBoundEvent_bOn' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_GetCurrentState_ReturnValue) == 0x000121, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000122, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_EndPlayReason) == 0x000123, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_float_Variable_1) == 0x000124, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CustomEvent_AkEvent) == 0x000128, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CustomEvent_AkEvent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_struct_Variable_1) == 0x000130, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_bool_Variable_1) == 0x000140, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_batteryType) == 0x000141, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_batteryType' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_PostAkEvent_ReturnValue) == 0x000144, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_int_Array_Index_Variable_2) == 0x000148, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_footstepData) == 0x000150, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_footstepData' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000178, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Footstep_FX_Run_Index) == 0x00017C, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Footstep_FX_Run_Index' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsLocallyControlledOrSpectated_ReturnValue) == 0x000180, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsLocallyControlledOrSpectated_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsLocallyControlledOrSpectated_ReturnValue_1) == 0x000181, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsLocallyControlledOrSpectated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000182, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000183, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BP_IsInFirstPerson_ReturnValue) == 0x000184, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BP_IsInFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Array_Get_Item) == 0x000188, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Array_Length_ReturnValue) == 0x000190, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsValid_ReturnValue) == 0x000194, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsValid_ReturnValue_1) == 0x000195, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BP_IsInFirstPerson_ReturnValue_1) == 0x000196, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BP_IsInFirstPerson_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Not_PreBool_ReturnValue) == 0x000197, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_addedExtraMeshes) == 0x000198, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_addedExtraMeshes' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_slot) == 0x0001A8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_slot' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BP_IsInFirstPerson_ReturnValue_2) == 0x0001A9, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BP_IsInFirstPerson_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Should_Hide_Customization_Slot_in_1P_ShouldHide) == 0x0001AA, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Should_Hide_Customization_Slot_in_1P_ShouldHide' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Array_Get_Item_1) == 0x0001B0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Array_Length_ReturnValue_1) == 0x0001B8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_int_Loop_Counter_Variable_1) == 0x0001BC, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsValid_ReturnValue_2) == 0x0001C0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Less_IntInt_ReturnValue) == 0x0001C1, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C4, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BooleanOR_ReturnValue) == 0x0001C8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Array_Add_ReturnValue) == 0x0001CC, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BooleanAND_ReturnValue) == 0x0001D0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CustomEvent_oldItem) == 0x0001D8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CustomEvent_oldItem' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CustomEvent_newItem) == 0x0001E0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CustomEvent_newItem' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_DeltaSeconds) == 0x0001E8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x0001EC, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x0001ED, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x0001EE, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CustomEvent_Event) == 0x0001F0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_PostAkEvent_ReturnValue_1) == 0x0001F8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_GetPPFXManager_Manager) == 0x000200, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_GetPPFXManager_Manager' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CustomEvent_isNvActive) == 0x000208, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CustomEvent_isNvActive' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsValid_ReturnValue_3) == 0x000209, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsValid_ReturnValue_4) == 0x00020A, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsValid_ReturnValue_5) == 0x00020B, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsValid_ReturnValue_6) == 0x00020C, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_bWantsNvOn) == 0x00020D, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_bWantsNvOn' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_type) == 0x00020E, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_type' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_SwitchEnum_CmpSuccess) == 0x00020F, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Select_Default) == 0x000210, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000214, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_MakeStruct_LinearColor) == 0x000218, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CustomEvent_Enabled) == 0x000228, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_int_Loop_Counter_Variable_2) == 0x00022C, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Less_IntInt_ReturnValue_1) == 0x000230, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Add_IntInt_ReturnValue_2) == 0x000234, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_bIsUnderwater) == 0x000238, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_bIsUnderwater' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, Temp_delegate_Variable_5) == 0x00023C, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CreateDelegate_OutputDelegate_1) == 0x00024C, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_PostEventGlobal_ReturnValue_2) == 0x00025C, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_PostEventGlobal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BP_IsInFirstPerson_ReturnValue_3) == 0x000260, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BP_IsInFirstPerson_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_GetTransform_ReturnValue) == 0x000270, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002A0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsConsideredUsingSpectraActiveSkill_ReturnValue) == 0x0002A8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsConsideredUsingSpectraActiveSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002B0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Select_Default_1) == 0x0002B8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_Event_activeSkillActor) == 0x0002C0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_Event_activeSkillActor' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BP_IsInFirstPerson_ReturnValue_4) == 0x0002C8, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BP_IsInFirstPerson_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_GetTransform_ReturnValue_1) == 0x0002D0, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000300, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x000308, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000310, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_IsValid_ReturnValue_7) == 0x000318, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_BooleanOR_ReturnValue_1) == 0x000319, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_GetChildrenComponents_Children) == 0x000320, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Array_Get_Item_2) == 0x000330, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000338, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Array_Length_ReturnValue_2) == 0x000348, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_Less_IntInt_ReturnValue_2) == 0x00034C, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP, CallFunc_ActorHasTag_ReturnValue) == 0x00034D, "Member 'RBPlayer_BP_C_ExecuteUbergraph_RBPlayer_BP::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnActiveSkillActorChanged
// 0x0008 (0x0008 - 0x0000)
struct RBPlayer_BP_C_Event_OnActiveSkillActorChanged final
{
public:
	class AActor*                                 Param_ActiveSkillActor;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_Event_OnActiveSkillActorChanged) == 0x000008, "Wrong alignment on RBPlayer_BP_C_Event_OnActiveSkillActorChanged");
static_assert(sizeof(RBPlayer_BP_C_Event_OnActiveSkillActorChanged) == 0x000008, "Wrong size on RBPlayer_BP_C_Event_OnActiveSkillActorChanged");
static_assert(offsetof(RBPlayer_BP_C_Event_OnActiveSkillActorChanged, Param_ActiveSkillActor) == 0x000000, "Member 'RBPlayer_BP_C_Event_OnActiveSkillActorChanged::Param_ActiveSkillActor' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UnderwaterStateChanged
// 0x0001 (0x0001 - 0x0000)
struct RBPlayer_BP_C_UnderwaterStateChanged final
{
public:
	bool                                          bIsUnderwater;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_UnderwaterStateChanged) == 0x000001, "Wrong alignment on RBPlayer_BP_C_UnderwaterStateChanged");
static_assert(sizeof(RBPlayer_BP_C_UnderwaterStateChanged) == 0x000001, "Wrong size on RBPlayer_BP_C_UnderwaterStateChanged");
static_assert(offsetof(RBPlayer_BP_C_UnderwaterStateChanged, bIsUnderwater) == 0x000000, "Member 'RBPlayer_BP_C_UnderwaterStateChanged::bIsUnderwater' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.SetProxylightEnabled
// 0x0001 (0x0001 - 0x0000)
struct RBPlayer_BP_C_SetProxylightEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_SetProxylightEnabled) == 0x000001, "Wrong alignment on RBPlayer_BP_C_SetProxylightEnabled");
static_assert(sizeof(RBPlayer_BP_C_SetProxylightEnabled) == 0x000001, "Wrong size on RBPlayer_BP_C_SetProxylightEnabled");
static_assert(offsetof(RBPlayer_BP_C_SetProxylightEnabled, Enabled) == 0x000000, "Member 'RBPlayer_BP_C_SetProxylightEnabled::Enabled' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnNVAnimationNotify
// 0x0002 (0x0002 - 0x0000)
struct RBPlayer_BP_C_Event_OnNVAnimationNotify final
{
public:
	bool                                          bWantsNvOn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENightVisionAnimNotifyType                    Type;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_Event_OnNVAnimationNotify) == 0x000001, "Wrong alignment on RBPlayer_BP_C_Event_OnNVAnimationNotify");
static_assert(sizeof(RBPlayer_BP_C_Event_OnNVAnimationNotify) == 0x000002, "Wrong size on RBPlayer_BP_C_Event_OnNVAnimationNotify");
static_assert(offsetof(RBPlayer_BP_C_Event_OnNVAnimationNotify, bWantsNvOn) == 0x000000, "Member 'RBPlayer_BP_C_Event_OnNVAnimationNotify::bWantsNvOn' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Event_OnNVAnimationNotify, Type) == 0x000001, "Member 'RBPlayer_BP_C_Event_OnNVAnimationNotify::Type' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.OnNVAnimationDone_Event
// 0x0001 (0x0001 - 0x0000)
struct RBPlayer_BP_C_OnNVAnimationDone_Event final
{
public:
	bool                                          IsNvActive;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_OnNVAnimationDone_Event) == 0x000001, "Wrong alignment on RBPlayer_BP_C_OnNVAnimationDone_Event");
static_assert(sizeof(RBPlayer_BP_C_OnNVAnimationDone_Event) == 0x000001, "Wrong size on RBPlayer_BP_C_OnNVAnimationDone_Event");
static_assert(offsetof(RBPlayer_BP_C_OnNVAnimationDone_Event, IsNvActive) == 0x000000, "Member 'RBPlayer_BP_C_OnNVAnimationDone_Event::IsNvActive' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Broadcast2DSound
// 0x0008 (0x0008 - 0x0000)
struct RBPlayer_BP_C_Broadcast2DSound final
{
public:
	class UAkAudioEvent*                          Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_Broadcast2DSound) == 0x000008, "Wrong alignment on RBPlayer_BP_C_Broadcast2DSound");
static_assert(sizeof(RBPlayer_BP_C_Broadcast2DSound) == 0x000008, "Wrong size on RBPlayer_BP_C_Broadcast2DSound");
static_assert(offsetof(RBPlayer_BP_C_Broadcast2DSound, Event) == 0x000000, "Member 'RBPlayer_BP_C_Broadcast2DSound::Event' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct RBPlayer_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on RBPlayer_BP_C_ReceiveTick");
static_assert(sizeof(RBPlayer_BP_C_ReceiveTick) == 0x000004, "Wrong size on RBPlayer_BP_C_ReceiveTick");
static_assert(offsetof(RBPlayer_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'RBPlayer_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateShadowPickupEvent
// 0x0010 (0x0010 - 0x0000)
struct RBPlayer_BP_C_UpdateShadowPickupEvent final
{
public:
	class ARBPickup*                              OldItem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPickup*                              NewItem;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_UpdateShadowPickupEvent) == 0x000008, "Wrong alignment on RBPlayer_BP_C_UpdateShadowPickupEvent");
static_assert(sizeof(RBPlayer_BP_C_UpdateShadowPickupEvent) == 0x000010, "Wrong size on RBPlayer_BP_C_UpdateShadowPickupEvent");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickupEvent, OldItem) == 0x000000, "Member 'RBPlayer_BP_C_UpdateShadowPickupEvent::OldItem' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickupEvent, NewItem) == 0x000008, "Member 'RBPlayer_BP_C_UpdateShadowPickupEvent::NewItem' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.OnExtraCustomizationMeshesAddedForSlot
// 0x0018 (0x0018 - 0x0000)
struct RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot final
{
public:
	TArray<class USkeletalMeshComponent*>         AddedExtraMeshes;                                  // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	EPlayerCustomizationSlot                      Slot;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot) == 0x000008, "Wrong alignment on RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot");
static_assert(sizeof(RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot) == 0x000018, "Wrong size on RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot");
static_assert(offsetof(RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot, AddedExtraMeshes) == 0x000000, "Member 'RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot::AddedExtraMeshes' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot, Slot) == 0x000010, "Member 'RBPlayer_BP_C_OnExtraCustomizationMeshesAddedForSlot::Slot' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnFootstep
// 0x0028 (0x0028 - 0x0000)
struct RBPlayer_BP_C_Event_OnFootstep final
{
public:
	struct FFootstepData                          FootstepData;                                      // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_Event_OnFootstep) == 0x000008, "Wrong alignment on RBPlayer_BP_C_Event_OnFootstep");
static_assert(sizeof(RBPlayer_BP_C_Event_OnFootstep) == 0x000028, "Wrong size on RBPlayer_BP_C_Event_OnFootstep");
static_assert(offsetof(RBPlayer_BP_C_Event_OnFootstep, FootstepData) == 0x000000, "Member 'RBPlayer_BP_C_Event_OnFootstep::FootstepData' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnLastConsumedBatteryTypeChanged
// 0x0001 (0x0001 - 0x0000)
struct RBPlayer_BP_C_Event_OnLastConsumedBatteryTypeChanged final
{
public:
	EItemType                                     batteryType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_Event_OnLastConsumedBatteryTypeChanged) == 0x000001, "Wrong alignment on RBPlayer_BP_C_Event_OnLastConsumedBatteryTypeChanged");
static_assert(sizeof(RBPlayer_BP_C_Event_OnLastConsumedBatteryTypeChanged) == 0x000001, "Wrong size on RBPlayer_BP_C_Event_OnLastConsumedBatteryTypeChanged");
static_assert(offsetof(RBPlayer_BP_C_Event_OnLastConsumedBatteryTypeChanged, batteryType) == 0x000000, "Member 'RBPlayer_BP_C_Event_OnLastConsumedBatteryTypeChanged::batteryType' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.PlaySoundOnPlayer
// 0x0008 (0x0008 - 0x0000)
struct RBPlayer_BP_C_PlaySoundOnPlayer final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_PlaySoundOnPlayer) == 0x000008, "Wrong alignment on RBPlayer_BP_C_PlaySoundOnPlayer");
static_assert(sizeof(RBPlayer_BP_C_PlaySoundOnPlayer) == 0x000008, "Wrong size on RBPlayer_BP_C_PlaySoundOnPlayer");
static_assert(offsetof(RBPlayer_BP_C_PlaySoundOnPlayer, AkEvent) == 0x000000, "Member 'RBPlayer_BP_C_PlaySoundOnPlayer::AkEvent' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct RBPlayer_BP_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on RBPlayer_BP_C_ReceiveEndPlay");
static_assert(sizeof(RBPlayer_BP_C_ReceiveEndPlay) == 0x000001, "Wrong size on RBPlayer_BP_C_ReceiveEndPlay");
static_assert(offsetof(RBPlayer_BP_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'RBPlayer_BP_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct RBPlayer_BP_C_BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature final
{
public:
	bool                                          bOn;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on RBPlayer_BP_C_BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature");
static_assert(sizeof(RBPlayer_BP_C_BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature) == 0x000001, "Wrong size on RBPlayer_BP_C_BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature");
static_assert(offsetof(RBPlayer_BP_C_BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature, bOn) == 0x000000, "Member 'RBPlayer_BP_C_BndEvt__NVComponent_K2Node_ComponentBoundEvent_0_OnNVStateChanged__DelegateSignature::bOn' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Event_OnTakeDamage
// 0x0050 (0x0050 - 0x0000)
struct RBPlayer_BP_C_Event_OnTakeDamage final
{
public:
	struct FDamageInfo                            Info;                                              // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_Event_OnTakeDamage) == 0x000008, "Wrong alignment on RBPlayer_BP_C_Event_OnTakeDamage");
static_assert(sizeof(RBPlayer_BP_C_Event_OnTakeDamage) == 0x000050, "Wrong size on RBPlayer_BP_C_Event_OnTakeDamage");
static_assert(offsetof(RBPlayer_BP_C_Event_OnTakeDamage, Info) == 0x000000, "Member 'RBPlayer_BP_C_Event_OnTakeDamage::Info' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.OnLoaded_E32B3EA245CB7B65286791842D20B97F
// 0x0008 (0x0008 - 0x0000)
struct RBPlayer_BP_C_OnLoaded_E32B3EA245CB7B65286791842D20B97F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_OnLoaded_E32B3EA245CB7B65286791842D20B97F) == 0x000008, "Wrong alignment on RBPlayer_BP_C_OnLoaded_E32B3EA245CB7B65286791842D20B97F");
static_assert(sizeof(RBPlayer_BP_C_OnLoaded_E32B3EA245CB7B65286791842D20B97F) == 0x000008, "Wrong size on RBPlayer_BP_C_OnLoaded_E32B3EA245CB7B65286791842D20B97F");
static_assert(offsetof(RBPlayer_BP_C_OnLoaded_E32B3EA245CB7B65286791842D20B97F, Loaded) == 0x000000, "Member 'RBPlayer_BP_C_OnLoaded_E32B3EA245CB7B65286791842D20B97F::Loaded' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct RBPlayer_BP_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_UserConstructionScript) == 0x000001, "Wrong alignment on RBPlayer_BP_C_UserConstructionScript");
static_assert(sizeof(RBPlayer_BP_C_UserConstructionScript) == 0x000002, "Wrong size on RBPlayer_BP_C_UserConstructionScript");
static_assert(offsetof(RBPlayer_BP_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'RBPlayer_BP_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.SetInitialPlayerSettings
// 0x0018 (0x0018 - 0x0000)
struct RBPlayer_BP_C_SetInitialPlayerSettings final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_SetInitialPlayerSettings) == 0x000008, "Wrong alignment on RBPlayer_BP_C_SetInitialPlayerSettings");
static_assert(sizeof(RBPlayer_BP_C_SetInitialPlayerSettings) == 0x000018, "Wrong size on RBPlayer_BP_C_SetInitialPlayerSettings");
static_assert(offsetof(RBPlayer_BP_C_SetInitialPlayerSettings, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_SetInitialPlayerSettings::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_SetInitialPlayerSettings, K2Node_DynamicCast_AsPlayer_Controller) == 0x000008, "Member 'RBPlayer_BP_C_SetInitialPlayerSettings::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_SetInitialPlayerSettings, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'RBPlayer_BP_C_SetInitialPlayerSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_SetInitialPlayerSettings, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'RBPlayer_BP_C_SetInitialPlayerSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Event_PlayHitReactionEffects
// 0x0068 (0x0068 - 0x0000)
struct RBPlayer_BP_C_Event_PlayHitReactionEffects final
{
public:
	struct FPlayerHitReactionParams               HitReaction;                                       // 0x0000(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FVector                                AttackLoc;                                         // 0x0048(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitRelativeAngle;                                  // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C23[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URBFXManager*                           CallFunc_GetFXManager_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_Event_PlayHitReactionEffects) == 0x000008, "Wrong alignment on RBPlayer_BP_C_Event_PlayHitReactionEffects");
static_assert(sizeof(RBPlayer_BP_C_Event_PlayHitReactionEffects) == 0x000068, "Wrong size on RBPlayer_BP_C_Event_PlayHitReactionEffects");
static_assert(offsetof(RBPlayer_BP_C_Event_PlayHitReactionEffects, HitReaction) == 0x000000, "Member 'RBPlayer_BP_C_Event_PlayHitReactionEffects::HitReaction' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Event_PlayHitReactionEffects, AttackLoc) == 0x000048, "Member 'RBPlayer_BP_C_Event_PlayHitReactionEffects::AttackLoc' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Event_PlayHitReactionEffects, HitRelativeAngle) == 0x000054, "Member 'RBPlayer_BP_C_Event_PlayHitReactionEffects::HitRelativeAngle' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Event_PlayHitReactionEffects, CallFunc_IsLocallyControlled_ReturnValue) == 0x000058, "Member 'RBPlayer_BP_C_Event_PlayHitReactionEffects::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Event_PlayHitReactionEffects, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'RBPlayer_BP_C_Event_PlayHitReactionEffects::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Event_PlayHitReactionEffects, CallFunc_GetFXManager_ReturnValue) == 0x000060, "Member 'RBPlayer_BP_C_Event_PlayHitReactionEffects::CallFunc_GetFXManager_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.CustomizeCharacterModel
// 0x0068 (0x0068 - 0x0000)
struct RBPlayer_BP_C_CustomizeCharacterModel final
{
public:
	class URBCustomizationOutfit*                 OutfitOverride;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         AlbedoSkinMeshes;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TSubclassOf<class URBAnimInstance>            CallFunc_Get3PAnimInstanceClass_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C24[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class URBAnimInstance>            CallFunc_Get3PAnimInstanceClass_ReturnValue_1;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C25[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPlayerCustomizationOption*           CallFunc_GetPlayerCustomizationOptionForSlot_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C26[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPoseAsset*                             K2Node_DynamicCast_AsPose_Asset;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C27[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPawnCustomizationManager*            CallFunc_GetPawnCustomizationManager_ReturnValue;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_CustomizeCharacterModel) == 0x000008, "Wrong alignment on RBPlayer_BP_C_CustomizeCharacterModel");
static_assert(sizeof(RBPlayer_BP_C_CustomizeCharacterModel) == 0x000068, "Wrong size on RBPlayer_BP_C_CustomizeCharacterModel");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, OutfitOverride) == 0x000000, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::OutfitOverride' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, AlbedoSkinMeshes) == 0x000008, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::AlbedoSkinMeshes' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_Get3PAnimInstanceClass_ReturnValue) == 0x000018, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_Get3PAnimInstanceClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_Get3PAnimInstanceClass_ReturnValue_1) == 0x000028, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_Get3PAnimInstanceClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_BP_IsInFirstPerson_ReturnValue) == 0x000030, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_BP_IsInFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_GetPlayerCustomizationOptionForSlot_ReturnValue) == 0x000038, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_GetPlayerCustomizationOptionForSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_IsValid_ReturnValue_3) == 0x000040, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_IsValid_ReturnValue_4) == 0x000041, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, K2Node_DynamicCast_AsPose_Asset) == 0x000050, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::K2Node_DynamicCast_AsPose_Asset' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CustomizeCharacterModel, CallFunc_GetPawnCustomizationManager_ReturnValue) == 0x000060, "Member 'RBPlayer_BP_C_CustomizeCharacterModel::CallFunc_GetPawnCustomizationManager_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateESOPBatteryType
// 0x0007 (0x0007 - 0x0000)
struct RBPlayer_BP_C_UpdateESOPBatteryType final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemType                                     CallFunc_BP_GetLastConsumedBatteryType_ReturnValue; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_UpdateESOPBatteryType) == 0x000001, "Wrong alignment on RBPlayer_BP_C_UpdateESOPBatteryType");
static_assert(sizeof(RBPlayer_BP_C_UpdateESOPBatteryType) == 0x000007, "Wrong size on RBPlayer_BP_C_UpdateESOPBatteryType");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPBatteryType, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_UpdateESOPBatteryType::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPBatteryType, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'RBPlayer_BP_C_UpdateESOPBatteryType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPBatteryType, CallFunc_BP_GetLastConsumedBatteryType_ReturnValue) == 0x000002, "Member 'RBPlayer_BP_C_UpdateESOPBatteryType::CallFunc_BP_GetLastConsumedBatteryType_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPBatteryType, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'RBPlayer_BP_C_UpdateESOPBatteryType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPBatteryType, CallFunc_SetStaticMesh_ReturnValue) == 0x000004, "Member 'RBPlayer_BP_C_UpdateESOPBatteryType::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPBatteryType, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000005, "Member 'RBPlayer_BP_C_UpdateESOPBatteryType::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPBatteryType, CallFunc_SetStaticMesh_ReturnValue_2) == 0x000006, "Member 'RBPlayer_BP_C_UpdateESOPBatteryType::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Update Shadow Mesh
// 0x01E0 (0x01E0 - 0x0000)
struct RBPlayer_BP_C_Update_Shadow_Mesh final
{
public:
	bool                                          ForceClean;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLightingChannels                      LightingChannelValues;                             // 0x0001(0x0001)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_2C28[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayer_3P_AnimBP_C*                    K2Node_DynamicCast_AsPlayer_3P_Anim_BP;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C29[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class URBAnimInstance>            CallFunc_Get3PAnimInstanceClass_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPickup*                              CallFunc_GetItemHeld_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2B[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_CreateShadowmeshCopyOfStaticMesh_OutNewComponent; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2C[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2D[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_CreateSkeletalMeshForShadow_Out;          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2E[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2F[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent; // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_1; // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_2; // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C30[0x2];                                     // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_CreateShadowmeshCopyOfStaticMesh_OutNewComponent_1; // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_3; // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C31[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNightVision_Goggle_AnimBP_C*           K2Node_DynamicCast_AsNight_Vision_Goggle_Anim_BP;  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C32[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_CreateShadowmeshCopyOfStaticMesh_OutNewComponent_2; // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C33[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue;           // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C34[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_4; // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_CreateSkeletalMeshForShadow_Out_1;        // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_5; // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_6; // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_7; // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_Update_Shadow_Mesh) == 0x000010, "Wrong alignment on RBPlayer_BP_C_Update_Shadow_Mesh");
static_assert(sizeof(RBPlayer_BP_C_Update_Shadow_Mesh) == 0x0001E0, "Wrong size on RBPlayer_BP_C_Update_Shadow_Mesh");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, ForceClean) == 0x000000, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::ForceClean' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, LightingChannelValues) == 0x000001, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::LightingChannelValues' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, K2Node_DynamicCast_AsPlayer_3P_Anim_BP) == 0x000010, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::K2Node_DynamicCast_AsPlayer_3P_Anim_BP' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Get3PAnimInstanceClass_ReturnValue) == 0x000020, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Get3PAnimInstanceClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_GetItemHeld_ReturnValue) == 0x000030, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_GetItemHeld_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_GetRelativeTransform_ReturnValue) == 0x000040, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfStaticMesh_OutNewComponent) == 0x000070, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfStaticMesh_OutNewComponent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000078, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000100, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000101, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x000102, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, Temp_int_Array_Index_Variable) == 0x000104, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateSkeletalMeshForShadow_Out) == 0x000110, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateSkeletalMeshForShadow_Out' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Array_Add_ReturnValue_1) == 0x00011C, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Array_Add_ReturnValue_2) == 0x000120, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Array_Get_Item) == 0x000128, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent) == 0x000138, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_1) == 0x000140, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_2) == 0x000148, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, Temp_int_Loop_Counter_Variable) == 0x000150, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, Temp_int_Array_Index_Variable_1) == 0x000154, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000160, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Less_IntInt_ReturnValue) == 0x000169, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfStaticMesh_OutNewComponent_1) == 0x000170, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfStaticMesh_OutNewComponent_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_3) == 0x000178, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000188, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, K2Node_DynamicCast_AsNight_Vision_Goggle_Anim_BP) == 0x000190, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::K2Node_DynamicCast_AsNight_Vision_Goggle_Anim_BP' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, K2Node_DynamicCast_bSuccess_2) == 0x000198, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_IsValid_ReturnValue_2) == 0x000199, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfStaticMesh_OutNewComponent_2) == 0x0001A0, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfStaticMesh_OutNewComponent_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, Temp_int_Loop_Counter_Variable_1) == 0x0001A8, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001AC, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001B0, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_BP_IsInFirstPerson_ReturnValue) == 0x0001B4, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_BP_IsInFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_4) == 0x0001B8, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_4' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateSkeletalMeshForShadow_Out_1) == 0x0001C0, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateSkeletalMeshForShadow_Out_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_5) == 0x0001C8, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_5' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_6) == 0x0001D0, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_6' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Update_Shadow_Mesh, CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_7) == 0x0001D8, "Member 'RBPlayer_BP_C_Update_Shadow_Mesh::CallFunc_CreateShadowmeshCopyOfSkeletalMesh_OutShadowMeshComponent_7' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.CreateShadowmeshCopyOfSkeletalMesh
// 0x0048 (0x0048 - 0x0000)
struct RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh final
{
public:
	class USkeletalMeshComponent*                 InVisibleMesh;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        InParent;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 InAnimInstance;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OutShadowMeshComponent;                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LocalShadowMesh;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C35[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_CreateSkeletalMeshForShadow_Out;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh) == 0x000008, "Wrong alignment on RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh");
static_assert(sizeof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh) == 0x000048, "Wrong size on RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, InVisibleMesh) == 0x000000, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::InVisibleMesh' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, InParent) == 0x000008, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::InParent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, InAnimInstance) == 0x000010, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::InAnimInstance' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, OutShadowMeshComponent) == 0x000018, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::OutShadowMeshComponent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, LocalShadowMesh) == 0x000020, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::LocalShadowMesh' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000028, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, CallFunc_CreateSkeletalMeshForShadow_Out) == 0x000038, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::CallFunc_CreateSkeletalMeshForShadow_Out' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, CallFunc_Array_Add_ReturnValue_1) == 0x000040, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh, CallFunc_IsValidClass_ReturnValue) == 0x000044, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfSkeletalMesh::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Remove Shadow Meshes
// 0x0050 (0x0050 - 0x0000)
struct RBPlayer_BP_C_Remove_Shadow_Meshes final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C36[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C37[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C38[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_Remove_Shadow_Meshes) == 0x000008, "Wrong alignment on RBPlayer_BP_C_Remove_Shadow_Meshes");
static_assert(sizeof(RBPlayer_BP_C_Remove_Shadow_Meshes) == 0x000050, "Wrong size on RBPlayer_BP_C_Remove_Shadow_Meshes");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, Temp_int_Array_Index_Variable) == 0x000008, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_Array_Get_Item) == 0x000018, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, K2Node_DynamicCast_AsPrimitive_Component) == 0x000040, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Remove_Shadow_Meshes, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'RBPlayer_BP_C_Remove_Shadow_Meshes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.CreateSkeletalMeshForShadow
// 0x0140 (0x0140 - 0x0000)
struct RBPlayer_BP_C_CreateSkeletalMeshForShadow final
{
public:
	class USkeletalMeshComponent*                 InVisibleMesh;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        InParent;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bKeepRelativeTransform;                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C39[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LocalShadowMesh;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3A[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_CreateSkeletalMeshForShadow) == 0x000010, "Wrong alignment on RBPlayer_BP_C_CreateSkeletalMeshForShadow");
static_assert(sizeof(RBPlayer_BP_C_CreateSkeletalMeshForShadow) == 0x000140, "Wrong size on RBPlayer_BP_C_CreateSkeletalMeshForShadow");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, InVisibleMesh) == 0x000000, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::InVisibleMesh' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, InParent) == 0x000008, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::InParent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, bKeepRelativeTransform) == 0x000010, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::bKeepRelativeTransform' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, Out) == 0x000018, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::Out' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, LocalShadowMesh) == 0x000020, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::LocalShadowMesh' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, Temp_name_Variable) == 0x000028, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, Temp_struct_Variable) == 0x000030, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, CallFunc_GetRelativeTransform_ReturnValue) == 0x000070, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0000A0, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, CallFunc_GetAttachSocketName_ReturnValue) == 0x000128, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateSkeletalMeshForShadow, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000130, "Member 'RBPlayer_BP_C_CreateSkeletalMeshForShadow::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.CreateShadowmeshCopyOfStaticMesh
// 0x0130 (0x0130 - 0x0000)
struct RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh final
{
public:
	class UStaticMeshComponent*                   InVisualMesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Parent;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OutNewComponent;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LocalStaticMesh;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3B[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3C[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh) == 0x000010, "Wrong alignment on RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh");
static_assert(sizeof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh) == 0x000130, "Wrong size on RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, InVisualMesh) == 0x000000, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::InVisualMesh' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, Parent) == 0x000008, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::Parent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, OutNewComponent) == 0x000010, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::OutNewComponent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, LocalStaticMesh) == 0x000018, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::LocalStaticMesh' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, Temp_struct_Variable) == 0x000020, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, CallFunc_AddComponent_ReturnValue) == 0x000050, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, CallFunc_GetRelativeTransform_ReturnValue) == 0x000060, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000090, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, CallFunc_GetAttachSocketName_ReturnValue) == 0x000118, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000120, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, CallFunc_Array_Add_ReturnValue_1) == 0x000124, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000128, "Member 'RBPlayer_BP_C_CreateShadowmeshCopyOfStaticMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.ClearExtraCustomizationMeshes
// 0x0020 (0x0020 - 0x0000)
struct RBPlayer_BP_C_ClearExtraCustomizationMeshes final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_ClearExtraCustomizationMeshes) == 0x000008, "Wrong alignment on RBPlayer_BP_C_ClearExtraCustomizationMeshes");
static_assert(sizeof(RBPlayer_BP_C_ClearExtraCustomizationMeshes) == 0x000020, "Wrong size on RBPlayer_BP_C_ClearExtraCustomizationMeshes");
static_assert(offsetof(RBPlayer_BP_C_ClearExtraCustomizationMeshes, Temp_int_Array_Index_Variable) == 0x000000, "Member 'RBPlayer_BP_C_ClearExtraCustomizationMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ClearExtraCustomizationMeshes, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'RBPlayer_BP_C_ClearExtraCustomizationMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ClearExtraCustomizationMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'RBPlayer_BP_C_ClearExtraCustomizationMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ClearExtraCustomizationMeshes, CallFunc_Array_Get_Item) == 0x000010, "Member 'RBPlayer_BP_C_ClearExtraCustomizationMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ClearExtraCustomizationMeshes, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'RBPlayer_BP_C_ClearExtraCustomizationMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ClearExtraCustomizationMeshes, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'RBPlayer_BP_C_ClearExtraCustomizationMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ClearExtraCustomizationMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'RBPlayer_BP_C_ClearExtraCustomizationMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.Should Hide Customization Slot in 1P
// 0x0003 (0x0003 - 0x0000)
struct RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P final
{
public:
	EPlayerCustomizationSlot                      Slot;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldHide;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P) == 0x000001, "Wrong alignment on RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P");
static_assert(sizeof(RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P) == 0x000003, "Wrong size on RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P");
static_assert(offsetof(RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P, Slot) == 0x000000, "Member 'RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P::Slot' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P, ShouldHide) == 0x000001, "Member 'RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P::ShouldHide' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'RBPlayer_BP_C_Should_Hide_Customization_Slot_in_1P::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateHeadCapMesh
// 0x0140 (0x0140 - 0x0000)
struct RBPlayer_BP_C_UpdateHeadCapMesh final
{
public:
	class USkeletalMesh*                          Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBPlayerCustomizationInfo             Temp_struct_Variable;                              // 0x0010(0x0038)()
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3E[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C3F[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBPlayerCustomizationOption*           CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C40[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UMaterialInstanceConstant*> CallFunc_BP_GetMaterialOverrideInstancesMap_ReturnValue; // 0x0068(0x0050)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C41[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C42[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C43[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBPawnCustomizationManager*            CallFunc_GetPawnCustomizationManager_ReturnValue;  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C44[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C45[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRBPlayerCustomizationOwner> K2Node_DynamicCast_AsRB_Player_Customization_Owner; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C46[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBPlayerCustomizationInfo             CallFunc_GetPlayerCustomizationInfo_ReturnValue;   // 0x0108(0x0038)()
};
static_assert(alignof(RBPlayer_BP_C_UpdateHeadCapMesh) == 0x000008, "Wrong alignment on RBPlayer_BP_C_UpdateHeadCapMesh");
static_assert(sizeof(RBPlayer_BP_C_UpdateHeadCapMesh) == 0x000140, "Wrong size on RBPlayer_BP_C_UpdateHeadCapMesh");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, Temp_object_Variable) == 0x000000, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, Temp_object_Variable_1) == 0x000008, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, Temp_struct_Variable) == 0x000010, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, Temp_int_Array_Index_Variable) == 0x000054, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_Array_Get_Item) == 0x000058, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_BP_GetMaterialOverrideInstancesMap_ReturnValue) == 0x000068, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_BP_GetMaterialOverrideInstancesMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_BooleanAND_ReturnValue) == 0x0000C8, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_GetPawnCustomizationManager_ReturnValue) == 0x0000D0, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_GetPawnCustomizationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, Temp_bool_Variable) == 0x0000D8, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, K2Node_Select_Default) == 0x0000E0, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_BP_IsInFirstPerson_ReturnValue) == 0x0000E8, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_BP_IsInFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, K2Node_DynamicCast_AsRB_Player_Customization_Owner) == 0x0000F0, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::K2Node_DynamicCast_AsRB_Player_Customization_Owner' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateHeadCapMesh, CallFunc_GetPlayerCustomizationInfo_ReturnValue) == 0x000108, "Member 'RBPlayer_BP_C_UpdateHeadCapMesh::CallFunc_GetPlayerCustomizationInfo_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.RefreshHeadCapVisibility
// 0x0002 (0x0002 - 0x0000)
struct RBPlayer_BP_C_RefreshHeadCapVisibility final
{
public:
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_RefreshHeadCapVisibility) == 0x000001, "Wrong alignment on RBPlayer_BP_C_RefreshHeadCapVisibility");
static_assert(sizeof(RBPlayer_BP_C_RefreshHeadCapVisibility) == 0x000002, "Wrong size on RBPlayer_BP_C_RefreshHeadCapVisibility");
static_assert(offsetof(RBPlayer_BP_C_RefreshHeadCapVisibility, CallFunc_BP_IsInFirstPerson_ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_RefreshHeadCapVisibility::CallFunc_BP_IsInFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_RefreshHeadCapVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'RBPlayer_BP_C_RefreshHeadCapVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateCharacterBloodDamageMaterials
// 0x0040 (0x0040 - 0x0000)
struct RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C47[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C48[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetMaxHealth_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetHealthF_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C49[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4A[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials) == 0x000008, "Wrong alignment on RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials");
static_assert(sizeof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials) == 0x000040, "Wrong size on RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, Temp_int_Array_Index_Variable) == 0x000000, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000C, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_Array_Get_Item) == 0x000010, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_BP_GetMaxHealth_ReturnValue) == 0x000020, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_BP_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_BP_GetHealthF_ReturnValue) == 0x000028, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_BP_GetHealthF_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'RBPlayer_BP_C_UpdateCharacterBloodDamageMaterials::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateBloodDrippingParticle
// 0x0178 (0x0178 - 0x0000)
struct RBPlayer_BP_C_UpdateBloodDrippingParticle final
{
public:
	float                                         BloodFlowWave;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomInt;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4C[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4D[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetMaxHealth_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4F[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C50[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue;              // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C51[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C52[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C53[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C54[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsideredKnockedDown_ReturnValue;      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C55[0x1];                                     // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue_1;            // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetMaxHealth_ReturnValue_1;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_5;         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_6;         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C56[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue_1;       // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C57[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue_2;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetMaxHealth_ReturnValue_2;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue_1;             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C58[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_UpdateBloodDrippingParticle) == 0x000008, "Wrong alignment on RBPlayer_BP_C_UpdateBloodDrippingParticle");
static_assert(sizeof(RBPlayer_BP_C_UpdateBloodDrippingParticle) == 0x000178, "Wrong size on RBPlayer_BP_C_UpdateBloodDrippingParticle");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, BloodFlowWave) == 0x000000, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::BloodFlowWave' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, RandomInt) == 0x000004, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::RandomInt' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, Temp_float_Variable) == 0x000008, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, Temp_float_Variable_1) == 0x00000C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, Temp_bool_Variable) == 0x00001C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, Temp_float_Variable_2) == 0x000020, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000029, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GetTimeSeconds_ReturnValue) == 0x00002C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Sin_ReturnValue) == 0x000034, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_IsDedicatedServer_ReturnValue) == 0x000040, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000044, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000048, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x00004C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BP_GetMaxHealth_ReturnValue) == 0x000050, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BP_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000054, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, K2Node_SwitchInteger_CmpSuccess) == 0x000058, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomBool_ReturnValue) == 0x000060, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_MapRangeClamped_ReturnValue) == 0x000064, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_MakeRotFromZ_ReturnValue) == 0x000068, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GetBoneLocation_ReturnValue) == 0x000080, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GetBoneLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00008C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000090, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_MakeVector_ReturnValue_1) == 0x000094, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_VSize_ReturnValue) == 0x0000A0, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A4, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000B0, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GetElapsedTime_ReturnValue) == 0x0000B4, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, Temp_bool_Variable_1) == 0x0000B8, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000B9, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BA, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, K2Node_Select_Default) == 0x0000BC, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C0, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_MakeRotator_ReturnValue) == 0x0000C8, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x0000D8, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_IsConsideredKnockedDown_ReturnValue) == 0x0000E1, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_IsConsideredKnockedDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BooleanAND_ReturnValue_3) == 0x0000E2, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GetBoneLocation_ReturnValue_1) == 0x0000E4, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GetBoneLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BP_GetMaxHealth_ReturnValue_1) == 0x0000F0, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BP_GetMaxHealth_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x0000F4, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000F8, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_MakeRotator_ReturnValue_1) == 0x0000FC, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000108, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x00010C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000110, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomFloatInRange_ReturnValue_5) == 0x000114, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomFloatInRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000118, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_MakeVector_ReturnValue_2) == 0x00011C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, K2Node_Select_Default_1) == 0x000128, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00012C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomFloatInRange_ReturnValue_6) == 0x000138, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomFloatInRange_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x00013C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_MakeVector_ReturnValue_3) == 0x000140, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_SpawnDecalAtLocation_ReturnValue_1) == 0x000150, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_SpawnDecalAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, K2Node_SwitchInteger_CmpSuccess_1) == 0x000158, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GetTimeSeconds_ReturnValue_2) == 0x00015C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GetTimeSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_BP_GetMaxHealth_ReturnValue_2) == 0x000160, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_BP_GetMaxHealth_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GetElapsedTime_ReturnValue_1) == 0x000164, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GetElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000168, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00016C, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000170, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodDrippingParticle, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000174, "Member 'RBPlayer_BP_C_UpdateBloodDrippingParticle::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateShadowPickup
// 0x0190 (0x0190 - 0x0000)
struct RBPlayer_BP_C_UpdateShadowPickup final
{
public:
	class ARBPickup*                              Old;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPickup*                              New;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         InHandMeshComponent;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C59[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetDisplayMesh_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetDisplayMesh_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5A[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5B[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x007C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0104(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_UpdateShadowPickup) == 0x000010, "Wrong alignment on RBPlayer_BP_C_UpdateShadowPickup");
static_assert(sizeof(RBPlayer_BP_C_UpdateShadowPickup) == 0x000190, "Wrong size on RBPlayer_BP_C_UpdateShadowPickup");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, Old) == 0x000000, "Member 'RBPlayer_BP_C_UpdateShadowPickup::Old' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, New) == 0x000008, "Member 'RBPlayer_BP_C_UpdateShadowPickup::New' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, InHandMeshComponent) == 0x000010, "Member 'RBPlayer_BP_C_UpdateShadowPickup::InHandMeshComponent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_IsDedicatedServer_ReturnValue) == 0x000018, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_BP_IsInFirstPerson_ReturnValue) == 0x000019, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_BP_IsInFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_GetDisplayMesh_ReturnValue) == 0x000020, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_GetDisplayMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_GetDisplayMesh_ReturnValue_1) == 0x000028, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_GetDisplayMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000030, "Member 'RBPlayer_BP_C_UpdateShadowPickup::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'RBPlayer_BP_C_UpdateShadowPickup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_SetStaticMesh_ReturnValue) == 0x000039, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_SetStaticMesh_ReturnValue_1) == 0x00003A, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_GetRelativeTransform_ReturnValue) == 0x000040, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000070, "Member 'RBPlayer_BP_C_UpdateShadowPickup::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'RBPlayer_BP_C_UpdateShadowPickup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x00007C, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000104, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_IsValid_ReturnValue) == 0x00018C, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_IsValid_ReturnValue_1) == 0x00018D, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowPickup, CallFunc_IsValid_ReturnValue_2) == 0x00018E, "Member 'RBPlayer_BP_C_UpdateShadowPickup::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetFacePoseAsset
// 0x0008 (0x0008 - 0x0000)
struct RBPlayer_BP_C_GetFacePoseAsset final
{
public:
	class UPoseAsset*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_GetFacePoseAsset) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetFacePoseAsset");
static_assert(sizeof(RBPlayer_BP_C_GetFacePoseAsset) == 0x000008, "Wrong size on RBPlayer_BP_C_GetFacePoseAsset");
static_assert(offsetof(RBPlayer_BP_C_GetFacePoseAsset, ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_GetFacePoseAsset::ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateBloodHand
// 0x0040 (0x0040 - 0x0000)
struct RBPlayer_BP_C_UpdateBloodHand final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5D[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_UpdateBloodHand) == 0x000008, "Wrong alignment on RBPlayer_BP_C_UpdateBloodHand");
static_assert(sizeof(RBPlayer_BP_C_UpdateBloodHand) == 0x000040, "Wrong size on RBPlayer_BP_C_UpdateBloodHand");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, DeltaTime) == 0x000000, "Member 'RBPlayer_BP_C_UpdateBloodHand::DeltaTime' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'RBPlayer_BP_C_UpdateBloodHand::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'RBPlayer_BP_C_UpdateBloodHand::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, Temp_name_Variable) == 0x000010, "Member 'RBPlayer_BP_C_UpdateBloodHand::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_Array_Get_Item) == 0x000020, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_Array_Contains_ReturnValue) == 0x000030, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000032, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000033, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_FInterpTo_ReturnValue) == 0x000034, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_GetElapsedTime_ReturnValue) == 0x000038, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodHand, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'RBPlayer_BP_C_UpdateBloodHand::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.ApplyBloodOnRightHand
// 0x0004 (0x0004 - 0x0000)
struct RBPlayer_BP_C_ApplyBloodOnRightHand final
{
public:
	float                                         CallFunc_GetGameTime_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_ApplyBloodOnRightHand) == 0x000004, "Wrong alignment on RBPlayer_BP_C_ApplyBloodOnRightHand");
static_assert(sizeof(RBPlayer_BP_C_ApplyBloodOnRightHand) == 0x000004, "Wrong size on RBPlayer_BP_C_ApplyBloodOnRightHand");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodOnRightHand, CallFunc_GetGameTime_ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_ApplyBloodOnRightHand::CallFunc_GetGameTime_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetRelevantForDamageExtraMeshes
// 0x0068 (0x0068 - 0x0000)
struct RBPlayer_BP_C_GetRelevantForDamageExtraMeshes final
{
public:
	TArray<class USkeletalMeshComponent*>         SkeletalMeshes_;                                   // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         Skelmeshes;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5E[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USkeletalMeshComponent*           Temp_object_Variable;                              // 0x0030(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetRelevantForDamageExtraMeshes");
static_assert(sizeof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes) == 0x000068, "Wrong size on RBPlayer_BP_C_GetRelevantForDamageExtraMeshes");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, SkeletalMeshes_) == 0x000000, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::SkeletalMeshes_' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, Skelmeshes) == 0x000010, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::Skelmeshes' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, Temp_int_Array_Index_Variable) == 0x000020, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, Temp_object_Variable) == 0x000030, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, CallFunc_Array_Get_Item) == 0x000040, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetRelevantForDamageExtraMeshes, CallFunc_Contains_ReturnValue) == 0x000060, "Member 'RBPlayer_BP_C_GetRelevantForDamageExtraMeshes::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.ApplyDamageVFX
// 0x0148 (0x0148 - 0x0000)
struct RBPlayer_BP_C_ApplyDamageVFX final
{
public:
	EDamageType                                   InfoType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCWeapon                                    NPCWeapon;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C60[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DmdAmount;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DmgLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DmgDirection;                                      // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SourceActor;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBloodParticles;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C61[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBNPC*                                 K2Node_DynamicCast_AsRB_NPC;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C62[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue_1;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C63[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue;              // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C64[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue_1;            // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C65[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              CallFunc_GetNextBloodSplatterShuffledMaterial_NewParam; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySpawnBloodSplatterDecal_bSpawned;      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C66[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TrySpawnBloodSplatterDecal_DecalLocation; // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TrySpawnBloodSplatterDecal_DecalNormal;   // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrySpawnBloodSplatterDecal_bSpawned_1;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C67[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TrySpawnBloodSplatterDecal_DecalLocation_1; // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TrySpawnBloodSplatterDecal_DecalNormal_1; // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C68[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_2;      // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C69[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue_2;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6A[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue_2;            // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_3;      // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_ApplyDamageVFX) == 0x000008, "Wrong alignment on RBPlayer_BP_C_ApplyDamageVFX");
static_assert(sizeof(RBPlayer_BP_C_ApplyDamageVFX) == 0x000148, "Wrong size on RBPlayer_BP_C_ApplyDamageVFX");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, InfoType) == 0x000000, "Member 'RBPlayer_BP_C_ApplyDamageVFX::InfoType' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, NPCWeapon) == 0x000001, "Member 'RBPlayer_BP_C_ApplyDamageVFX::NPCWeapon' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, DmdAmount) == 0x000004, "Member 'RBPlayer_BP_C_ApplyDamageVFX::DmdAmount' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, DmgLocation) == 0x000008, "Member 'RBPlayer_BP_C_ApplyDamageVFX::DmgLocation' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, DmgDirection) == 0x000014, "Member 'RBPlayer_BP_C_ApplyDamageVFX::DmgDirection' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, SourceActor) == 0x000020, "Member 'RBPlayer_BP_C_ApplyDamageVFX::SourceActor' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, bBloodParticles) == 0x000028, "Member 'RBPlayer_BP_C_ApplyDamageVFX::bBloodParticles' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, Temp_bool_Variable) == 0x000029, "Member 'RBPlayer_BP_C_ApplyDamageVFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, K2Node_DynamicCast_AsRB_NPC) == 0x000030, "Member 'RBPlayer_BP_C_ApplyDamageVFX::K2Node_DynamicCast_AsRB_NPC' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'RBPlayer_BP_C_ApplyDamageVFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003B, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, K2Node_SwitchEnum_CmpSuccess) == 0x00003C, "Member 'RBPlayer_BP_C_ApplyDamageVFX::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_BP_IsInFirstPerson_ReturnValue) == 0x00003D, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_BP_IsInFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, Temp_object_Variable) == 0x000040, "Member 'RBPlayer_BP_C_ApplyDamageVFX::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_BP_IsInFirstPerson_ReturnValue_1) == 0x000048, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_BP_IsInFirstPerson_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_GetBoneLocation_ReturnValue) == 0x00004C, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_GetBoneLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000060, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000080, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_Vector_Normal2D_ReturnValue) == 0x00008C, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000098, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_GetBoneLocation_ReturnValue_1) == 0x0000A0, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_GetBoneLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_GetNextBloodSplatterShuffledMaterial_NewParam) == 0x0000B0, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_GetNextBloodSplatterShuffledMaterial_NewParam' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_MakeRotFromX_ReturnValue) == 0x0000B8, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_TrySpawnBloodSplatterDecal_bSpawned) == 0x0000C4, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_TrySpawnBloodSplatterDecal_bSpawned' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_TrySpawnBloodSplatterDecal_DecalLocation) == 0x0000C8, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_TrySpawnBloodSplatterDecal_DecalLocation' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_TrySpawnBloodSplatterDecal_DecalNormal) == 0x0000D4, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_TrySpawnBloodSplatterDecal_DecalNormal' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x0000E0, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_TrySpawnBloodSplatterDecal_bSpawned_1) == 0x0000E8, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_TrySpawnBloodSplatterDecal_bSpawned_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_TrySpawnBloodSplatterDecal_DecalLocation_1) == 0x0000EC, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_TrySpawnBloodSplatterDecal_DecalLocation_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_TrySpawnBloodSplatterDecal_DecalNormal_1) == 0x0000F8, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_TrySpawnBloodSplatterDecal_DecalNormal_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_SpawnSystemAtLocation_ReturnValue_2) == 0x000108, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_SpawnSystemAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, Temp_object_Variable_1) == 0x000110, "Member 'RBPlayer_BP_C_ApplyDamageVFX::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, K2Node_SwitchEnum_CmpSuccess_1) == 0x000118, "Member 'RBPlayer_BP_C_ApplyDamageVFX::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, K2Node_Select_Default) == 0x000120, "Member 'RBPlayer_BP_C_ApplyDamageVFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000128, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_BP_IsInFirstPerson_ReturnValue_2) == 0x000130, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_BP_IsInFirstPerson_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_GetBoneLocation_ReturnValue_2) == 0x000134, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_GetBoneLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyDamageVFX, CallFunc_SpawnSystemAtLocation_ReturnValue_3) == 0x000140, "Member 'RBPlayer_BP_C_ApplyDamageVFX::CallFunc_SpawnSystemAtLocation_ReturnValue_3' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.ApplyBloodDecal
// 0x0320 (0x0320 - 0x0000)
struct RBPlayer_BP_C_ApplyBloodDecal final
{
public:
	class UMaterialInstanceConstant*              MatDecal;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotate;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDecalComponent*>                Decals;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6C[0x1];                                     // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C6D[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult;    // 0x0208(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddRelativeRotation_SweepHitResult_1;  // 0x0290(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_ApplyBloodDecal) == 0x000008, "Wrong alignment on RBPlayer_BP_C_ApplyBloodDecal");
static_assert(sizeof(RBPlayer_BP_C_ApplyBloodDecal) == 0x000320, "Wrong size on RBPlayer_BP_C_ApplyBloodDecal");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, MatDecal) == 0x000000, "Member 'RBPlayer_BP_C_ApplyBloodDecal::MatDecal' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, Scale) == 0x000008, "Member 'RBPlayer_BP_C_ApplyBloodDecal::Scale' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, Rotate) == 0x00000C, "Member 'RBPlayer_BP_C_ApplyBloodDecal::Rotate' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, Decals) == 0x000010, "Member 'RBPlayer_BP_C_ApplyBloodDecal::Decals' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, Temp_object_Variable) == 0x000020, "Member 'RBPlayer_BP_C_ApplyBloodDecal::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_MakeRotator_ReturnValue) == 0x000034, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_GetActorForwardVector_ReturnValue) == 0x000058, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000064, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_RandomFloatInRange_ReturnValue) == 0x00007C, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_MakeRotator_ReturnValue_1) == 0x00008C, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, K2Node_MakeArray_Array) == 0x000098, "Member 'RBPlayer_BP_C_ApplyBloodDecal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000A8, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000AC, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_MakeVector_ReturnValue_1) == 0x0000B8, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C4, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000D0, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000158, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_bBlockingHit) == 0x000159, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_bInitialOverlap) == 0x00015A, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_Time) == 0x00015C, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_Distance) == 0x000160, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_Location) == 0x000164, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_ImpactPoint) == 0x000170, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_Normal) == 0x00017C, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_ImpactNormal) == 0x000188, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_PhysMat) == 0x000198, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_HitActor) == 0x0001A0, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_HitComponent) == 0x0001A8, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_HitBoneName) == 0x0001B0, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_ElementIndex) == 0x0001BC, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_FaceIndex) == 0x0001C0, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_TraceStart) == 0x0001C4, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001DC, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_Normal_ReturnValue) == 0x0001E8, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_MakeRotFromX_ReturnValue) == 0x0001F4, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000200, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_K2_AddRelativeRotation_SweepHitResult) == 0x000208, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_K2_AddRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_K2_AddRelativeRotation_SweepHitResult_1) == 0x000290, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_K2_AddRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_ApplyBloodDecal, CallFunc_Array_AddUnique_ReturnValue) == 0x000318, "Member 'RBPlayer_BP_C_ApplyBloodDecal::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetNextBloodSplatterShuffledMaterial
// 0x0020 (0x0020 - 0x0000)
struct RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial final
{
public:
	class UMaterialInstanceConstant*              NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceConstant*              NewMaterial;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceConstant*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial");
static_assert(sizeof(RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial) == 0x000020, "Wrong size on RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial");
static_assert(offsetof(RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial, NewParam) == 0x000000, "Member 'RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial::NewParam' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial, NewMaterial) == 0x000008, "Member 'RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial::NewMaterial' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial, CallFunc_Array_Get_Item) == 0x000010, "Member 'RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'RBPlayer_BP_C_GetNextBloodSplatterShuffledMaterial::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateBloodSmearInDownedState
// 0x0130 (0x0130 - 0x0000)
struct RBPlayer_BP_C_UpdateBloodSmearInDownedState final
{
public:
	bool                                          bShouldApplyRotationSmear;                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShouldApplyStraightSmear;                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6E[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C6F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsideredMakingKnockedDownBloodTrail_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C70[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue;              // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelRandomIntRange_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C71[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C72[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelRandomIntRange_ReturnValue_1;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C73[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoneLocation_ReturnValue_1;            // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue_1;       // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_UpdateBloodSmearInDownedState) == 0x000008, "Wrong alignment on RBPlayer_BP_C_UpdateBloodSmearInDownedState");
static_assert(sizeof(RBPlayer_BP_C_UpdateBloodSmearInDownedState) == 0x000130, "Wrong size on RBPlayer_BP_C_UpdateBloodSmearInDownedState");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, bShouldApplyRotationSmear) == 0x000000, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::bShouldApplyRotationSmear' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, bShouldApplyStraightSmear) == 0x000001, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::bShouldApplyStraightSmear' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, Temp_bool_Variable) == 0x000010, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, Temp_float_Variable) == 0x000014, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, Temp_float_Variable_1) == 0x000018, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_MakeVector_ReturnValue_1) == 0x00001C, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_IsConsideredMakingKnockedDownBloodTrail_ReturnValue) == 0x000028, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_IsConsideredMakingKnockedDownBloodTrail_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_RandomFloatInRange_ReturnValue) == 0x00002C, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, K2Node_MakeStruct_LinearColor) == 0x000030, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000040, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000044, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, K2Node_MakeStruct_LinearColor_1) == 0x000048, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_RandomInteger_ReturnValue) == 0x000064, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_GetBoneLocation_ReturnValue) == 0x00006C, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_GetBoneLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_LevelRandomIntRange_ReturnValue) == 0x00007C, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_LevelRandomIntRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000080, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000088, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000094, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_BreakRotator_Roll) == 0x0000A0, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_BreakRotator_Pitch) == 0x0000A4, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_BreakRotator_Yaw) == 0x0000A8, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_Abs_ReturnValue) == 0x0000AC, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_RandomBool_ReturnValue) == 0x0000B0, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000B1, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, K2Node_Select_Default) == 0x0000B4, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C4, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_Vector_Distance_ReturnValue) == 0x0000D0, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_RandomInteger_ReturnValue_1) == 0x0000D4, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D8, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E0, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_LevelRandomIntRange_ReturnValue_1) == 0x0000E4, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_LevelRandomIntRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_GetElapsedTime_ReturnValue) == 0x0000E8, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000EC, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_MakeRotFromZ_ReturnValue) == 0x0000F0, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_BreakRotator_Roll_1) == 0x0000FC, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_BreakRotator_Pitch_1) == 0x000100, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_BreakRotator_Yaw_1) == 0x000104, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_GetBoneLocation_ReturnValue_1) == 0x000108, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_GetBoneLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_Add_FloatFloat_ReturnValue) == 0x000114, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_GetTimeSeconds_ReturnValue) == 0x000118, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_MakeRotator_ReturnValue_1) == 0x00011C, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodSmearInDownedState, CallFunc_SpawnDecalAtLocation_ReturnValue_1) == 0x000128, "Member 'RBPlayer_BP_C_UpdateBloodSmearInDownedState::CallFunc_SpawnDecalAtLocation_ReturnValue_1' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateBloodEffects
// 0x0014 (0x0014 - 0x0000)
struct RBPlayer_BP_C_UpdateBloodEffects final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetMaxHealth_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetHealthF_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_UpdateBloodEffects) == 0x000004, "Wrong alignment on RBPlayer_BP_C_UpdateBloodEffects");
static_assert(sizeof(RBPlayer_BP_C_UpdateBloodEffects) == 0x000014, "Wrong size on RBPlayer_BP_C_UpdateBloodEffects");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodEffects, DeltaTime) == 0x000000, "Member 'RBPlayer_BP_C_UpdateBloodEffects::DeltaTime' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodEffects, CallFunc_BP_GetMaxHealth_ReturnValue) == 0x000004, "Member 'RBPlayer_BP_C_UpdateBloodEffects::CallFunc_BP_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodEffects, CallFunc_BP_GetHealthF_ReturnValue) == 0x000008, "Member 'RBPlayer_BP_C_UpdateBloodEffects::CallFunc_BP_GetHealthF_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodEffects, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'RBPlayer_BP_C_UpdateBloodEffects::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateBloodEffects, CallFunc_FInterpTo_ReturnValue) == 0x000010, "Member 'RBPlayer_BP_C_UpdateBloodEffects::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateESOPVisibility
// 0x0004 (0x0004 - 0x0000)
struct RBPlayer_BP_C_UpdateESOPVisibility final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_UpdateESOPVisibility) == 0x000001, "Wrong alignment on RBPlayer_BP_C_UpdateESOPVisibility");
static_assert(sizeof(RBPlayer_BP_C_UpdateESOPVisibility) == 0x000004, "Wrong size on RBPlayer_BP_C_UpdateESOPVisibility");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPVisibility, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_UpdateESOPVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'RBPlayer_BP_C_UpdateESOPVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPVisibility, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000002, "Member 'RBPlayer_BP_C_UpdateESOPVisibility::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateESOPVisibility, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000003, "Member 'RBPlayer_BP_C_UpdateESOPVisibility::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateShadowActiveSkill
// 0x0010 (0x0010 - 0x0000)
struct RBPlayer_BP_C_UpdateShadowActiveSkill final
{
public:
	class UMeshComponent*                         InHandMeshComponent;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_UpdateShadowActiveSkill) == 0x000008, "Wrong alignment on RBPlayer_BP_C_UpdateShadowActiveSkill");
static_assert(sizeof(RBPlayer_BP_C_UpdateShadowActiveSkill) == 0x000010, "Wrong size on RBPlayer_BP_C_UpdateShadowActiveSkill");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowActiveSkill, InHandMeshComponent) == 0x000000, "Member 'RBPlayer_BP_C_UpdateShadowActiveSkill::InHandMeshComponent' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowActiveSkill, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'RBPlayer_BP_C_UpdateShadowActiveSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowActiveSkill, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'RBPlayer_BP_C_UpdateShadowActiveSkill::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowActiveSkill, CallFunc_SetStaticMesh_ReturnValue) == 0x00000A, "Member 'RBPlayer_BP_C_UpdateShadowActiveSkill::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowActiveSkill, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000B, "Member 'RBPlayer_BP_C_UpdateShadowActiveSkill::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowActiveSkill, CallFunc_IsValid_ReturnValue_2) == 0x00000C, "Member 'RBPlayer_BP_C_UpdateShadowActiveSkill::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowActiveSkill, CallFunc_IsValid_ReturnValue_3) == 0x00000D, "Member 'RBPlayer_BP_C_UpdateShadowActiveSkill::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateShadowActiveSkill, CallFunc_SetStaticMesh_ReturnValue_1) == 0x00000E, "Member 'RBPlayer_BP_C_UpdateShadowActiveSkill::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.CopyMaterialsToShadowMesh
// 0x0040 (0x0040 - 0x0000)
struct RBPlayer_BP_C_CopyMaterialsToShadowMesh final
{
public:
	class UMeshComponent*                         PlayerMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         ShadowMesh;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C74[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_CopyMaterialsToShadowMesh) == 0x000008, "Wrong alignment on RBPlayer_BP_C_CopyMaterialsToShadowMesh");
static_assert(sizeof(RBPlayer_BP_C_CopyMaterialsToShadowMesh) == 0x000040, "Wrong size on RBPlayer_BP_C_CopyMaterialsToShadowMesh");
static_assert(offsetof(RBPlayer_BP_C_CopyMaterialsToShadowMesh, PlayerMesh) == 0x000000, "Member 'RBPlayer_BP_C_CopyMaterialsToShadowMesh::PlayerMesh' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CopyMaterialsToShadowMesh, ShadowMesh) == 0x000008, "Member 'RBPlayer_BP_C_CopyMaterialsToShadowMesh::ShadowMesh' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CopyMaterialsToShadowMesh, CallFunc_GetMaterials_ReturnValue) == 0x000010, "Member 'RBPlayer_BP_C_CopyMaterialsToShadowMesh::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CopyMaterialsToShadowMesh, Temp_int_Array_Index_Variable) == 0x000020, "Member 'RBPlayer_BP_C_CopyMaterialsToShadowMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CopyMaterialsToShadowMesh, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'RBPlayer_BP_C_CopyMaterialsToShadowMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CopyMaterialsToShadowMesh, CallFunc_Array_Get_Item) == 0x000028, "Member 'RBPlayer_BP_C_CopyMaterialsToShadowMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CopyMaterialsToShadowMesh, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'RBPlayer_BP_C_CopyMaterialsToShadowMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CopyMaterialsToShadowMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'RBPlayer_BP_C_CopyMaterialsToShadowMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_CopyMaterialsToShadowMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'RBPlayer_BP_C_CopyMaterialsToShadowMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateUnderwaterFX
// 0x0004 (0x0004 - 0x0000)
struct RBPlayer_BP_C_UpdateUnderwaterFX final
{
public:
	bool                                          CallFunc_IsEyeLocationUnderwater_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsInFirstPerson_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_UpdateUnderwaterFX) == 0x000001, "Wrong alignment on RBPlayer_BP_C_UpdateUnderwaterFX");
static_assert(sizeof(RBPlayer_BP_C_UpdateUnderwaterFX) == 0x000004, "Wrong size on RBPlayer_BP_C_UpdateUnderwaterFX");
static_assert(offsetof(RBPlayer_BP_C_UpdateUnderwaterFX, CallFunc_IsEyeLocationUnderwater_ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_UpdateUnderwaterFX::CallFunc_IsEyeLocationUnderwater_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateUnderwaterFX, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'RBPlayer_BP_C_UpdateUnderwaterFX::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateUnderwaterFX, CallFunc_BP_IsInFirstPerson_ReturnValue) == 0x000002, "Member 'RBPlayer_BP_C_UpdateUnderwaterFX::CallFunc_BP_IsInFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateUnderwaterFX, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'RBPlayer_BP_C_UpdateUnderwaterFX::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.DebugShadowMesh
// 0x0060 (0x0060 - 0x0000)
struct RBPlayer_BP_C_DebugShadowMesh final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C75[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C76[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C77[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C78[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C79[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component_1;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_DebugShadowMesh) == 0x000008, "Wrong alignment on RBPlayer_BP_C_DebugShadowMesh");
static_assert(sizeof(RBPlayer_BP_C_DebugShadowMesh) == 0x000060, "Wrong size on RBPlayer_BP_C_DebugShadowMesh");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'RBPlayer_BP_C_DebugShadowMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, Temp_int_Array_Index_Variable) == 0x000008, "Member 'RBPlayer_BP_C_DebugShadowMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'RBPlayer_BP_C_DebugShadowMesh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'RBPlayer_BP_C_DebugShadowMesh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Array_Get_Item) == 0x000018, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, K2Node_DynamicCast_AsPrimitive_Component) == 0x000028, "Member 'RBPlayer_BP_C_DebugShadowMesh::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'RBPlayer_BP_C_DebugShadowMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, K2Node_DynamicCast_AsPrimitive_Component_1) == 0x000050, "Member 'RBPlayer_BP_C_DebugShadowMesh::K2Node_DynamicCast_AsPrimitive_Component_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'RBPlayer_BP_C_DebugShadowMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_Not_PreBool_ReturnValue_1) == 0x000059, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_DebugShadowMesh, CallFunc_BooleanAND_ReturnValue_1) == 0x00005A, "Member 'RBPlayer_BP_C_DebugShadowMesh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.UpdateReleventComponentsForBloodMaterial
// 0x00B8 (0x00B8 - 0x0000)
struct RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C7A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C7B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C7C[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetRelevantForDamageExtraMeshes_SkeletalMeshes_; // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C7D[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array_1;                          // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial) == 0x000008, "Wrong alignment on RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial");
static_assert(sizeof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial) == 0x0000B8, "Wrong size on RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, Temp_int_Array_Index_Variable) == 0x000000, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Array_Get_Item) == 0x000030, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Contains_ReturnValue) == 0x000058, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, K2Node_MakeArray_Array) == 0x000060, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_GetRelevantForDamageExtraMeshes_SkeletalMeshes_) == 0x000070, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_GetRelevantForDamageExtraMeshes_SkeletalMeshes_' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Array_AddUnique_ReturnValue) == 0x000088, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_GetObjectName_ReturnValue) == 0x000090, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, CallFunc_Contains_ReturnValue_1) == 0x0000A1, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial, K2Node_MakeArray_Array_1) == 0x0000A8, "Member 'RBPlayer_BP_C_UpdateReleventComponentsForBloodMaterial::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetMainShadowMesh
// 0x0008 (0x0008 - 0x0000)
struct RBPlayer_BP_C_GetMainShadowMesh final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_GetMainShadowMesh) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetMainShadowMesh");
static_assert(sizeof(RBPlayer_BP_C_GetMainShadowMesh) == 0x000008, "Wrong size on RBPlayer_BP_C_GetMainShadowMesh");
static_assert(offsetof(RBPlayer_BP_C_GetMainShadowMesh, ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_GetMainShadowMesh::ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetAllShadowMeshes
// 0x0010 (0x0010 - 0x0000)
struct RBPlayer_BP_C_GetAllShadowMeshes final
{
public:
	TArray<class UPrimitiveComponent*>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(RBPlayer_BP_C_GetAllShadowMeshes) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetAllShadowMeshes");
static_assert(sizeof(RBPlayer_BP_C_GetAllShadowMeshes) == 0x000010, "Wrong size on RBPlayer_BP_C_GetAllShadowMeshes");
static_assert(offsetof(RBPlayer_BP_C_GetAllShadowMeshes, ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_GetAllShadowMeshes::ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetFaceFXSkeletalMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct RBPlayer_BP_C_GetFaceFXSkeletalMeshComponent final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_GetFaceFXSkeletalMeshComponent) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetFaceFXSkeletalMeshComponent");
static_assert(sizeof(RBPlayer_BP_C_GetFaceFXSkeletalMeshComponent) == 0x000008, "Wrong size on RBPlayer_BP_C_GetFaceFXSkeletalMeshComponent");
static_assert(offsetof(RBPlayer_BP_C_GetFaceFXSkeletalMeshComponent, ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_GetFaceFXSkeletalMeshComponent::ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetSkeletalMeshComponentForSlot
// 0x0018 (0x0018 - 0x0000)
struct RBPlayer_BP_C_GetSkeletalMeshComponentForSlot final
{
public:
	EPlayerCustomizationSlot                      Slot;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C7E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBPlayer_BP_C_GetSkeletalMeshComponentForSlot) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetSkeletalMeshComponentForSlot");
static_assert(sizeof(RBPlayer_BP_C_GetSkeletalMeshComponentForSlot) == 0x000018, "Wrong size on RBPlayer_BP_C_GetSkeletalMeshComponentForSlot");
static_assert(offsetof(RBPlayer_BP_C_GetSkeletalMeshComponentForSlot, Slot) == 0x000000, "Member 'RBPlayer_BP_C_GetSkeletalMeshComponentForSlot::Slot' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetSkeletalMeshComponentForSlot, ReturnValue) == 0x000008, "Member 'RBPlayer_BP_C_GetSkeletalMeshComponentForSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetSkeletalMeshComponentForSlot, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'RBPlayer_BP_C_GetSkeletalMeshComponentForSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetPlayerCustomizationInfo
// 0x0088 (0x0088 - 0x0000)
struct RBPlayer_BP_C_GetPlayerCustomizationInfo final
{
public:
	struct FRBPlayerCustomizationInfo             ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm)
	class ARBPlayerState*                         CallFunc_GetPlayerStateByPlayer_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBPlayerCustomizationConfig*           CallFunc_GetPlayerCustomizationConfig_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C7F[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBPlayerCustomizationInfo             CallFunc_GetCustomizationInfo_ReturnValue;         // 0x0050(0x0038)(ConstParm)
};
static_assert(alignof(RBPlayer_BP_C_GetPlayerCustomizationInfo) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetPlayerCustomizationInfo");
static_assert(sizeof(RBPlayer_BP_C_GetPlayerCustomizationInfo) == 0x000088, "Wrong size on RBPlayer_BP_C_GetPlayerCustomizationInfo");
static_assert(offsetof(RBPlayer_BP_C_GetPlayerCustomizationInfo, ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_GetPlayerCustomizationInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetPlayerCustomizationInfo, CallFunc_GetPlayerStateByPlayer_ReturnValue) == 0x000038, "Member 'RBPlayer_BP_C_GetPlayerCustomizationInfo::CallFunc_GetPlayerStateByPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetPlayerCustomizationInfo, CallFunc_GetPlayerCustomizationConfig_ReturnValue) == 0x000040, "Member 'RBPlayer_BP_C_GetPlayerCustomizationInfo::CallFunc_GetPlayerCustomizationConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetPlayerCustomizationInfo, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'RBPlayer_BP_C_GetPlayerCustomizationInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetPlayerCustomizationInfo, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'RBPlayer_BP_C_GetPlayerCustomizationInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBPlayer_BP_C_GetPlayerCustomizationInfo, CallFunc_GetCustomizationInfo_ReturnValue) == 0x000050, "Member 'RBPlayer_BP_C_GetPlayerCustomizationInfo::CallFunc_GetCustomizationInfo_ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetWatchComponent
// 0x0008 (0x0008 - 0x0000)
struct RBPlayer_BP_C_GetWatchComponent final
{
public:
	class UStaticMeshComponent*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_GetWatchComponent) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetWatchComponent");
static_assert(sizeof(RBPlayer_BP_C_GetWatchComponent) == 0x000008, "Wrong size on RBPlayer_BP_C_GetWatchComponent");
static_assert(offsetof(RBPlayer_BP_C_GetWatchComponent, ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_GetWatchComponent::ReturnValue' has a wrong offset!");

// Function RBPlayer_BP.RBPlayer_BP_C.GetMainParentSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct RBPlayer_BP_C_GetMainParentSkeletalMesh final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBPlayer_BP_C_GetMainParentSkeletalMesh) == 0x000008, "Wrong alignment on RBPlayer_BP_C_GetMainParentSkeletalMesh");
static_assert(sizeof(RBPlayer_BP_C_GetMainParentSkeletalMesh) == 0x000008, "Wrong size on RBPlayer_BP_C_GetMainParentSkeletalMesh");
static_assert(offsetof(RBPlayer_BP_C_GetMainParentSkeletalMesh, ReturnValue) == 0x000000, "Member 'RBPlayer_BP_C_GetMainParentSkeletalMesh::ReturnValue' has a wrong offset!");

}

