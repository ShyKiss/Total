#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputBindingEntryWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.ExecuteUbergraph_InputBindingEntryWidget
// 0x000C (0x000C - 0x0000)
struct InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsRebindInProgress;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget) == 0x000004, "Wrong alignment on InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget");
static_assert(sizeof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget) == 0x00000C, "Wrong size on InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, EntryPoint) == 0x000000, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, Temp_bool_Variable) == 0x000004, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, Temp_byte_Variable) == 0x000005, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, Temp_byte_Variable_1) == 0x000006, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, K2Node_Event_bIsRebindInProgress) == 0x000007, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::K2Node_Event_bIsRebindInProgress' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget, K2Node_Select_Default) == 0x000008, "Member 'InputBindingEntryWidget_C_ExecuteUbergraph_InputBindingEntryWidget::K2Node_Select_Default' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.UpdateRebindStatus
// 0x0001 (0x0001 - 0x0000)
struct InputBindingEntryWidget_C_UpdateRebindStatus final
{
public:
	bool                                          bIsRebindInProgress;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputBindingEntryWidget_C_UpdateRebindStatus) == 0x000001, "Wrong alignment on InputBindingEntryWidget_C_UpdateRebindStatus");
static_assert(sizeof(InputBindingEntryWidget_C_UpdateRebindStatus) == 0x000001, "Wrong size on InputBindingEntryWidget_C_UpdateRebindStatus");
static_assert(offsetof(InputBindingEntryWidget_C_UpdateRebindStatus, bIsRebindInProgress) == 0x000000, "Member 'InputBindingEntryWidget_C_UpdateRebindStatus::bIsRebindInProgress' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.Init
// 0x0010 (0x0010 - 0x0000)
struct InputBindingEntryWidget_C_Init final
{
public:
	class UInputBindingsMenu_C*                   Param_ParentMenu;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InputBindingEntryWidget_C_Init) == 0x000008, "Wrong alignment on InputBindingEntryWidget_C_Init");
static_assert(sizeof(InputBindingEntryWidget_C_Init) == 0x000010, "Wrong size on InputBindingEntryWidget_C_Init");
static_assert(offsetof(InputBindingEntryWidget_C_Init, Param_ParentMenu) == 0x000000, "Member 'InputBindingEntryWidget_C_Init::Param_ParentMenu' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Init, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'InputBindingEntryWidget_C_Init::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.RefreshValue
// 0x0002 (0x0002 - 0x0000)
struct InputBindingEntryWidget_C_RefreshValue final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InputBindingEntryWidget_C_RefreshValue) == 0x000001, "Wrong alignment on InputBindingEntryWidget_C_RefreshValue");
static_assert(sizeof(InputBindingEntryWidget_C_RefreshValue) == 0x000002, "Wrong size on InputBindingEntryWidget_C_RefreshValue");
static_assert(offsetof(InputBindingEntryWidget_C_RefreshValue, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'InputBindingEntryWidget_C_RefreshValue::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_RefreshValue, CallFunc_IsHovered_ReturnValue) == 0x000001, "Member 'InputBindingEntryWidget_C_RefreshValue::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.Highlight
// 0x0040 (0x0040 - 0x0000)
struct InputBindingEntryWidget_C_Highlight final
{
public:
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28C7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(InputBindingEntryWidget_C_Highlight) == 0x000008, "Wrong alignment on InputBindingEntryWidget_C_Highlight");
static_assert(sizeof(InputBindingEntryWidget_C_Highlight) == 0x000040, "Wrong size on InputBindingEntryWidget_C_Highlight");
static_assert(offsetof(InputBindingEntryWidget_C_Highlight, CallFunc_Key_IsValid_ReturnValue) == 0x000000, "Member 'InputBindingEntryWidget_C_Highlight::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Highlight, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'InputBindingEntryWidget_C_Highlight::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Highlight, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'InputBindingEntryWidget_C_Highlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function InputBindingEntryWidget.InputBindingEntryWidget_C.Downplay
// 0x0040 (0x0040 - 0x0000)
struct InputBindingEntryWidget_C_Downplay final
{
public:
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28C9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28CA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(InputBindingEntryWidget_C_Downplay) == 0x000008, "Wrong alignment on InputBindingEntryWidget_C_Downplay");
static_assert(sizeof(InputBindingEntryWidget_C_Downplay) == 0x000040, "Wrong size on InputBindingEntryWidget_C_Downplay");
static_assert(offsetof(InputBindingEntryWidget_C_Downplay, CallFunc_Key_IsValid_ReturnValue) == 0x000000, "Member 'InputBindingEntryWidget_C_Downplay::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Downplay, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'InputBindingEntryWidget_C_Downplay::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(InputBindingEntryWidget_C_Downplay, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'InputBindingEntryWidget_C_Downplay::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

