#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WallFluorescentMinus01

#include "Basic.hpp"

#include "RBLight_BP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WallFluorescent-01.WallFluorescent-01_C
// 0x0030 (0x07D0 - 0x07A0)
class AWallFluorescentMinus01_C final : public ARBLight_BP_C
{
public:
	class UPointLightComponent*                   PointLight_Dual;                                   // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBVolumetricFogLightComponent*         RBVolumetricFogLight;                              // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightMesh_0;                                       // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight_Movable;                               // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSpotLightComponent*                  RBSpotLight_Static;                                // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WallFluorescent-01_C">();
	}
	static class AWallFluorescentMinus01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWallFluorescentMinus01_C>();
	}
};
static_assert(alignof(AWallFluorescentMinus01_C) == 0x000010, "Wrong alignment on AWallFluorescentMinus01_C");
static_assert(sizeof(AWallFluorescentMinus01_C) == 0x0007D0, "Wrong size on AWallFluorescentMinus01_C");
static_assert(offsetof(AWallFluorescentMinus01_C, PointLight_Dual) == 0x0007A0, "Member 'AWallFluorescentMinus01_C::PointLight_Dual' has a wrong offset!");
static_assert(offsetof(AWallFluorescentMinus01_C, RBVolumetricFogLight) == 0x0007A8, "Member 'AWallFluorescentMinus01_C::RBVolumetricFogLight' has a wrong offset!");
static_assert(offsetof(AWallFluorescentMinus01_C, LightMesh_0) == 0x0007B0, "Member 'AWallFluorescentMinus01_C::LightMesh_0' has a wrong offset!");
static_assert(offsetof(AWallFluorescentMinus01_C, RBSpotLight_Movable) == 0x0007B8, "Member 'AWallFluorescentMinus01_C::RBSpotLight_Movable' has a wrong offset!");
static_assert(offsetof(AWallFluorescentMinus01_C, RBSpotLight_Static) == 0x0007C0, "Member 'AWallFluorescentMinus01_C::RBSpotLight_Static' has a wrong offset!");

}

