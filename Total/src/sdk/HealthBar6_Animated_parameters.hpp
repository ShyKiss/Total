#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HealthBar6_Animated

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function HealthBar6_Animated.HealthBar6_Animated_C.ExecuteUbergraph_HealthBar6_Animated
// 0x01A8 (0x01A8 - 0x0000)
struct HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_newBleedingLeft;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_newHealth;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerBarState                               Temp_byte_Variable;                                // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerBarState                               Temp_byte_Variable_1;                              // 0x000D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerBarState                               Temp_byte_Variable_2;                              // 0x000E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA2[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float NewBleedingLeft, float NewHealth)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPlayerIndicatorType PlayerIndicatorType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float NewHealth, bool bIncreased)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA3[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_Event_oldPlayer;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_Event_newPlayer;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA4[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_newHealth_1;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIncreased;                     // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerIndicatorType                          K2Node_CustomEvent_PlayerIndicatorType;            // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA5[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float MaxHealth)>              K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_FadeIfNecessary_PlayAnim;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeIfNecessary_PlayAnim_1;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA6[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_maxHealth;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UHudBarElement_Animated_C*>      K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FSlateColor                            CallFunc_Map_Find_Value;                           // 0x00A0(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA7[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Map_Find_Value_1;                         // 0x00D0(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA8[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Map_Find_Value_2;                         // 0x0100(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA9[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0130(0x0028)()
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAA[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetWatchedPlayer_ReturnValue;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float NewHealth, bool bIncreased)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAB[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPlayerIndicatorType PlayerIndicatorType)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float MaxHealth)>              K2Node_CreateDelegate_OutputDelegate_6;            // 0x0194(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated) == 0x000008, "Wrong alignment on HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated");
static_assert(sizeof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated) == 0x0001A8, "Wrong size on HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, EntryPoint) == 0x000000, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::EntryPoint' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CustomEvent_newBleedingLeft) == 0x000004, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CustomEvent_newBleedingLeft' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CustomEvent_newHealth) == 0x000008, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CustomEvent_newHealth' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, Temp_byte_Variable) == 0x00000C, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, Temp_byte_Variable_1) == 0x00000D, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, Temp_byte_Variable_2) == 0x00000E, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, Temp_int_Array_Index_Variable) == 0x000038, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_Event_IsDesignTime) == 0x00004C, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_Event_oldPlayer) == 0x000050, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_Event_oldPlayer' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_Event_newPlayer) == 0x000058, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_Event_newPlayer' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_IsValid_ReturnValue_1) == 0x000065, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_IsValid_ReturnValue_2) == 0x000066, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CustomEvent_newHealth_1) == 0x000068, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CustomEvent_newHealth_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CustomEvent_bIncreased) == 0x00006C, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CustomEvent_bIncreased' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CustomEvent_PlayerIndicatorType) == 0x00006D, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CustomEvent_PlayerIndicatorType' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_FadeIfNecessary_PlayAnim) == 0x000080, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_FadeIfNecessary_PlayAnim' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_FadeIfNecessary_PlayAnim_1) == 0x000081, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_FadeIfNecessary_PlayAnim_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CustomEvent_maxHealth) == 0x000084, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CustomEvent_maxHealth' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000088, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_MakeArray_Array) == 0x000090, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Map_Find_Value_1) == 0x0000D0, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Map_Find_ReturnValue_1) == 0x0000F8, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Map_Find_Value_2) == 0x000100, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Map_Find_ReturnValue_2) == 0x000128, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_MakeStruct_SlateColor) == 0x000130, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Array_Get_Item) == 0x000158, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_GetWatchedPlayer_ReturnValue) == 0x000168, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_GetWatchedPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CreateDelegate_OutputDelegate_4) == 0x000170, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, CallFunc_IsValid_ReturnValue_3) == 0x000180, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CreateDelegate_OutputDelegate_5) == 0x000184, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated, K2Node_CreateDelegate_OutputDelegate_6) == 0x000194, "Member 'HealthBar6_Animated_C_ExecuteUbergraph_HealthBar6_Animated::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.OnBleedingLeftChanged
// 0x0008 (0x0008 - 0x0000)
struct HealthBar6_Animated_C_OnBleedingLeftChanged final
{
public:
	float                                         NewBleedingLeft;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HealthBar6_Animated_C_OnBleedingLeftChanged) == 0x000004, "Wrong alignment on HealthBar6_Animated_C_OnBleedingLeftChanged");
static_assert(sizeof(HealthBar6_Animated_C_OnBleedingLeftChanged) == 0x000008, "Wrong size on HealthBar6_Animated_C_OnBleedingLeftChanged");
static_assert(offsetof(HealthBar6_Animated_C_OnBleedingLeftChanged, NewBleedingLeft) == 0x000000, "Member 'HealthBar6_Animated_C_OnBleedingLeftChanged::NewBleedingLeft' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_OnBleedingLeftChanged, NewHealth) == 0x000004, "Member 'HealthBar6_Animated_C_OnBleedingLeftChanged::NewHealth' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.OnMaxHealthChanged
// 0x0004 (0x0004 - 0x0000)
struct HealthBar6_Animated_C_OnMaxHealthChanged final
{
public:
	float                                         MaxHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HealthBar6_Animated_C_OnMaxHealthChanged) == 0x000004, "Wrong alignment on HealthBar6_Animated_C_OnMaxHealthChanged");
static_assert(sizeof(HealthBar6_Animated_C_OnMaxHealthChanged) == 0x000004, "Wrong size on HealthBar6_Animated_C_OnMaxHealthChanged");
static_assert(offsetof(HealthBar6_Animated_C_OnMaxHealthChanged, MaxHealth) == 0x000000, "Member 'HealthBar6_Animated_C_OnMaxHealthChanged::MaxHealth' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.OnPlayerIndicatorTypeChanged
// 0x0001 (0x0001 - 0x0000)
struct HealthBar6_Animated_C_OnPlayerIndicatorTypeChanged final
{
public:
	EPlayerIndicatorType                          PlayerIndicatorType;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HealthBar6_Animated_C_OnPlayerIndicatorTypeChanged) == 0x000001, "Wrong alignment on HealthBar6_Animated_C_OnPlayerIndicatorTypeChanged");
static_assert(sizeof(HealthBar6_Animated_C_OnPlayerIndicatorTypeChanged) == 0x000001, "Wrong size on HealthBar6_Animated_C_OnPlayerIndicatorTypeChanged");
static_assert(offsetof(HealthBar6_Animated_C_OnPlayerIndicatorTypeChanged, PlayerIndicatorType) == 0x000000, "Member 'HealthBar6_Animated_C_OnPlayerIndicatorTypeChanged::PlayerIndicatorType' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.OnHealthUpdated
// 0x0008 (0x0008 - 0x0000)
struct HealthBar6_Animated_C_OnHealthUpdated final
{
public:
	float                                         NewHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIncreased;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HealthBar6_Animated_C_OnHealthUpdated) == 0x000004, "Wrong alignment on HealthBar6_Animated_C_OnHealthUpdated");
static_assert(sizeof(HealthBar6_Animated_C_OnHealthUpdated) == 0x000008, "Wrong size on HealthBar6_Animated_C_OnHealthUpdated");
static_assert(offsetof(HealthBar6_Animated_C_OnHealthUpdated, NewHealth) == 0x000000, "Member 'HealthBar6_Animated_C_OnHealthUpdated::NewHealth' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_OnHealthUpdated, bIncreased) == 0x000004, "Member 'HealthBar6_Animated_C_OnHealthUpdated::bIncreased' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.Event_OnWatchedPlayerChanged
// 0x0010 (0x0010 - 0x0000)
struct HealthBar6_Animated_C_Event_OnWatchedPlayerChanged final
{
public:
	class ARBPlayer*                              OldPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              NewPlayer;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HealthBar6_Animated_C_Event_OnWatchedPlayerChanged) == 0x000008, "Wrong alignment on HealthBar6_Animated_C_Event_OnWatchedPlayerChanged");
static_assert(sizeof(HealthBar6_Animated_C_Event_OnWatchedPlayerChanged) == 0x000010, "Wrong size on HealthBar6_Animated_C_Event_OnWatchedPlayerChanged");
static_assert(offsetof(HealthBar6_Animated_C_Event_OnWatchedPlayerChanged, OldPlayer) == 0x000000, "Member 'HealthBar6_Animated_C_Event_OnWatchedPlayerChanged::OldPlayer' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_Event_OnWatchedPlayerChanged, NewPlayer) == 0x000008, "Member 'HealthBar6_Animated_C_Event_OnWatchedPlayerChanged::NewPlayer' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HealthBar6_Animated_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HealthBar6_Animated_C_PreConstruct) == 0x000001, "Wrong alignment on HealthBar6_Animated_C_PreConstruct");
static_assert(sizeof(HealthBar6_Animated_C_PreConstruct) == 0x000001, "Wrong size on HealthBar6_Animated_C_PreConstruct");
static_assert(offsetof(HealthBar6_Animated_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HealthBar6_Animated_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.ProcessHealthEvent
// 0x01B0 (0x01B0 - 0x0000)
struct HealthBar6_Animated_C_ProcessHealthEvent final
{
public:
	float                                         NewHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Increased;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkipAnims;                                         // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAC[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxBracket;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinBracket;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBracket;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAD[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAE[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAF[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB0[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpecialMove                                  CallFunc_BP_GetSpecialMove_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB1[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB2[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB3[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB4[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB5[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB6[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB7[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB8[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB9[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_4;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBA[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBB[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBC[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBD[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_5;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBE[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBF[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item_3;                         // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC0[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x013C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC1[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC2[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_4;                           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC3[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item_4;                         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC4[0x2];                                     // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_5;                           // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_6;                           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC5[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC6[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0194(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2FC7[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item_5;                         // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HealthBar6_Animated_C_ProcessHealthEvent) == 0x000008, "Wrong alignment on HealthBar6_Animated_C_ProcessHealthEvent");
static_assert(sizeof(HealthBar6_Animated_C_ProcessHealthEvent) == 0x0001B0, "Wrong size on HealthBar6_Animated_C_ProcessHealthEvent");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, NewHealth) == 0x000000, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::NewHealth' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Increased) == 0x000004, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Increased' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, SkipAnims) == 0x000005, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::SkipAnims' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, MaxBracket) == 0x000008, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::MaxBracket' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, MinBracket) == 0x00000C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::MinBracket' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CurrentBracket) == 0x000010, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CurrentBracket' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_float_Variable) == 0x000014, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_bool_Variable) == 0x000018, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_float_Variable_1) == 0x00001C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_float_Variable_2) == 0x000020, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_bool_Variable_1) == 0x000024, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_bool_Variable_2) == 0x000025, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_int_Variable) == 0x000028, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_bool_Variable_3) == 0x000030, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_int_Array_Index_Variable) == 0x000034, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_bool_Variable_4) == 0x000038, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_float_Variable_3) == 0x000048, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_LastIndex_ReturnValue) == 0x00004C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000050, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_BP_GetSpecialMove_ReturnValue) == 0x000054, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_BP_GetSpecialMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000058, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Greater_IntInt_ReturnValue) == 0x000064, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000070, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000078, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_FTrunc_ReturnValue) == 0x00007C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000084, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000088, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000089, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_SelectInt_ReturnValue) == 0x00008C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000090, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000094, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_FTrunc_ReturnValue_1) == 0x000098, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_SelectInt_ReturnValue_1) == 0x00009C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A0, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, K2Node_Select_Default) == 0x0000A4, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0000A8, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_SelectInt_ReturnValue_2) == 0x0000AC, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0000B0, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_SelectInt_ReturnValue_3) == 0x0000B4, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, K2Node_Select_Default_1) == 0x0000C0, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_BooleanOR_ReturnValue) == 0x0000C8, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C9, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000CA, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_bool_Variable_5) == 0x0000CB, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_int_Variable_1) == 0x0000CC, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_SelectInt_ReturnValue_4) == 0x0000D0, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_SelectInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E8, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Not_PreBool_ReturnValue) == 0x0000EC, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_BooleanAND_ReturnValue) == 0x0000ED, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_BooleanAND_ReturnValue_1) == 0x0000EE, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_BooleanOR_ReturnValue_1) == 0x0000EF, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0000F0, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Greater_IntInt_ReturnValue_6) == 0x000100, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Not_PreBool_ReturnValue_1) == 0x000101, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_BooleanAND_ReturnValue_2) == 0x000102, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_BooleanAND_ReturnValue_3) == 0x000103, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_BooleanOR_ReturnValue_2) == 0x000104, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_SelectInt_ReturnValue_5) == 0x000108, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_SelectInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00010C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000110, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000114, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000118, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00011C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_bool_Variable_6) == 0x000120, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_Get_Item_3) == 0x000128, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, Temp_int_Loop_Counter_Variable_1) == 0x000130, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Less_IntInt_ReturnValue_3) == 0x000134, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Add_IntInt_ReturnValue_4) == 0x000138, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, K2Node_CreateDelegate_OutputDelegate) == 0x00013C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00014C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, K2Node_Select_Default_2) == 0x000150, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Not_PreBool_ReturnValue_2) == 0x000154, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, K2Node_Select_Default_3) == 0x000158, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Greater_IntInt_ReturnValue_7) == 0x00015C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Greater_IntInt_ReturnValue_8) == 0x00015D, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Less_IntInt_ReturnValue_4) == 0x00015E, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Less_IntInt_ReturnValue_5) == 0x00015F, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, K2Node_Select_Default_4) == 0x000160, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_Get_Item_4) == 0x000168, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_Length_ReturnValue_1) == 0x000170, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Less_IntInt_ReturnValue_6) == 0x000174, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000175, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, K2Node_Select_Default_5) == 0x000178, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, K2Node_Select_Default_6) == 0x00017C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000180, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000184, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000188, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00018C, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000190, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000194, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessHealthEvent, CallFunc_Array_Get_Item_5) == 0x0001A8, "Member 'HealthBar6_Animated_C_ProcessHealthEvent::CallFunc_Array_Get_Item_5' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.ChainTweens
// 0x0040 (0x0040 - 0x0000)
struct HealthBar6_Animated_C_ChainTweens final
{
public:
	int32                                         CurrentBracket;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC9[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FCA[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HealthBar6_Animated_C_ChainTweens) == 0x000008, "Wrong alignment on HealthBar6_Animated_C_ChainTweens");
static_assert(sizeof(HealthBar6_Animated_C_ChainTweens) == 0x000040, "Wrong size on HealthBar6_Animated_C_ChainTweens");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, CurrentBracket) == 0x000000, "Member 'HealthBar6_Animated_C_ChainTweens::CurrentBracket' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, Temp_bool_Variable) == 0x000004, "Member 'HealthBar6_Animated_C_ChainTweens::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, Temp_int_Variable) == 0x000008, "Member 'HealthBar6_Animated_C_ChainTweens::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, Temp_int_Variable_1) == 0x00000C, "Member 'HealthBar6_Animated_C_ChainTweens::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'HealthBar6_Animated_C_ChainTweens::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, CallFunc_Array_Get_Item) == 0x000020, "Member 'HealthBar6_Animated_C_ChainTweens::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'HealthBar6_Animated_C_ChainTweens::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, K2Node_Select_Default) == 0x00002C, "Member 'HealthBar6_Animated_C_ChainTweens::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'HealthBar6_Animated_C_ChainTweens::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'HealthBar6_Animated_C_ChainTweens::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, CallFunc_Array_Find_ReturnValue) == 0x000038, "Member 'HealthBar6_Animated_C_ChainTweens::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ChainTweens, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'HealthBar6_Animated_C_ChainTweens::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.ProcessPlayerStatusChange
// 0x0009 (0x0009 - 0x0000)
struct HealthBar6_Animated_C_ProcessPlayerStatusChange final
{
public:
	EPlayerIndicatorType                          NewStatus;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HealthBar6_Animated_C_ProcessPlayerStatusChange) == 0x000001, "Wrong alignment on HealthBar6_Animated_C_ProcessPlayerStatusChange");
static_assert(sizeof(HealthBar6_Animated_C_ProcessPlayerStatusChange) == 0x000009, "Wrong size on HealthBar6_Animated_C_ProcessPlayerStatusChange");
static_assert(offsetof(HealthBar6_Animated_C_ProcessPlayerStatusChange, NewStatus) == 0x000000, "Member 'HealthBar6_Animated_C_ProcessPlayerStatusChange::NewStatus' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessPlayerStatusChange, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'HealthBar6_Animated_C_ProcessPlayerStatusChange::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessPlayerStatusChange, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'HealthBar6_Animated_C_ProcessPlayerStatusChange::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessPlayerStatusChange, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'HealthBar6_Animated_C_ProcessPlayerStatusChange::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessPlayerStatusChange, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000004, "Member 'HealthBar6_Animated_C_ProcessPlayerStatusChange::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessPlayerStatusChange, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000005, "Member 'HealthBar6_Animated_C_ProcessPlayerStatusChange::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessPlayerStatusChange, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'HealthBar6_Animated_C_ProcessPlayerStatusChange::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessPlayerStatusChange, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'HealthBar6_Animated_C_ProcessPlayerStatusChange::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessPlayerStatusChange, CallFunc_BooleanOR_ReturnValue_2) == 0x000008, "Member 'HealthBar6_Animated_C_ProcessPlayerStatusChange::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.InitHealthBars
// 0x0128 (0x0128 - 0x0000)
struct HealthBar6_Animated_C_InitHealthBars final
{
public:
	bool                                          AnimateShow;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FCB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfBars;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerBarState                               Temp_byte_Variable_1;                              // 0x000A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerBarState                               Temp_byte_Variable_2;                              // 0x000B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerBarState                               Temp_byte_Variable_3;                              // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FCC[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FCD[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URBSettings_Gameplay*                   CallFunc_GetRBSettings_Gameplay_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              CallFunc_GetWatchedPlayer_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FCE[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FCF[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD0[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD1[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetWatchedPlayer_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD2[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetMaxHealth_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD3[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD4[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Map_Find_Value;                           // 0x0088(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD5[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Map_Find_Value_1;                         // 0x00B8(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD6[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_Map_Find_Value_2;                         // 0x00E8(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD7[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHudBarElement_Animated_C*>      K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(HealthBar6_Animated_C_InitHealthBars) == 0x000008, "Wrong alignment on HealthBar6_Animated_C_InitHealthBars");
static_assert(sizeof(HealthBar6_Animated_C_InitHealthBars) == 0x000128, "Wrong size on HealthBar6_Animated_C_InitHealthBars");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, AnimateShow) == 0x000000, "Member 'HealthBar6_Animated_C_InitHealthBars::AnimateShow' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, NumberOfBars) == 0x000004, "Member 'HealthBar6_Animated_C_InitHealthBars::NumberOfBars' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, Temp_byte_Variable) == 0x000008, "Member 'HealthBar6_Animated_C_InitHealthBars::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, Temp_byte_Variable_1) == 0x00000A, "Member 'HealthBar6_Animated_C_InitHealthBars::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, Temp_byte_Variable_2) == 0x00000B, "Member 'HealthBar6_Animated_C_InitHealthBars::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, Temp_byte_Variable_3) == 0x00000C, "Member 'HealthBar6_Animated_C_InitHealthBars::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, Temp_bool_Variable) == 0x00000D, "Member 'HealthBar6_Animated_C_InitHealthBars::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'HealthBar6_Animated_C_InitHealthBars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, Temp_int_Array_Index_Variable) == 0x000018, "Member 'HealthBar6_Animated_C_InitHealthBars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, Temp_byte_Variable_4) == 0x00001C, "Member 'HealthBar6_Animated_C_InitHealthBars::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00001D, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_GetRBSettings_Gameplay_ReturnValue) == 0x000020, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_GetRBSettings_Gameplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_GetWatchedPlayer_ReturnValue) == 0x000028, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_GetWatchedPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, Temp_int_Variable) == 0x000030, "Member 'HealthBar6_Animated_C_InitHealthBars::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Array_Get_Item) == 0x000038, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000041, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, K2Node_Select_Default) == 0x000042, "Member 'HealthBar6_Animated_C_InitHealthBars::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Array_RemoveItem_ReturnValue) == 0x000050, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_GetWatchedPlayer_ReturnValue_1) == 0x000060, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_GetWatchedPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_BP_GetMaxHealth_ReturnValue) == 0x00006C, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_BP_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000078, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_FCeil_ReturnValue) == 0x000080, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Map_Find_Value) == 0x000088, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Map_Find_Value_1) == 0x0000B8, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Map_Find_ReturnValue_1) == 0x0000E0, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Map_Find_Value_2) == 0x0000E8, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, CallFunc_Map_Find_ReturnValue_2) == 0x000110, "Member 'HealthBar6_Animated_C_InitHealthBars::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_InitHealthBars, K2Node_MakeArray_Array) == 0x000118, "Member 'HealthBar6_Animated_C_InitHealthBars::K2Node_MakeArray_Array' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.UpdateFifthBarVisibility
// 0x0018 (0x0018 - 0x0000)
struct HealthBar6_Animated_C_UpdateFifthBarVisibility final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AnimateShow;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HealthBar6_Animated_C_UpdateFifthBarVisibility) == 0x000008, "Wrong alignment on HealthBar6_Animated_C_UpdateFifthBarVisibility");
static_assert(sizeof(HealthBar6_Animated_C_UpdateFifthBarVisibility) == 0x000018, "Wrong size on HealthBar6_Animated_C_UpdateFifthBarVisibility");
static_assert(offsetof(HealthBar6_Animated_C_UpdateFifthBarVisibility, Show) == 0x000000, "Member 'HealthBar6_Animated_C_UpdateFifthBarVisibility::Show' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_UpdateFifthBarVisibility, AnimateShow) == 0x000001, "Member 'HealthBar6_Animated_C_UpdateFifthBarVisibility::AnimateShow' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_UpdateFifthBarVisibility, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'HealthBar6_Animated_C_UpdateFifthBarVisibility::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_UpdateFifthBarVisibility, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'HealthBar6_Animated_C_UpdateFifthBarVisibility::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.UpdateBracketValues
// 0x0020 (0x0020 - 0x0000)
struct HealthBar6_Animated_C_UpdateBracketValues final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHudBarElement_Animated_C*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HealthBar6_Animated_C_UpdateBracketValues) == 0x000008, "Wrong alignment on HealthBar6_Animated_C_UpdateBracketValues");
static_assert(sizeof(HealthBar6_Animated_C_UpdateBracketValues) == 0x000020, "Wrong size on HealthBar6_Animated_C_UpdateBracketValues");
static_assert(offsetof(HealthBar6_Animated_C_UpdateBracketValues, Temp_int_Array_Index_Variable) == 0x000000, "Member 'HealthBar6_Animated_C_UpdateBracketValues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_UpdateBracketValues, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'HealthBar6_Animated_C_UpdateBracketValues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_UpdateBracketValues, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'HealthBar6_Animated_C_UpdateBracketValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_UpdateBracketValues, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'HealthBar6_Animated_C_UpdateBracketValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_UpdateBracketValues, CallFunc_Array_Get_Item) == 0x000010, "Member 'HealthBar6_Animated_C_UpdateBracketValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_UpdateBracketValues, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'HealthBar6_Animated_C_UpdateBracketValues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.ProcessBleedingChangedEvent
// 0x000C (0x000C - 0x0000)
struct HealthBar6_Animated_C_ProcessBleedingChangedEvent final
{
public:
	float                                         NewBleedingLeft;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthValue;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HealthBar6_Animated_C_ProcessBleedingChangedEvent) == 0x000004, "Wrong alignment on HealthBar6_Animated_C_ProcessBleedingChangedEvent");
static_assert(sizeof(HealthBar6_Animated_C_ProcessBleedingChangedEvent) == 0x00000C, "Wrong size on HealthBar6_Animated_C_ProcessBleedingChangedEvent");
static_assert(offsetof(HealthBar6_Animated_C_ProcessBleedingChangedEvent, NewBleedingLeft) == 0x000000, "Member 'HealthBar6_Animated_C_ProcessBleedingChangedEvent::NewBleedingLeft' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessBleedingChangedEvent, HealthValue) == 0x000004, "Member 'HealthBar6_Animated_C_ProcessBleedingChangedEvent::HealthValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ProcessBleedingChangedEvent, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'HealthBar6_Animated_C_ProcessBleedingChangedEvent::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function HealthBar6_Animated.HealthBar6_Animated_C.ShouldShow
// 0x0050 (0x0050 - 0x0000)
struct HealthBar6_Animated_C_ShouldShow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameUserPreferences*                 CallFunc_GetRBGameUserPreferences_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGameUserPreferences*                 CallFunc_GetRBGameUserPreferences_ReturnValue_1;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHealthDisplay_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHealthDisplay_ReturnValue_1;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FDA[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameState*                           CallFunc_GetRBGameState_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FDB[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetWatchedPlayer_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBleeding_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FDC[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetMaxHealth_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HealthBar6_Animated_C_ShouldShow) == 0x000008, "Wrong alignment on HealthBar6_Animated_C_ShouldShow");
static_assert(sizeof(HealthBar6_Animated_C_ShouldShow) == 0x000050, "Wrong size on HealthBar6_Animated_C_ShouldShow");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, ReturnValue) == 0x000000, "Member 'HealthBar6_Animated_C_ShouldShow::ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_GetRBGameUserPreferences_ReturnValue) == 0x000008, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_GetRBGameUserPreferences_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_GetRBGameUserPreferences_ReturnValue_1) == 0x000010, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_GetRBGameUserPreferences_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_GetHealthDisplay_ReturnValue) == 0x000018, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_GetHealthDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_GetHealthDisplay_ReturnValue_1) == 0x00001C, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_GetHealthDisplay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000021, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_GetRBGameState_ReturnValue) == 0x000028, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_GetRBGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_GetWatchedPlayer_ReturnValue) == 0x000038, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_GetWatchedPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_IsBleeding_ReturnValue) == 0x000041, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_IsBleeding_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_BP_GetMaxHealth_ReturnValue) == 0x000044, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_BP_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_Less_FloatFloat_ReturnValue) == 0x000048, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HealthBar6_Animated_C_ShouldShow, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'HealthBar6_Animated_C_ShouldShow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

