#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function OptionsEntry.OptionsEntry_C.ExecuteUbergraph_OptionsEntry
// 0x00A0 (0x00A0 - 0x0000)
struct OptionsEntry_C_ExecuteUbergraph_OptionsEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0008(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_value;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSliderNormalised_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSliderMin_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderMax_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStepSize_ReturnValue;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0090(0x0008)(NoDestructor)
	float                                         CallFunc_GridSnap_Float_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry) == 0x000008, "Wrong alignment on OptionsEntry_C_ExecuteUbergraph_OptionsEntry");
static_assert(sizeof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry) == 0x0000A0, "Wrong size on OptionsEntry_C_ExecuteUbergraph_OptionsEntry");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, EntryPoint) == 0x000000, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, K2Node_ComponentBoundEvent_Text) == 0x000008, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, K2Node_ComponentBoundEvent_CommitMethod) == 0x000020, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_IsNumeric_ReturnValue) == 0x000038, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_Conv_StringToFloat_ReturnValue) == 0x00003C, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, K2Node_ComponentBoundEvent_value) == 0x000040, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::K2Node_ComponentBoundEvent_value' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_IsSliderNormalised_ReturnValue) == 0x000044, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_IsSliderNormalised_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_GetSliderMin_ReturnValue) == 0x000048, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_GetSliderMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_GetSliderMax_ReturnValue) == 0x00004C, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_GetSliderMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_SelectFloat_ReturnValue_1) == 0x000054, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_Less_FloatFloat_ReturnValue) == 0x000059, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_GetValue_ReturnValue) == 0x00005C, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000068, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000070, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000080, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_IsValid_ReturnValue_2) == 0x000088, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_GetStepSize_ReturnValue) == 0x00008C, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_GetStepSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, K2Node_Event_InFocusEvent) == 0x000090, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ExecuteUbergraph_OptionsEntry, CallFunc_GridSnap_Float_ReturnValue) == 0x000098, "Member 'OptionsEntry_C_ExecuteUbergraph_OptionsEntry::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct OptionsEntry_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(OptionsEntry_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on OptionsEntry_C_OnRemovedFromFocusPath");
static_assert(sizeof(OptionsEntry_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on OptionsEntry_C_OnRemovedFromFocusPath");
static_assert(offsetof(OptionsEntry_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'OptionsEntry_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct OptionsEntry_C_BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on OptionsEntry_C_BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsEntry_C_BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on OptionsEntry_C_BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsEntry_C_BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'OptionsEntry_C_BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct OptionsEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsEntry_C_PreConstruct) == 0x000001, "Wrong alignment on OptionsEntry_C_PreConstruct");
static_assert(sizeof(OptionsEntry_C_PreConstruct) == 0x000001, "Wrong size on OptionsEntry_C_PreConstruct");
static_assert(offsetof(OptionsEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'OptionsEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.SetValue
// 0x0018 (0x0018 - 0x0000)
struct OptionsEntry_C_SetValue final
{
public:
	class FText                                   OptionValue_0;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(OptionsEntry_C_SetValue) == 0x000008, "Wrong alignment on OptionsEntry_C_SetValue");
static_assert(sizeof(OptionsEntry_C_SetValue) == 0x000018, "Wrong size on OptionsEntry_C_SetValue");
static_assert(offsetof(OptionsEntry_C_SetValue, OptionValue_0) == 0x000000, "Member 'OptionsEntry_C_SetValue::OptionValue_0' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.Set Button Type
// 0x0048 (0x0048 - 0x0000)
struct OptionsEntry_C_Set_Button_Type final
{
public:
	bool                                          IsSubEntry;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _Optionnal_SubEntryTitle;                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsSlider_0;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStepSize_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSliderNormalised_ReturnValue;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSliderMax_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderMin_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_Set_Button_Type) == 0x000008, "Wrong alignment on OptionsEntry_C_Set_Button_Type");
static_assert(sizeof(OptionsEntry_C_Set_Button_Type) == 0x000048, "Wrong size on OptionsEntry_C_Set_Button_Type");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, IsSubEntry) == 0x000000, "Member 'OptionsEntry_C_Set_Button_Type::IsSubEntry' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, _Optionnal_SubEntryTitle) == 0x000008, "Member 'OptionsEntry_C_Set_Button_Type::_Optionnal_SubEntryTitle' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, IsSlider_0) == 0x000020, "Member 'OptionsEntry_C_Set_Button_Type::IsSlider_0' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, Temp_byte_Variable) == 0x000021, "Member 'OptionsEntry_C_Set_Button_Type::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'OptionsEntry_C_Set_Button_Type::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'OptionsEntry_C_Set_Button_Type::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, CallFunc_Not_PreBool_ReturnValue_1) == 0x000024, "Member 'OptionsEntry_C_Set_Button_Type::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, Temp_byte_Variable_1) == 0x000025, "Member 'OptionsEntry_C_Set_Button_Type::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, CallFunc_BooleanAND_ReturnValue_1) == 0x000026, "Member 'OptionsEntry_C_Set_Button_Type::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, CallFunc_BooleanAND_ReturnValue_2) == 0x000027, "Member 'OptionsEntry_C_Set_Button_Type::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, Temp_bool_Variable) == 0x000028, "Member 'OptionsEntry_C_Set_Button_Type::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, Temp_byte_Variable_2) == 0x000029, "Member 'OptionsEntry_C_Set_Button_Type::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, Temp_byte_Variable_3) == 0x00002A, "Member 'OptionsEntry_C_Set_Button_Type::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, Temp_bool_Variable_1) == 0x00002B, "Member 'OptionsEntry_C_Set_Button_Type::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, K2Node_Select_Default) == 0x00002C, "Member 'OptionsEntry_C_Set_Button_Type::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, Temp_byte_Variable_4) == 0x00002D, "Member 'OptionsEntry_C_Set_Button_Type::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, Temp_byte_Variable_5) == 0x00002E, "Member 'OptionsEntry_C_Set_Button_Type::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, CallFunc_GetStepSize_ReturnValue) == 0x000030, "Member 'OptionsEntry_C_Set_Button_Type::CallFunc_GetStepSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, K2Node_Select_Default_1) == 0x000034, "Member 'OptionsEntry_C_Set_Button_Type::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, CallFunc_IsSliderNormalised_ReturnValue) == 0x000035, "Member 'OptionsEntry_C_Set_Button_Type::CallFunc_IsSliderNormalised_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, CallFunc_GetSliderMax_ReturnValue) == 0x000038, "Member 'OptionsEntry_C_Set_Button_Type::CallFunc_GetSliderMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, CallFunc_GetSliderMin_ReturnValue) == 0x00003C, "Member 'OptionsEntry_C_Set_Button_Type::CallFunc_GetSliderMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, Temp_bool_Variable_2) == 0x000040, "Member 'OptionsEntry_C_Set_Button_Type::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Set_Button_Type, K2Node_Select_Default_2) == 0x000041, "Member 'OptionsEntry_C_Set_Button_Type::K2Node_Select_Default_2' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.SetSliderButton
// 0x0009 (0x0009 - 0x0000)
struct OptionsEntry_C_SetSliderButton final
{
public:
	bool                                          IsSliderEntry;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_SetSliderButton) == 0x000001, "Wrong alignment on OptionsEntry_C_SetSliderButton");
static_assert(sizeof(OptionsEntry_C_SetSliderButton) == 0x000009, "Wrong size on OptionsEntry_C_SetSliderButton");
static_assert(offsetof(OptionsEntry_C_SetSliderButton, IsSliderEntry) == 0x000000, "Member 'OptionsEntry_C_SetSliderButton::IsSliderEntry' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_SetSliderButton, Temp_bool_Variable) == 0x000001, "Member 'OptionsEntry_C_SetSliderButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_SetSliderButton, Temp_byte_Variable) == 0x000002, "Member 'OptionsEntry_C_SetSliderButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_SetSliderButton, Temp_byte_Variable_1) == 0x000003, "Member 'OptionsEntry_C_SetSliderButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_SetSliderButton, Temp_bool_Variable_1) == 0x000004, "Member 'OptionsEntry_C_SetSliderButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_SetSliderButton, K2Node_Select_Default) == 0x000005, "Member 'OptionsEntry_C_SetSliderButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_SetSliderButton, Temp_byte_Variable_2) == 0x000006, "Member 'OptionsEntry_C_SetSliderButton::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_SetSliderButton, Temp_byte_Variable_3) == 0x000007, "Member 'OptionsEntry_C_SetSliderButton::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_SetSliderButton, K2Node_Select_Default_1) == 0x000008, "Member 'OptionsEntry_C_SetSliderButton::K2Node_Select_Default_1' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.HighlightEntry
// 0x0001 (0x0001 - 0x0000)
struct OptionsEntry_C_HighlightEntry final
{
public:
	bool                                          CallFunc_CanBeEdited_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsEntry_C_HighlightEntry) == 0x000001, "Wrong alignment on OptionsEntry_C_HighlightEntry");
static_assert(sizeof(OptionsEntry_C_HighlightEntry) == 0x000001, "Wrong size on OptionsEntry_C_HighlightEntry");
static_assert(offsetof(OptionsEntry_C_HighlightEntry, CallFunc_CanBeEdited_ReturnValue) == 0x000000, "Member 'OptionsEntry_C_HighlightEntry::CallFunc_CanBeEdited_ReturnValue' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.Event_UpdateSliderValue
// 0x00B0 (0x00B0 - 0x0000)
struct OptionsEntry_C_Event_UpdateSliderValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextOverride;                                      // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetStepSize_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSliderNormalised_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSliderMax_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderMin_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0040(0x0018)()
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	float                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0080(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0098(0x0018)()
};
static_assert(alignof(OptionsEntry_C_Event_UpdateSliderValue) == 0x000008, "Wrong alignment on OptionsEntry_C_Event_UpdateSliderValue");
static_assert(sizeof(OptionsEntry_C_Event_UpdateSliderValue) == 0x0000B0, "Wrong size on OptionsEntry_C_Event_UpdateSliderValue");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, Value) == 0x000000, "Member 'OptionsEntry_C_Event_UpdateSliderValue::Value' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, TextOverride) == 0x000008, "Member 'OptionsEntry_C_Event_UpdateSliderValue::TextOverride' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, Temp_bool_Variable) == 0x000020, "Member 'OptionsEntry_C_Event_UpdateSliderValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_TextIsEmpty_ReturnValue) == 0x000021, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, Temp_bool_Variable_1) == 0x000022, "Member 'OptionsEntry_C_Event_UpdateSliderValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, Temp_bool_Variable_2) == 0x000023, "Member 'OptionsEntry_C_Event_UpdateSliderValue::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_GetStepSize_ReturnValue) == 0x000024, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_GetStepSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_IsSliderNormalised_ReturnValue) == 0x000029, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_IsSliderNormalised_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_GetSliderMax_ReturnValue) == 0x00002C, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_GetSliderMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_GetSliderMin_ReturnValue) == 0x000030, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_GetSliderMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_SelectFloat_ReturnValue) == 0x000034, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_SelectFloat_ReturnValue_1) == 0x000038, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_FClamp_ReturnValue) == 0x00003C, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_Conv_FloatToText_ReturnValue) == 0x000040, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_Round_ReturnValue) == 0x000058, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00005C, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'OptionsEntry_C_Event_UpdateSliderValue::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, K2Node_Select_Default) == 0x000078, "Member 'OptionsEntry_C_Event_UpdateSliderValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, K2Node_Select_Default_1) == 0x000080, "Member 'OptionsEntry_C_Event_UpdateSliderValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_Event_UpdateSliderValue, K2Node_Select_Default_2) == 0x000098, "Member 'OptionsEntry_C_Event_UpdateSliderValue::K2Node_Select_Default_2' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.Event_UpdateTextValue
// 0x0018 (0x0018 - 0x0000)
struct OptionsEntry_C_Event_UpdateTextValue final
{
public:
	class FText                                   NewValue;                                          // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OptionsEntry_C_Event_UpdateTextValue) == 0x000008, "Wrong alignment on OptionsEntry_C_Event_UpdateTextValue");
static_assert(sizeof(OptionsEntry_C_Event_UpdateTextValue) == 0x000018, "Wrong size on OptionsEntry_C_Event_UpdateTextValue");
static_assert(offsetof(OptionsEntry_C_Event_UpdateTextValue, NewValue) == 0x000000, "Member 'OptionsEntry_C_Event_UpdateTextValue::NewValue' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.UpdateValueFont
// 0x0098 (0x0098 - 0x0000)
struct OptionsEntry_C_UpdateValueFont final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0040(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_UpdateValueFont) == 0x000008, "Wrong alignment on OptionsEntry_C_UpdateValueFont");
static_assert(sizeof(OptionsEntry_C_UpdateValueFont) == 0x000098, "Wrong size on OptionsEntry_C_UpdateValueFont");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, Temp_bool_Variable) == 0x000000, "Member 'OptionsEntry_C_UpdateValueFont::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, Temp_object_Variable) == 0x000008, "Member 'OptionsEntry_C_UpdateValueFont::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, Temp_bool_Variable_1) == 0x000010, "Member 'OptionsEntry_C_UpdateValueFont::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, Temp_object_Variable_1) == 0x000018, "Member 'OptionsEntry_C_UpdateValueFont::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, Temp_object_Variable_2) == 0x000020, "Member 'OptionsEntry_C_UpdateValueFont::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'OptionsEntry_C_UpdateValueFont::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000029, "Member 'OptionsEntry_C_UpdateValueFont::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00002A, "Member 'OptionsEntry_C_UpdateValueFont::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, K2Node_Select_Default) == 0x000030, "Member 'OptionsEntry_C_UpdateValueFont::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, K2Node_Select_Default_1) == 0x000038, "Member 'OptionsEntry_C_UpdateValueFont::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_UpdateValueFont, K2Node_MakeStruct_SlateFontInfo) == 0x000040, "Member 'OptionsEntry_C_UpdateValueFont::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.UpdateSliderBar
// 0x0004 (0x0004 - 0x0000)
struct OptionsEntry_C_UpdateSliderBar final
{
public:
	float                                         CallFunc_GetNormalizedValue_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_UpdateSliderBar) == 0x000004, "Wrong alignment on OptionsEntry_C_UpdateSliderBar");
static_assert(sizeof(OptionsEntry_C_UpdateSliderBar) == 0x000004, "Wrong size on OptionsEntry_C_UpdateSliderBar");
static_assert(offsetof(OptionsEntry_C_UpdateSliderBar, CallFunc_GetNormalizedValue_ReturnValue) == 0x000000, "Member 'OptionsEntry_C_UpdateSliderBar::CallFunc_GetNormalizedValue_ReturnValue' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.RefreshEntry
// 0x00B8 (0x00B8 - 0x0000)
struct OptionsEntry_C_RefreshEntry final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0060(0x0018)()
	bool                                          CallFunc_IsSlider_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0080(0x0018)(ConstParm)
	bool                                          CallFunc_IsSubButton_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatTextForDecorator_ReturnValue;       // 0x00A0(0x0018)()
};
static_assert(alignof(OptionsEntry_C_RefreshEntry) == 0x000008, "Wrong alignment on OptionsEntry_C_RefreshEntry");
static_assert(sizeof(OptionsEntry_C_RefreshEntry) == 0x0000B8, "Wrong size on OptionsEntry_C_RefreshEntry");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, Temp_bool_Variable) == 0x000000, "Member 'OptionsEntry_C_RefreshEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, Temp_text_Variable) == 0x000008, "Member 'OptionsEntry_C_RefreshEntry::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, Temp_bool_Variable_1) == 0x000020, "Member 'OptionsEntry_C_RefreshEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, Temp_text_Variable_1) == 0x000028, "Member 'OptionsEntry_C_RefreshEntry::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, Temp_bool_Variable_2) == 0x000040, "Member 'OptionsEntry_C_RefreshEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, CallFunc_IsConsole_ReturnValue) == 0x000041, "Member 'OptionsEntry_C_RefreshEntry::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'OptionsEntry_C_RefreshEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000043, "Member 'OptionsEntry_C_RefreshEntry::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000044, "Member 'OptionsEntry_C_RefreshEntry::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, K2Node_Select_Default) == 0x000048, "Member 'OptionsEntry_C_RefreshEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, K2Node_Select_Default_1) == 0x000060, "Member 'OptionsEntry_C_RefreshEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, CallFunc_IsSlider_ReturnValue) == 0x000078, "Member 'OptionsEntry_C_RefreshEntry::CallFunc_IsSlider_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, K2Node_Select_Default_2) == 0x000080, "Member 'OptionsEntry_C_RefreshEntry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, CallFunc_IsSubButton_ReturnValue) == 0x000098, "Member 'OptionsEntry_C_RefreshEntry::CallFunc_IsSubButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshEntry, CallFunc_FormatTextForDecorator_ReturnValue) == 0x0000A0, "Member 'OptionsEntry_C_RefreshEntry::CallFunc_FormatTextForDecorator_ReturnValue' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.RefreshCounter
// 0x0004 (0x0004 - 0x0000)
struct OptionsEntry_C_RefreshCounter final
{
public:
	int32                                         CallFunc_GetCurrentIndexOfOption_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_RefreshCounter) == 0x000004, "Wrong alignment on OptionsEntry_C_RefreshCounter");
static_assert(sizeof(OptionsEntry_C_RefreshCounter) == 0x000004, "Wrong size on OptionsEntry_C_RefreshCounter");
static_assert(offsetof(OptionsEntry_C_RefreshCounter, CallFunc_GetCurrentIndexOfOption_ReturnValue) == 0x000000, "Member 'OptionsEntry_C_RefreshCounter::CallFunc_GetCurrentIndexOfOption_ReturnValue' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.ColorChangedEntries
// 0x0060 (0x0060 - 0x0000)
struct OptionsEntry_C_ColorChangedEntries final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0038(0x0028)()
};
static_assert(alignof(OptionsEntry_C_ColorChangedEntries) == 0x000008, "Wrong alignment on OptionsEntry_C_ColorChangedEntries");
static_assert(sizeof(OptionsEntry_C_ColorChangedEntries) == 0x000060, "Wrong size on OptionsEntry_C_ColorChangedEntries");
static_assert(offsetof(OptionsEntry_C_ColorChangedEntries, Temp_bool_Variable) == 0x000000, "Member 'OptionsEntry_C_ColorChangedEntries::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ColorChangedEntries, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000008, "Member 'OptionsEntry_C_ColorChangedEntries::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ColorChangedEntries, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'OptionsEntry_C_ColorChangedEntries::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_ColorChangedEntries, K2Node_Select_Default) == 0x000038, "Member 'OptionsEntry_C_ColorChangedEntries::K2Node_Select_Default' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.RefreshDisplay
// 0x0005 (0x0005 - 0x0000)
struct OptionsEntry_C_RefreshDisplay final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeDisplayed_ReturnValue;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_RefreshDisplay) == 0x000001, "Wrong alignment on OptionsEntry_C_RefreshDisplay");
static_assert(sizeof(OptionsEntry_C_RefreshDisplay) == 0x000005, "Wrong size on OptionsEntry_C_RefreshDisplay");
static_assert(offsetof(OptionsEntry_C_RefreshDisplay, Temp_bool_Variable) == 0x000000, "Member 'OptionsEntry_C_RefreshDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshDisplay, Temp_byte_Variable) == 0x000001, "Member 'OptionsEntry_C_RefreshDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshDisplay, Temp_byte_Variable_1) == 0x000002, "Member 'OptionsEntry_C_RefreshDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshDisplay, CallFunc_CanBeDisplayed_ReturnValue) == 0x000003, "Member 'OptionsEntry_C_RefreshDisplay::CallFunc_CanBeDisplayed_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_RefreshDisplay, K2Node_Select_Default) == 0x000004, "Member 'OptionsEntry_C_RefreshDisplay::K2Node_Select_Default' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.UpdateEnableStatus
// 0x0001 (0x0001 - 0x0000)
struct OptionsEntry_C_UpdateEnableStatus final
{
public:
	bool                                          CallFunc_CanBeEdited_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsEntry_C_UpdateEnableStatus) == 0x000001, "Wrong alignment on OptionsEntry_C_UpdateEnableStatus");
static_assert(sizeof(OptionsEntry_C_UpdateEnableStatus) == 0x000001, "Wrong size on OptionsEntry_C_UpdateEnableStatus");
static_assert(offsetof(OptionsEntry_C_UpdateEnableStatus, CallFunc_CanBeEdited_ReturnValue) == 0x000000, "Member 'OptionsEntry_C_UpdateEnableStatus::CallFunc_CanBeEdited_ReturnValue' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.SetupCounter
// 0x0004 (0x0004 - 0x0000)
struct OptionsEntry_C_SetupCounter final
{
public:
	int32                                         CallFunc_GetMaxCountForOption_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_SetupCounter) == 0x000004, "Wrong alignment on OptionsEntry_C_SetupCounter");
static_assert(sizeof(OptionsEntry_C_SetupCounter) == 0x000004, "Wrong size on OptionsEntry_C_SetupCounter");
static_assert(offsetof(OptionsEntry_C_SetupCounter, CallFunc_GetMaxCountForOption_ReturnValue) == 0x000000, "Member 'OptionsEntry_C_SetupCounter::CallFunc_GetMaxCountForOption_ReturnValue' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.GetArrowBtn
// 0x0038 (0x0038 - 0x0000)
struct OptionsEntry_C_GetArrowBtn final
{
public:
	bool                                          Left;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowButton_C*                         ArrowButton;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowButton_C*                         K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlider_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowButton_C*                         K2Node_Select_Default_1;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UArrowButton_C*                         K2Node_Select_Default_2;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_GetArrowBtn) == 0x000008, "Wrong alignment on OptionsEntry_C_GetArrowBtn");
static_assert(sizeof(OptionsEntry_C_GetArrowBtn) == 0x000038, "Wrong size on OptionsEntry_C_GetArrowBtn");
static_assert(offsetof(OptionsEntry_C_GetArrowBtn, Left) == 0x000000, "Member 'OptionsEntry_C_GetArrowBtn::Left' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_GetArrowBtn, ArrowButton) == 0x000008, "Member 'OptionsEntry_C_GetArrowBtn::ArrowButton' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_GetArrowBtn, Temp_bool_Variable) == 0x000010, "Member 'OptionsEntry_C_GetArrowBtn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_GetArrowBtn, Temp_bool_Variable_1) == 0x000011, "Member 'OptionsEntry_C_GetArrowBtn::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_GetArrowBtn, Temp_bool_Variable_2) == 0x000012, "Member 'OptionsEntry_C_GetArrowBtn::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_GetArrowBtn, K2Node_Select_Default) == 0x000018, "Member 'OptionsEntry_C_GetArrowBtn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_GetArrowBtn, CallFunc_IsSlider_ReturnValue) == 0x000020, "Member 'OptionsEntry_C_GetArrowBtn::CallFunc_IsSlider_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_GetArrowBtn, K2Node_Select_Default_1) == 0x000028, "Member 'OptionsEntry_C_GetArrowBtn::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_GetArrowBtn, K2Node_Select_Default_2) == 0x000030, "Member 'OptionsEntry_C_GetArrowBtn::K2Node_Select_Default_2' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.HandleSliderOnInput
// 0x0028 (0x0028 - 0x0000)
struct OptionsEntry_C_HandleSliderOnInput final
{
public:
	bool                                          bLeftPressed;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TimeBasedMultiplier;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStepSize_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsEntry_C_HandleSliderOnInput) == 0x000004, "Wrong alignment on OptionsEntry_C_HandleSliderOnInput");
static_assert(sizeof(OptionsEntry_C_HandleSliderOnInput) == 0x000028, "Wrong size on OptionsEntry_C_HandleSliderOnInput");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, bLeftPressed) == 0x000000, "Member 'OptionsEntry_C_HandleSliderOnInput::bLeftPressed' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, TimeBasedMultiplier) == 0x000004, "Member 'OptionsEntry_C_HandleSliderOnInput::TimeBasedMultiplier' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, Temp_bool_Variable) == 0x000008, "Member 'OptionsEntry_C_HandleSliderOnInput::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, CallFunc_GetStepSize_ReturnValue) == 0x00000C, "Member 'OptionsEntry_C_HandleSliderOnInput::CallFunc_GetStepSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, CallFunc_GetValue_ReturnValue) == 0x000010, "Member 'OptionsEntry_C_HandleSliderOnInput::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000014, "Member 'OptionsEntry_C_HandleSliderOnInput::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, K2Node_Select_Default) == 0x000018, "Member 'OptionsEntry_C_HandleSliderOnInput::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x00001C, "Member 'OptionsEntry_C_HandleSliderOnInput::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'OptionsEntry_C_HandleSliderOnInput::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_HandleSliderOnInput, CallFunc_GridSnap_Float_ReturnValue) == 0x000024, "Member 'OptionsEntry_C_HandleSliderOnInput::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");

// Function OptionsEntry.OptionsEntry_C.OnFocusReceived
// 0x0220 (0x0220 - 0x0000)
struct OptionsEntry_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00F8(0x0018)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlider_ReturnValue;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0120(0x0018)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0140(0x0018)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSubButton_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(OptionsEntry_C_OnFocusReceived) == 0x000008, "Wrong alignment on OptionsEntry_C_OnFocusReceived");
static_assert(sizeof(OptionsEntry_C_OnFocusReceived) == 0x000220, "Wrong size on OptionsEntry_C_OnFocusReceived");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'OptionsEntry_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'OptionsEntry_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'OptionsEntry_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, CallFunc_MakeLiteralText_ReturnValue) == 0x0000F8, "Member 'OptionsEntry_C_OnFocusReceived::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, CallFunc_MakeLiteralName_ReturnValue) == 0x000110, "Member 'OptionsEntry_C_OnFocusReceived::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, CallFunc_IsSlider_ReturnValue) == 0x000118, "Member 'OptionsEntry_C_OnFocusReceived::CallFunc_IsSlider_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000120, "Member 'OptionsEntry_C_OnFocusReceived::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000138, "Member 'OptionsEntry_C_OnFocusReceived::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000140, "Member 'OptionsEntry_C_OnFocusReceived::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000158, "Member 'OptionsEntry_C_OnFocusReceived::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, CallFunc_IsSubButton_ReturnValue) == 0x000160, "Member 'OptionsEntry_C_OnFocusReceived::CallFunc_IsSubButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsEntry_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'OptionsEntry_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

