#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CeilingFanMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "RBStationnaryActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CeilingFan-01_BP.CeilingFan-01_BP_C
// 0x0028 (0x0280 - 0x0258)
class ACeilingFanMinus01_BP_C final : public ARBStationnaryActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBSoundComponent*                      RBSound;                                           // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CeilingFanBladesMinus01;                           // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CeilingFanBaseMinus01;                             // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RotateSpeed;                                       // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxAnimDistance;                                   // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_CeilingFanMinus01_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CeilingFan-01_BP_C">();
	}
	static class ACeilingFanMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACeilingFanMinus01_BP_C>();
	}
};
static_assert(alignof(ACeilingFanMinus01_BP_C) == 0x000008, "Wrong alignment on ACeilingFanMinus01_BP_C");
static_assert(sizeof(ACeilingFanMinus01_BP_C) == 0x000280, "Wrong size on ACeilingFanMinus01_BP_C");
static_assert(offsetof(ACeilingFanMinus01_BP_C, UberGraphFrame) == 0x000258, "Member 'ACeilingFanMinus01_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACeilingFanMinus01_BP_C, RBSound) == 0x000260, "Member 'ACeilingFanMinus01_BP_C::RBSound' has a wrong offset!");
static_assert(offsetof(ACeilingFanMinus01_BP_C, CeilingFanBladesMinus01) == 0x000268, "Member 'ACeilingFanMinus01_BP_C::CeilingFanBladesMinus01' has a wrong offset!");
static_assert(offsetof(ACeilingFanMinus01_BP_C, CeilingFanBaseMinus01) == 0x000270, "Member 'ACeilingFanMinus01_BP_C::CeilingFanBaseMinus01' has a wrong offset!");
static_assert(offsetof(ACeilingFanMinus01_BP_C, RotateSpeed) == 0x000278, "Member 'ACeilingFanMinus01_BP_C::RotateSpeed' has a wrong offset!");
static_assert(offsetof(ACeilingFanMinus01_BP_C, MaxAnimDistance) == 0x00027C, "Member 'ACeilingFanMinus01_BP_C::MaxAnimDistance' has a wrong offset!");

}

