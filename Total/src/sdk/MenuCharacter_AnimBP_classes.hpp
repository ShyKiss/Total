#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuCharacter_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "OPP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass MenuCharacter_AnimBP.MenuCharacter_AnimBP_C
// 0x07C0 (0x0A80 - 0x02C0)
class UMenuCharacter_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2CD8[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0370(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0398(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0418(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0448(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x04C8(0x00B8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0580(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0600(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0680(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0700(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0780(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0800(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0830(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x08B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x08E0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0960(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0990(0x00B0)()
	class AMenuCharacter_C*                       MenuCharacter;                                     // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECustomizationMenuCategory                    CurrentMenuCategory;                               // 0x0A48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0A49(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD9[0x2];                                     // 0x0A4A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendSpeed;                                        // 0x0A4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Posture;                                           // 0x0A50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GoToMark;                                          // 0x0A54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CDA[0x3];                                     // 0x0A55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ToMainPosition;                                    // 0x0A58(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ReachedMainPosition;                               // 0x0A68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ESocialMenuSceneActorSlot                     PlayerSlot;                                        // 0x0A78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_ImOut();
	void AnimNotify_GoingToNeutral();
	void ExecuteUbergraph_MenuCharacter_AnimBP(int32 EntryPoint);
	void ReachedMainPosition__DelegateSignature();
	void ToMainPosition__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuCharacter_AnimBP_C">();
	}
	static class UMenuCharacter_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuCharacter_AnimBP_C>();
	}
};
static_assert(alignof(UMenuCharacter_AnimBP_C) == 0x000010, "Wrong alignment on UMenuCharacter_AnimBP_C");
static_assert(sizeof(UMenuCharacter_AnimBP_C) == 0x000A80, "Wrong size on UMenuCharacter_AnimBP_C");
static_assert(offsetof(UMenuCharacter_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UMenuCharacter_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0002F8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000320, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000348, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000370, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x000398, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_3) == 0x000418, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x000448, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_BlendListByEnum) == 0x0004C8, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000580, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000600, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000680, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000700, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000780, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000800, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000830, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult_1) == 0x0008B0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0008E0, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateResult) == 0x000960, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, AnimGraphNode_StateMachine) == 0x000990, "Member 'UMenuCharacter_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, MenuCharacter) == 0x000A40, "Member 'UMenuCharacter_AnimBP_C::MenuCharacter' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, CurrentMenuCategory) == 0x000A48, "Member 'UMenuCharacter_AnimBP_C::CurrentMenuCategory' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, Active) == 0x000A49, "Member 'UMenuCharacter_AnimBP_C::Active' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, BlendSpeed) == 0x000A4C, "Member 'UMenuCharacter_AnimBP_C::BlendSpeed' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, Posture) == 0x000A50, "Member 'UMenuCharacter_AnimBP_C::Posture' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, GoToMark) == 0x000A54, "Member 'UMenuCharacter_AnimBP_C::GoToMark' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, ToMainPosition) == 0x000A58, "Member 'UMenuCharacter_AnimBP_C::ToMainPosition' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, ReachedMainPosition) == 0x000A68, "Member 'UMenuCharacter_AnimBP_C::ReachedMainPosition' has a wrong offset!");
static_assert(offsetof(UMenuCharacter_AnimBP_C, PlayerSlot) == 0x000A78, "Member 'UMenuCharacter_AnimBP_C::PlayerSlot' has a wrong offset!");

}

