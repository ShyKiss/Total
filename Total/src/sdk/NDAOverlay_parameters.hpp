#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NDAOverlay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function NDAOverlay.NDAOverlay_C.ExecuteUbergraph_NDAOverlay
// 0x01B0 (0x01B0 - 0x0000)
struct NDAOverlay_C_ExecuteUbergraph_NDAOverlay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNDAOverlayRow_C*                       CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNDAOverlayEntry_C*                     CallFunc_Create_ReturnValue_1;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0048(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00E0(0x0018)()
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0100(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x018C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x019C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay) == 0x000008, "Wrong alignment on NDAOverlay_C_ExecuteUbergraph_NDAOverlay");
static_assert(sizeof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay) == 0x0001B0, "Wrong size on NDAOverlay_C_ExecuteUbergraph_NDAOverlay");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, EntryPoint) == 0x000000, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::EntryPoint' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_Create_ReturnValue) == 0x000008, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_Create_ReturnValue_1) == 0x000010, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000018, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, Temp_int_Variable) == 0x000020, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, K2Node_Event_IsDesignTime) == 0x00002C, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000048, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000E0, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000F8, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, K2Node_MakeStruct_FormatArgumentData_2) == 0x000100, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, K2Node_MakeArray_Array) == 0x000140, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, Temp_int_Variable_1) == 0x000150, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_Format_ReturnValue) == 0x000158, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000170, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_Add_IntInt_ReturnValue_1) == 0x000174, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_RandomFloatInRange_ReturnValue) == 0x000178, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00017C, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000180, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000184, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x000188, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, K2Node_MakeStruct_Margin) == 0x00018C, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_ExecuteUbergraph_NDAOverlay, K2Node_MakeStruct_Margin_1) == 0x00019C, "Member 'NDAOverlay_C_ExecuteUbergraph_NDAOverlay::K2Node_MakeStruct_Margin_1' has a wrong offset!");

// Function NDAOverlay.NDAOverlay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct NDAOverlay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NDAOverlay_C_PreConstruct) == 0x000001, "Wrong alignment on NDAOverlay_C_PreConstruct");
static_assert(sizeof(NDAOverlay_C_PreConstruct) == 0x000001, "Wrong size on NDAOverlay_C_PreConstruct");
static_assert(offsetof(NDAOverlay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'NDAOverlay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function NDAOverlay.NDAOverlay_C.UpdateRegionAndPing
// 0x0060 (0x0060 - 0x0000)
struct NDAOverlay_C_UpdateRegionAndPing final
{
public:
	class ARBPlayerState*                         CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBGameStateBase*                       CallFunc_GetRBGameStateBase_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameSessionRegion_ReturnValue;         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0048(0x0018)()
};
static_assert(alignof(NDAOverlay_C_UpdateRegionAndPing) == 0x000008, "Wrong alignment on NDAOverlay_C_UpdateRegionAndPing");
static_assert(sizeof(NDAOverlay_C_UpdateRegionAndPing) == 0x000060, "Wrong size on NDAOverlay_C_UpdateRegionAndPing");
static_assert(offsetof(NDAOverlay_C_UpdateRegionAndPing, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000000, "Member 'NDAOverlay_C_UpdateRegionAndPing::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_UpdateRegionAndPing, CallFunc_GetRBGameStateBase_ReturnValue) == 0x000008, "Member 'NDAOverlay_C_UpdateRegionAndPing::CallFunc_GetRBGameStateBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_UpdateRegionAndPing, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'NDAOverlay_C_UpdateRegionAndPing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_UpdateRegionAndPing, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'NDAOverlay_C_UpdateRegionAndPing::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_UpdateRegionAndPing, CallFunc_GetGameSessionRegion_ReturnValue) == 0x000018, "Member 'NDAOverlay_C_UpdateRegionAndPing::CallFunc_GetGameSessionRegion_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_UpdateRegionAndPing, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'NDAOverlay_C_UpdateRegionAndPing::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_UpdateRegionAndPing, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000040, "Member 'NDAOverlay_C_UpdateRegionAndPing::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_UpdateRegionAndPing, CallFunc_Multiply_IntInt_ReturnValue) == 0x000044, "Member 'NDAOverlay_C_UpdateRegionAndPing::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NDAOverlay_C_UpdateRegionAndPing, CallFunc_Conv_IntToText_ReturnValue) == 0x000048, "Member 'NDAOverlay_C_UpdateRegionAndPing::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

