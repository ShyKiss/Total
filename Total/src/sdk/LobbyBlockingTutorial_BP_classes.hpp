#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LobbyBlockingTutorial_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LobbyBlockingTutorial_BP.LobbyBlockingTutorial_BP_C
// 0x0050 (0x0298 - 0x0248)
class ALobbyBlockingTutorial_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          TriggerZone;                                       // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   TutorialId;                                        // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWaitingToStart;                                   // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DC[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TutorialText;                                      // 0x0270(0x0018)(Edit, BlueprintVisible)
	class UAkAudioEvent*                          VoiceOver;                                         // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void IsOverlappingLocalPlayer(bool* bValue);
	void TriggerTutorial();
	void OnOverlapp(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void OnPlayerInitReplicated(class ARBPlayer* Player);
	void ExecuteUbergraph_LobbyBlockingTutorial_BP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LobbyBlockingTutorial_BP_C">();
	}
	static class ALobbyBlockingTutorial_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobbyBlockingTutorial_BP_C>();
	}
};
static_assert(alignof(ALobbyBlockingTutorial_BP_C) == 0x000008, "Wrong alignment on ALobbyBlockingTutorial_BP_C");
static_assert(sizeof(ALobbyBlockingTutorial_BP_C) == 0x000298, "Wrong size on ALobbyBlockingTutorial_BP_C");
static_assert(offsetof(ALobbyBlockingTutorial_BP_C, UberGraphFrame) == 0x000248, "Member 'ALobbyBlockingTutorial_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALobbyBlockingTutorial_BP_C, TriggerZone) == 0x000250, "Member 'ALobbyBlockingTutorial_BP_C::TriggerZone' has a wrong offset!");
static_assert(offsetof(ALobbyBlockingTutorial_BP_C, Root) == 0x000258, "Member 'ALobbyBlockingTutorial_BP_C::Root' has a wrong offset!");
static_assert(offsetof(ALobbyBlockingTutorial_BP_C, TutorialId) == 0x000260, "Member 'ALobbyBlockingTutorial_BP_C::TutorialId' has a wrong offset!");
static_assert(offsetof(ALobbyBlockingTutorial_BP_C, bWaitingToStart) == 0x000268, "Member 'ALobbyBlockingTutorial_BP_C::bWaitingToStart' has a wrong offset!");
static_assert(offsetof(ALobbyBlockingTutorial_BP_C, TutorialText) == 0x000270, "Member 'ALobbyBlockingTutorial_BP_C::TutorialText' has a wrong offset!");
static_assert(offsetof(ALobbyBlockingTutorial_BP_C, VoiceOver) == 0x000288, "Member 'ALobbyBlockingTutorial_BP_C::VoiceOver' has a wrong offset!");
static_assert(offsetof(ALobbyBlockingTutorial_BP_C, Duration) == 0x000290, "Member 'ALobbyBlockingTutorial_BP_C::Duration' has a wrong offset!");

}

