#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grunt_AnimBP

#include "Basic.hpp"

#include "Grunt_AnimBP_classes.hpp"
#include "Grunt_AnimBP_parameters.hpp"


namespace SDK
{

// Function grunt_AnimBP.grunt_AnimBP_C.RangedWeaponLayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Base_Locomotion                                        (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_RangedWeaponLayer                                (Parm, OutParm, NoDestructor)

void UGrunt_AnimBP_C::RangedWeaponLayer(const struct FPoseLink& Base_Locomotion, struct FPoseLink* Param_RangedWeaponLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "RangedWeaponLayer");

	Params::Grunt_AnimBP_C_RangedWeaponLayer Parms{};

	Parms.Base_Locomotion = std::move(Base_Locomotion);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_RangedWeaponLayer != nullptr)
		*Param_RangedWeaponLayer = std::move(Parms.Param_RangedWeaponLayer);
}


// Function grunt_AnimBP.grunt_AnimBP_C.NightHunter_EnterLight
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_NightHunter_EnterLight                           (Parm, OutParm, NoDestructor)

void UGrunt_AnimBP_C::NightHunter_EnterLight(const struct FPoseLink& Input, struct FPoseLink* Param_NightHunter_EnterLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "NightHunter_EnterLight");

	Params::Grunt_AnimBP_C_NightHunter_EnterLight Parms{};

	Parms.Input = std::move(Input);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_NightHunter_EnterLight != nullptr)
		*Param_NightHunter_EnterLight = std::move(Parms.Param_NightHunter_EnterLight);
}


// Function grunt_AnimBP.grunt_AnimBP_C.NightHunter_InLight
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_NightHunter_InLight                              (Parm, OutParm, NoDestructor)

void UGrunt_AnimBP_C::NightHunter_InLight(const struct FPoseLink& InPose, struct FPoseLink* Param_NightHunter_InLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "NightHunter_InLight");

	Params::Grunt_AnimBP_C_NightHunter_InLight Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_NightHunter_InLight != nullptr)
		*Param_NightHunter_InLight = std::move(Parms.Param_NightHunter_InLight);
}


// Function grunt_AnimBP.grunt_AnimBP_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UGrunt_AnimBP_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "AnimGraph");

	Params::Grunt_AnimBP_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function grunt_AnimBP.grunt_AnimBP_C.ShouldAimWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    AimWeapon                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGrunt_AnimBP_C::ShouldAimWeapon(bool* AimWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "ShouldAimWeapon");

	Params::Grunt_AnimBP_C_ShouldAimWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AimWeapon != nullptr)
		*AimWeapon = Parms.AimWeapon;
}


// Function grunt_AnimBP.grunt_AnimBP_C.ShouldReactToLight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_ShouldReactToLight                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGrunt_AnimBP_C::ShouldReactToLight(bool* Param_ShouldReactToLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "ShouldReactToLight");

	Params::Grunt_AnimBP_C_ShouldReactToLight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ShouldReactToLight != nullptr)
		*Param_ShouldReactToLight = Parms.Param_ShouldReactToLight;
}


// Function grunt_AnimBP.grunt_AnimBP_C.BlueprintBeginPlay
// (Event, Public, BlueprintEvent)

void UGrunt_AnimBP_C::BlueprintBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "BlueprintBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function grunt_AnimBP.grunt_AnimBP_C.AnimNotify_HoldOn
// (BlueprintCallable, BlueprintEvent)

void UGrunt_AnimBP_C::AnimNotify_HoldOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "AnimNotify_HoldOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function grunt_AnimBP.grunt_AnimBP_C.AnimNotify_LetGo
// (BlueprintCallable, BlueprintEvent)

void UGrunt_AnimBP_C::AnimNotify_LetGo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "AnimNotify_LetGo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function grunt_AnimBP.grunt_AnimBP_C.AnimNotify_InLight
// (BlueprintCallable, BlueprintEvent)

void UGrunt_AnimBP_C::AnimNotify_InLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "AnimNotify_InLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function grunt_AnimBP.grunt_AnimBP_C.AnimNotify_InDark
// (BlueprintCallable, BlueprintEvent)

void UGrunt_AnimBP_C::AnimNotify_InDark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "AnimNotify_InDark");

	UObject::ProcessEvent(Func, nullptr);
}


// Function grunt_AnimBP.grunt_AnimBP_C.Toogle Break from BlindedPose
// (BlueprintCallable, BlueprintEvent)

void UGrunt_AnimBP_C::Toogle_Break_from_BlindedPose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "Toogle Break from BlindedPose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function grunt_AnimBP.grunt_AnimBP_C.Event_OnInDarknessChanged
// (Event, Public, BlueprintEvent)

void UGrunt_AnimBP_C::Event_OnInDarknessChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "Event_OnInDarknessChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function grunt_AnimBP.grunt_AnimBP_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGrunt_AnimBP_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "BlueprintUpdateAnimation");

	Params::Grunt_AnimBP_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function grunt_AnimBP.grunt_AnimBP_C.AnimNotify_ResetEnterLight
// (BlueprintCallable, BlueprintEvent)

void UGrunt_AnimBP_C::AnimNotify_ResetEnterLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "AnimNotify_ResetEnterLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function grunt_AnimBP.grunt_AnimBP_C.ExecuteUbergraph_grunt_AnimBP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGrunt_AnimBP_C::ExecuteUbergraph_grunt_AnimBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("grunt_AnimBP_C", "ExecuteUbergraph_grunt_AnimBP");

	Params::Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

