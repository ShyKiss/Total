#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUDNightVision

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUDNightVision.HUDNightVision_C
// 0x0070 (0x0358 - 0x02E8)
class UHUDNightVision_C final : public URBHUDElementWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       BatteryPulse;                                      // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               batteryOverlay;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 batteryProgress;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              BoosterScale;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Dirt;                                              // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_HUDNightVision;                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Vignette;                                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsNvActive;                                        // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNVRelatedActiveSkillActive;                      // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProgressPadding;                                   // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Battery;                                       // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BarCount;                                          // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowBatteryValue;                                   // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBatteryLow;                                      // 0x0344(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               NVBatteryMat;                                      // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BatteryBoostDisplayed;                             // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_HUDNightVision(int32 EntryPoint);
	void CustomEvent_0();
	void OnBatteryLevelChanged(float batteryLevel);
	void OnMaxNVBatteryChangedDelegate_Event_0(float MaxBattery);
	void UnbindPlayerEvents(class ARBPlayer* Player);
	void BindPlayerEvents(class ARBPlayer* Player);
	void OnActiveSkillActivated(class ARBActiveSkill* ActiveSkill, bool bIsActive);
	void OnActiveSkillChanged(class ARBActiveSkill* ActiveSkillActor);
	void OnNVChanged(bool bOn);
	void Event_OnWatchedPlayerChanged(class ARBPlayer* OldPlayer, class ARBPlayer* NewPlayer);
	void Construct();
	void Event_Hide();
	void Event_Show();
	void SetIsNVActive(bool IsNvActive_0);
	void UpdateRatio(float batteryValue);
	void GetBatteryBoosterValue(float* StaminaBoosterValue);
	void HandleMaxBatteryChange(float Max_Battery_0);

	bool ShouldShow() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUDNightVision_C">();
	}
	static class UHUDNightVision_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUDNightVision_C>();
	}
};
static_assert(alignof(UHUDNightVision_C) == 0x000008, "Wrong alignment on UHUDNightVision_C");
static_assert(sizeof(UHUDNightVision_C) == 0x000358, "Wrong size on UHUDNightVision_C");
static_assert(offsetof(UHUDNightVision_C, UberGraphFrame) == 0x0002E8, "Member 'UHUDNightVision_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, BatteryPulse) == 0x0002F0, "Member 'UHUDNightVision_C::BatteryPulse' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, batteryOverlay) == 0x0002F8, "Member 'UHUDNightVision_C::batteryOverlay' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, batteryProgress) == 0x000300, "Member 'UHUDNightVision_C::batteryProgress' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, BoosterScale) == 0x000308, "Member 'UHUDNightVision_C::BoosterScale' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, CanvasPanel_0) == 0x000310, "Member 'UHUDNightVision_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, Dirt) == 0x000318, "Member 'UHUDNightVision_C::Dirt' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, InvalidationBox_HUDNightVision) == 0x000320, "Member 'UHUDNightVision_C::InvalidationBox_HUDNightVision' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, Vignette) == 0x000328, "Member 'UHUDNightVision_C::Vignette' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, IsNvActive) == 0x000330, "Member 'UHUDNightVision_C::IsNvActive' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, IsNVRelatedActiveSkillActive) == 0x000331, "Member 'UHUDNightVision_C::IsNVRelatedActiveSkillActive' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, ProgressPadding) == 0x000334, "Member 'UHUDNightVision_C::ProgressPadding' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, Max_Battery) == 0x000338, "Member 'UHUDNightVision_C::Max_Battery' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, BarCount) == 0x00033C, "Member 'UHUDNightVision_C::BarCount' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, LowBatteryValue) == 0x000340, "Member 'UHUDNightVision_C::LowBatteryValue' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, IsBatteryLow) == 0x000344, "Member 'UHUDNightVision_C::IsBatteryLow' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, NVBatteryMat) == 0x000348, "Member 'UHUDNightVision_C::NVBatteryMat' has a wrong offset!");
static_assert(offsetof(UHUDNightVision_C, BatteryBoostDisplayed) == 0x000350, "Member 'UHUDNightVision_C::BatteryBoostDisplayed' has a wrong offset!");

}

