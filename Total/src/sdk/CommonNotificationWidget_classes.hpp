#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonNotificationWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CommonNotificationWidget.CommonNotificationWidget_C
// 0x0110 (0x0378 - 0x0268)
class UCommonNotificationWidget_C final : public URBUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBMenuButton_C*                        AcceptButton;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 barLimit;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URBMenuButton_C*                        BlockButton;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Border;                                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomBorder;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ContentVerticalBox;                                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URBMenuButton_C*                        DeclineButton;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                GamepadInputHandler;                               // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_CommonNotificationWidget;          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Message;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_25;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         ProgressBarSize;                                   // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableAcceptButton;                               // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEnableRefuseButton;                               // 0x02D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEnableBlockButton;                                // 0x02D6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D7[0x1];                                      // 0x02D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ModeText;                                          // 0x02D8(0x0018)(Edit, BlueprintVisible)
	bool                                          bShowHeaderBackground;                             // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnAcceptedButtonClicked;                           // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnDeclinedButtonClicked;                           // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   AcceptButtonText;                                  // 0x0318(0x0018)(Edit, BlueprintVisible)
	class FText                                   RefuseButtonText;                                  // 0x0330(0x0018)(Edit, BlueprintVisible)
	class FText                                   BlockButtonText;                                   // 0x0348(0x0018)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             OnBlockButtonClicked;                              // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWidget*                                PreviouslyFocusedWidget;                           // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnAcceptedButtonClicked__DelegateSignature();
	void OnDeclinedButtonClicked__DelegateSignature();
	void OnBlockButtonClicked__DelegateSignature();
	void ExecuteUbergraph_CommonNotificationWidget(int32 EntryPoint);
	void InputSourceChanged(bool Gamepad);
	void Construct();
	void BndEvt__CommonNotificationWidget_BlockButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature(class URBMenuButton_C* Button);
	void BndEvt__CommonNotificationWidget_DeclineButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature(class URBMenuButton_C* Button);
	void BndEvt__CommonNotificationWidget_AcceptButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature(class URBMenuButton_C* Button);
	void PreConstruct(bool IsDesignTime);
	void UpdateProgress(float Progress);
	void SetMessage(const class FText& Message_0);
	void EnableBlockButton(bool bEnable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CommonNotificationWidget_C">();
	}
	static class UCommonNotificationWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonNotificationWidget_C>();
	}
};
static_assert(alignof(UCommonNotificationWidget_C) == 0x000008, "Wrong alignment on UCommonNotificationWidget_C");
static_assert(sizeof(UCommonNotificationWidget_C) == 0x000378, "Wrong size on UCommonNotificationWidget_C");
static_assert(offsetof(UCommonNotificationWidget_C, UberGraphFrame) == 0x000268, "Member 'UCommonNotificationWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, AcceptButton) == 0x000270, "Member 'UCommonNotificationWidget_C::AcceptButton' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, Background) == 0x000278, "Member 'UCommonNotificationWidget_C::Background' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, barLimit) == 0x000280, "Member 'UCommonNotificationWidget_C::barLimit' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, BlockButton) == 0x000288, "Member 'UCommonNotificationWidget_C::BlockButton' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, Border) == 0x000290, "Member 'UCommonNotificationWidget_C::Border' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, BottomBorder) == 0x000298, "Member 'UCommonNotificationWidget_C::BottomBorder' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, ContentVerticalBox) == 0x0002A0, "Member 'UCommonNotificationWidget_C::ContentVerticalBox' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, DeclineButton) == 0x0002A8, "Member 'UCommonNotificationWidget_C::DeclineButton' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, GamepadInputHandler) == 0x0002B0, "Member 'UCommonNotificationWidget_C::GamepadInputHandler' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, InvalidationBox_CommonNotificationWidget) == 0x0002B8, "Member 'UCommonNotificationWidget_C::InvalidationBox_CommonNotificationWidget' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, Message) == 0x0002C0, "Member 'UCommonNotificationWidget_C::Message' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, ProgressBar_25) == 0x0002C8, "Member 'UCommonNotificationWidget_C::ProgressBar_25' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, ProgressBarSize) == 0x0002D0, "Member 'UCommonNotificationWidget_C::ProgressBarSize' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, bEnableAcceptButton) == 0x0002D4, "Member 'UCommonNotificationWidget_C::bEnableAcceptButton' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, bEnableRefuseButton) == 0x0002D5, "Member 'UCommonNotificationWidget_C::bEnableRefuseButton' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, bEnableBlockButton) == 0x0002D6, "Member 'UCommonNotificationWidget_C::bEnableBlockButton' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, ModeText) == 0x0002D8, "Member 'UCommonNotificationWidget_C::ModeText' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, bShowHeaderBackground) == 0x0002F0, "Member 'UCommonNotificationWidget_C::bShowHeaderBackground' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, OnAcceptedButtonClicked) == 0x0002F8, "Member 'UCommonNotificationWidget_C::OnAcceptedButtonClicked' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, OnDeclinedButtonClicked) == 0x000308, "Member 'UCommonNotificationWidget_C::OnDeclinedButtonClicked' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, AcceptButtonText) == 0x000318, "Member 'UCommonNotificationWidget_C::AcceptButtonText' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, RefuseButtonText) == 0x000330, "Member 'UCommonNotificationWidget_C::RefuseButtonText' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, BlockButtonText) == 0x000348, "Member 'UCommonNotificationWidget_C::BlockButtonText' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, OnBlockButtonClicked) == 0x000360, "Member 'UCommonNotificationWidget_C::OnBlockButtonClicked' has a wrong offset!");
static_assert(offsetof(UCommonNotificationWidget_C, PreviouslyFocusedWidget) == 0x000370, "Member 'UCommonNotificationWidget_C::PreviouslyFocusedWidget' has a wrong offset!");

}

