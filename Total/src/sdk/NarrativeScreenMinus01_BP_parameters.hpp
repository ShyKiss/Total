#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NarrativeScreenMinus01_BP

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.FixUp
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenMinus01_BP_C_FixUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_FixUp) == 0x000001, "Wrong alignment on NarrativeScreenMinus01_BP_C_FixUp");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_FixUp) == 0x000001, "Wrong size on NarrativeScreenMinus01_BP_C_FixUp");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_FixUp, ReturnValue) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_FixUp::ReturnValue' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.GetNumberOfHitForDestroy
// 0x0034 (0x0034 - 0x0000)
struct NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3921[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3922[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3923[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy) == 0x000004, "Wrong alignment on NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy) == 0x000034, "Wrong size on NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, ReturnValue) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_BreakRotator_Roll) == 0x000004, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_BreakRotator_Pitch) == 0x000008, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_BreakRotator_Yaw) == 0x00000C, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_BreakRotator_Roll_1) == 0x000014, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_BreakRotator_Pitch_1) == 0x000018, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_BreakRotator_Yaw_1) == 0x00001C, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002A, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_BooleanOR_ReturnValue) == 0x00002B, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002C, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy, CallFunc_SelectInt_ReturnValue) == 0x000030, "Member 'NarrativeScreenMinus01_BP_C_GetNumberOfHitForDestroy::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.ConstructMagnifier
// 0x0028 (0x0028 - 0x0000)
struct NarrativeScreenMinus01_BP_C_ConstructMagnifier final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3924[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3925[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_ConstructMagnifier) == 0x000008, "Wrong alignment on NarrativeScreenMinus01_BP_C_ConstructMagnifier");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_ConstructMagnifier) == 0x000028, "Wrong size on NarrativeScreenMinus01_BP_C_ConstructMagnifier");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ConstructMagnifier, Temp_bool_Variable) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_ConstructMagnifier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ConstructMagnifier, Temp_object_Variable) == 0x000008, "Member 'NarrativeScreenMinus01_BP_C_ConstructMagnifier::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ConstructMagnifier, Temp_object_Variable_1) == 0x000010, "Member 'NarrativeScreenMinus01_BP_C_ConstructMagnifier::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ConstructMagnifier, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'NarrativeScreenMinus01_BP_C_ConstructMagnifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ConstructMagnifier, K2Node_Select_Default) == 0x000020, "Member 'NarrativeScreenMinus01_BP_C_ConstructMagnifier::K2Node_Select_Default' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.HandleDamageCountChanged_Cosmetic
// 0x0008 (0x0008 - 0x0000)
struct NarrativeScreenMinus01_BP_C_HandleDamageCountChanged_Cosmetic final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_HandleDamageCountChanged_Cosmetic) == 0x000004, "Wrong alignment on NarrativeScreenMinus01_BP_C_HandleDamageCountChanged_Cosmetic");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_HandleDamageCountChanged_Cosmetic) == 0x000008, "Wrong size on NarrativeScreenMinus01_BP_C_HandleDamageCountChanged_Cosmetic");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_HandleDamageCountChanged_Cosmetic, Count) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_HandleDamageCountChanged_Cosmetic::Count' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_HandleDamageCountChanged_Cosmetic, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'NarrativeScreenMinus01_BP_C_HandleDamageCountChanged_Cosmetic::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.ResetShatteredMagnifier
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenMinus01_BP_C_ResetShatteredMagnifier final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_ResetShatteredMagnifier) == 0x000001, "Wrong alignment on NarrativeScreenMinus01_BP_C_ResetShatteredMagnifier");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_ResetShatteredMagnifier) == 0x000001, "Wrong size on NarrativeScreenMinus01_BP_C_ResetShatteredMagnifier");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ResetShatteredMagnifier, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_ResetShatteredMagnifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.Shatter Magnifier
// 0x0028 (0x0028 - 0x0000)
struct NarrativeScreenMinus01_BP_C_Shatter_Magnifier final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_Shatter_Magnifier) == 0x000008, "Wrong alignment on NarrativeScreenMinus01_BP_C_Shatter_Magnifier");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_Shatter_Magnifier) == 0x000028, "Wrong size on NarrativeScreenMinus01_BP_C_Shatter_Magnifier");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_Shatter_Magnifier, Temp_delegate_Variable) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_Shatter_Magnifier::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_Shatter_Magnifier, Temp_struct_Variable) == 0x000010, "Member 'NarrativeScreenMinus01_BP_C_Shatter_Magnifier::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_Shatter_Magnifier, CallFunc_PostAkEvent_ReturnValue) == 0x000020, "Member 'NarrativeScreenMinus01_BP_C_Shatter_Magnifier::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_Shatter_Magnifier, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'NarrativeScreenMinus01_BP_C_Shatter_Magnifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenMinus01_BP_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_UserConstructionScript) == 0x000001, "Wrong alignment on NarrativeScreenMinus01_BP_C_UserConstructionScript");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_UserConstructionScript) == 0x000001, "Wrong size on NarrativeScreenMinus01_BP_C_UserConstructionScript");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.OnPostActorsPasted
// 0x0010 (0x0010 - 0x0000)
struct NarrativeScreenMinus01_BP_C_OnPostActorsPasted final
{
public:
	TArray<class AActor*>                         PastedActors;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_OnPostActorsPasted) == 0x000008, "Wrong alignment on NarrativeScreenMinus01_BP_C_OnPostActorsPasted");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_OnPostActorsPasted) == 0x000010, "Wrong size on NarrativeScreenMinus01_BP_C_OnPostActorsPasted");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_OnPostActorsPasted, PastedActors) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_OnPostActorsPasted::PastedActors' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.PostDuplicated
// 0x0008 (0x0008 - 0x0000)
struct NarrativeScreenMinus01_BP_C_PostDuplicated final
{
public:
	class AActor*                                 DuplicationParent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_PostDuplicated) == 0x000008, "Wrong alignment on NarrativeScreenMinus01_BP_C_PostDuplicated");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_PostDuplicated) == 0x000008, "Wrong size on NarrativeScreenMinus01_BP_C_PostDuplicated");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_PostDuplicated, DuplicationParent) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_PostDuplicated::DuplicationParent' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.PostEditChange
// 0x0008 (0x0008 - 0x0000)
struct NarrativeScreenMinus01_BP_C_PostEditChange final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_PostEditChange) == 0x000004, "Wrong alignment on NarrativeScreenMinus01_BP_C_PostEditChange");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_PostEditChange) == 0x000008, "Wrong size on NarrativeScreenMinus01_BP_C_PostEditChange");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_PostEditChange, PropertyName) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_PostEditChange::PropertyName' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.PostEditMove
// 0x0001 (0x0001 - 0x0000)
struct NarrativeScreenMinus01_BP_C_PostEditMove final
{
public:
	bool                                          bFinished;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_PostEditMove) == 0x000001, "Wrong alignment on NarrativeScreenMinus01_BP_C_PostEditMove");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_PostEditMove) == 0x000001, "Wrong size on NarrativeScreenMinus01_BP_C_PostEditMove");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_PostEditMove, bFinished) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_PostEditMove::bFinished' has a wrong offset!");

// Function NarrativeScreen-01_BP.NarrativeScreen-01_BP_C.ExecuteUbergraph_NarrativeScreen-01_BP
// 0x0030 (0x0030 - 0x0000)
struct NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfHitForDestroy_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_Event_pastedActors;                         // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 K2Node_Event_duplicationParent;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_propertyName;                         // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFinished;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP) == 0x000008, "Wrong alignment on NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP");
static_assert(sizeof(NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP) == 0x000030, "Wrong size on NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP, EntryPoint) == 0x000000, "Member 'NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP, CallFunc_GetNumberOfHitForDestroy_ReturnValue) == 0x000004, "Member 'NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP::CallFunc_GetNumberOfHitForDestroy_ReturnValue' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP, K2Node_Event_pastedActors) == 0x000008, "Member 'NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP::K2Node_Event_pastedActors' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP, K2Node_Event_duplicationParent) == 0x000018, "Member 'NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP::K2Node_Event_duplicationParent' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP, K2Node_Event_propertyName) == 0x000020, "Member 'NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP::K2Node_Event_propertyName' has a wrong offset!");
static_assert(offsetof(NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP, K2Node_Event_bFinished) == 0x000028, "Member 'NarrativeScreenMinus01_BP_C_ExecuteUbergraph_NarrativeScreenMinus01_BP::K2Node_Event_bFinished' has a wrong offset!");

}

