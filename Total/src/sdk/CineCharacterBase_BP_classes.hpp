#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CineCharacterBase_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CineCharacterBase_BP.CineCharacterBase_BP_C
// 0x0048 (0x0278 - 0x0230)
class ACineCharacterBase_BP_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Anim;                                              // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ActivateScreenshotMode;                            // 0x0254(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          BodyAnimation;                                     // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PositionInAnimation;                               // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          FacialAnimation;                                   // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCine_Body_AnimBP_C*                    In_Animation_Mode;                                 // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CineCharacterBase_BP(int32 EntryPoint);
	void OnAsyncDataLoaded_Event_0(class URBTrialAsyncData* AsyncData);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Play(class UAnimationAsset* NewAnimToPlay);
	void NewFunction_0();
	void PreviewSequence();
	void SetPreviewSequenceData(class UAnimSequence* Anim_0, float Time_0);
	void GetCineFaceAnimBP(class UCineFace_AnimBP_C** CineFaceAnimBP);
	void GetPoseAsset(class UPoseAsset** PoseAsset);
	void GetBodyAnimation(class USkeletalMeshComponent* Mesh, class UAnimSequence** Anim_0);
	void GetFacialAnimation(class USkeletalMeshComponent* Mesh, class UAnimSequence** Anim_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CineCharacterBase_BP_C">();
	}
	static class ACineCharacterBase_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACineCharacterBase_BP_C>();
	}
};
static_assert(alignof(ACineCharacterBase_BP_C) == 0x000008, "Wrong alignment on ACineCharacterBase_BP_C");
static_assert(sizeof(ACineCharacterBase_BP_C) == 0x000278, "Wrong size on ACineCharacterBase_BP_C");
static_assert(offsetof(ACineCharacterBase_BP_C, UberGraphFrame) == 0x000230, "Member 'ACineCharacterBase_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACineCharacterBase_BP_C, SkeletalMesh) == 0x000238, "Member 'ACineCharacterBase_BP_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ACineCharacterBase_BP_C, DefaultSceneRoot) == 0x000240, "Member 'ACineCharacterBase_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACineCharacterBase_BP_C, Anim) == 0x000248, "Member 'ACineCharacterBase_BP_C::Anim' has a wrong offset!");
static_assert(offsetof(ACineCharacterBase_BP_C, Time) == 0x000250, "Member 'ACineCharacterBase_BP_C::Time' has a wrong offset!");
static_assert(offsetof(ACineCharacterBase_BP_C, ActivateScreenshotMode) == 0x000254, "Member 'ACineCharacterBase_BP_C::ActivateScreenshotMode' has a wrong offset!");
static_assert(offsetof(ACineCharacterBase_BP_C, BodyAnimation) == 0x000258, "Member 'ACineCharacterBase_BP_C::BodyAnimation' has a wrong offset!");
static_assert(offsetof(ACineCharacterBase_BP_C, PositionInAnimation) == 0x000260, "Member 'ACineCharacterBase_BP_C::PositionInAnimation' has a wrong offset!");
static_assert(offsetof(ACineCharacterBase_BP_C, FacialAnimation) == 0x000268, "Member 'ACineCharacterBase_BP_C::FacialAnimation' has a wrong offset!");
static_assert(offsetof(ACineCharacterBase_BP_C, In_Animation_Mode) == 0x000270, "Member 'ACineCharacterBase_BP_C::In_Animation_Mode' has a wrong offset!");

}

