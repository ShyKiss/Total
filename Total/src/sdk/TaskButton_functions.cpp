#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TaskButton

#include "Basic.hpp"

#include "TaskButton_classes.hpp"
#include "TaskButton_parameters.hpp"


namespace SDK
{

// Function TaskButton.TaskButton_C.OnClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBTaskMenuEntry                 Param_Entry                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UTaskButton_C::OnClicked__DelegateSignature(const struct FRBTaskMenuEntry& Param_Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "OnClicked__DelegateSignature");

	Params::TaskButton_C_OnClicked__DelegateSignature Parms{};

	Parms.Param_Entry = std::move(Param_Entry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskButton.TaskButton_C.ExecuteUbergraph_TaskButton
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTaskButton_C::ExecuteUbergraph_TaskButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "ExecuteUbergraph_TaskButton");

	Params::TaskButton_C_ExecuteUbergraph_TaskButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskButton.TaskButton_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UTaskButton_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TaskButton.TaskButton_C.OnMenuInputSourceChanged
// (BlueprintCallable, BlueprintEvent)

void UTaskButton_C::OnMenuInputSourceChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "OnMenuInputSourceChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TaskButton.TaskButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UTaskButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TaskButton.TaskButton_C.BndEvt__PerkCategoryButton_InteractionButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UTaskButton_C::BndEvt__PerkCategoryButton_InteractionButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "BndEvt__PerkCategoryButton_InteractionButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TaskButton.TaskButton_C.BndEvt__PerkCategoryButton_InteractionButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UTaskButton_C::BndEvt__PerkCategoryButton_InteractionButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "BndEvt__PerkCategoryButton_InteractionButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TaskButton.TaskButton_C.BndEvt__PerkCategoryButton_InteractionButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UTaskButton_C::BndEvt__PerkCategoryButton_InteractionButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "BndEvt__PerkCategoryButton_InteractionButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TaskButton.TaskButton_C.Setup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBTaskMenuEntry                 Param_Entry                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bCanConsume                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTaskButton_C::Setup(const struct FRBTaskMenuEntry& Param_Entry, bool bCanConsume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "Setup");

	Params::TaskButton_C_Setup Parms{};

	Parms.Param_Entry = std::move(Param_Entry);
	Parms.bCanConsume = bCanConsume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskButton.TaskButton_C.UpdateProgression
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBTaskProgressionEntry          Param_Progression                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UTaskButton_C::UpdateProgression(const struct FRBTaskProgressionEntry& Param_Progression)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "UpdateProgression");

	Params::TaskButton_C_UpdateProgression Parms{};

	Parms.Param_Progression = std::move(Param_Progression);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskButton.TaskButton_C.Refresh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UTaskButton_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TaskButton.TaskButton_C.SetHovered
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsHovered                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTaskButton_C::SetHovered(bool Param_IsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "SetHovered");

	Params::TaskButton_C_SetHovered Parms{};

	Parms.Param_IsHovered = Param_IsHovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskButton.TaskButton_C.SetFocused
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInFocused                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTaskButton_C::SetFocused(bool bInFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "SetFocused");

	Params::TaskButton_C_SetFocused Parms{};

	Parms.bInFocused = bInFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskButton.TaskButton_C.IsConsideredHovered
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bConsideredHovered                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTaskButton_C::IsConsideredHovered(bool* bConsideredHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "IsConsideredHovered");

	Params::TaskButton_C_IsConsideredHovered Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bConsideredHovered != nullptr)
		*bConsideredHovered = Parms.bConsideredHovered;
}


// Function TaskButton.TaskButton_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UTaskButton_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "OnRemovedFromFocusPath");

	Params::TaskButton_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskButton.TaskButton_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UTaskButton_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "OnAddedToFocusPath");

	Params::TaskButton_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskButton.TaskButton_C.CanConsume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bCanConsume                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTaskButton_C::CanConsume(bool* bCanConsume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "CanConsume");

	Params::TaskButton_C_CanConsume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCanConsume != nullptr)
		*bCanConsume = Parms.bCanConsume;
}


// Function TaskButton.TaskButton_C.SetupReward
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RewardDataId                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTaskButton_C::SetupReward(const class FName& RewardDataId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "SetupReward");

	Params::TaskButton_C_SetupReward Parms{};

	Parms.RewardDataId = RewardDataId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TaskButton.TaskButton_C.UpdateMenuFocusAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UTaskButton_C::UpdateMenuFocusAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TaskButton_C", "UpdateMenuFocusAction");

	UObject::ProcessEvent(Func, nullptr);
}

}

