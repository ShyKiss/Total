#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBLobbyPlayerController_BP

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CellCustomizationObjectType_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_5");
static_assert(sizeof(RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_5");
static_assert(offsetof(RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_4");
static_assert(sizeof(RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_4");
static_assert(offsetof(RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.InpActEvt_Shift_MouseScrollDown_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollDown_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollDown_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollDown_K2Node_InputKeyEvent_3");
static_assert(sizeof(RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollDown_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollDown_K2Node_InputKeyEvent_3");
static_assert(offsetof(RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollDown_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollDown_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.InpActEvt_Alt_MouseScrollDown_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollDown_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollDown_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollDown_K2Node_InputKeyEvent_2");
static_assert(sizeof(RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollDown_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollDown_K2Node_InputKeyEvent_2");
static_assert(offsetof(RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollDown_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollDown_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.InpActEvt_Shift_MouseScrollUp_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollUp_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(sizeof(RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(offsetof(RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollUp_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_InpActEvt_Shift_MouseScrollUp_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.InpActEvt_Alt_MouseScrollUp_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollUp_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollUp_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollUp_K2Node_InputKeyEvent_0");
static_assert(sizeof(RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollUp_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollUp_K2Node_InputKeyEvent_0");
static_assert(offsetof(RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollUp_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_InpActEvt_Alt_MouseScrollUp_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.SetNewFlyingObjectLength
// 0x0010 (0x0010 - 0x0000)
struct RBLobbyPlayerController_BP_C_SetNewFlyingObjectLength final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFlyingObject_C*                        Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_SetNewFlyingObjectLength) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_SetNewFlyingObjectLength");
static_assert(sizeof(RBLobbyPlayerController_BP_C_SetNewFlyingObjectLength) == 0x000010, "Wrong size on RBLobbyPlayerController_BP_C_SetNewFlyingObjectLength");
static_assert(offsetof(RBLobbyPlayerController_BP_C_SetNewFlyingObjectLength, Length) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_SetNewFlyingObjectLength::Length' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_SetNewFlyingObjectLength, Actor) == 0x000008, "Member 'RBLobbyPlayerController_BP_C_SetNewFlyingObjectLength::Actor' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.ServerSetNewCustomizableCellObject
// 0x0010 (0x0010 - 0x0000)
struct RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject final
{
public:
	ECellCustomizationObjectType                  ObjectType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomizableCellObject_C*              Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject");
static_assert(sizeof(RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject) == 0x000010, "Wrong size on RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject, ObjectType) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject::ObjectType' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject, Param_Index) == 0x000004, "Member 'RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject::Param_Index' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject, Actor) == 0x000008, "Member 'RBLobbyPlayerController_BP_C_ServerSetNewCustomizableCellObject::Actor' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.SetCustomizeDecalSettings
// 0x0010 (0x0010 - 0x0000)
struct RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings final
{
public:
	class ALobbyDecalActorMinus01_BP_C*           Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings");
static_assert(sizeof(RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings) == 0x000010, "Wrong size on RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings");
static_assert(offsetof(RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings, Actor) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings::Actor' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings, Rotation) == 0x000008, "Member 'RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings::Rotation' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings, Scale) == 0x00000C, "Member 'RBLobbyPlayerController_BP_C_SetCustomizeDecalSettings::Scale' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.ChangeCustomizeDecalMaterial
// 0x0010 (0x0010 - 0x0000)
struct RBLobbyPlayerController_BP_C_ChangeCustomizeDecalMaterial final
{
public:
	class ALobbyDecalActorMinus01_BP_C*           Decal;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Next;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_ChangeCustomizeDecalMaterial) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_ChangeCustomizeDecalMaterial");
static_assert(sizeof(RBLobbyPlayerController_BP_C_ChangeCustomizeDecalMaterial) == 0x000010, "Wrong size on RBLobbyPlayerController_BP_C_ChangeCustomizeDecalMaterial");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ChangeCustomizeDecalMaterial, Decal) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_ChangeCustomizeDecalMaterial::Decal' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ChangeCustomizeDecalMaterial, Next) == 0x000008, "Member 'RBLobbyPlayerController_BP_C_ChangeCustomizeDecalMaterial::Next' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.ExecuteUbergraph_RBLobbyPlayerController_BP
// 0x00F0 (0x00F0 - 0x0000)
struct RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_343C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0018(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0098(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Length;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343E[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFlyingObject_C*                        K2Node_CustomEvent_Actor_2;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECellCustomizationObjectType                  K2Node_CustomEvent_ObjectType;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343F[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomizableCellObject_C*              K2Node_CustomEvent_Actor_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobbyDecalActorMinus01_BP_C*           K2Node_CustomEvent_Actor;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Rotation;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Scale;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobbyDecalActorMinus01_BP_C*           K2Node_CustomEvent_Decal;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Next;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP) == 0x000008, "Wrong alignment on RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP");
static_assert(sizeof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP) == 0x0000F0, "Wrong size on RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, EntryPoint) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, Temp_delegate_Variable) == 0x000004, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_InputKeyEvent_Key) == 0x000018, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, CallFunc_PostEventGlobal_ReturnValue) == 0x000030, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_InputKeyEvent_Key_1) == 0x000038, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_InputKeyEvent_Key_2) == 0x000050, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_InputKeyEvent_Key_3) == 0x000068, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_InputKeyEvent_Key_4) == 0x000080, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_InputKeyEvent_Key_5) == 0x000098, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_Length) == 0x0000B0, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_Length' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_Actor_2) == 0x0000B8, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_Actor_2' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_ObjectType) == 0x0000C0, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_ObjectType' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_Index) == 0x0000C4, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_Actor_1) == 0x0000C8, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_Actor) == 0x0000D0, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_Rotation) == 0x0000D8, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_Scale) == 0x0000DC, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_Scale' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_Decal) == 0x0000E0, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_Decal' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP, K2Node_CustomEvent_Next) == 0x0000E8, "Member 'RBLobbyPlayerController_BP_C_ExecuteUbergraph_RBLobbyPlayerController_BP::K2Node_CustomEvent_Next' has a wrong offset!");

// Function RBLobbyPlayerController_BP.RBLobbyPlayerController_BP_C.MouseWheel__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature final
{
public:
	float                                         Axis;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shift;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Alt;                                               // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature) == 0x000004, "Wrong alignment on RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature");
static_assert(sizeof(RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature) == 0x000008, "Wrong size on RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature");
static_assert(offsetof(RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature, Axis) == 0x000000, "Member 'RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature::Axis' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature, Shift) == 0x000004, "Member 'RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature::Shift' has a wrong offset!");
static_assert(offsetof(RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature, Alt) == 0x000005, "Member 'RBLobbyPlayerController_BP_C_MouseWheel__DelegateSignature::Alt' has a wrong offset!");

}

