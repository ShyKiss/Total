#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProMod_Parent

#include "Basic.hpp"

#include "PipeModuleDetailParameters_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "StretchableModulesPartsRandomization_structs.hpp"
#include "LockAxis_structs.hpp"


namespace SDK::Params
{

// Function ProMod_Parent.ProMod_Parent_C.FixUp
// 0x0002 (0x0002 - 0x0000)
struct ProMod_Parent_C_FixUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CleanOwningActors_bChanged;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_FixUp) == 0x000001, "Wrong alignment on ProMod_Parent_C_FixUp");
static_assert(sizeof(ProMod_Parent_C_FixUp) == 0x000002, "Wrong size on ProMod_Parent_C_FixUp");
static_assert(offsetof(ProMod_Parent_C_FixUp, ReturnValue) == 0x000000, "Member 'ProMod_Parent_C_FixUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_FixUp, CallFunc_CleanOwningActors_bChanged) == 0x000001, "Member 'ProMod_Parent_C_FixUp::CallFunc_CleanOwningActors_bChanged' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.SetupCollision
// 0x0010 (0x0010 - 0x0000)
struct ProMod_Parent_C_SetupCollision final
{
public:
	class UPrimitiveComponent*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDetail;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_SetupCollision) == 0x000008, "Wrong alignment on ProMod_Parent_C_SetupCollision");
static_assert(sizeof(ProMod_Parent_C_SetupCollision) == 0x000010, "Wrong size on ProMod_Parent_C_SetupCollision");
static_assert(offsetof(ProMod_Parent_C_SetupCollision, Target) == 0x000000, "Member 'ProMod_Parent_C_SetupCollision::Target' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetupCollision, bIsDetail) == 0x000008, "Member 'ProMod_Parent_C_SetupCollision::bIsDetail' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetupCollision, Temp_bool_Variable) == 0x000009, "Member 'ProMod_Parent_C_SetupCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetupCollision, Temp_byte_Variable) == 0x00000A, "Member 'ProMod_Parent_C_SetupCollision::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetupCollision, Temp_byte_Variable_1) == 0x00000B, "Member 'ProMod_Parent_C_SetupCollision::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetupCollision, K2Node_Select_Default) == 0x00000C, "Member 'ProMod_Parent_C_SetupCollision::K2Node_Select_Default' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.ApplyNewMeshSettings
// 0x0008 (0x0008 - 0x0000)
struct ProMod_Parent_C_ApplyNewMeshSettings final
{
public:
	class UMeshComponent*                         NewMeshComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_ApplyNewMeshSettings) == 0x000008, "Wrong alignment on ProMod_Parent_C_ApplyNewMeshSettings");
static_assert(sizeof(ProMod_Parent_C_ApplyNewMeshSettings) == 0x000008, "Wrong size on ProMod_Parent_C_ApplyNewMeshSettings");
static_assert(offsetof(ProMod_Parent_C_ApplyNewMeshSettings, NewMeshComponent) == 0x000000, "Member 'ProMod_Parent_C_ApplyNewMeshSettings::NewMeshComponent' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.MakePipeConnection2
// 0x03F0 (0x03F0 - 0x0000)
struct ProMod_Parent_C_MakePipeConnection2 final
{
public:
	bool                                          bInvertRoles;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IntersectionPoint;                                 // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       PipeModuleToSkip;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExternalRefresh;                                 // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADB[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PivotDistanceFromTarget;                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_EndPipeThreshold;                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetEnd;                                         // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CleanOwningActors_bChanged;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterToPipeModuleManager_Valid;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADC[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADD[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_1;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADE[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AProMod_Parent_C>        CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0078(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_2;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ADF[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AProMod_Parent_C>        CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x00B8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE0[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_3;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE1[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE2[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_4;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCornerPipe_isCornerPipe;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE3[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_IsCornerPipe_TargetLocation1;             // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsCornerPipe_TargetEndWorldLocation1;     // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsCornerPipe_ActorEndWorldLocation1;      // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsCornerPipe_ActorWorldLocation1;         // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE4[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       CallFunc_IsCornerPipe_TargetPipe1;                 // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCornerPipe_bShouldFlipSpline;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE5[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_5;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidIntersection_Valid;                // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE6[0x2];                                     // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_IsValidIntersection_IntersectionPos;      // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE7[0x2];                                     // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Manager_C*                      K2Node_DynamicCast_AsPro_Mod_Manager;              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE8[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_6;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE9[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AProMod_Parent_C>        CallFunc_Array_Get_Item;                           // 0x01B8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidIntersection_Valid_1;              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AEA[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_IsValidIntersection_IntersectionPos_1;    // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_7;             // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SortCompareActorsByName_ReturnValue;      // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSameChannel_IsValid;                    // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AEB[0x2];                                     // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEC[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AED[0x5];                                     // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_8;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AEE[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetConnectorRotation_Rotation;            // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEF[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_9;             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF0[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetConnectorRotation_Rotation_1;          // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF1[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_11; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_10;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF2[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_12; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentAtFullExtentFromTarget_IsAtFullExtent; // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF3[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsCurrentAtFullExtentFromTarget_PivotDistanceFromTarget; // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_11;            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentAtFullExtentFromTarget_IsAtFullExtent_1; // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF4[0x2];                                     // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsCurrentAtFullExtentFromTarget_PivotDistanceFromTarget_1; // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_13; // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_12;            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCornerPipe_isCornerPipe_1;              // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF5[0x2];                                     // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_IsCornerPipe_TargetLocation1_1;           // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsCornerPipe_TargetEndWorldLocation1_1;   // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsCornerPipe_ActorEndWorldLocation1_1;    // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsCornerPipe_ActorWorldLocation1_1;       // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF6[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       CallFunc_IsCornerPipe_TargetPipe1_1;               // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCornerPipe_bShouldFlipSpline_1;         // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AF7[0x3];                                     // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF8[0x8];                                     // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0310(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF9[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x03B0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddStaticMesh_ReturnValue;                // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddStaticMesh_ReturnValue_1;              // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_MakePipeConnection2) == 0x000010, "Wrong alignment on ProMod_Parent_C_MakePipeConnection2");
static_assert(sizeof(ProMod_Parent_C_MakePipeConnection2) == 0x0003F0, "Wrong size on ProMod_Parent_C_MakePipeConnection2");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, bInvertRoles) == 0x000000, "Member 'ProMod_Parent_C_MakePipeConnection2::bInvertRoles' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, IntersectionPoint) == 0x000004, "Member 'ProMod_Parent_C_MakePipeConnection2::IntersectionPoint' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, PipeModuleToSkip) == 0x000010, "Member 'ProMod_Parent_C_MakePipeConnection2::PipeModuleToSkip' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, IsExternalRefresh) == 0x000018, "Member 'ProMod_Parent_C_MakePipeConnection2::IsExternalRefresh' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, PivotDistanceFromTarget) == 0x00001C, "Member 'ProMod_Parent_C_MakePipeConnection2::PivotDistanceFromTarget' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, Param_EndPipeThreshold) == 0x000020, "Member 'ProMod_Parent_C_MakePipeConnection2::Param_EndPipeThreshold' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, TargetEnd) == 0x000024, "Member 'ProMod_Parent_C_MakePipeConnection2::TargetEnd' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, TargetLocation) == 0x000030, "Member 'ProMod_Parent_C_MakePipeConnection2::TargetLocation' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'ProMod_Parent_C_MakePipeConnection2::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_CleanOwningActors_bChanged) == 0x000040, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_CleanOwningActors_bChanged' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_RegisterToPipeModuleManager_Valid) == 0x000041, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_RegisterToPipeModuleManager_Valid' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000050, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent) == 0x000058, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_1) == 0x000068, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000078, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0000A0, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_2) == 0x0000A8, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x0000B8, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Array_Contains_ReturnValue) == 0x0000E0, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x0000E8, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_3) == 0x0000F0, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_3) == 0x0000F8, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000100, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Array_Contains_ReturnValue_1) == 0x000108, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_4) == 0x000110, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_4) == 0x000118, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_isCornerPipe) == 0x000119, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_isCornerPipe' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_TargetLocation1) == 0x00011C, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_TargetLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_TargetEndWorldLocation1) == 0x000128, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_TargetEndWorldLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_ActorEndWorldLocation1) == 0x000134, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_ActorEndWorldLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_ActorWorldLocation1) == 0x000140, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_ActorWorldLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_TargetPipe1) == 0x000150, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_TargetPipe1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_bShouldFlipSpline) == 0x000158, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_bShouldFlipSpline' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x000160, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_5) == 0x000168, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_5) == 0x000170, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsValidIntersection_Valid) == 0x000171, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsValidIntersection_Valid' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsValidIntersection_IntersectionPos) == 0x000174, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsValidIntersection_IntersectionPos' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Array_AddUnique_ReturnValue) == 0x000180, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_BooleanOR_ReturnValue) == 0x000184, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_BooleanOR_ReturnValue_1) == 0x000185, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6) == 0x000188, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Manager) == 0x000190, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Manager' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_6) == 0x000198, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7) == 0x0001A0, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_6) == 0x0001A8, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_7) == 0x0001B0, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsValidIntersection_Valid_1) == 0x0001E0, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsValidIntersection_Valid_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsValidIntersection_IntersectionPos_1) == 0x0001E4, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsValidIntersection_IntersectionPos_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8) == 0x0001F0, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_7) == 0x0001F8, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_8) == 0x000200, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsValid_ReturnValue) == 0x000201, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_SortCompareActorsByName_ReturnValue) == 0x000202, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_SortCompareActorsByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000203, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsSameChannel_IsValid) == 0x000204, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsSameChannel_IsValid' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Not_PreBool_ReturnValue) == 0x000205, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_GetObjectClass_ReturnValue) == 0x000208, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Array_Length_ReturnValue) == 0x000210, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_GetObjectClass_ReturnValue_1) == 0x000218, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000220, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_BooleanAND_ReturnValue) == 0x000221, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_BooleanAND_ReturnValue_1) == 0x000222, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9) == 0x000228, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_8) == 0x000230, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_9) == 0x000238, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_GetConnectorRotation_Rotation) == 0x00023C, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_GetConnectorRotation_Rotation' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10) == 0x000248, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, Temp_int_Loop_Counter_Variable) == 0x000250, "Member 'ProMod_Parent_C_MakePipeConnection2::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_9) == 0x000258, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_10) == 0x000260, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_GetConnectorRotation_Rotation_1) == 0x000264, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_GetConnectorRotation_Rotation_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Less_IntInt_ReturnValue) == 0x000270, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Add_IntInt_ReturnValue) == 0x000274, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_11) == 0x000278, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_10) == 0x000280, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_11) == 0x000288, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_12) == 0x000290, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCurrentAtFullExtentFromTarget_IsAtFullExtent) == 0x000298, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCurrentAtFullExtentFromTarget_IsAtFullExtent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCurrentAtFullExtentFromTarget_PivotDistanceFromTarget) == 0x00029C, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCurrentAtFullExtentFromTarget_PivotDistanceFromTarget' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_11) == 0x0002A0, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_12) == 0x0002A8, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCurrentAtFullExtentFromTarget_IsAtFullExtent_1) == 0x0002A9, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCurrentAtFullExtentFromTarget_IsAtFullExtent_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCurrentAtFullExtentFromTarget_PivotDistanceFromTarget_1) == 0x0002AC, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCurrentAtFullExtentFromTarget_PivotDistanceFromTarget_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_13) == 0x0002B0, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_AsPro_Mod_Parent_12) == 0x0002B8, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_AsPro_Mod_Parent_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, K2Node_DynamicCast_bSuccess_13) == 0x0002C0, "Member 'ProMod_Parent_C_MakePipeConnection2::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_isCornerPipe_1) == 0x0002C1, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_isCornerPipe_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_TargetLocation1_1) == 0x0002C4, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_TargetLocation1_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_TargetEndWorldLocation1_1) == 0x0002D0, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_TargetEndWorldLocation1_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_ActorEndWorldLocation1_1) == 0x0002DC, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_ActorEndWorldLocation1_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_ActorWorldLocation1_1) == 0x0002E8, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_ActorWorldLocation1_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_TargetPipe1_1) == 0x0002F8, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_TargetPipe1_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_IsCornerPipe_bShouldFlipSpline_1) == 0x000300, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_IsCornerPipe_bShouldFlipSpline_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000304, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_GetTransform_ReturnValue) == 0x000310, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_InvertTransform_ReturnValue) == 0x000340, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_TransformLocation_ReturnValue) == 0x000370, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_MakeTransform_ReturnValue) == 0x000380, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_MakeTransform_ReturnValue_1) == 0x0003B0, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_AddStaticMesh_ReturnValue) == 0x0003E0, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_AddStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection2, CallFunc_AddStaticMesh_ReturnValue_1) == 0x0003E8, "Member 'ProMod_Parent_C_MakePipeConnection2::CallFunc_AddStaticMesh_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.CustRunConstruction
// 0x0018 (0x0018 - 0x0000)
struct ProMod_Parent_C_CustRunConstruction final
{
public:
	TArray<TSoftObjectPtr<class AProMod_Parent_C>> Pipes;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_RegisterToPipeModuleManager_Valid;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CleanOwningActors_bChanged;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_CustRunConstruction) == 0x000008, "Wrong alignment on ProMod_Parent_C_CustRunConstruction");
static_assert(sizeof(ProMod_Parent_C_CustRunConstruction) == 0x000018, "Wrong size on ProMod_Parent_C_CustRunConstruction");
static_assert(offsetof(ProMod_Parent_C_CustRunConstruction, Pipes) == 0x000000, "Member 'ProMod_Parent_C_CustRunConstruction::Pipes' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CustRunConstruction, CallFunc_RegisterToPipeModuleManager_Valid) == 0x000010, "Member 'ProMod_Parent_C_CustRunConstruction::CallFunc_RegisterToPipeModuleManager_Valid' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CustRunConstruction, CallFunc_CleanOwningActors_bChanged) == 0x000011, "Member 'ProMod_Parent_C_CustRunConstruction::CallFunc_CleanOwningActors_bChanged' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.CleanOwningActors
// 0x00C8 (0x00C8 - 0x0000)
struct ProMod_Parent_C_CleanOwningActors final
{
public:
	bool                                          bChanged;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoopIdx;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSomethingChanged;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFC[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AProMod_Parent_C>        CallFunc_Array_Get_Item;                           // 0x0018(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFD[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       K2Node_DynamicCast_AsPro_Mod_Parent_1;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidIntersection_Valid;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFE[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_IsValidIntersection_IntersectionPos;      // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCornerPipe_isCornerPipe;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AFF[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_IsCornerPipe_TargetLocation1;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsCornerPipe_TargetEndWorldLocation1;     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsCornerPipe_ActorEndWorldLocation1;      // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsCornerPipe_ActorWorldLocation1;         // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B00[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       CallFunc_IsCornerPipe_TargetPipe1;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCornerPipe_bShouldFlipSpline;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SortCompareActorsByName_ReturnValue;      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B01[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_CleanOwningActors) == 0x000008, "Wrong alignment on ProMod_Parent_C_CleanOwningActors");
static_assert(sizeof(ProMod_Parent_C_CleanOwningActors) == 0x0000C8, "Wrong size on ProMod_Parent_C_CleanOwningActors");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, bChanged) == 0x000000, "Member 'ProMod_Parent_C_CleanOwningActors::bChanged' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, LoopIdx) == 0x000004, "Member 'ProMod_Parent_C_CleanOwningActors::LoopIdx' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, bSomethingChanged) == 0x000008, "Member 'ProMod_Parent_C_CleanOwningActors::bSomethingChanged' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, Temp_int_Variable) == 0x00000C, "Member 'ProMod_Parent_C_CleanOwningActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_Array_Get_Item) == 0x000018, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000048, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, K2Node_DynamicCast_AsPro_Mod_Parent) == 0x000050, "Member 'ProMod_Parent_C_CleanOwningActors::K2Node_DynamicCast_AsPro_Mod_Parent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ProMod_Parent_C_CleanOwningActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, K2Node_DynamicCast_AsPro_Mod_Parent_1) == 0x000060, "Member 'ProMod_Parent_C_CleanOwningActors::K2Node_DynamicCast_AsPro_Mod_Parent_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'ProMod_Parent_C_CleanOwningActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsValidIntersection_Valid) == 0x000069, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsValidIntersection_Valid' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsValidIntersection_IntersectionPos) == 0x00006C, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsValidIntersection_IntersectionPos' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsCornerPipe_isCornerPipe) == 0x000079, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsCornerPipe_isCornerPipe' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsCornerPipe_TargetLocation1) == 0x00007C, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsCornerPipe_TargetLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsCornerPipe_TargetEndWorldLocation1) == 0x000088, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsCornerPipe_TargetEndWorldLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsCornerPipe_ActorEndWorldLocation1) == 0x000094, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsCornerPipe_ActorEndWorldLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsCornerPipe_ActorWorldLocation1) == 0x0000A0, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsCornerPipe_ActorWorldLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsCornerPipe_TargetPipe1) == 0x0000B0, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsCornerPipe_TargetPipe1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_IsCornerPipe_bShouldFlipSpline) == 0x0000B8, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_IsCornerPipe_bShouldFlipSpline' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_BooleanOR_ReturnValue) == 0x0000B9, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_SortCompareActorsByName_ReturnValue) == 0x0000BA, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_SortCompareActorsByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CleanOwningActors, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'ProMod_Parent_C_CleanOwningActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.SetMaterialOverrides
// 0x00C0 (0x00C0 - 0x0000)
struct ProMod_Parent_C_SetMaterialOverrides final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B02[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B03[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B04[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B05[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B06[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B07[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           K2Node_Select_Default;                             // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_3;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B08[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_SetMaterialOverrides) == 0x000008, "Wrong alignment on ProMod_Parent_C_SetMaterialOverrides");
static_assert(sizeof(ProMod_Parent_C_SetMaterialOverrides) == 0x0000C0, "Wrong size on ProMod_Parent_C_SetMaterialOverrides");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ProMod_Parent_C_SetMaterialOverrides::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ProMod_Parent_C_SetMaterialOverrides::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'ProMod_Parent_C_SetMaterialOverrides::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, Temp_int_Loop_Counter_Variable_2) == 0x000010, "Member 'ProMod_Parent_C_SetMaterialOverrides::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'ProMod_Parent_C_SetMaterialOverrides::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, Temp_bool_Variable) == 0x000020, "Member 'ProMod_Parent_C_SetMaterialOverrides::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'ProMod_Parent_C_SetMaterialOverrides::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, Temp_int_Loop_Counter_Variable_3) == 0x000028, "Member 'ProMod_Parent_C_SetMaterialOverrides::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Add_IntInt_ReturnValue_3) == 0x00002C, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, Temp_int_Array_Index_Variable_3) == 0x000030, "Member 'ProMod_Parent_C_SetMaterialOverrides::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000038, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Get_Item) == 0x000050, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Length_ReturnValue_2) == 0x000068, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Length_ReturnValue_3) == 0x000078, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000080, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Less_IntInt_ReturnValue_2) == 0x000090, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, K2Node_Select_Default) == 0x000098, "Member 'ProMod_Parent_C_SetMaterialOverrides::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Get_Item_3) == 0x0000A8, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Length_ReturnValue_4) == 0x0000B0, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000B4, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Array_Length_ReturnValue_5) == 0x0000B8, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000BC, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_BooleanOR_ReturnValue) == 0x0000BD, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetMaterialOverrides, CallFunc_BooleanAND_ReturnValue) == 0x0000BE, "Member 'ProMod_Parent_C_SetMaterialOverrides::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.AddManualDetail
// 0x0150 (0x0150 - 0x0000)
struct ProMod_Parent_C_AddManualDetail final
{
public:
	class UStaticMesh*                            NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotOffset;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Scale;                                             // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B09[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0A[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ProMod_Parent_C_AddManualDetail) == 0x000010, "Wrong alignment on ProMod_Parent_C_AddManualDetail");
static_assert(sizeof(ProMod_Parent_C_AddManualDetail) == 0x000150, "Wrong size on ProMod_Parent_C_AddManualDetail");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, NewMesh) == 0x000000, "Member 'ProMod_Parent_C_AddManualDetail::NewMesh' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, RotOffset) == 0x000008, "Member 'ProMod_Parent_C_AddManualDetail::RotOffset' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, Scale) == 0x000014, "Member 'ProMod_Parent_C_AddManualDetail::Scale' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, Offset) == 0x000020, "Member 'ProMod_Parent_C_AddManualDetail::Offset' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, Param_Index) == 0x00002C, "Member 'ProMod_Parent_C_AddManualDetail::Param_Index' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, Temp_struct_Variable) == 0x000030, "Member 'ProMod_Parent_C_AddManualDetail::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'ProMod_Parent_C_AddManualDetail::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, CallFunc_SetStaticMesh_ReturnValue) == 0x000068, "Member 'ProMod_Parent_C_AddManualDetail::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'ProMod_Parent_C_AddManualDetail::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000070, "Member 'ProMod_Parent_C_AddManualDetail::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'ProMod_Parent_C_AddManualDetail::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'ProMod_Parent_C_AddManualDetail::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, CallFunc_Array_Add_ReturnValue_1) == 0x0000C0, "Member 'ProMod_Parent_C_AddManualDetail::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddManualDetail, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0000C4, "Member 'ProMod_Parent_C_AddManualDetail::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.IsSameChannel
// 0x0028 (0x0028 - 0x0000)
struct ProMod_Parent_C_IsSameChannel final
{
public:
	class AProMod_Parent_C*                       CurrentModule;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_IsSameChannel) == 0x000008, "Wrong alignment on ProMod_Parent_C_IsSameChannel");
static_assert(sizeof(ProMod_Parent_C_IsSameChannel) == 0x000028, "Wrong size on ProMod_Parent_C_IsSameChannel");
static_assert(offsetof(ProMod_Parent_C_IsSameChannel, CurrentModule) == 0x000000, "Member 'ProMod_Parent_C_IsSameChannel::CurrentModule' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsSameChannel, IsValid) == 0x000008, "Member 'ProMod_Parent_C_IsSameChannel::IsValid' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsSameChannel, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'ProMod_Parent_C_IsSameChannel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsSameChannel, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'ProMod_Parent_C_IsSameChannel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsSameChannel, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'ProMod_Parent_C_IsSameChannel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsSameChannel, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ProMod_Parent_C_IsSameChannel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsSameChannel, CallFunc_Array_Get_Item) == 0x00001C, "Member 'ProMod_Parent_C_IsSameChannel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsSameChannel, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'ProMod_Parent_C_IsSameChannel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsSameChannel, CallFunc_Array_Contains_ReturnValue) == 0x000021, "Member 'ProMod_Parent_C_IsSameChannel::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.IsValidIntersection
// 0x0240 (0x0240 - 0x0000)
struct ProMod_Parent_C_IsValidIntersection final
{
public:
	class AProMod_Parent_C*                       TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IntersectionPos;                                   // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       _TargetActor;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0D[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0070(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x00A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_3;               // 0x00D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_2;          // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_4;               // 0x0150(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_3;          // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_4;          // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_5;               // 0x01D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SegmentIntersection_out_IntersectionPoint; // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SegmentIntersection_outIntersectionDistance; // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SegmentIntersection_ReturnValue;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0E[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformLocation_ReturnValue_5;          // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SegmentIntersection_out_IntersectionPoint_1; // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SegmentIntersection_outIntersectionDistance_1; // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SegmentIntersection_ReturnValue_1;        // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_IsValidIntersection) == 0x000010, "Wrong alignment on ProMod_Parent_C_IsValidIntersection");
static_assert(sizeof(ProMod_Parent_C_IsValidIntersection) == 0x000240, "Wrong size on ProMod_Parent_C_IsValidIntersection");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, TargetActor) == 0x000000, "Member 'ProMod_Parent_C_IsValidIntersection::TargetActor' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, Valid) == 0x000008, "Member 'ProMod_Parent_C_IsValidIntersection::Valid' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, IntersectionPos) == 0x00000C, "Member 'ProMod_Parent_C_IsValidIntersection::IntersectionPos' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, _TargetActor) == 0x000018, "Member 'ProMod_Parent_C_IsValidIntersection::_TargetActor' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_TransformLocation_ReturnValue) == 0x00005C, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_GetTransform_ReturnValue_1) == 0x000070, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_GetTransform_ReturnValue_2) == 0x0000A0, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_GetTransform_ReturnValue_3) == 0x0000D0, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_GetTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_X) == 0x000100, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_Y) == 0x000104, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_Z) == 0x000108, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_X_1) == 0x00010C, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_Y_1) == 0x000110, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_Z_1) == 0x000114, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000118, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_Add_FloatFloat_ReturnValue) == 0x00011C, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_MakeVector_ReturnValue) == 0x000120, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_MakeVector_ReturnValue_1) == 0x00012C, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_TransformLocation_ReturnValue_1) == 0x000138, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_TransformLocation_ReturnValue_2) == 0x000144, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_GetTransform_ReturnValue_4) == 0x000150, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_GetTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_X_2) == 0x000180, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_Y_2) == 0x000184, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_Z_2) == 0x000188, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_X_3) == 0x00018C, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_Y_3) == 0x000190, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_BreakVector_Z_3) == 0x000194, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000198, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_MakeVector_ReturnValue_2) == 0x00019C, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001A8, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_TransformLocation_ReturnValue_3) == 0x0001AC, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_TransformLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_MakeVector_ReturnValue_3) == 0x0001B8, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_TransformLocation_ReturnValue_4) == 0x0001C4, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_TransformLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_GetTransform_ReturnValue_5) == 0x0001D0, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_GetTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_SegmentIntersection_out_IntersectionPoint) == 0x000200, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_SegmentIntersection_out_IntersectionPoint' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_SegmentIntersection_outIntersectionDistance) == 0x00020C, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_SegmentIntersection_outIntersectionDistance' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_SegmentIntersection_ReturnValue) == 0x000210, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_SegmentIntersection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_TransformLocation_ReturnValue_5) == 0x000214, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_TransformLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000220, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_SegmentIntersection_out_IntersectionPoint_1) == 0x00022C, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_SegmentIntersection_out_IntersectionPoint_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_SegmentIntersection_outIntersectionDistance_1) == 0x000238, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_SegmentIntersection_outIntersectionDistance_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsValidIntersection, CallFunc_SegmentIntersection_ReturnValue_1) == 0x00023C, "Member 'ProMod_Parent_C_IsValidIntersection::CallFunc_SegmentIntersection_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.KeepTextureRatio
// 0x0030 (0x0030 - 0x0000)
struct ProMod_Parent_C_KeepTextureRatio final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_KeepTextureRatio) == 0x000008, "Wrong alignment on ProMod_Parent_C_KeepTextureRatio");
static_assert(sizeof(ProMod_Parent_C_KeepTextureRatio) == 0x000030, "Wrong size on ProMod_Parent_C_KeepTextureRatio");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ProMod_Parent_C_KeepTextureRatio::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ProMod_Parent_C_KeepTextureRatio::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_KeepTextureRatio::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, CallFunc_BreakVector_X) == 0x00000C, "Member 'ProMod_Parent_C_KeepTextureRatio::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, CallFunc_BreakVector_Y) == 0x000010, "Member 'ProMod_Parent_C_KeepTextureRatio::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, CallFunc_BreakVector_Z) == 0x000014, "Member 'ProMod_Parent_C_KeepTextureRatio::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, CallFunc_Array_Get_Item) == 0x000018, "Member 'ProMod_Parent_C_KeepTextureRatio::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'ProMod_Parent_C_KeepTextureRatio::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'ProMod_Parent_C_KeepTextureRatio::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000028, "Member 'ProMod_Parent_C_KeepTextureRatio::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_KeepTextureRatio, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'ProMod_Parent_C_KeepTextureRatio::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.CreateDynamicMaterials
// 0x0030 (0x0030 - 0x0000)
struct ProMod_Parent_C_CreateDynamicMaterials final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B0F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_CreateDynamicMaterials) == 0x000008, "Wrong alignment on ProMod_Parent_C_CreateDynamicMaterials");
static_assert(sizeof(ProMod_Parent_C_CreateDynamicMaterials) == 0x000030, "Wrong size on ProMod_Parent_C_CreateDynamicMaterials");
static_assert(offsetof(ProMod_Parent_C_CreateDynamicMaterials, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ProMod_Parent_C_CreateDynamicMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateDynamicMaterials, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ProMod_Parent_C_CreateDynamicMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateDynamicMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_CreateDynamicMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateDynamicMaterials, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ProMod_Parent_C_CreateDynamicMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateDynamicMaterials, CallFunc_Array_Get_Item) == 0x000010, "Member 'ProMod_Parent_C_CreateDynamicMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateDynamicMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ProMod_Parent_C_CreateDynamicMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateDynamicMaterials, CallFunc_GetMaterial_ReturnValue) == 0x000020, "Member 'ProMod_Parent_C_CreateDynamicMaterials::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateDynamicMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'ProMod_Parent_C_CreateDynamicMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.AddDetailComponent
// 0x0130 (0x0130 - 0x0000)
struct ProMod_Parent_C_AddDetailComponent final
{
public:
	float                                         _minDistance;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _Offset;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            StaticMesh;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _Rotation;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable;                              // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B10[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPipeVector_ReturnValue;                // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B11[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B12[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B13[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B14[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_AddDetailComponent) == 0x000010, "Wrong alignment on ProMod_Parent_C_AddDetailComponent");
static_assert(sizeof(ProMod_Parent_C_AddDetailComponent) == 0x000130, "Wrong size on ProMod_Parent_C_AddDetailComponent");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, _minDistance) == 0x000000, "Member 'ProMod_Parent_C_AddDetailComponent::_minDistance' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, _Offset) == 0x000004, "Member 'ProMod_Parent_C_AddDetailComponent::_Offset' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, StaticMesh) == 0x000008, "Member 'ProMod_Parent_C_AddDetailComponent::StaticMesh' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, _Rotation) == 0x000010, "Member 'ProMod_Parent_C_AddDetailComponent::_Rotation' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, Temp_struct_Variable) == 0x000014, "Member 'ProMod_Parent_C_AddDetailComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, Temp_int_Variable) == 0x000020, "Member 'ProMod_Parent_C_AddDetailComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000024, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000040, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_GetPipeVector_ReturnValue) == 0x00004C, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_GetPipeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_NegateRotator_ReturnValue) == 0x000058, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_MakeRotFromX_ReturnValue) == 0x000064, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakVector_X) == 0x00007C, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakVector_Y) == 0x000080, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakVector_Z) == 0x000084, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000088, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00008C, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BooleanAND_ReturnValue) == 0x00009C, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_ComposeRotators_ReturnValue) == 0x0000A0, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakRotator_Roll_1) == 0x0000AC, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakRotator_Pitch_1) == 0x0000B0, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakRotator_Yaw_1) == 0x0000B4, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, Temp_bool_Variable) == 0x0000B8, "Member 'ProMod_Parent_C_AddDetailComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_MakeRotator_ReturnValue_1) == 0x0000BC, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, K2Node_Select_Default) == 0x0000C8, "Member 'ProMod_Parent_C_AddDetailComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakVector_X_1) == 0x0000D4, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakVector_Y_1) == 0x0000D8, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_BreakVector_Z_1) == 0x0000DC, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000110, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_AddComponent_ReturnValue) == 0x000118, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_FFloor_ReturnValue) == 0x000120, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000124, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_SetStaticMesh_ReturnValue) == 0x000125, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddDetailComponent, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000126, "Member 'ProMod_Parent_C_AddDetailComponent::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.AddPipeDetails
// 0x0150 (0x0150 - 0x0000)
struct ProMod_Parent_C_AddPipeDetails final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B15[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item_1;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B16[0x2];                                     // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPipeModuleDetailParameters            CallFunc_Array_Get_Item_2;                         // 0x0128(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_AddPipeDetails) == 0x000010, "Wrong alignment on ProMod_Parent_C_AddPipeDetails");
static_assert(sizeof(ProMod_Parent_C_AddPipeDetails) == 0x000150, "Wrong size on ProMod_Parent_C_AddPipeDetails");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, Temp_struct_Variable) == 0x000000, "Member 'ProMod_Parent_C_AddPipeDetails::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, Temp_int_Array_Index_Variable) == 0x000030, "Member 'ProMod_Parent_C_AddPipeDetails::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_AddComponent_ReturnValue) == 0x000038, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'ProMod_Parent_C_AddPipeDetails::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'ProMod_Parent_C_AddPipeDetails::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Array_Get_Item) == 0x000050, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000080, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, Temp_int_Loop_Counter_Variable_1) == 0x000108, "Member 'ProMod_Parent_C_AddPipeDetails::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Array_Length_ReturnValue_1) == 0x00010C, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000110, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Add_IntInt_ReturnValue_2) == 0x000114, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Array_Length_ReturnValue_2) == 0x000120, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_SetStaticMesh_ReturnValue) == 0x000124, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Less_IntInt_ReturnValue) == 0x000125, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Array_Length_ReturnValue_3) == 0x000140, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddPipeDetails, CallFunc_Less_IntInt_ReturnValue_1) == 0x000144, "Member 'ProMod_Parent_C_AddPipeDetails::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.GetPipeVector
// 0x0080 (0x0080 - 0x0000)
struct ProMod_Parent_C_GetPipeVector final
{
public:
	class AProMod_Parent_C*                       Pipe;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B17[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_GetPipeVector) == 0x000010, "Wrong alignment on ProMod_Parent_C_GetPipeVector");
static_assert(sizeof(ProMod_Parent_C_GetPipeVector) == 0x000080, "Wrong size on ProMod_Parent_C_GetPipeVector");
static_assert(offsetof(ProMod_Parent_C_GetPipeVector, Pipe) == 0x000000, "Member 'ProMod_Parent_C_GetPipeVector::Pipe' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetPipeVector, ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_GetPipeVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetPipeVector, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'ProMod_Parent_C_GetPipeVector::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetPipeVector, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'ProMod_Parent_C_GetPipeVector::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetPipeVector, CallFunc_TransformLocation_ReturnValue) == 0x00005C, "Member 'ProMod_Parent_C_GetPipeVector::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetPipeVector, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'ProMod_Parent_C_GetPipeVector::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetPipeVector, CallFunc_Normal_ReturnValue) == 0x000074, "Member 'ProMod_Parent_C_GetPipeVector::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.GetConnectorRotation
// 0x0140 (0x0140 - 0x0000)
struct ProMod_Parent_C_GetConnectorRotation final
{
public:
	class AProMod_Parent_C*                       LocalPipe;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       TargetPipe;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInvertedRoles;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B18[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _PivotDistanceFromTarget;                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B19[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       _LocalPipe;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PivotDistanceGreaterThanPipe2;                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          PivotDistanceGreaterThanPipe1;                     // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1A[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PivotDistanceFromTarget;                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInvertedRoles;                                    // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       Pipe2;                                             // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       Pipe1;                                             // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurentRot;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1C[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1D[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_1;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_2;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_1;              // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AProMod_Parent_C*                       K2Node_Select_Default_3;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       K2Node_Select_Default_4;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPipeVector_ReturnValue;                // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1E[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPipeVector_ReturnValue_1;              // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1F[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromXY_ReturnValue;                // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromXY_ReturnValue_1;              // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_GetConnectorRotation) == 0x000008, "Wrong alignment on ProMod_Parent_C_GetConnectorRotation");
static_assert(sizeof(ProMod_Parent_C_GetConnectorRotation) == 0x000140, "Wrong size on ProMod_Parent_C_GetConnectorRotation");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, LocalPipe) == 0x000000, "Member 'ProMod_Parent_C_GetConnectorRotation::LocalPipe' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, TargetPipe) == 0x000008, "Member 'ProMod_Parent_C_GetConnectorRotation::TargetPipe' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, IsInvertedRoles) == 0x000010, "Member 'ProMod_Parent_C_GetConnectorRotation::IsInvertedRoles' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, _PivotDistanceFromTarget) == 0x000014, "Member 'ProMod_Parent_C_GetConnectorRotation::_PivotDistanceFromTarget' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Rotation) == 0x000018, "Member 'ProMod_Parent_C_GetConnectorRotation::Rotation' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, _LocalPipe) == 0x000028, "Member 'ProMod_Parent_C_GetConnectorRotation::_LocalPipe' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, PivotDistanceGreaterThanPipe2) == 0x000030, "Member 'ProMod_Parent_C_GetConnectorRotation::PivotDistanceGreaterThanPipe2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, PivotDistanceGreaterThanPipe1) == 0x000031, "Member 'ProMod_Parent_C_GetConnectorRotation::PivotDistanceGreaterThanPipe1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, PivotDistanceFromTarget) == 0x000034, "Member 'ProMod_Parent_C_GetConnectorRotation::PivotDistanceFromTarget' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, bInvertedRoles) == 0x000038, "Member 'ProMod_Parent_C_GetConnectorRotation::bInvertedRoles' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Pipe2) == 0x000040, "Member 'ProMod_Parent_C_GetConnectorRotation::Pipe2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Pipe1) == 0x000048, "Member 'ProMod_Parent_C_GetConnectorRotation::Pipe1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CurentRot) == 0x000050, "Member 'ProMod_Parent_C_GetConnectorRotation::CurentRot' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Temp_bool_Variable) == 0x000054, "Member 'ProMod_Parent_C_GetConnectorRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Temp_bool_Variable_1) == 0x000055, "Member 'ProMod_Parent_C_GetConnectorRotation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Temp_float_Variable) == 0x000058, "Member 'ProMod_Parent_C_GetConnectorRotation::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Temp_float_Variable_1) == 0x00005C, "Member 'ProMod_Parent_C_GetConnectorRotation::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Temp_bool_Variable_2) == 0x000060, "Member 'ProMod_Parent_C_GetConnectorRotation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Temp_float_Variable_2) == 0x000064, "Member 'ProMod_Parent_C_GetConnectorRotation::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Temp_float_Variable_3) == 0x000068, "Member 'ProMod_Parent_C_GetConnectorRotation::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Temp_bool_Variable_3) == 0x00006C, "Member 'ProMod_Parent_C_GetConnectorRotation::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, Temp_bool_Variable_4) == 0x00006D, "Member 'ProMod_Parent_C_GetConnectorRotation::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00006E, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, K2Node_Select_Default) == 0x00006F, "Member 'ProMod_Parent_C_GetConnectorRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000070, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_NegateRotator_ReturnValue) == 0x00007C, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, K2Node_Select_Default_1) == 0x000088, "Member 'ProMod_Parent_C_GetConnectorRotation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x00008C, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, K2Node_Select_Default_2) == 0x000098, "Member 'ProMod_Parent_C_GetConnectorRotation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_NegateRotator_ReturnValue_1) == 0x00009C, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_NegateRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, K2Node_Select_Default_3) == 0x0000A8, "Member 'ProMod_Parent_C_GetConnectorRotation::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, K2Node_Select_Default_4) == 0x0000B0, "Member 'ProMod_Parent_C_GetConnectorRotation::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_GetPipeVector_ReturnValue) == 0x0000B8, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_GetPipeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C4, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000D0, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_BreakVector_X) == 0x0000DC, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_BreakVector_Z) == 0x0000E4, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E8, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000EC, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_BreakVector_X_1) == 0x0000F0, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_BreakVector_Y_1) == 0x0000F4, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_BreakVector_Z_1) == 0x0000F8, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000FC, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_GetPipeVector_ReturnValue_1) == 0x000100, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_GetPipeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00010C, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_MakeRotFromXY_ReturnValue) == 0x000110, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_MakeRotFromXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_ComposeRotators_ReturnValue) == 0x00011C, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_MakeRotFromXY_ReturnValue_1) == 0x000128, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_MakeRotFromXY_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetConnectorRotation, CallFunc_ComposeRotators_ReturnValue_1) == 0x000134, "Member 'ProMod_Parent_C_GetConnectorRotation::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.ClearAllComponents
// 0x0038 (0x0038 - 0x0000)
struct ProMod_Parent_C_ClearAllComponents final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B20[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B21[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_ClearAllComponents) == 0x000008, "Wrong alignment on ProMod_Parent_C_ClearAllComponents");
static_assert(sizeof(ProMod_Parent_C_ClearAllComponents) == 0x000038, "Wrong size on ProMod_Parent_C_ClearAllComponents");
static_assert(offsetof(ProMod_Parent_C_ClearAllComponents, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ProMod_Parent_C_ClearAllComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ClearAllComponents, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ProMod_Parent_C_ClearAllComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ClearAllComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_ClearAllComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ClearAllComponents, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'ProMod_Parent_C_ClearAllComponents::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ClearAllComponents, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ProMod_Parent_C_ClearAllComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ClearAllComponents, CallFunc_Array_Get_Item) == 0x000028, "Member 'ProMod_Parent_C_ClearAllComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ClearAllComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'ProMod_Parent_C_ClearAllComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.RegisterToPipeModuleManager
// 0x00B8 (0x00B8 - 0x0000)
struct ProMod_Parent_C_RegisterToPipeModuleManager final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B22[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Manager_C*                      K2Node_DynamicCast_AsPro_Mod_Manager;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B23[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Manager_C*                      K2Node_DynamicCast_AsPro_Mod_Manager_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B24[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AProMod_Parent_C>        CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0038(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B25[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AProMod_Manager_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	class AProMod_Manager_C*                      CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B26[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AProMod_Manager_C>       CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x0088(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_RegisterToPipeModuleManager) == 0x000008, "Wrong alignment on ProMod_Parent_C_RegisterToPipeModuleManager");
static_assert(sizeof(ProMod_Parent_C_RegisterToPipeModuleManager) == 0x0000B8, "Wrong size on ProMod_Parent_C_RegisterToPipeModuleManager");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, Valid) == 0x000000, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::Valid' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000010, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, K2Node_DynamicCast_AsPro_Mod_Manager) == 0x000018, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::K2Node_DynamicCast_AsPro_Mod_Manager' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, K2Node_DynamicCast_AsPro_Mod_Manager_1) == 0x000028, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::K2Node_DynamicCast_AsPro_Mod_Manager_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000038, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_Array_Contains_ReturnValue) == 0x000064, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000068, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_Array_Get_Item) == 0x000078, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x000088, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B0, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_RegisterToPipeModuleManager, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B1, "Member 'ProMod_Parent_C_RegisterToPipeModuleManager::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.CreateSplineMeshComp
// 0x0350 (0x0350 - 0x0000)
struct ProMod_Parent_C_CreateSplineMeshComp final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tangent1;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation2;                                    // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tangen2;                                           // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       TargetPipeModule;                                  // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldFlipSpline;                                 // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B27[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   SplineMeshComp;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B28[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B29[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable_3;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2A[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegreesToRadians_ReturnValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2B[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2C[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_AddSplineMeshComponent_ReturnValue;       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_3;                           // 0x00D0(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2D[0x2];                                     // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_4;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2E[0xC];                                     // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00F0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0160(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x0190(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue_1;            // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue_2;            // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_2;          // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2F[0x8];                                     // 0x0238(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_3;               // 0x0240(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue_3;            // 0x02A0(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddStaticMesh_ReturnValue;                // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_3;          // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_CreateSplineMeshComp) == 0x000010, "Wrong alignment on ProMod_Parent_C_CreateSplineMeshComp");
static_assert(sizeof(ProMod_Parent_C_CreateSplineMeshComp) == 0x000350, "Wrong size on ProMod_Parent_C_CreateSplineMeshComp");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, WorldLocation) == 0x000000, "Member 'ProMod_Parent_C_CreateSplineMeshComp::WorldLocation' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Tangent1) == 0x00000C, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Tangent1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, WorldLocation2) == 0x000018, "Member 'ProMod_Parent_C_CreateSplineMeshComp::WorldLocation2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Tangen2) == 0x000024, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Tangen2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, TargetPipeModule) == 0x000030, "Member 'ProMod_Parent_C_CreateSplineMeshComp::TargetPipeModule' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, bShouldFlipSpline) == 0x000038, "Member 'ProMod_Parent_C_CreateSplineMeshComp::bShouldFlipSpline' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, SplineMeshComp) == 0x000040, "Member 'ProMod_Parent_C_CreateSplineMeshComp::SplineMeshComp' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Temp_float_Variable) == 0x000048, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Temp_bool_Variable) == 0x00004C, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Temp_float_Variable_1) == 0x000050, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Temp_float_Variable_2) == 0x000054, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Temp_bool_Variable_1) == 0x000064, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, K2Node_Select_Default) == 0x000068, "Member 'ProMod_Parent_C_CreateSplineMeshComp::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00006C, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000084, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Temp_float_Variable_3) == 0x000090, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_BreakRotator_Roll_1) == 0x000094, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_BreakRotator_Pitch_1) == 0x000098, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_BreakRotator_Yaw_1) == 0x00009C, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Temp_bool_Variable_2) == 0x0000A4, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_DegreesToRadians_ReturnValue) == 0x0000A8, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, K2Node_Select_Default_1) == 0x0000AC, "Member 'ProMod_Parent_C_CreateSplineMeshComp::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Temp_bool_Variable_3) == 0x0000B0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_MakeVector_ReturnValue) == 0x0000B4, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, K2Node_Select_Default_2) == 0x0000C0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_AddSplineMeshComponent_ReturnValue) == 0x0000C8, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_AddSplineMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, K2Node_Select_Default_3) == 0x0000D0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, Temp_bool_Variable_4) == 0x0000DC, "Member 'ProMod_Parent_C_CreateSplineMeshComp::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_SetStaticMesh_ReturnValue) == 0x0000DD, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, K2Node_Select_Default_4) == 0x0000E0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_GetTransform_ReturnValue) == 0x0000F0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_InvertTransform_ReturnValue) == 0x000120, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Array_Add_ReturnValue) == 0x000150, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_TransformLocation_ReturnValue) == 0x000154, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_GetTransform_ReturnValue_1) == 0x000160, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_GetTransform_ReturnValue_2) == 0x000190, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_InvertTransform_ReturnValue_1) == 0x0001C0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_InvertTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_InvertTransform_ReturnValue_2) == 0x0001F0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_InvertTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_TransformLocation_ReturnValue_1) == 0x000220, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_TransformLocation_ReturnValue_2) == 0x00022C, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_GetTransform_ReturnValue_3) == 0x000240, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_GetTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_MakeTransform_ReturnValue) == 0x000270, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_InvertTransform_ReturnValue_3) == 0x0002A0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_InvertTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_AddStaticMesh_ReturnValue) == 0x0002D0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_AddStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_TransformLocation_ReturnValue_3) == 0x0002D8, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_TransformLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002E4, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Normal_ReturnValue) == 0x0002F0, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002FC, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000308, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000314, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Normal_ReturnValue_1) == 0x000320, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00032C, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateSplineMeshComp, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000338, "Member 'ProMod_Parent_C_CreateSplineMeshComp::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.isCornerPipe
// 0x0190 (0x0190 - 0x0000)
struct ProMod_Parent_C_IsCornerPipe final
{
public:
	class AProMod_Parent_C*                       _TargetPipe;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsCornerPipe;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B30[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation1;                                   // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetEndWorldLocation1;                           // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorEndWorldLocation1;                            // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorWorldLocation1;                               // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B31[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProMod_Parent_C*                       TargetPipe1;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldFlipSpline;                                 // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B32[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Distances;                                         // 0x0050(0x0010)(Edit, BlueprintVisible)
	struct FVector                                TargetEndWorldLocation;                            // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x006C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorEndWorldLocation;                             // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorWorldLocation;                                // 0x0084(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       TargetPipe;                                        // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B33[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B34[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_3;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0150(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_IsCornerPipe) == 0x000010, "Wrong alignment on ProMod_Parent_C_IsCornerPipe");
static_assert(sizeof(ProMod_Parent_C_IsCornerPipe) == 0x000190, "Wrong size on ProMod_Parent_C_IsCornerPipe");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, _TargetPipe) == 0x000000, "Member 'ProMod_Parent_C_IsCornerPipe::_TargetPipe' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, Param_IsCornerPipe) == 0x000008, "Member 'ProMod_Parent_C_IsCornerPipe::Param_IsCornerPipe' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, TargetLocation1) == 0x00000C, "Member 'ProMod_Parent_C_IsCornerPipe::TargetLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, TargetEndWorldLocation1) == 0x000018, "Member 'ProMod_Parent_C_IsCornerPipe::TargetEndWorldLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, ActorEndWorldLocation1) == 0x000024, "Member 'ProMod_Parent_C_IsCornerPipe::ActorEndWorldLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, ActorWorldLocation1) == 0x000030, "Member 'ProMod_Parent_C_IsCornerPipe::ActorWorldLocation1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, TargetPipe1) == 0x000040, "Member 'ProMod_Parent_C_IsCornerPipe::TargetPipe1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, bShouldFlipSpline) == 0x000048, "Member 'ProMod_Parent_C_IsCornerPipe::bShouldFlipSpline' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, Distances) == 0x000050, "Member 'ProMod_Parent_C_IsCornerPipe::Distances' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, TargetEndWorldLocation) == 0x000060, "Member 'ProMod_Parent_C_IsCornerPipe::TargetEndWorldLocation' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, TargetLocation) == 0x00006C, "Member 'ProMod_Parent_C_IsCornerPipe::TargetLocation' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, ActorEndWorldLocation) == 0x000078, "Member 'ProMod_Parent_C_IsCornerPipe::ActorEndWorldLocation' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, ActorWorldLocation) == 0x000084, "Member 'ProMod_Parent_C_IsCornerPipe::ActorWorldLocation' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, TargetPipe) == 0x000090, "Member 'ProMod_Parent_C_IsCornerPipe::TargetPipe' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D0, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_TransformLocation_ReturnValue) == 0x0000DC, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x0000E8, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_MinOfFloatArray_MinValue) == 0x0000EC, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F0, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, K2Node_SwitchInteger_CmpSuccess) == 0x0000F1, "Member 'ProMod_Parent_C_IsCornerPipe::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F4, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000100, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_VSize_ReturnValue) == 0x00010C, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_VSize_ReturnValue_1) == 0x000110, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_Array_Add_ReturnValue_1) == 0x000118, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x00011C, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000128, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_VSize_ReturnValue_2) == 0x000134, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_VSize_ReturnValue_3) == 0x000138, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_Array_Add_ReturnValue_2) == 0x00013C, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_Array_Add_ReturnValue_3) == 0x000140, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000144, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_GetTransform_ReturnValue_1) == 0x000150, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCornerPipe, CallFunc_TransformLocation_ReturnValue_1) == 0x000180, "Member 'ProMod_Parent_C_IsCornerPipe::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.IsCurrentAtFullExtentFromTarget
// 0x00D0 (0x00D0 - 0x0000)
struct ProMod_Parent_C_IsCurrentAtFullExtentFromTarget final
{
public:
	class AProMod_Parent_C*                       TargetPipeModule1;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       TargetPipeModule2;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAtFullExtent;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B35[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PivotDistanceFromTarget;                           // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_EndPipeThreshold;                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B36[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B37[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B38[0x1];                                     // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget) == 0x000010, "Wrong alignment on ProMod_Parent_C_IsCurrentAtFullExtentFromTarget");
static_assert(sizeof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget) == 0x0000D0, "Wrong size on ProMod_Parent_C_IsCurrentAtFullExtentFromTarget");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, TargetPipeModule1) == 0x000000, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::TargetPipeModule1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, TargetPipeModule2) == 0x000008, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::TargetPipeModule2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, IsAtFullExtent) == 0x000010, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::IsAtFullExtent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, PivotDistanceFromTarget) == 0x000014, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::PivotDistanceFromTarget' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, Param_EndPipeThreshold) == 0x000018, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::Param_EndPipeThreshold' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_BreakVector_X) == 0x000060, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_BreakVector_Y) == 0x000064, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_BreakVector_Z) == 0x000068, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_InvertTransform_ReturnValue) == 0x000070, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_TransformLocation_ReturnValue) == 0x0000A0, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_BreakVector_X_1) == 0x0000B0, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_BreakVector_Y_1) == 0x0000B4, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_BreakVector_Z_1) == 0x0000B8, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000BC, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000BD, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_BooleanAND_ReturnValue) == 0x0000BE, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C0, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C4, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000C9, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_IsCurrentAtFullExtentFromTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x0000CA, "Member 'ProMod_Parent_C_IsCurrentAtFullExtentFromTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.AddUniqueSMCAndActorToArray
// 0x0078 (0x0078 - 0x0000)
struct ProMod_Parent_C_AddUniqueSMCAndActorToArray final
{
public:
	class AProMod_Parent_C*                       TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineMeshComponent;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AProMod_Parent_C>        CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0018(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class AProMod_Parent_C>        CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x0040(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_AddUniqueSMCAndActorToArray) == 0x000008, "Wrong alignment on ProMod_Parent_C_AddUniqueSMCAndActorToArray");
static_assert(sizeof(ProMod_Parent_C_AddUniqueSMCAndActorToArray) == 0x000078, "Wrong size on ProMod_Parent_C_AddUniqueSMCAndActorToArray");
static_assert(offsetof(ProMod_Parent_C_AddUniqueSMCAndActorToArray, TargetActor) == 0x000000, "Member 'ProMod_Parent_C_AddUniqueSMCAndActorToArray::TargetActor' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddUniqueSMCAndActorToArray, StaticMeshComponent) == 0x000008, "Member 'ProMod_Parent_C_AddUniqueSMCAndActorToArray::StaticMeshComponent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddUniqueSMCAndActorToArray, SplineMeshComponent) == 0x000010, "Member 'ProMod_Parent_C_AddUniqueSMCAndActorToArray::SplineMeshComponent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddUniqueSMCAndActorToArray, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000018, "Member 'ProMod_Parent_C_AddUniqueSMCAndActorToArray::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddUniqueSMCAndActorToArray, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x000040, "Member 'ProMod_Parent_C_AddUniqueSMCAndActorToArray::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddUniqueSMCAndActorToArray, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'ProMod_Parent_C_AddUniqueSMCAndActorToArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddUniqueSMCAndActorToArray, CallFunc_Array_Find_ReturnValue) == 0x00006C, "Member 'ProMod_Parent_C_AddUniqueSMCAndActorToArray::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddUniqueSMCAndActorToArray, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'ProMod_Parent_C_AddUniqueSMCAndActorToArray::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.GetAxisFromVector
// 0x0040 (0x0040 - 0x0000)
struct ProMod_Parent_C_GetAxisFromVector final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AxisIndex;                                         // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_GetAxisFromVector) == 0x000008, "Wrong alignment on ProMod_Parent_C_GetAxisFromVector");
static_assert(sizeof(ProMod_Parent_C_GetAxisFromVector) == 0x000040, "Wrong size on ProMod_Parent_C_GetAxisFromVector");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, Vector) == 0x000000, "Member 'ProMod_Parent_C_GetAxisFromVector::Vector' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, AxisIndex) == 0x00000C, "Member 'ProMod_Parent_C_GetAxisFromVector::AxisIndex' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, CallFunc_BreakVector_X) == 0x000010, "Member 'ProMod_Parent_C_GetAxisFromVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, CallFunc_BreakVector_Y) == 0x000014, "Member 'ProMod_Parent_C_GetAxisFromVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, CallFunc_BreakVector_Z) == 0x000018, "Member 'ProMod_Parent_C_GetAxisFromVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, CallFunc_Abs_ReturnValue) == 0x00001C, "Member 'ProMod_Parent_C_GetAxisFromVector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, CallFunc_Abs_ReturnValue_1) == 0x000020, "Member 'ProMod_Parent_C_GetAxisFromVector::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, CallFunc_Abs_ReturnValue_2) == 0x000024, "Member 'ProMod_Parent_C_GetAxisFromVector::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, K2Node_MakeArray_Array) == 0x000028, "Member 'ProMod_Parent_C_GetAxisFromVector::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000038, "Member 'ProMod_Parent_C_GetAxisFromVector::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetAxisFromVector, CallFunc_MaxOfFloatArray_MaxValue) == 0x00003C, "Member 'ProMod_Parent_C_GetAxisFromVector::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.MakePipeConnection
// 0x0050 (0x0050 - 0x0000)
struct ProMod_Parent_C_MakePipeConnection final
{
public:
	TArray<TSoftObjectPtr<class AProMod_Parent_C>> PipesRef;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bInvertRoles;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B39[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IntersectionPoint;                                 // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProMod_Parent_C*                       PipeModuleToSkip;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExternalRefresh;                                 // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PivotDistanceFromTarget;                           // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_EndPipeThreshold;                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetEnd;                                         // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_MakePipeConnection) == 0x000008, "Wrong alignment on ProMod_Parent_C_MakePipeConnection");
static_assert(sizeof(ProMod_Parent_C_MakePipeConnection) == 0x000050, "Wrong size on ProMod_Parent_C_MakePipeConnection");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection, PipesRef) == 0x000000, "Member 'ProMod_Parent_C_MakePipeConnection::PipesRef' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection, bInvertRoles) == 0x000010, "Member 'ProMod_Parent_C_MakePipeConnection::bInvertRoles' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection, IntersectionPoint) == 0x000014, "Member 'ProMod_Parent_C_MakePipeConnection::IntersectionPoint' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection, PipeModuleToSkip) == 0x000020, "Member 'ProMod_Parent_C_MakePipeConnection::PipeModuleToSkip' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection, IsExternalRefresh) == 0x000028, "Member 'ProMod_Parent_C_MakePipeConnection::IsExternalRefresh' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection, PivotDistanceFromTarget) == 0x00002C, "Member 'ProMod_Parent_C_MakePipeConnection::PivotDistanceFromTarget' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection, Param_EndPipeThreshold) == 0x000030, "Member 'ProMod_Parent_C_MakePipeConnection::Param_EndPipeThreshold' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection, TargetEnd) == 0x000034, "Member 'ProMod_Parent_C_MakePipeConnection::TargetEnd' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MakePipeConnection, TargetLocation) == 0x000040, "Member 'ProMod_Parent_C_MakePipeConnection::TargetLocation' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.MoveAnchorGizmos
// 0x0110 (0x0110 - 0x0000)
struct ProMod_Parent_C_MoveAnchorGizmos final
{
public:
	int32                                         CallFunc_IsPropertyWidgetSelected_outWidgetIndex;  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPropertyWidgetSelected_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddActorLocalOffset_SweepHitResult;    // 0x0008(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_MoveAnchorGizmos) == 0x000010, "Wrong alignment on ProMod_Parent_C_MoveAnchorGizmos");
static_assert(sizeof(ProMod_Parent_C_MoveAnchorGizmos) == 0x000110, "Wrong size on ProMod_Parent_C_MoveAnchorGizmos");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_IsPropertyWidgetSelected_outWidgetIndex) == 0x000000, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_IsPropertyWidgetSelected_outWidgetIndex' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_IsPropertyWidgetSelected_ReturnValue) == 0x000004, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_IsPropertyWidgetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_K2_AddActorLocalOffset_SweepHitResult) == 0x000008, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_K2_AddActorLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_InverseTransformRotation_ReturnValue) == 0x0000C0, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000CC, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D8, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000E4, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000F0, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_MoveAnchorGizmos, CallFunc_Add_VectorVector_ReturnValue) == 0x0000FC, "Member 'ProMod_Parent_C_MoveAnchorGizmos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.AssingDynMatData
// 0x0030 (0x0030 - 0x0000)
struct ProMod_Parent_C_AssingDynMatData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_AssingDynMatData) == 0x000008, "Wrong alignment on ProMod_Parent_C_AssingDynMatData");
static_assert(sizeof(ProMod_Parent_C_AssingDynMatData) == 0x000030, "Wrong size on ProMod_Parent_C_AssingDynMatData");
static_assert(offsetof(ProMod_Parent_C_AssingDynMatData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ProMod_Parent_C_AssingDynMatData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssingDynMatData, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ProMod_Parent_C_AssingDynMatData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssingDynMatData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_AssingDynMatData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssingDynMatData, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'ProMod_Parent_C_AssingDynMatData::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssingDynMatData, CallFunc_Array_Get_Item) == 0x000020, "Member 'ProMod_Parent_C_AssingDynMatData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssingDynMatData, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ProMod_Parent_C_AssingDynMatData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssingDynMatData, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'ProMod_Parent_C_AssingDynMatData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.AssignLightChannel
// 0x0020 (0x0020 - 0x0000)
struct ProMod_Parent_C_AssignLightChannel final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_AssignLightChannel) == 0x000008, "Wrong alignment on ProMod_Parent_C_AssignLightChannel");
static_assert(sizeof(ProMod_Parent_C_AssignLightChannel) == 0x000020, "Wrong size on ProMod_Parent_C_AssignLightChannel");
static_assert(offsetof(ProMod_Parent_C_AssignLightChannel, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ProMod_Parent_C_AssignLightChannel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignLightChannel, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ProMod_Parent_C_AssignLightChannel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignLightChannel, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_AssignLightChannel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignLightChannel, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ProMod_Parent_C_AssignLightChannel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignLightChannel, CallFunc_Array_Get_Item) == 0x000010, "Member 'ProMod_Parent_C_AssignLightChannel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignLightChannel, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ProMod_Parent_C_AssignLightChannel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.CreateStretchingMeshesComponents
// 0x0001 (0x0001 - 0x0000)
struct ProMod_Parent_C_CreateStretchingMeshesComponents final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_CreateStretchingMeshesComponents) == 0x000001, "Wrong alignment on ProMod_Parent_C_CreateStretchingMeshesComponents");
static_assert(sizeof(ProMod_Parent_C_CreateStretchingMeshesComponents) == 0x000001, "Wrong size on ProMod_Parent_C_CreateStretchingMeshesComponents");
static_assert(offsetof(ProMod_Parent_C_CreateStretchingMeshesComponents, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ProMod_Parent_C_CreateStretchingMeshesComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.CreateLibraryMeshes
// 0x00E0 (0x00E0 - 0x0000)
struct ProMod_Parent_C_CreateLibraryMeshes final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3E[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3F[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStretchableModulesPartsRandomization  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B40[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B41[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x008C(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x009C(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_3;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B42[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStretchableModulesPartsRandomization  CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B43[0x1];                                     // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_CreateLibraryMeshes) == 0x000008, "Wrong alignment on ProMod_Parent_C_CreateLibraryMeshes");
static_assert(sizeof(ProMod_Parent_C_CreateLibraryMeshes) == 0x0000E0, "Wrong size on ProMod_Parent_C_CreateLibraryMeshes");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, Temp_int_Variable) == 0x000000, "Member 'ProMod_Parent_C_CreateLibraryMeshes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, Temp_int_Variable_1) == 0x00000C, "Member 'ProMod_Parent_C_CreateLibraryMeshes::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, Temp_int_Variable_2) == 0x000014, "Member 'ProMod_Parent_C_CreateLibraryMeshes::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'ProMod_Parent_C_CreateLibraryMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_3) == 0x000020, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, Temp_int_Array_Index_Variable) == 0x000024, "Member 'ProMod_Parent_C_CreateLibraryMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'ProMod_Parent_C_CreateLibraryMeshes::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Greater_IntInt_ReturnValue) == 0x00002D, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Array_Get_Item) == 0x000040, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000070, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000078, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000079, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000084, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000088, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_MakeRandomStream_ReturnValue) == 0x00008C, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_4) == 0x000094, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000098, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_MakeRandomStream_ReturnValue_1) == 0x00009C, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, Temp_int_Variable_3) == 0x0000A4, "Member 'ProMod_Parent_C_CreateLibraryMeshes::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x0000A8, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000AC, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000B0, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Array_Length_ReturnValue_3) == 0x0000B4, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000D9, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000DA, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateLibraryMeshes, CallFunc_Array_Add_ReturnValue_1) == 0x0000DC, "Member 'ProMod_Parent_C_CreateLibraryMeshes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.ShuffleSpecialMeshesSeed
// 0x0068 (0x0068 - 0x0000)
struct ProMod_Parent_C_ShuffleSpecialMeshesSeed final
{
public:
	TArray<class UStaticMesh*>                    _Staticmeshes;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UStaticMesh*>                    SuffledSM;                                         // 0x0010(0x0010)(Parm, OutParm)
	TArray<class UStaticMesh*>                    _ShuffledStaticmeshes;                             // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B44[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x004C(0x0008)(ZeroConstructor, NoDestructor)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x0054(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_ShuffleSpecialMeshesSeed) == 0x000008, "Wrong alignment on ProMod_Parent_C_ShuffleSpecialMeshesSeed");
static_assert(sizeof(ProMod_Parent_C_ShuffleSpecialMeshesSeed) == 0x000068, "Wrong size on ProMod_Parent_C_ShuffleSpecialMeshesSeed");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, _Staticmeshes) == 0x000000, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::_Staticmeshes' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, SuffledSM) == 0x000010, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::SuffledSM' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, _ShuffledStaticmeshes) == 0x000020, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::_ShuffledStaticmeshes' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, Temp_int_Variable) == 0x000030, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000044, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_MakeRandomStream_ReturnValue) == 0x00004C, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_MakeRandomStream_ReturnValue_1) == 0x000054, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x00005C, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleSpecialMeshesSeed, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x000060, "Member 'ProMod_Parent_C_ShuffleSpecialMeshesSeed::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.AssignPerLibMeshMaterialOverride
// 0x0080 (0x0080 - 0x0000)
struct ProMod_Parent_C_AssignPerLibMeshMaterialOverride final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B45[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStretchableModulesPartsRandomization  CallFunc_Array_Get_Item;                           // 0x0028(0x0020)(HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B46[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B47[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B48[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride) == 0x000008, "Wrong alignment on ProMod_Parent_C_AssignPerLibMeshMaterialOverride");
static_assert(sizeof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride) == 0x000080, "Wrong size on ProMod_Parent_C_AssignPerLibMeshMaterialOverride");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Get_Item) == 0x000028, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_GetNumMaterials_ReturnValue) == 0x000050, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000065, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00006D, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Array_Length_ReturnValue_2) == 0x000074, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AssignPerLibMeshMaterialOverride, CallFunc_Less_IntInt_ReturnValue_2) == 0x000079, "Member 'ProMod_Parent_C_AssignPerLibMeshMaterialOverride::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.ShuffleWithSeed
// 0x0048 (0x0048 - 0x0000)
struct ProMod_Parent_C_ShuffleWithSeed final
{
public:
	TArray<class UStaticMesh*>                    _ShuffledComponents;                               // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x001C(0x0008)(ZeroConstructor, NoDestructor)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x0024(0x0008)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B49[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_ShuffleWithSeed) == 0x000008, "Wrong alignment on ProMod_Parent_C_ShuffleWithSeed");
static_assert(sizeof(ProMod_Parent_C_ShuffleWithSeed) == 0x000048, "Wrong size on ProMod_Parent_C_ShuffleWithSeed");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, _ShuffledComponents) == 0x000000, "Member 'ProMod_Parent_C_ShuffleWithSeed::_ShuffledComponents' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, Temp_int_Variable) == 0x000010, "Member 'ProMod_Parent_C_ShuffleWithSeed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_MakeRandomStream_ReturnValue) == 0x00001C, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_MakeRandomStream_ReturnValue_1) == 0x000024, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000038, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x00003C, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ShuffleWithSeed, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x000040, "Member 'ProMod_Parent_C_ShuffleWithSeed::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.GetStandardStaticmeshLibrary
// 0x00B8 (0x00B8 - 0x0000)
struct ProMod_Parent_C_GetStandardStaticmeshLibrary final
{
public:
	TArray<class UStaticMesh*>                    _PossibleMeshLibrary;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UStaticMesh*>                    PossibleMeshLibrary;                               // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentLibrabryCount;                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B4A[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0040(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStretchableModulesPartsRandomization  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B4C[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B4D[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStretchableModulesPartsRandomization  CallFunc_Array_Get_Item_1;                         // 0x0090(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B4E[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_GetStandardStaticmeshLibrary) == 0x000008, "Wrong alignment on ProMod_Parent_C_GetStandardStaticmeshLibrary");
static_assert(sizeof(ProMod_Parent_C_GetStandardStaticmeshLibrary) == 0x0000B8, "Wrong size on ProMod_Parent_C_GetStandardStaticmeshLibrary");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, _PossibleMeshLibrary) == 0x000000, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::_PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, PossibleMeshLibrary) == 0x000010, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CurrentLibrabryCount) == 0x000020, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CurrentLibrabryCount' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, Temp_int_Variable) == 0x000030, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000040, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Array_Get_Item) == 0x000050, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000084, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000085, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Array_AddUnique_ReturnValue) == 0x000088, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000B1, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetStandardStaticmeshLibrary, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000B4, "Member 'ProMod_Parent_C_GetStandardStaticmeshLibrary::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.GetSpecialStaticmeshLibrary
// 0x0080 (0x0080 - 0x0000)
struct ProMod_Parent_C_GetSpecialStaticmeshLibrary final
{
public:
	TArray<class UStaticMesh*>                    _PossibleMeshLibrary;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UStaticMesh*>                    PossibleMeshLibrary;                               // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentLibrabryCount;                              // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStretchableModulesPartsRandomization  CallFunc_Array_Get_Item;                           // 0x0040(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B4F[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_GetSpecialStaticmeshLibrary) == 0x000008, "Wrong alignment on ProMod_Parent_C_GetSpecialStaticmeshLibrary");
static_assert(sizeof(ProMod_Parent_C_GetSpecialStaticmeshLibrary) == 0x000080, "Wrong size on ProMod_Parent_C_GetSpecialStaticmeshLibrary");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, _PossibleMeshLibrary) == 0x000000, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::_PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, PossibleMeshLibrary) == 0x000010, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CurrentLibrabryCount) == 0x000020, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CurrentLibrabryCount' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, Temp_int_Array_Index_Variable) == 0x000024, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, Temp_int_Variable) == 0x000030, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Array_Get_Item) == 0x000040, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Less_IntInt_ReturnValue_1) == 0x000065, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Greater_IntInt_ReturnValue) == 0x000066, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Array_AddUnique_ReturnValue) == 0x000068, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_Less_IntInt_ReturnValue_2) == 0x00007C, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetSpecialStaticmeshLibrary, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00007D, "Member 'ProMod_Parent_C_GetSpecialStaticmeshLibrary::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.ReassignStaticMeshFromLibrary
// 0x0080 (0x0080 - 0x0000)
struct ProMod_Parent_C_ReassignStaticMeshFromLibrary final
{
public:
	bool                                          StaticmeshSet;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B50[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B51[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B52[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor)
	TArray<class UStaticMesh*>                    CallFunc_GetStandardStaticmeshLibrary__PossibleMeshLibrary; // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue_1;           // 0x003C(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B53[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B54[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_ReassignStaticMeshFromLibrary) == 0x000008, "Wrong alignment on ProMod_Parent_C_ReassignStaticMeshFromLibrary");
static_assert(sizeof(ProMod_Parent_C_ReassignStaticMeshFromLibrary) == 0x000080, "Wrong size on ProMod_Parent_C_ReassignStaticMeshFromLibrary");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, StaticmeshSet) == 0x000000, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::StaticmeshSet' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_MakeRandomStream_ReturnValue) == 0x000020, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_GetStandardStaticmeshLibrary__PossibleMeshLibrary) == 0x000028, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_GetStandardStaticmeshLibrary__PossibleMeshLibrary' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_MakeRandomStream_ReturnValue_1) == 0x00003C, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_MakeRandomStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000044, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x000048, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1) == 0x00004C, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_RandomIntegerInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Get_Item) == 0x000050, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000064, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_SetStaticMesh_ReturnValue) == 0x000070, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000071, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Array_Length_ReturnValue_3) == 0x000074, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ReassignStaticMeshFromLibrary, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'ProMod_Parent_C_ReassignStaticMeshFromLibrary::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.GetScale
// 0x009C (0x009C - 0x0000)
struct ProMod_Parent_C_GetScale final
{
public:
	ELockAxis                                     Axis;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B55[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentModuleScale;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingTiling;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B56[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B57[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELockAxis                                     Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B58[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockAxis                                     Temp_byte_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B59[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0050(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_GetScale) == 0x000004, "Wrong alignment on ProMod_Parent_C_GetScale");
static_assert(sizeof(ProMod_Parent_C_GetScale) == 0x00009C, "Wrong size on ProMod_Parent_C_GetScale");
static_assert(offsetof(ProMod_Parent_C_GetScale, Axis) == 0x000000, "Member 'ProMod_Parent_C_GetScale::Axis' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CurrentModuleScale) == 0x000004, "Member 'ProMod_Parent_C_GetScale::CurrentModuleScale' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, UsingTiling) == 0x000008, "Member 'ProMod_Parent_C_GetScale::UsingTiling' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Scale) == 0x00000C, "Member 'ProMod_Parent_C_GetScale::Scale' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_bool_Variable) == 0x000010, "Member 'ProMod_Parent_C_GetScale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'ProMod_Parent_C_GetScale::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'ProMod_Parent_C_GetScale::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_byte_Variable) == 0x000019, "Member 'ProMod_Parent_C_GetScale::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_float_Variable) == 0x00001C, "Member 'ProMod_Parent_C_GetScale::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_float_Variable_1) == 0x000020, "Member 'ProMod_Parent_C_GetScale::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_float_Variable_2) == 0x000024, "Member 'ProMod_Parent_C_GetScale::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_float_Variable_3) == 0x000028, "Member 'ProMod_Parent_C_GetScale::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_byte_Variable_1) == 0x00002C, "Member 'ProMod_Parent_C_GetScale::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_float_Variable_4) == 0x000030, "Member 'ProMod_Parent_C_GetScale::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_float_Variable_5) == 0x000034, "Member 'ProMod_Parent_C_GetScale::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_float_Variable_6) == 0x000038, "Member 'ProMod_Parent_C_GetScale::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, Temp_float_Variable_7) == 0x00003C, "Member 'ProMod_Parent_C_GetScale::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_BreakVector_X) == 0x000040, "Member 'ProMod_Parent_C_GetScale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_BreakVector_Y) == 0x000044, "Member 'ProMod_Parent_C_GetScale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_BreakVector_Z) == 0x000048, "Member 'ProMod_Parent_C_GetScale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, K2Node_Select_Default) == 0x00004C, "Member 'ProMod_Parent_C_GetScale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_GetBounds_ReturnValue) == 0x000050, "Member 'ProMod_Parent_C_GetScale::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_SignOfFloat_ReturnValue) == 0x00006C, "Member 'ProMod_Parent_C_GetScale::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'ProMod_Parent_C_GetScale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_BreakVector_X_1) == 0x000074, "Member 'ProMod_Parent_C_GetScale::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'ProMod_Parent_C_GetScale::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_BreakVector_Z_1) == 0x00007C, "Member 'ProMod_Parent_C_GetScale::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, K2Node_Select_Default_1) == 0x000080, "Member 'ProMod_Parent_C_GetScale::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000084, "Member 'ProMod_Parent_C_GetScale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000088, "Member 'ProMod_Parent_C_GetScale::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'ProMod_Parent_C_GetScale::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000090, "Member 'ProMod_Parent_C_GetScale::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000094, "Member 'ProMod_Parent_C_GetScale::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetScale, K2Node_Select_Default_2) == 0x000098, "Member 'ProMod_Parent_C_GetScale::K2Node_Select_Default_2' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.GetOffset
// 0x0104 (0x0104 - 0x0000)
struct ProMod_Parent_C_GetOffset final
{
public:
	ELockAxis                                     Axis;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentModuleScale;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxDistance;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumLoop;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTiling;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5B[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Offset;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5C[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELockAxis                                     Temp_byte_Variable;                                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5D[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockAxis                                     Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5E[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockAxis                                     Temp_byte_Variable_2;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5F[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_8;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELockAxis                                     Temp_byte_Variable_3;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B60[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x00BC(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_GetOffset) == 0x000004, "Wrong alignment on ProMod_Parent_C_GetOffset");
static_assert(sizeof(ProMod_Parent_C_GetOffset) == 0x000104, "Wrong size on ProMod_Parent_C_GetOffset");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Axis) == 0x000000, "Member 'ProMod_Parent_C_GetOffset::Axis' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CurrentModuleScale) == 0x000004, "Member 'ProMod_Parent_C_GetOffset::CurrentModuleScale' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, MaxDistance) == 0x000008, "Member 'ProMod_Parent_C_GetOffset::MaxDistance' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, NumLoop) == 0x00000C, "Member 'ProMod_Parent_C_GetOffset::NumLoop' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, IsTiling) == 0x000010, "Member 'ProMod_Parent_C_GetOffset::IsTiling' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Offset) == 0x000014, "Member 'ProMod_Parent_C_GetOffset::Offset' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_int_Variable) == 0x000018, "Member 'ProMod_Parent_C_GetOffset::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000020, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Abs_ReturnValue) == 0x000024, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000028, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'ProMod_Parent_C_GetOffset::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, K2Node_SwitchEnum_CmpSuccess_1) == 0x00002D, "Member 'ProMod_Parent_C_GetOffset::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_int_Variable_1) == 0x000030, "Member 'ProMod_Parent_C_GetOffset::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_int_Variable_2) == 0x000034, "Member 'ProMod_Parent_C_GetOffset::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_int_Variable_3) == 0x000038, "Member 'ProMod_Parent_C_GetOffset::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_bool_Variable) == 0x00003C, "Member 'ProMod_Parent_C_GetOffset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_byte_Variable) == 0x00003D, "Member 'ProMod_Parent_C_GetOffset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable) == 0x000040, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_1) == 0x000044, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_2) == 0x000048, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_3) == 0x00004C, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_byte_Variable_1) == 0x000050, "Member 'ProMod_Parent_C_GetOffset::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_4) == 0x000054, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_5) == 0x000058, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_6) == 0x00005C, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_7) == 0x000060, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_byte_Variable_2) == 0x000064, "Member 'ProMod_Parent_C_GetOffset::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_8) == 0x000068, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_9) == 0x00006C, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_10) == 0x000070, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_float_Variable_11) == 0x000074, "Member 'ProMod_Parent_C_GetOffset::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, Temp_byte_Variable_3) == 0x000078, "Member 'ProMod_Parent_C_GetOffset::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, K2Node_Select_Default) == 0x00007C, "Member 'ProMod_Parent_C_GetOffset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_BreakVector_X) == 0x000080, "Member 'ProMod_Parent_C_GetOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_BreakVector_Y) == 0x000084, "Member 'ProMod_Parent_C_GetOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_BreakVector_Z) == 0x000088, "Member 'ProMod_Parent_C_GetOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00008C, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, K2Node_Select_Default_1) == 0x000090, "Member 'ProMod_Parent_C_GetOffset::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Abs_ReturnValue_1) == 0x000094, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_BreakVector_X_1) == 0x000098, "Member 'ProMod_Parent_C_GetOffset::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_BreakVector_Y_1) == 0x00009C, "Member 'ProMod_Parent_C_GetOffset::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'ProMod_Parent_C_GetOffset::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A4, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, K2Node_Select_Default_2) == 0x0000A8, "Member 'ProMod_Parent_C_GetOffset::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, K2Node_Select_Default_3) == 0x0000B4, "Member 'ProMod_Parent_C_GetOffset::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_SignOfFloat_ReturnValue) == 0x0000B8, "Member 'ProMod_Parent_C_GetOffset::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_GetBoundingBox_ReturnValue) == 0x0000BC, "Member 'ProMod_Parent_C_GetOffset::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_BreakVector_X_2) == 0x0000D8, "Member 'ProMod_Parent_C_GetOffset::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_BreakVector_Y_2) == 0x0000DC, "Member 'ProMod_Parent_C_GetOffset::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_BreakVector_Z_2) == 0x0000E0, "Member 'ProMod_Parent_C_GetOffset::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, K2Node_Select_Default_4) == 0x0000E4, "Member 'ProMod_Parent_C_GetOffset::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Abs_ReturnValue_2) == 0x0000E8, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000EC, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F0, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000F4, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000F8, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000FC, "Member 'ProMod_Parent_C_GetOffset::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetOffset, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000100, "Member 'ProMod_Parent_C_GetOffset::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.SetIsTiling
// 0x0006 (0x0006 - 0x0000)
struct ProMod_Parent_C_SetIsTiling final
{
public:
	bool                                          IsTiling;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_SetIsTiling) == 0x000001, "Wrong alignment on ProMod_Parent_C_SetIsTiling");
static_assert(sizeof(ProMod_Parent_C_SetIsTiling) == 0x000006, "Wrong size on ProMod_Parent_C_SetIsTiling");
static_assert(offsetof(ProMod_Parent_C_SetIsTiling, IsTiling) == 0x000000, "Member 'ProMod_Parent_C_SetIsTiling::IsTiling' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetIsTiling, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'ProMod_Parent_C_SetIsTiling::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetIsTiling, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000002, "Member 'ProMod_Parent_C_SetIsTiling::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetIsTiling, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000003, "Member 'ProMod_Parent_C_SetIsTiling::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetIsTiling, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'ProMod_Parent_C_SetIsTiling::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_SetIsTiling, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'ProMod_Parent_C_SetIsTiling::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.GetFinalTranslation
// 0x0010 (0x0010 - 0x0000)
struct ProMod_Parent_C_GetFinalTranslation final
{
public:
	bool                                          Param_Tiling;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B61[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         X;                                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z;                                                 // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_GetFinalTranslation) == 0x000004, "Wrong alignment on ProMod_Parent_C_GetFinalTranslation");
static_assert(sizeof(ProMod_Parent_C_GetFinalTranslation) == 0x000010, "Wrong size on ProMod_Parent_C_GetFinalTranslation");
static_assert(offsetof(ProMod_Parent_C_GetFinalTranslation, Param_Tiling) == 0x000000, "Member 'ProMod_Parent_C_GetFinalTranslation::Param_Tiling' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetFinalTranslation, X) == 0x000004, "Member 'ProMod_Parent_C_GetFinalTranslation::X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetFinalTranslation, Y) == 0x000008, "Member 'ProMod_Parent_C_GetFinalTranslation::Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_GetFinalTranslation, Z) == 0x00000C, "Member 'ProMod_Parent_C_GetFinalTranslation::Z' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.FixTilingForAxisUsage
// 0x0001 (0x0001 - 0x0000)
struct ProMod_Parent_C_FixTilingForAxisUsage final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_FixTilingForAxisUsage) == 0x000001, "Wrong alignment on ProMod_Parent_C_FixTilingForAxisUsage");
static_assert(sizeof(ProMod_Parent_C_FixTilingForAxisUsage) == 0x000001, "Wrong size on ProMod_Parent_C_FixTilingForAxisUsage");
static_assert(offsetof(ProMod_Parent_C_FixTilingForAxisUsage, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'ProMod_Parent_C_FixTilingForAxisUsage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.CheckForPreviousLockAxis
// 0x0002 (0x0002 - 0x0000)
struct ProMod_Parent_C_CheckForPreviousLockAxis final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_CheckForPreviousLockAxis) == 0x000001, "Wrong alignment on ProMod_Parent_C_CheckForPreviousLockAxis");
static_assert(sizeof(ProMod_Parent_C_CheckForPreviousLockAxis) == 0x000002, "Wrong size on ProMod_Parent_C_CheckForPreviousLockAxis");
static_assert(offsetof(ProMod_Parent_C_CheckForPreviousLockAxis, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'ProMod_Parent_C_CheckForPreviousLockAxis::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CheckForPreviousLockAxis, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ProMod_Parent_C_CheckForPreviousLockAxis::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.AddStaticMeshAtLocation
// 0x00C0 (0x00C0 - 0x0000)
struct ProMod_Parent_C_AddStaticMeshAtLocation final
{
public:
	float                                         Relative_Transform_Scale_X;                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Scale_Z;                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Scale_Y;                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Location_X;                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Location_Y;                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Relative_Transform_Location_Z;                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   NewSMComponent;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B62[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_SetStaticLightingMapping_ReturnValue;  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B63[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B64[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B65[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B66[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B67[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_AddStaticMeshAtLocation) == 0x000010, "Wrong alignment on ProMod_Parent_C_AddStaticMeshAtLocation");
static_assert(sizeof(ProMod_Parent_C_AddStaticMeshAtLocation) == 0x0000C0, "Wrong size on ProMod_Parent_C_AddStaticMeshAtLocation");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, Relative_Transform_Scale_X) == 0x000000, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::Relative_Transform_Scale_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, Relative_Transform_Scale_Z) == 0x000004, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::Relative_Transform_Scale_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, Relative_Transform_Scale_Y) == 0x000008, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::Relative_Transform_Scale_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, Relative_Transform_Location_X) == 0x00000C, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::Relative_Transform_Location_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, Relative_Transform_Location_Y) == 0x000010, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::Relative_Transform_Location_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, Relative_Transform_Location_Z) == 0x000014, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::Relative_Transform_Location_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, NewSMComponent) == 0x000018, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::NewSMComponent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, Temp_int_Variable) == 0x000020, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000034, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_GetNumMaterials_ReturnValue) == 0x000048, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_BP_SetStaticLightingMapping_ReturnValue) == 0x000051, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_BP_SetStaticLightingMapping_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000058, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_AddComponent_ReturnValue) == 0x000098, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_SetStaticMesh_ReturnValue) == 0x0000B0, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B8, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_AddStaticMeshAtLocation, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'ProMod_Parent_C_AddStaticMeshAtLocation::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.CreateComponents
// 0x0330 (0x0330 - 0x0000)
struct ProMod_Parent_C_CreateComponents final
{
public:
	float                                         CurrentModuleZOffset;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleYOffset;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleXOffset;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingTiling;                                       // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B68[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumYLoop;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentMaxYDistance;                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         YScaleFactor;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastYComponentScaleRatio;                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumYComponent;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleYscale;                               // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentYScale;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentMaxZDistance;                               // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentMaxXDistance;                               // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleZscale;                               // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZScaleFactor;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumZLoop;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumXLoop;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XScaleFactor;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastZComponentScaleRatio;                          // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumZComponent;                                     // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastXComponentScaleRatio;                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumXComponent;                                     // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentModuleXscale;                               // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetOffset_Offset;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScale_Scale;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScale_Scale_1;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScale_Scale_2;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetIsTiling_isTiling;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B69[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_2;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_3;                // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_4;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_5;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_6;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_7;                // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_8;                // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6A[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6B[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_10;                         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_9;                // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6C[0x2];                                     // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6D[0x2];                                     // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6E[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_11;                         // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_12;                         // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_12;                         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_12;                         // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6F[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B70[0x2];                                     // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B71[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B72[0x2];                                     // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_13;                         // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_13;                         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_13;                         // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_14;                         // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_14;                         // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_14;                         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B73[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_11;         // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_15;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_15;                         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_15;                         // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_10;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_12;         // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B74[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B75[0x2];                                     // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_16;                         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_16;                         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_16;                         // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_11;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B76[0x3];                                     // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_13;         // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B77[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B78[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B79[0x3];                                     // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7A[0x3];                                     // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_8;            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_14;         // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_9;            // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_15;         // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7B[0x3];                                     // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_17;                         // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_17;                         // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_17;                         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7C[0x3];                                     // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_10;           // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_16;         // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_18;                         // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_18;                         // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_18;                         // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_4;                        // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue_1;             // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_11;           // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_17;         // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7D[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_5;                        // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue_2;             // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_2;        // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7E[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x031E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x031F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B7F[0x3];                                     // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue_2;                      // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B80[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_8;            // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_CreateComponents) == 0x000004, "Wrong alignment on ProMod_Parent_C_CreateComponents");
static_assert(sizeof(ProMod_Parent_C_CreateComponents) == 0x000330, "Wrong size on ProMod_Parent_C_CreateComponents");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentModuleZOffset) == 0x000000, "Member 'ProMod_Parent_C_CreateComponents::CurrentModuleZOffset' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentModuleYOffset) == 0x000004, "Member 'ProMod_Parent_C_CreateComponents::CurrentModuleYOffset' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentModuleXOffset) == 0x000008, "Member 'ProMod_Parent_C_CreateComponents::CurrentModuleXOffset' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, UsingTiling) == 0x00000C, "Member 'ProMod_Parent_C_CreateComponents::UsingTiling' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, NumYLoop) == 0x000010, "Member 'ProMod_Parent_C_CreateComponents::NumYLoop' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentMaxYDistance) == 0x000014, "Member 'ProMod_Parent_C_CreateComponents::CurrentMaxYDistance' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, YScaleFactor) == 0x000018, "Member 'ProMod_Parent_C_CreateComponents::YScaleFactor' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, LastYComponentScaleRatio) == 0x00001C, "Member 'ProMod_Parent_C_CreateComponents::LastYComponentScaleRatio' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, NumYComponent) == 0x000020, "Member 'ProMod_Parent_C_CreateComponents::NumYComponent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentModuleYscale) == 0x000024, "Member 'ProMod_Parent_C_CreateComponents::CurrentModuleYscale' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentYScale) == 0x000028, "Member 'ProMod_Parent_C_CreateComponents::CurrentYScale' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentMaxZDistance) == 0x00002C, "Member 'ProMod_Parent_C_CreateComponents::CurrentMaxZDistance' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentMaxXDistance) == 0x000030, "Member 'ProMod_Parent_C_CreateComponents::CurrentMaxXDistance' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentModuleZscale) == 0x000034, "Member 'ProMod_Parent_C_CreateComponents::CurrentModuleZscale' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, ZScaleFactor) == 0x000038, "Member 'ProMod_Parent_C_CreateComponents::ZScaleFactor' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, NumZLoop) == 0x00003C, "Member 'ProMod_Parent_C_CreateComponents::NumZLoop' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, NumXLoop) == 0x000040, "Member 'ProMod_Parent_C_CreateComponents::NumXLoop' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, XScaleFactor) == 0x000044, "Member 'ProMod_Parent_C_CreateComponents::XScaleFactor' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, LastZComponentScaleRatio) == 0x000048, "Member 'ProMod_Parent_C_CreateComponents::LastZComponentScaleRatio' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, NumZComponent) == 0x00004C, "Member 'ProMod_Parent_C_CreateComponents::NumZComponent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, LastXComponentScaleRatio) == 0x000050, "Member 'ProMod_Parent_C_CreateComponents::LastXComponentScaleRatio' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, NumXComponent) == 0x000054, "Member 'ProMod_Parent_C_CreateComponents::NumXComponent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CurrentModuleXscale) == 0x000058, "Member 'ProMod_Parent_C_CreateComponents::CurrentModuleXscale' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, Temp_int_Variable) == 0x00005C, "Member 'ProMod_Parent_C_CreateComponents::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, Temp_int_Variable_1) == 0x000064, "Member 'ProMod_Parent_C_CreateComponents::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, Temp_int_Variable_2) == 0x00006C, "Member 'ProMod_Parent_C_CreateComponents::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_GetOffset_Offset) == 0x000070, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_GetOffset_Offset' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_GetScale_Scale) == 0x000078, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_GetScale_Scale' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_GetScale_Scale_1) == 0x00007C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_GetScale_Scale_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_GetScale_Scale_2) == 0x000080, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_GetScale_Scale_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, Temp_int_Variable_3) == 0x000084, "Member 'ProMod_Parent_C_CreateComponents::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SetIsTiling_isTiling) == 0x00008C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SetIsTiling_isTiling' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X) == 0x000090, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y) == 0x000094, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z) == 0x000098, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_1) == 0x00009C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_1) == 0x0000A4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue) == 0x0000A8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_1) == 0x0000AC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_2) == 0x0000B0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_2) == 0x0000B4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_2) == 0x0000B8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_3) == 0x0000BC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_3) == 0x0000C0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_3) == 0x0000C4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_2) == 0x0000C8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_3) == 0x0000CC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_4) == 0x0000D0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_4) == 0x0000D4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_4) == 0x0000D8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_5) == 0x0000DC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_5) == 0x0000E0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_5) == 0x0000E4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_4) == 0x0000E8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_5) == 0x0000EC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_6) == 0x0000F0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_6) == 0x0000F4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_6) == 0x0000F8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_7) == 0x0000FC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_7) == 0x000100, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_7) == 0x000104, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_6) == 0x000108, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_7) == 0x00010C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_8) == 0x000110, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_8) == 0x000114, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_8) == 0x000118, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_9) == 0x00011C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_9) == 0x000120, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_9) == 0x000124, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_8) == 0x000128, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, K2Node_SwitchEnum_CmpSuccess) == 0x00012C, "Member 'ProMod_Parent_C_CreateComponents::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000130, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000134, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, K2Node_SwitchEnum_CmpSuccess_1) == 0x000138, "Member 'ProMod_Parent_C_CreateComponents::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00013C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000140, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000144, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000148, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00014C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000150, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000154, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_10) == 0x000158, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_10) == 0x00015C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_10) == 0x000160, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_9) == 0x000164, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000168, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00016C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue) == 0x000170, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000174, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000175, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000178, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00017C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000180, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000184, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000188, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000189, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00018C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000190, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_11) == 0x000194, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_11) == 0x000198, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_11) == 0x00019C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0001A0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x0001A4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x0001A8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x0001AC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Abs_ReturnValue) == 0x0001B0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_GridSnap_Float_ReturnValue) == 0x0001B4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0001B8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_12) == 0x0001BC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_12) == 0x0001C0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_12) == 0x0001C4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0001C8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Abs_ReturnValue_1) == 0x0001CC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001D0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001D4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BooleanAND_ReturnValue) == 0x0001D5, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_FCeil_ReturnValue) == 0x0001D8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Greater_IntInt_ReturnValue) == 0x0001DC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x0001E0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x0001E4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0001E8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_FTrunc_ReturnValue) == 0x0001EC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0001F0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0001F1, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_13) == 0x0001F4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_13) == 0x0001F8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_13) == 0x0001FC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Abs_ReturnValue_2) == 0x000200, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x000204, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x000208, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_FTrunc_ReturnValue_1) == 0x00020C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_14) == 0x000210, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_14' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_14) == 0x000214, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_14' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_14) == 0x000218, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_14' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Abs_ReturnValue_3) == 0x00021C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x000220, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000224, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_11) == 0x000228, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_FTrunc_ReturnValue_2) == 0x00022C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_15) == 0x000230, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_15' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_15) == 0x000234, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_15' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_15) == 0x000238, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_15' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_10) == 0x00023C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000240, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_12) == 0x000244, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000248, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00024C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000250, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000251, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_16) == 0x000254, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_16' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_16) == 0x000258, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_16' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_16) == 0x00025C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_16' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_SignOfFloat_ReturnValue_11) == 0x000260, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_SignOfFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000264, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_13) == 0x000268, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x00026C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000270, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000274, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000278, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x00027C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000280, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x000284, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000288, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x00028C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000290, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000294, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_8) == 0x000298, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_14) == 0x00029C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x0002A0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x0002A4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_9) == 0x0002A8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_15) == 0x0002AC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x0002B0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x0002B4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x0002B8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x0002BC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_17) == 0x0002C0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_17' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_17) == 0x0002C4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_17' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_17) == 0x0002C8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_17' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0002CC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_10) == 0x0002D0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_16) == 0x0002D4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_X_18) == 0x0002D8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_X_18' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Y_18) == 0x0002DC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Y_18' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BreakVector_Z_18) == 0x0002E0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BreakVector_Z_18' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Abs_ReturnValue_4) == 0x0002E4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_GridSnap_Float_ReturnValue_1) == 0x0002E8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_GridSnap_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Conv_IntToFloat_ReturnValue_11) == 0x0002EC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Conv_IntToFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x0002F0, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Divide_FloatFloat_ReturnValue_17) == 0x0002F4, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Divide_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x0002F8, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Abs_ReturnValue_5) == 0x0002FC, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000300, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_GridSnap_Float_ReturnValue_2) == 0x000304, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_GridSnap_Float_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_FCeil_ReturnValue_1) == 0x000308, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x00030C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x000310, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_NotEqual_FloatFloat_ReturnValue_2) == 0x000314, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_NotEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000318, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00031C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BooleanAND_ReturnValue_1) == 0x00031D, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00031E, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x00031F, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_BooleanAND_ReturnValue_2) == 0x000320, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_FCeil_ReturnValue_2) == 0x000324, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_FCeil_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000328, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_CreateComponents, CallFunc_Subtract_IntInt_ReturnValue_8) == 0x00032C, "Member 'ProMod_Parent_C_CreateComponents::CallFunc_Subtract_IntInt_ReturnValue_8' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.LimitGizmo
// 0x0154 (0x0154 - 0x0000)
struct ProMod_Parent_C_LimitGizmo final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_10;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_11;                         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_10;                // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_11;                // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_12;                         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_12;                         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_12;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B81[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_12;                // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_13;                         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_13;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_13;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_13;                // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_LimitGizmo) == 0x000004, "Wrong alignment on ProMod_Parent_C_LimitGizmo");
static_assert(sizeof(ProMod_Parent_C_LimitGizmo) == 0x000154, "Wrong size on ProMod_Parent_C_LimitGizmo");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X) == 0x000000, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y) == 0x000004, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z) == 0x000008, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_1) == 0x00000C, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_1) == 0x000010, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_1) == 0x000014, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_1) == 0x000024, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_2) == 0x000030, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_2) == 0x000034, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_2) == 0x000038, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_3) == 0x00003C, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_3) == 0x000040, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_3) == 0x000044, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_2) == 0x000048, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_3) == 0x000054, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_4) == 0x000060, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_4) == 0x000064, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_4) == 0x000068, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_5) == 0x00006C, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_5) == 0x000070, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_5) == 0x000074, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_4) == 0x000078, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_5) == 0x000084, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_6) == 0x000090, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_6) == 0x000094, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_6) == 0x000098, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_7) == 0x00009C, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_7) == 0x0000A0, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_7) == 0x0000A4, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_6) == 0x0000A8, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_7) == 0x0000B4, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_8) == 0x0000C0, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_8) == 0x0000C4, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_8) == 0x0000C8, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_9) == 0x0000CC, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_9) == 0x0000D0, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_9) == 0x0000D4, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_8) == 0x0000D8, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_9) == 0x0000E4, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_10) == 0x0000F0, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_10) == 0x0000F4, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_10) == 0x0000F8, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_11) == 0x0000FC, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_11) == 0x000100, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_11) == 0x000104, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_10) == 0x000108, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_11) == 0x000114, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_12) == 0x000120, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_12) == 0x000124, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_12) == 0x000128, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, K2Node_SwitchEnum_CmpSuccess) == 0x00012C, "Member 'ProMod_Parent_C_LimitGizmo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_12) == 0x000130, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_X_13) == 0x00013C, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Y_13) == 0x000140, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_BreakVector_Z_13) == 0x000144, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_LimitGizmo, CallFunc_MakeVector_ReturnValue_13) == 0x000148, "Member 'ProMod_Parent_C_LimitGizmo::CallFunc_MakeVector_ReturnValue_13' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct ProMod_Parent_C_UserConstructionScript final
{
public:
	TArray<TSoftObjectPtr<class AProMod_Parent_C>> ProcPipes;                                         // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_RegisterToPipeModuleManager_Valid;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CleanOwningActors_bChanged;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_UserConstructionScript) == 0x000008, "Wrong alignment on ProMod_Parent_C_UserConstructionScript");
static_assert(sizeof(ProMod_Parent_C_UserConstructionScript) == 0x000018, "Wrong size on ProMod_Parent_C_UserConstructionScript");
static_assert(offsetof(ProMod_Parent_C_UserConstructionScript, ProcPipes) == 0x000000, "Member 'ProMod_Parent_C_UserConstructionScript::ProcPipes' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_UserConstructionScript, CallFunc_RegisterToPipeModuleManager_Valid) == 0x000010, "Member 'ProMod_Parent_C_UserConstructionScript::CallFunc_RegisterToPipeModuleManager_Valid' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_UserConstructionScript, CallFunc_CleanOwningActors_bChanged) == 0x000011, "Member 'ProMod_Parent_C_UserConstructionScript::CallFunc_CleanOwningActors_bChanged' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.OnPostActorsPasted
// 0x0010 (0x0010 - 0x0000)
struct ProMod_Parent_C_OnPostActorsPasted final
{
public:
	TArray<class AActor*>                         PastedActors;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ProMod_Parent_C_OnPostActorsPasted) == 0x000008, "Wrong alignment on ProMod_Parent_C_OnPostActorsPasted");
static_assert(sizeof(ProMod_Parent_C_OnPostActorsPasted) == 0x000010, "Wrong size on ProMod_Parent_C_OnPostActorsPasted");
static_assert(offsetof(ProMod_Parent_C_OnPostActorsPasted, PastedActors) == 0x000000, "Member 'ProMod_Parent_C_OnPostActorsPasted::PastedActors' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.PostDuplicated
// 0x0008 (0x0008 - 0x0000)
struct ProMod_Parent_C_PostDuplicated final
{
public:
	class AActor*                                 DuplicationParent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_PostDuplicated) == 0x000008, "Wrong alignment on ProMod_Parent_C_PostDuplicated");
static_assert(sizeof(ProMod_Parent_C_PostDuplicated) == 0x000008, "Wrong size on ProMod_Parent_C_PostDuplicated");
static_assert(offsetof(ProMod_Parent_C_PostDuplicated, DuplicationParent) == 0x000000, "Member 'ProMod_Parent_C_PostDuplicated::DuplicationParent' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.PostEditMove
// 0x0001 (0x0001 - 0x0000)
struct ProMod_Parent_C_PostEditMove final
{
public:
	bool                                          bFinished;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_PostEditMove) == 0x000001, "Wrong alignment on ProMod_Parent_C_PostEditMove");
static_assert(sizeof(ProMod_Parent_C_PostEditMove) == 0x000001, "Wrong size on ProMod_Parent_C_PostEditMove");
static_assert(offsetof(ProMod_Parent_C_PostEditMove, bFinished) == 0x000000, "Member 'ProMod_Parent_C_PostEditMove::bFinished' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.PostEditChange
// 0x0008 (0x0008 - 0x0000)
struct ProMod_Parent_C_PostEditChange final
{
public:
	class FName                                   PropertyName;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProMod_Parent_C_PostEditChange) == 0x000004, "Wrong alignment on ProMod_Parent_C_PostEditChange");
static_assert(sizeof(ProMod_Parent_C_PostEditChange) == 0x000008, "Wrong size on ProMod_Parent_C_PostEditChange");
static_assert(offsetof(ProMod_Parent_C_PostEditChange, PropertyName) == 0x000000, "Member 'ProMod_Parent_C_PostEditChange::PropertyName' has a wrong offset!");

// Function ProMod_Parent.ProMod_Parent_C.ExecuteUbergraph_ProMod_Parent
// 0x0030 (0x0030 - 0x0000)
struct ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_propertyName;                         // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B82[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_Event_pastedActors;                         // 0x0010(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 K2Node_Event_duplicationParent;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFinished;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent) == 0x000008, "Wrong alignment on ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent");
static_assert(sizeof(ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent) == 0x000030, "Wrong size on ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent");
static_assert(offsetof(ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent, EntryPoint) == 0x000000, "Member 'ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent, K2Node_Event_propertyName) == 0x000004, "Member 'ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent::K2Node_Event_propertyName' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent, K2Node_Event_pastedActors) == 0x000010, "Member 'ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent::K2Node_Event_pastedActors' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent, K2Node_Event_duplicationParent) == 0x000020, "Member 'ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent::K2Node_Event_duplicationParent' has a wrong offset!");
static_assert(offsetof(ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent, K2Node_Event_bFinished) == 0x000028, "Member 'ProMod_Parent_C_ExecuteUbergraph_ProMod_Parent::K2Node_Event_bFinished' has a wrong offset!");

}

