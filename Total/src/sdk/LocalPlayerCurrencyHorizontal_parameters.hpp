#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LocalPlayerCurrencyHorizontal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.ExecuteUbergraph_LocalPlayerCurrencyHorizontal
// 0x0038 (0x0038 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayerState*                         CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayerState*                         K2Node_CustomEvent_NewPlayerState;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal) == 0x000008, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal) == 0x000038, "Wrong size on LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal, EntryPoint) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal::EntryPoint' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000008, "Member 'LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal, K2Node_Event_IsDesignTime) == 0x000024, "Member 'LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal, K2Node_CustomEvent_NewPlayerState) == 0x000028, "Member 'LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal::K2Node_CustomEvent_NewPlayerState' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'LocalPlayerCurrencyHorizontal_C_ExecuteUbergraph_LocalPlayerCurrencyHorizontal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.UpdateRBPlayerState
// 0x0008 (0x0008 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_UpdateRBPlayerState final
{
public:
	class ARBPlayerState*                         NewPlayerState;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_UpdateRBPlayerState) == 0x000008, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_UpdateRBPlayerState");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_UpdateRBPlayerState) == 0x000008, "Wrong size on LocalPlayerCurrencyHorizontal_C_UpdateRBPlayerState");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_UpdateRBPlayerState, NewPlayerState) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_UpdateRBPlayerState::NewPlayerState' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_PreConstruct) == 0x000001, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_PreConstruct");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_PreConstruct) == 0x000001, "Wrong size on LocalPlayerCurrencyHorizontal_C_PreConstruct");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.RefreshValueFromPlayerState
// 0x0020 (0x0020 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrency_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState) == 0x000008, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState) == 0x000020, "Wrong size on LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState, CallFunc_GetCurrency_ReturnValue) == 0x000004, "Member 'LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState::CallFunc_GetCurrency_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'LocalPlayerCurrencyHorizontal_C_RefreshValueFromPlayerState::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.SetCurrencyType
// 0x0001 (0x0001 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_SetCurrencyType final
{
public:
	ECurrencyType                                 Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_SetCurrencyType) == 0x000001, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_SetCurrencyType");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_SetCurrencyType) == 0x000001, "Wrong size on LocalPlayerCurrencyHorizontal_C_SetCurrencyType");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_SetCurrencyType, Type) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_SetCurrencyType::Type' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.RefreshIcon
// 0x0098 (0x0098 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_RefreshIcon final
{
public:
	class URBSettings_Gameplay*                   CallFunc_GetRBSettings_Gameplay_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurencySettings                       CallFunc_Map_Find_Value;                           // 0x0008(0x0060)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0028)()
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_RefreshIcon) == 0x000008, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_RefreshIcon");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_RefreshIcon) == 0x000098, "Wrong size on LocalPlayerCurrencyHorizontal_C_RefreshIcon");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_RefreshIcon, CallFunc_GetRBSettings_Gameplay_ReturnValue) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_RefreshIcon::CallFunc_GetRBSettings_Gameplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_RefreshIcon, CallFunc_Map_Find_Value) == 0x000008, "Member 'LocalPlayerCurrencyHorizontal_C_RefreshIcon::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_RefreshIcon, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'LocalPlayerCurrencyHorizontal_C_RefreshIcon::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_RefreshIcon, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'LocalPlayerCurrencyHorizontal_C_RefreshIcon::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.SetColor
// 0x0010 (0x0010 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_SetColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_SetColor) == 0x000004, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_SetColor");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_SetColor) == 0x000010, "Wrong size on LocalPlayerCurrencyHorizontal_C_SetColor");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_SetColor, Color) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_SetColor::Color' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.Get_icon_ToolTipWidget_0
// 0x0080 (0x0080 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USimpleTextTooltip_C*                   CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSettings_Gameplay*                   CallFunc_GetRBSettings_Gameplay_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurencySettings                       CallFunc_Map_Find_Value;                           // 0x0018(0x0060)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0) == 0x000008, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0) == 0x000080, "Wrong size on LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000008, "Member 'LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0, CallFunc_GetRBSettings_Gameplay_ReturnValue) == 0x000010, "Member 'LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0::CallFunc_GetRBSettings_Gameplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0, CallFunc_Map_Find_Value) == 0x000018, "Member 'LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'LocalPlayerCurrencyHorizontal_C_Get_icon_ToolTipWidget_0::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.PreviewCost
// 0x0090 (0x0090 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_PreviewCost final
{
public:
	int32                                         Cost;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrency_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0068(0x0028)()
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_PreviewCost) == 0x000008, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_PreviewCost");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_PreviewCost) == 0x000090, "Wrong size on LocalPlayerCurrencyHorizontal_C_PreviewCost");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, Cost) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::Cost' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, Temp_bool_Variable) == 0x000004, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, Temp_struct_Variable) == 0x000008, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, Temp_struct_Variable_1) == 0x000018, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, CallFunc_GetCurrency_ReturnValue) == 0x00002C, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::CallFunc_GetCurrency_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, K2Node_Select_Default) == 0x000058, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_PreviewCost, K2Node_MakeStruct_SlateColor) == 0x000068, "Member 'LocalPlayerCurrencyHorizontal_C_PreviewCost::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.StopPreviewing
// 0x0008 (0x0008 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_StopPreviewing final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_StopPreviewing) == 0x000008, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_StopPreviewing");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_StopPreviewing) == 0x000008, "Wrong size on LocalPlayerCurrencyHorizontal_C_StopPreviewing");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_StopPreviewing, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_StopPreviewing::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function LocalPlayerCurrencyHorizontal.LocalPlayerCurrencyHorizontal_C.SetValueDirectly
// 0x0020 (0x0020 - 0x0000)
struct LocalPlayerCurrencyHorizontal_C_SetValueDirectly final
{
public:
	int32                                         NewValue_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(LocalPlayerCurrencyHorizontal_C_SetValueDirectly) == 0x000008, "Wrong alignment on LocalPlayerCurrencyHorizontal_C_SetValueDirectly");
static_assert(sizeof(LocalPlayerCurrencyHorizontal_C_SetValueDirectly) == 0x000020, "Wrong size on LocalPlayerCurrencyHorizontal_C_SetValueDirectly");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_SetValueDirectly, NewValue_0) == 0x000000, "Member 'LocalPlayerCurrencyHorizontal_C_SetValueDirectly::NewValue_0' has a wrong offset!");
static_assert(offsetof(LocalPlayerCurrencyHorizontal_C_SetValueDirectly, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'LocalPlayerCurrencyHorizontal_C_SetValueDirectly::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

