#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CountdownConfirmCancelPopup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Error_ConfirmCancelPopupWidget_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CountdownConfirmCancelPopup.CountdownConfirmCancelPopup_C
// 0x0030 (0x0428 - 0x03F8)
class UCountdownConfirmCancelPopup_C final : public UError_ConfirmCancelPopupWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CountdownConfirmCancelPopup_C;      // 0x03F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FText                                   DisplayedText;                                     // 0x0400(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TimeToCountdown;                                   // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CountdownTimer;                                    // 0x0420(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CountdownConfirmCancelPopup(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Destruct();
	void Event_InitializePopup(const class FText& TitleText, const class FText& MainText, const class FText& ConfirmText, const class FText& CancelText);
	void StartCountdown(int32 Time);
	void OnCountdownEnds();
	void Update_Countdown_Text(int32 Countdown);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CountdownConfirmCancelPopup_C">();
	}
	static class UCountdownConfirmCancelPopup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCountdownConfirmCancelPopup_C>();
	}
};
static_assert(alignof(UCountdownConfirmCancelPopup_C) == 0x000008, "Wrong alignment on UCountdownConfirmCancelPopup_C");
static_assert(sizeof(UCountdownConfirmCancelPopup_C) == 0x000428, "Wrong size on UCountdownConfirmCancelPopup_C");
static_assert(offsetof(UCountdownConfirmCancelPopup_C, UberGraphFrame_CountdownConfirmCancelPopup_C) == 0x0003F8, "Member 'UCountdownConfirmCancelPopup_C::UberGraphFrame_CountdownConfirmCancelPopup_C' has a wrong offset!");
static_assert(offsetof(UCountdownConfirmCancelPopup_C, DisplayedText) == 0x000400, "Member 'UCountdownConfirmCancelPopup_C::DisplayedText' has a wrong offset!");
static_assert(offsetof(UCountdownConfirmCancelPopup_C, TimeToCountdown) == 0x000418, "Member 'UCountdownConfirmCancelPopup_C::TimeToCountdown' has a wrong offset!");
static_assert(offsetof(UCountdownConfirmCancelPopup_C, CountdownTimer) == 0x000420, "Member 'UCountdownConfirmCancelPopup_C::CountdownTimer' has a wrong offset!");

}

