#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby_FakeReagent_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "OPP_structs.hpp"
#include "Player_Face_States_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Lobby_FakeReagent_BP.Lobby_FakeReagent_BP_C
// 0x0100 (0x0348 - 0x0248)
class ALobby_FakeReagent_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Watch;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ESOP_Battery;                                      // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ESOP;                                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Straps;                                            // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Glove;                                             // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 NVGoggles;                                         // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBPropOptimizerComponent*              RBPropOptimizer;                                   // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBRandomizableHelperComponent*         RBRandomizableHelper;                              // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBSoundComponent*                      VoiceComponent;                                    // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Anchor_Prop;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hand_R_Prop;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hand_L_Prop;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Lower;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Upper;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         ExtraCustomizationMeshes;                          // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FRBPlayerCustomizationInfo             PlayerCustomizationInfo;                           // 0x02F8(0x0038)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	bool                                          bRandomSex;                                        // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsFemale;                                         // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BFF[0x6];                                     // 0x0332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseAsset*                             FacePoseAsset;                                     // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FaceState;                                         // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayer_Face_States                           WhichFaceState;                                    // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool TryPlayFacialAnim(const class FString& LineId);
	bool OnWorldPopulateFinishedTimeSliced();
	bool GetStateName(class FString* StateA, class FString* StateB);
	void GetFacePoseAsset(class UPoseAsset** Param_FacePoseAsset);
	void OnRep_PlayerCustomizationInfo();
	void OnRep_FullDefinition();
	void InitializeMasterComponent();
	void UserConstructionScript();
	void StopFacialAnim();
	void OnWorldFullyLoaded();
	void OnWorldPopulateFinished();
	void SetState(bool bStateA);
	void PrepareState(bool bStateA, class AActor* RandomOwner);
	void SetShouldBeIgnoredForLots(bool bValue);
	void OnExtraCustomizationMeshesAddedForSlot(const TArray<class USkeletalMeshComponent*>& AddedExtraMeshes, EPlayerCustomizationSlot Slot);
	void Dress();
	void CustomEvent_0(class AActor* CustomizationOwner, int32 RequestID, EPawnCustomizationRequestType RequestType);
	void SetRandomCustomizationInfo_Server();
	void BndEvt__Lobby_FakeReagent_BP_RBRandomizableHelper_K2Node_ComponentBoundEvent_0_OnRandomStateChangedEvent__DelegateSignature();
	void PostToggled(bool bToggleEnabled);
	void ExecuteUbergraph_Lobby_FakeReagent_BP(int32 EntryPoint);

	class UAnimSequence* FindFaceAnimSequence(const class FString& LineId) const;
	class USkeletalMeshComponent* GetFaceFXSkeletalMeshComponent() const;
	class URBSoundComponent* GetVoiceComponent() const;
	class USkeletalMeshComponent* GetMainParentSkeletalMesh() const;
	struct FRBPlayerCustomizationInfo GetPlayerCustomizationInfo() const;
	class USkeletalMeshComponent* GetSkeletalMeshComponentForSlot(EPlayerCustomizationSlot Slot) const;
	class UStaticMeshComponent* GetWatchComponent() const;
	bool IsStateA() const;
	bool ShouldBeIgnoredForLots() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Lobby_FakeReagent_BP_C">();
	}
	static class ALobby_FakeReagent_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobby_FakeReagent_BP_C>();
	}
};
static_assert(alignof(ALobby_FakeReagent_BP_C) == 0x000008, "Wrong alignment on ALobby_FakeReagent_BP_C");
static_assert(sizeof(ALobby_FakeReagent_BP_C) == 0x000348, "Wrong size on ALobby_FakeReagent_BP_C");
static_assert(offsetof(ALobby_FakeReagent_BP_C, UberGraphFrame) == 0x000248, "Member 'ALobby_FakeReagent_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Capsule) == 0x000250, "Member 'ALobby_FakeReagent_BP_C::Capsule' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Watch) == 0x000258, "Member 'ALobby_FakeReagent_BP_C::Watch' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, ESOP_Battery) == 0x000260, "Member 'ALobby_FakeReagent_BP_C::ESOP_Battery' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, ESOP) == 0x000268, "Member 'ALobby_FakeReagent_BP_C::ESOP' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Straps) == 0x000270, "Member 'ALobby_FakeReagent_BP_C::Straps' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Glove) == 0x000278, "Member 'ALobby_FakeReagent_BP_C::Glove' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, NVGoggles) == 0x000280, "Member 'ALobby_FakeReagent_BP_C::NVGoggles' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, RBPropOptimizer) == 0x000288, "Member 'ALobby_FakeReagent_BP_C::RBPropOptimizer' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, RBRandomizableHelper) == 0x000290, "Member 'ALobby_FakeReagent_BP_C::RBRandomizableHelper' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, VoiceComponent) == 0x000298, "Member 'ALobby_FakeReagent_BP_C::VoiceComponent' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Anchor_Prop) == 0x0002A0, "Member 'ALobby_FakeReagent_BP_C::Anchor_Prop' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Hand_R_Prop) == 0x0002A8, "Member 'ALobby_FakeReagent_BP_C::Hand_R_Prop' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Hand_L_Prop) == 0x0002B0, "Member 'ALobby_FakeReagent_BP_C::Hand_L_Prop' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Hair) == 0x0002B8, "Member 'ALobby_FakeReagent_BP_C::Hair' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Lower) == 0x0002C0, "Member 'ALobby_FakeReagent_BP_C::Lower' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Upper) == 0x0002C8, "Member 'ALobby_FakeReagent_BP_C::Upper' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Head) == 0x0002D0, "Member 'ALobby_FakeReagent_BP_C::Head' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, Mesh) == 0x0002D8, "Member 'ALobby_FakeReagent_BP_C::Mesh' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, DefaultSceneRoot) == 0x0002E0, "Member 'ALobby_FakeReagent_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, ExtraCustomizationMeshes) == 0x0002E8, "Member 'ALobby_FakeReagent_BP_C::ExtraCustomizationMeshes' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, PlayerCustomizationInfo) == 0x0002F8, "Member 'ALobby_FakeReagent_BP_C::PlayerCustomizationInfo' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, bRandomSex) == 0x000330, "Member 'ALobby_FakeReagent_BP_C::bRandomSex' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, bIsFemale) == 0x000331, "Member 'ALobby_FakeReagent_BP_C::bIsFemale' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, FacePoseAsset) == 0x000338, "Member 'ALobby_FakeReagent_BP_C::FacePoseAsset' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, FaceState) == 0x000340, "Member 'ALobby_FakeReagent_BP_C::FaceState' has a wrong offset!");
static_assert(offsetof(ALobby_FakeReagent_BP_C, WhichFaceState) == 0x000341, "Member 'ALobby_FakeReagent_BP_C::WhichFaceState' has a wrong offset!");

}

