#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPCMenu

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function NPCMenu.NPCMenu_C.OnRigClicked
// 0x0140 (0x0140 - 0x0000)
struct NPCMenu_C_OnRigClicked final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              ActiveSkillType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuUpgradeItemInfo                   CallFunc_GetUpgradeItemInfo_ReturnValue;           // 0x0010(0x0128)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_OnRigClicked) == 0x000008, "Wrong alignment on NPCMenu_C_OnRigClicked");
static_assert(sizeof(NPCMenu_C_OnRigClicked) == 0x000140, "Wrong size on NPCMenu_C_OnRigClicked");
static_assert(offsetof(NPCMenu_C_OnRigClicked, ItemId) == 0x000000, "Member 'NPCMenu_C_OnRigClicked::ItemId' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnRigClicked, ActiveSkillType) == 0x000008, "Member 'NPCMenu_C_OnRigClicked::ActiveSkillType' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnRigClicked, CallFunc_GetUpgradeItemInfo_ReturnValue) == 0x000010, "Member 'NPCMenu_C_OnRigClicked::CallFunc_GetUpgradeItemInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnRigClicked, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000138, "Member 'NPCMenu_C_OnRigClicked::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.OnMenuRightClick
// 0x01B0 (0x01B0 - 0x0000)
struct NPCMenu_C_OnMenuRightClick final
{
public:
	struct FActiveSkillCommonParams               CallFunc_GetActiveSkillCommonParams_ReturnValue;   // 0x0000(0x0078)(ConstParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD6[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMenuUpgradeItemInfo                   CallFunc_GetUpgradeItemInfo_ReturnValue;           // 0x0080(0x0128)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_OnMenuRightClick) == 0x000008, "Wrong alignment on NPCMenu_C_OnMenuRightClick");
static_assert(sizeof(NPCMenu_C_OnMenuRightClick) == 0x0001B0, "Wrong size on NPCMenu_C_OnMenuRightClick");
static_assert(offsetof(NPCMenu_C_OnMenuRightClick, CallFunc_GetActiveSkillCommonParams_ReturnValue) == 0x000000, "Member 'NPCMenu_C_OnMenuRightClick::CallFunc_GetActiveSkillCommonParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnMenuRightClick, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000078, "Member 'NPCMenu_C_OnMenuRightClick::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnMenuRightClick, CallFunc_GetUpgradeItemInfo_ReturnValue) == 0x000080, "Member 'NPCMenu_C_OnMenuRightClick::CallFunc_GetUpgradeItemInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnMenuRightClick, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0001A8, "Member 'NPCMenu_C_OnMenuRightClick::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnMenuRightClick, CallFunc_BooleanAND_ReturnValue) == 0x0001A9, "Member 'NPCMenu_C_OnMenuRightClick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.UpdateStorylineButton
// 0x0038 (0x0038 - 0x0000)
struct NPCMenu_C_UpdateStorylineButton final
{
public:
	class ABaseAnimatedQuestGiver_BP_C*           K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD7[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextStorylineVO_levelPlayed;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextStorylineVO_bIsFallbackVO;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD8[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNextStorylineVO_featureSwitchPlayed;   // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CallFunc_GetNextStorylineVO_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_UpdateStorylineButton) == 0x000008, "Wrong alignment on NPCMenu_C_UpdateStorylineButton");
static_assert(sizeof(NPCMenu_C_UpdateStorylineButton) == 0x000038, "Wrong size on NPCMenu_C_UpdateStorylineButton");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP) == 0x000000, "Member 'NPCMenu_C_UpdateStorylineButton::K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'NPCMenu_C_UpdateStorylineButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'NPCMenu_C_UpdateStorylineButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'NPCMenu_C_UpdateStorylineButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, CallFunc_GetNextStorylineVO_levelPlayed) == 0x00000C, "Member 'NPCMenu_C_UpdateStorylineButton::CallFunc_GetNextStorylineVO_levelPlayed' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, CallFunc_GetNextStorylineVO_bIsFallbackVO) == 0x000010, "Member 'NPCMenu_C_UpdateStorylineButton::CallFunc_GetNextStorylineVO_bIsFallbackVO' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, CallFunc_GetNextStorylineVO_featureSwitchPlayed) == 0x000018, "Member 'NPCMenu_C_UpdateStorylineButton::CallFunc_GetNextStorylineVO_featureSwitchPlayed' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, CallFunc_GetNextStorylineVO_ReturnValue) == 0x000028, "Member 'NPCMenu_C_UpdateStorylineButton::CallFunc_GetNextStorylineVO_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, CallFunc_Not_PreBool_ReturnValue_1) == 0x000030, "Member 'NPCMenu_C_UpdateStorylineButton::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'NPCMenu_C_UpdateStorylineButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_UpdateStorylineButton, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'NPCMenu_C_UpdateStorylineButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.PlayPurchasedVoice
// 0x0078 (0x0078 - 0x0000)
struct NPCMenu_C_PlayPurchasedVoice final
{
public:
	class UAkAudioEvent*                          NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPCLobbyInteractionData               CallFunc_Map_Find_Value;                           // 0x0020(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDA[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseAnimatedQuestGiver_BP_C*           K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDB[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PlayAkEvent_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_PlayPurchasedVoice) == 0x000008, "Wrong alignment on NPCMenu_C_PlayPurchasedVoice");
static_assert(sizeof(NPCMenu_C_PlayPurchasedVoice) == 0x000078, "Wrong size on NPCMenu_C_PlayPurchasedVoice");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, NewLocalVar_0) == 0x000000, "Member 'NPCMenu_C_PlayPurchasedVoice::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x000008, "Member 'NPCMenu_C_PlayPurchasedVoice::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, CallFunc_GetRBGameStateLobby_ReturnValue_1) == 0x000010, "Member 'NPCMenu_C_PlayPurchasedVoice::CallFunc_GetRBGameStateLobby_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'NPCMenu_C_PlayPurchasedVoice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, CallFunc_Map_Find_Value) == 0x000020, "Member 'NPCMenu_C_PlayPurchasedVoice::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'NPCMenu_C_PlayPurchasedVoice::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP) == 0x000060, "Member 'NPCMenu_C_PlayPurchasedVoice::K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'NPCMenu_C_PlayPurchasedVoice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, CallFunc_PlayAkEvent_ReturnValue) == 0x00006C, "Member 'NPCMenu_C_PlayPurchasedVoice::CallFunc_PlayAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayPurchasedVoice, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'NPCMenu_C_PlayPurchasedVoice::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.TryStartNextMenuTutorial
// 0x0088 (0x0088 - 0x0000)
struct NPCMenu_C_TryStartNextMenuTutorial final
{
public:
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0000(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPlayedMenuTutorial_ReturnValue;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDC[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuTutorials_C*                       CallFunc_ShowMenuTutorial_createdWidget;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPlayedMenuTutorial_ReturnValue_1;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDD[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuTutorials_C*                       CallFunc_ShowMenuTutorial_createdWidget_1;         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPlayedMenuTutorial_ReturnValue_2;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BDE[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuTutorials_C*                       CallFunc_ShowMenuTutorial_createdWidget_2;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShowingMenuTutorial_isShowingTutorial;  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_TryStartNextMenuTutorial) == 0x000008, "Wrong alignment on NPCMenu_C_TryStartNextMenuTutorial");
static_assert(sizeof(NPCMenu_C_TryStartNextMenuTutorial) == 0x000088, "Wrong size on NPCMenu_C_TryStartNextMenuTutorial");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_GetCachedGeometry_ReturnValue) == 0x000000, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_LocalToViewport_PixelPosition) == 0x000038, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_LocalToViewport_ViewportPosition) == 0x000040, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_BreakVector2D_X) == 0x000048, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_BreakVector2D_Y) == 0x00004C, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000050, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_HasPlayedMenuTutorial_ReturnValue) == 0x000051, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_HasPlayedMenuTutorial_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_ShowMenuTutorial_createdWidget) == 0x000058, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_ShowMenuTutorial_createdWidget' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_HasPlayedMenuTutorial_ReturnValue_1) == 0x000060, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_HasPlayedMenuTutorial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_ShowMenuTutorial_createdWidget_1) == 0x000068, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_ShowMenuTutorial_createdWidget_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_HasPlayedMenuTutorial_ReturnValue_2) == 0x000070, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_HasPlayedMenuTutorial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_ShowMenuTutorial_createdWidget_2) == 0x000078, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_ShowMenuTutorial_createdWidget_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_IsShowingMenuTutorial_isShowingTutorial) == 0x000080, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_IsShowingMenuTutorial_isShowingTutorial' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, K2Node_SwitchEnum_CmpSuccess) == 0x000081, "Member 'NPCMenu_C_TryStartNextMenuTutorial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_Not_PreBool_ReturnValue) == 0x000082, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_BooleanAND_ReturnValue) == 0x000083, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_TryStartNextMenuTutorial, CallFunc_BooleanAND_ReturnValue_1) == 0x000084, "Member 'NPCMenu_C_TryStartNextMenuTutorial::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.SetCategoryFocus
// 0x0028 (0x0028 - 0x0000)
struct NPCMenu_C_SetCategoryFocus final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELoadoutElementType                           Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDF[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_SetCategoryFocus) == 0x000008, "Wrong alignment on NPCMenu_C_SetCategoryFocus");
static_assert(sizeof(NPCMenu_C_SetCategoryFocus) == 0x000028, "Wrong size on NPCMenu_C_SetCategoryFocus");
static_assert(offsetof(NPCMenu_C_SetCategoryFocus, Temp_bool_Variable) == 0x000000, "Member 'NPCMenu_C_SetCategoryFocus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_SetCategoryFocus, Temp_byte_Variable) == 0x000001, "Member 'NPCMenu_C_SetCategoryFocus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_SetCategoryFocus, Temp_object_Variable) == 0x000008, "Member 'NPCMenu_C_SetCategoryFocus::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_SetCategoryFocus, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'NPCMenu_C_SetCategoryFocus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_SetCategoryFocus, K2Node_Select_Default) == 0x000018, "Member 'NPCMenu_C_SetCategoryFocus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_SetCategoryFocus, K2Node_Select_Default_1) == 0x000020, "Member 'NPCMenu_C_SetCategoryFocus::K2Node_Select_Default_1' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct NPCMenu_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_BP_IsUsingGamepad_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE1[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0100(0x00B8)()
};
static_assert(alignof(NPCMenu_C_OnFocusReceived) == 0x000008, "Wrong alignment on NPCMenu_C_OnFocusReceived");
static_assert(sizeof(NPCMenu_C_OnFocusReceived) == 0x0001B8, "Wrong size on NPCMenu_C_OnFocusReceived");
static_assert(offsetof(NPCMenu_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'NPCMenu_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'NPCMenu_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'NPCMenu_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnFocusReceived, CallFunc_BP_IsUsingGamepad_ReturnValue) == 0x0000F8, "Member 'NPCMenu_C_OnFocusReceived::CallFunc_BP_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000100, "Member 'NPCMenu_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.Refresh
// 0x0001 (0x0001 - 0x0000)
struct NPCMenu_C_Refresh final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_Refresh) == 0x000001, "Wrong alignment on NPCMenu_C_Refresh");
static_assert(sizeof(NPCMenu_C_Refresh) == 0x000001, "Wrong size on NPCMenu_C_Refresh");
static_assert(offsetof(NPCMenu_C_Refresh, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'NPCMenu_C_Refresh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.OnMenuBackRequested
// 0x0003 (0x0003 - 0x0000)
struct NPCMenu_C_OnMenuBackRequested final
{
public:
	bool                                          CallFunc_HandleNavigationBack_CanExitMenu;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_OnMenuBackRequested) == 0x000001, "Wrong alignment on NPCMenu_C_OnMenuBackRequested");
static_assert(sizeof(NPCMenu_C_OnMenuBackRequested) == 0x000003, "Wrong size on NPCMenu_C_OnMenuBackRequested");
static_assert(offsetof(NPCMenu_C_OnMenuBackRequested, CallFunc_HandleNavigationBack_CanExitMenu) == 0x000000, "Member 'NPCMenu_C_OnMenuBackRequested::CallFunc_HandleNavigationBack_CanExitMenu' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnMenuBackRequested, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'NPCMenu_C_OnMenuBackRequested::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_OnMenuBackRequested, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'NPCMenu_C_OnMenuBackRequested::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.OnCoreUpgradeTierClicked
// 0x0004 (0x0004 - 0x0000)
struct NPCMenu_C_OnCoreUpgradeTierClicked final
{
public:
	int32                                         Param_SelectedCoreUpgradeTier;                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_OnCoreUpgradeTierClicked) == 0x000004, "Wrong alignment on NPCMenu_C_OnCoreUpgradeTierClicked");
static_assert(sizeof(NPCMenu_C_OnCoreUpgradeTierClicked) == 0x000004, "Wrong size on NPCMenu_C_OnCoreUpgradeTierClicked");
static_assert(offsetof(NPCMenu_C_OnCoreUpgradeTierClicked, Param_SelectedCoreUpgradeTier) == 0x000000, "Member 'NPCMenu_C_OnCoreUpgradeTierClicked::Param_SelectedCoreUpgradeTier' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.ChangeCategory
// 0x0238 (0x0238 - 0x0000)
struct NPCMenu_C_ChangeCategory final
{
public:
	ELoadoutElementType                           Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE2[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	ELoadoutElementType                           Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE3[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0088(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE4[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00B8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE5[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveSkillCommonParams               CallFunc_GetActiveSkillCommonParams_ReturnValue;   // 0x0158(0x0078)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0210(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0220(0x0018)()
};
static_assert(alignof(NPCMenu_C_ChangeCategory) == 0x000008, "Wrong alignment on NPCMenu_C_ChangeCategory");
static_assert(sizeof(NPCMenu_C_ChangeCategory) == 0x000238, "Wrong size on NPCMenu_C_ChangeCategory");
static_assert(offsetof(NPCMenu_C_ChangeCategory, Category) == 0x000000, "Member 'NPCMenu_C_ChangeCategory::Category' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, Temp_bool_Variable) == 0x000001, "Member 'NPCMenu_C_ChangeCategory::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'NPCMenu_C_ChangeCategory::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, Temp_text_Variable) == 0x000008, "Member 'NPCMenu_C_ChangeCategory::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, Temp_text_Variable_1) == 0x000020, "Member 'NPCMenu_C_ChangeCategory::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, Temp_byte_Variable) == 0x000038, "Member 'NPCMenu_C_ChangeCategory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, Temp_text_Variable_2) == 0x000040, "Member 'NPCMenu_C_ChangeCategory::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, Temp_text_Variable_3) == 0x000058, "Member 'NPCMenu_C_ChangeCategory::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, Temp_text_Variable_4) == 0x000070, "Member 'NPCMenu_C_ChangeCategory::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, Temp_text_Variable_5) == 0x000088, "Member 'NPCMenu_C_ChangeCategory::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, K2Node_CreateDelegate_OutputDelegate) == 0x0000A0, "Member 'NPCMenu_C_ChangeCategory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B0, "Member 'NPCMenu_C_ChangeCategory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, K2Node_Select_Default) == 0x0000B8, "Member 'NPCMenu_C_ChangeCategory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, K2Node_Select_Default_1) == 0x0000D0, "Member 'NPCMenu_C_ChangeCategory::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, K2Node_MakeStruct_FormatArgumentData) == 0x0000E8, "Member 'NPCMenu_C_ChangeCategory::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, K2Node_MakeArray_Array) == 0x000128, "Member 'NPCMenu_C_ChangeCategory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, CallFunc_Format_ReturnValue) == 0x000138, "Member 'NPCMenu_C_ChangeCategory::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000150, "Member 'NPCMenu_C_ChangeCategory::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, CallFunc_GetActiveSkillCommonParams_ReturnValue) == 0x000158, "Member 'NPCMenu_C_ChangeCategory::CallFunc_GetActiveSkillCommonParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001D0, "Member 'NPCMenu_C_ChangeCategory::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, K2Node_MakeArray_Array_1) == 0x000210, "Member 'NPCMenu_C_ChangeCategory::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ChangeCategory, CallFunc_Format_ReturnValue_1) == 0x000220, "Member 'NPCMenu_C_ChangeCategory::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.PlayExitVoiceline
// 0x0078 (0x0078 - 0x0000)
struct NPCMenu_C_PlayExitVoiceline final
{
public:
	bool                                          IsRudeExit;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Voiceline;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE7[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPCLobbyInteractionData               CallFunc_Map_Find_Value;                           // 0x0028(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE8[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseAnimatedQuestGiver_BP_C*           K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE9[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PlayAkEvent_ReturnValue;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_PlayExitVoiceline) == 0x000008, "Wrong alignment on NPCMenu_C_PlayExitVoiceline");
static_assert(sizeof(NPCMenu_C_PlayExitVoiceline) == 0x000078, "Wrong size on NPCMenu_C_PlayExitVoiceline");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, IsRudeExit) == 0x000000, "Member 'NPCMenu_C_PlayExitVoiceline::IsRudeExit' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, Voiceline) == 0x000008, "Member 'NPCMenu_C_PlayExitVoiceline::Voiceline' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x000010, "Member 'NPCMenu_C_PlayExitVoiceline::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, CallFunc_GetRBGameStateLobby_ReturnValue_1) == 0x000018, "Member 'NPCMenu_C_PlayExitVoiceline::CallFunc_GetRBGameStateLobby_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'NPCMenu_C_PlayExitVoiceline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'NPCMenu_C_PlayExitVoiceline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, CallFunc_Map_Find_Value) == 0x000028, "Member 'NPCMenu_C_PlayExitVoiceline::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'NPCMenu_C_PlayExitVoiceline::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP) == 0x000068, "Member 'NPCMenu_C_PlayExitVoiceline::K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'NPCMenu_C_PlayExitVoiceline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayExitVoiceline, CallFunc_PlayAkEvent_ReturnValue) == 0x000074, "Member 'NPCMenu_C_PlayExitVoiceline::CallFunc_PlayAkEvent_ReturnValue' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.PlayGreetingVoiceline
// 0x0080 (0x0080 - 0x0000)
struct NPCMenu_C_PlayGreetingVoiceline final
{
public:
	EVOPriority                                   VOPriority;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasGainedLvl;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasGainedXp;                                       // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEA[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Voiceline;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasVisitedNPC_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEB[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEC[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPCLobbyInteractionData               CallFunc_Map_Find_Value;                           // 0x0028(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BED[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseAnimatedQuestGiver_BP_C*           K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BEE[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PlayAkEvent_ReturnValue;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_PlayGreetingVoiceline) == 0x000008, "Wrong alignment on NPCMenu_C_PlayGreetingVoiceline");
static_assert(sizeof(NPCMenu_C_PlayGreetingVoiceline) == 0x000080, "Wrong size on NPCMenu_C_PlayGreetingVoiceline");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, VOPriority) == 0x000000, "Member 'NPCMenu_C_PlayGreetingVoiceline::VOPriority' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, HasGainedLvl) == 0x000001, "Member 'NPCMenu_C_PlayGreetingVoiceline::HasGainedLvl' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, HasGainedXp) == 0x000002, "Member 'NPCMenu_C_PlayGreetingVoiceline::HasGainedXp' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, Voiceline) == 0x000008, "Member 'NPCMenu_C_PlayGreetingVoiceline::Voiceline' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_HasVisitedNPC_ReturnValue) == 0x000011, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_HasVisitedNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x000018, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_Map_Find_Value) == 0x000028, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP) == 0x000068, "Member 'NPCMenu_C_PlayGreetingVoiceline::K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'NPCMenu_C_PlayGreetingVoiceline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_PlayAkEvent_ReturnValue) == 0x000074, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_PlayAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_IsValid_ReturnValue_3) == 0x000078, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_PlayGreetingVoiceline, CallFunc_BooleanAND_ReturnValue_1) == 0x000079, "Member 'NPCMenu_C_PlayGreetingVoiceline::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.Initialize
// 0x0010 (0x0010 - 0x0000)
struct NPCMenu_C_Initialize final
{
public:
	class AActor*                                 Param_NPCActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaNPCType                                  Param_NPCType;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bActivateCamera;                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_Initialize) == 0x000008, "Wrong alignment on NPCMenu_C_Initialize");
static_assert(sizeof(NPCMenu_C_Initialize) == 0x000010, "Wrong size on NPCMenu_C_Initialize");
static_assert(offsetof(NPCMenu_C_Initialize, Param_NPCActor) == 0x000000, "Member 'NPCMenu_C_Initialize::Param_NPCActor' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Initialize, Param_NPCType) == 0x000008, "Member 'NPCMenu_C_Initialize::Param_NPCType' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Initialize, Param_bActivateCamera) == 0x000009, "Member 'NPCMenu_C_Initialize::Param_bActivateCamera' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.Setup
// 0x00E0 (0x00E0 - 0x0000)
struct NPCMenu_C_Setup final
{
public:
	EMetaNPCType                                  Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMetaNPCType                                  Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELoadoutElementType                           Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELoadoutElementType                           Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELoadoutElementType                           Temp_byte_Variable_4;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELoadoutElementType                           Temp_byte_Variable_5;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELoadoutElementType                           Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaNPCType                                  Temp_byte_Variable_7;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEF[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMetaNPCType                                  Temp_byte_Variable_8;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF0[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x00A0(0x0018)()
	bool                                          K2Node_Select_Default;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFeatureSwitch_ReturnValue;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ELoadoutElementType                           K2Node_Select_Default_1;                           // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF1[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_3;                           // 0x00C8(0x0018)()
};
static_assert(alignof(NPCMenu_C_Setup) == 0x000008, "Wrong alignment on NPCMenu_C_Setup");
static_assert(sizeof(NPCMenu_C_Setup) == 0x0000E0, "Wrong size on NPCMenu_C_Setup");
static_assert(offsetof(NPCMenu_C_Setup, Temp_byte_Variable) == 0x000000, "Member 'NPCMenu_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_bool_Variable) == 0x000001, "Member 'NPCMenu_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_bool_Variable_1) == 0x000002, "Member 'NPCMenu_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_bool_Variable_2) == 0x000003, "Member 'NPCMenu_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_bool_Variable_3) == 0x000004, "Member 'NPCMenu_C_Setup::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_bool_Variable_4) == 0x000005, "Member 'NPCMenu_C_Setup::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_byte_Variable_1) == 0x000006, "Member 'NPCMenu_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_byte_Variable_2) == 0x000007, "Member 'NPCMenu_C_Setup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_byte_Variable_3) == 0x000008, "Member 'NPCMenu_C_Setup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_byte_Variable_4) == 0x000009, "Member 'NPCMenu_C_Setup::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_byte_Variable_5) == 0x00000A, "Member 'NPCMenu_C_Setup::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_byte_Variable_6) == 0x00000B, "Member 'NPCMenu_C_Setup::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_byte_Variable_7) == 0x00000C, "Member 'NPCMenu_C_Setup::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_object_Variable) == 0x000010, "Member 'NPCMenu_C_Setup::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_object_Variable_1) == 0x000018, "Member 'NPCMenu_C_Setup::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_object_Variable_2) == 0x000020, "Member 'NPCMenu_C_Setup::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_object_Variable_3) == 0x000028, "Member 'NPCMenu_C_Setup::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_object_Variable_4) == 0x000030, "Member 'NPCMenu_C_Setup::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_byte_Variable_8) == 0x000038, "Member 'NPCMenu_C_Setup::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_text_Variable) == 0x000040, "Member 'NPCMenu_C_Setup::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_text_Variable_1) == 0x000058, "Member 'NPCMenu_C_Setup::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_text_Variable_2) == 0x000070, "Member 'NPCMenu_C_Setup::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_text_Variable_3) == 0x000088, "Member 'NPCMenu_C_Setup::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, Temp_text_Variable_4) == 0x0000A0, "Member 'NPCMenu_C_Setup::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, K2Node_Select_Default) == 0x0000B8, "Member 'NPCMenu_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, CallFunc_CheckFeatureSwitch_ReturnValue) == 0x0000B9, "Member 'NPCMenu_C_Setup::CallFunc_CheckFeatureSwitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, CallFunc_BooleanAND_ReturnValue) == 0x0000BA, "Member 'NPCMenu_C_Setup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, K2Node_Select_Default_1) == 0x0000BB, "Member 'NPCMenu_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, K2Node_Select_Default_2) == 0x0000C0, "Member 'NPCMenu_C_Setup::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Setup, K2Node_Select_Default_3) == 0x0000C8, "Member 'NPCMenu_C_Setup::K2Node_Select_Default_3' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.BndEvt__ExitButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct NPCMenu_C_BndEvt__ExitButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature final
{
public:
	class URBMenuButton_C*                        Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_BndEvt__ExitButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on NPCMenu_C_BndEvt__ExitButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(sizeof(NPCMenu_C_BndEvt__ExitButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong size on NPCMenu_C_BndEvt__ExitButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(offsetof(NPCMenu_C_BndEvt__ExitButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'NPCMenu_C_BndEvt__ExitButton_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.BndEvt__NPCMenu_CoreUpgradeTierList_K2Node_ComponentBoundEvent_6_OnTierClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct NPCMenu_C_BndEvt__NPCMenu_CoreUpgradeTierList_K2Node_ComponentBoundEvent_6_OnTierClicked__DelegateSignature final
{
public:
	int32                                         Tier;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_BndEvt__NPCMenu_CoreUpgradeTierList_K2Node_ComponentBoundEvent_6_OnTierClicked__DelegateSignature) == 0x000004, "Wrong alignment on NPCMenu_C_BndEvt__NPCMenu_CoreUpgradeTierList_K2Node_ComponentBoundEvent_6_OnTierClicked__DelegateSignature");
static_assert(sizeof(NPCMenu_C_BndEvt__NPCMenu_CoreUpgradeTierList_K2Node_ComponentBoundEvent_6_OnTierClicked__DelegateSignature) == 0x000004, "Wrong size on NPCMenu_C_BndEvt__NPCMenu_CoreUpgradeTierList_K2Node_ComponentBoundEvent_6_OnTierClicked__DelegateSignature");
static_assert(offsetof(NPCMenu_C_BndEvt__NPCMenu_CoreUpgradeTierList_K2Node_ComponentBoundEvent_6_OnTierClicked__DelegateSignature, Tier) == 0x000000, "Member 'NPCMenu_C_BndEvt__NPCMenu_CoreUpgradeTierList_K2Node_ComponentBoundEvent_6_OnTierClicked__DelegateSignature::Tier' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.Tick
// 0x003C (0x003C - 0x0000)
struct NPCMenu_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_Tick) == 0x000004, "Wrong alignment on NPCMenu_C_Tick");
static_assert(sizeof(NPCMenu_C_Tick) == 0x00003C, "Wrong size on NPCMenu_C_Tick");
static_assert(offsetof(NPCMenu_C_Tick, MyGeometry) == 0x000000, "Member 'NPCMenu_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_Tick, InDeltaTime) == 0x000038, "Member 'NPCMenu_C_Tick::InDeltaTime' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.OnTabButtonClicked
// 0x0001 (0x0001 - 0x0000)
struct NPCMenu_C_OnTabButtonClicked final
{
public:
	EPerkCategory                                 NewCategory;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_OnTabButtonClicked) == 0x000001, "Wrong alignment on NPCMenu_C_OnTabButtonClicked");
static_assert(sizeof(NPCMenu_C_OnTabButtonClicked) == 0x000001, "Wrong size on NPCMenu_C_OnTabButtonClicked");
static_assert(offsetof(NPCMenu_C_OnTabButtonClicked, NewCategory) == 0x000000, "Member 'NPCMenu_C_OnTabButtonClicked::NewCategory' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.OnPerkListCategoryChanged
// 0x0001 (0x0001 - 0x0000)
struct NPCMenu_C_OnPerkListCategoryChanged final
{
public:
	EPerkCategory                                 NewCategory;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_OnPerkListCategoryChanged) == 0x000001, "Wrong alignment on NPCMenu_C_OnPerkListCategoryChanged");
static_assert(sizeof(NPCMenu_C_OnPerkListCategoryChanged) == 0x000001, "Wrong size on NPCMenu_C_OnPerkListCategoryChanged");
static_assert(offsetof(NPCMenu_C_OnPerkListCategoryChanged, NewCategory) == 0x000000, "Member 'NPCMenu_C_OnPerkListCategoryChanged::NewCategory' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.OnPerkListPageChanged
// 0x0001 (0x0001 - 0x0000)
struct NPCMenu_C_OnPerkListPageChanged final
{
public:
	bool                                          CategoryEntered;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_OnPerkListPageChanged) == 0x000001, "Wrong alignment on NPCMenu_C_OnPerkListPageChanged");
static_assert(sizeof(NPCMenu_C_OnPerkListPageChanged) == 0x000001, "Wrong size on NPCMenu_C_OnPerkListPageChanged");
static_assert(offsetof(NPCMenu_C_OnPerkListPageChanged, CategoryEntered) == 0x000000, "Member 'NPCMenu_C_OnPerkListPageChanged::CategoryEntered' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              ActiveSkillType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature) == 0x000004, "Wrong alignment on NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature");
static_assert(sizeof(NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature) == 0x00000C, "Wrong size on NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature");
static_assert(offsetof(NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature, ItemId) == 0x000000, "Member 'NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature::ItemId' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature, ActiveSkillType) == 0x000008, "Member 'NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_7_OnRigHovered__DelegateSignature::ActiveSkillType' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.BndEvt__NPCMenu_PlayerLoadoutHoverInfo_K2Node_ComponentBoundEvent_9_RequestNPCSetupActionButton__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct NPCMenu_C_BndEvt__NPCMenu_PlayerLoadoutHoverInfo_K2Node_ComponentBoundEvent_9_RequestNPCSetupActionButton__DelegateSignature final
{
public:
	bool                                          SecondActionButton;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPCMenu_C_BndEvt__NPCMenu_PlayerLoadoutHoverInfo_K2Node_ComponentBoundEvent_9_RequestNPCSetupActionButton__DelegateSignature) == 0x000001, "Wrong alignment on NPCMenu_C_BndEvt__NPCMenu_PlayerLoadoutHoverInfo_K2Node_ComponentBoundEvent_9_RequestNPCSetupActionButton__DelegateSignature");
static_assert(sizeof(NPCMenu_C_BndEvt__NPCMenu_PlayerLoadoutHoverInfo_K2Node_ComponentBoundEvent_9_RequestNPCSetupActionButton__DelegateSignature) == 0x000001, "Wrong size on NPCMenu_C_BndEvt__NPCMenu_PlayerLoadoutHoverInfo_K2Node_ComponentBoundEvent_9_RequestNPCSetupActionButton__DelegateSignature");
static_assert(offsetof(NPCMenu_C_BndEvt__NPCMenu_PlayerLoadoutHoverInfo_K2Node_ComponentBoundEvent_9_RequestNPCSetupActionButton__DelegateSignature, SecondActionButton) == 0x000000, "Member 'NPCMenu_C_BndEvt__NPCMenu_PlayerLoadoutHoverInfo_K2Node_ComponentBoundEvent_9_RequestNPCSetupActionButton__DelegateSignature::SecondActionButton' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              ActiveSkillType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature) == 0x000004, "Wrong alignment on NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature");
static_assert(sizeof(NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature) == 0x00000C, "Wrong size on NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature");
static_assert(offsetof(NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature, ItemId) == 0x000000, "Member 'NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature::ItemId' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature, ActiveSkillType) == 0x000008, "Member 'NPCMenu_C_BndEvt__NPCMenu_RigList_K2Node_ComponentBoundEvent_0_OnRigClicked__DelegateSignature::ActiveSkillType' has a wrong offset!");

// Function NPCMenu.NPCMenu_C.ExecuteUbergraph_NPCMenu
// 0x0188 (0x0188 - 0x0000)
struct NPCMenu_C_ExecuteUbergraph_NPCMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_itemId;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              K2Node_ComponentBoundEvent_activeSkillType;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF2[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPerkCategory NewCategory)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF3[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool CategoryEntered)>         K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF4[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHUDTutorialTextData                   K2Node_MakeStruct_HUDTutorialTextData;             // 0x0038(0x0040)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	class URBMenuButton_C*                        K2Node_ComponentBoundEvent_Button;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseAnimatedQuestGiver_BP_C*           K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF5[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBController*                          CallFunc_GetLocalPlayerController_ReturnValue;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsPlaying_ReturnValue;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF6[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBController*                          CallFunc_GetLocalPlayerController_ReturnValue_1;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_tier;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00BC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseAnimatedQuestGiver_BP_C*           K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP_1; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPerkCategory                                 K2Node_CustomEvent_newCategory_1;                  // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkCategory                                 K2Node_CustomEvent_newCategory;                    // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CategoryEntered;                // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF7[0x2];                                     // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHUDTutorialTextData                   K2Node_MakeStruct_HUDTutorialTextData_1;           // 0x0108(0x0040)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF8[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseAnimatedQuestGiver_BP_C*           K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP_2; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BF9[0x2];                                     // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPerkCategory NewCategory)>    K2Node_CreateDelegate_OutputDelegate_3;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_ComponentBoundEvent_itemId_1;               // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActiveSkillType                              K2Node_ComponentBoundEvent_activeSkillType_1;      // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_SecondActionButton;     // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BFA[0x1];                                     // 0x0177(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(NPCMenu_C_ExecuteUbergraph_NPCMenu) == 0x000008, "Wrong alignment on NPCMenu_C_ExecuteUbergraph_NPCMenu");
static_assert(sizeof(NPCMenu_C_ExecuteUbergraph_NPCMenu) == 0x000188, "Wrong size on NPCMenu_C_ExecuteUbergraph_NPCMenu");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, EntryPoint) == 0x000000, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_ComponentBoundEvent_itemId) == 0x000004, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_ComponentBoundEvent_itemId' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_ComponentBoundEvent_activeSkillType) == 0x00000C, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_ComponentBoundEvent_activeSkillType' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, Temp_bool_Variable) == 0x000020, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, Temp_byte_Variable) == 0x000034, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, Temp_byte_Variable_1) == 0x000035, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_MakeStruct_HUDTutorialTextData) == 0x000038, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_MakeStruct_HUDTutorialTextData' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_CreateDelegate_OutputDelegate_2) == 0x000078, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_ComponentBoundEvent_Button) == 0x000088, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP) == 0x000090, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, CallFunc_GetLocalPlayerController_ReturnValue) == 0x0000A0, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, CallFunc_BP_IsPlaying_ReturnValue) == 0x0000A8, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::CallFunc_BP_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, CallFunc_GetLocalPlayerController_ReturnValue_1) == 0x0000B0, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::CallFunc_GetLocalPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_ComponentBoundEvent_tier) == 0x0000B8, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_ComponentBoundEvent_tier' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_Event_MyGeometry) == 0x0000BC, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_Event_InDeltaTime) == 0x0000F4, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP_1) == 0x0000F8, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000102, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_CustomEvent_newCategory_1) == 0x000103, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_CustomEvent_newCategory_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_CustomEvent_newCategory) == 0x000104, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_CustomEvent_newCategory' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_CustomEvent_CategoryEntered) == 0x000105, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_CustomEvent_CategoryEntered' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_MakeStruct_HUDTutorialTextData_1) == 0x000108, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_MakeStruct_HUDTutorialTextData_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_Select_Default) == 0x000148, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP_2) == 0x000150, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_DynamicCast_AsBase_Animated_Quest_Giver_BP_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_DynamicCast_bSuccess_2) == 0x000158, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, CallFunc_IsValid_ReturnValue_1) == 0x000159, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_CreateDelegate_OutputDelegate_3) == 0x00015C, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_ComponentBoundEvent_itemId_1) == 0x00016C, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_ComponentBoundEvent_itemId_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_ComponentBoundEvent_activeSkillType_1) == 0x000174, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_ComponentBoundEvent_activeSkillType_1' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_ComponentBoundEvent_SecondActionButton) == 0x000175, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_ComponentBoundEvent_SecondActionButton' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000176, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPCMenu_C_ExecuteUbergraph_NPCMenu, K2Node_CreateDelegate_OutputDelegate_4) == 0x000178, "Member 'NPCMenu_C_ExecuteUbergraph_NPCMenu::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

}

