#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby_NPC_ReagentMinus01_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Lobby_NPC_Reagent-01_BP.Lobby_NPC_Reagent-01_BP_C
// 0x0078 (0x02F0 - 0x0278)
class ALobby_NPC_ReagentMinus01_BP_C final : public ARBPosedDeadBody
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URBPropOptimizerComponent*              RBPropOptimizer;                                   // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URBRandomizableHelperComponent*         RBRandomizableHelper;                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Legs_L;                                            // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Legs_R;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LowerBody;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Arms_L;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Arms_R;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 UpperBody;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair;                                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Sequence;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Offset;                                            // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool GetStateName(class FString* StateA, class FString* StateB);
	void ApplySkinTone();
	void UserConstructionScript();
	void SetState(bool bStateA);
	void SetShouldBeIgnoredForLots(bool bValue);
	void PrepareState(bool bStateA, class AActor* RandomOwner);
	void ExecuteUbergraph_Lobby_NPC_ReagentMinus01_BP(int32 EntryPoint);

	bool IsStateA() const;
	bool ShouldBeIgnoredForLots() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Lobby_NPC_Reagent-01_BP_C">();
	}
	static class ALobby_NPC_ReagentMinus01_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobby_NPC_ReagentMinus01_BP_C>();
	}
};
static_assert(alignof(ALobby_NPC_ReagentMinus01_BP_C) == 0x000008, "Wrong alignment on ALobby_NPC_ReagentMinus01_BP_C");
static_assert(sizeof(ALobby_NPC_ReagentMinus01_BP_C) == 0x0002F0, "Wrong size on ALobby_NPC_ReagentMinus01_BP_C");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, UberGraphFrame) == 0x000278, "Member 'ALobby_NPC_ReagentMinus01_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, RBPropOptimizer) == 0x000280, "Member 'ALobby_NPC_ReagentMinus01_BP_C::RBPropOptimizer' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, RBRandomizableHelper) == 0x000288, "Member 'ALobby_NPC_ReagentMinus01_BP_C::RBRandomizableHelper' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, Legs_L) == 0x000290, "Member 'ALobby_NPC_ReagentMinus01_BP_C::Legs_L' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, Legs_R) == 0x000298, "Member 'ALobby_NPC_ReagentMinus01_BP_C::Legs_R' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, LowerBody) == 0x0002A0, "Member 'ALobby_NPC_ReagentMinus01_BP_C::LowerBody' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, Arms_L) == 0x0002A8, "Member 'ALobby_NPC_ReagentMinus01_BP_C::Arms_L' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, Arms_R) == 0x0002B0, "Member 'ALobby_NPC_ReagentMinus01_BP_C::Arms_R' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, UpperBody) == 0x0002B8, "Member 'ALobby_NPC_ReagentMinus01_BP_C::UpperBody' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, Head) == 0x0002C0, "Member 'ALobby_NPC_ReagentMinus01_BP_C::Head' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, Hair) == 0x0002C8, "Member 'ALobby_NPC_ReagentMinus01_BP_C::Hair' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, Mesh) == 0x0002D0, "Member 'ALobby_NPC_ReagentMinus01_BP_C::Mesh' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, DefaultSceneRoot) == 0x0002D8, "Member 'ALobby_NPC_ReagentMinus01_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, Sequence) == 0x0002E0, "Member 'ALobby_NPC_ReagentMinus01_BP_C::Sequence' has a wrong offset!");
static_assert(offsetof(ALobby_NPC_ReagentMinus01_BP_C, Offset) == 0x0002E8, "Member 'ALobby_NPC_ReagentMinus01_BP_C::Offset' has a wrong offset!");

}

