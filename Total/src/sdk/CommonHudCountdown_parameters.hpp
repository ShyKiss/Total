#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonHudCountdown

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Slate_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CommonHudCountdown.CommonHudCountdown_C.SetMessage
// 0x0018 (0x0018 - 0x0000)
struct CommonHudCountdown_C_SetMessage final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(CommonHudCountdown_C_SetMessage) == 0x000008, "Wrong alignment on CommonHudCountdown_C_SetMessage");
static_assert(sizeof(CommonHudCountdown_C_SetMessage) == 0x000018, "Wrong size on CommonHudCountdown_C_SetMessage");
static_assert(offsetof(CommonHudCountdown_C_SetMessage, Text) == 0x000000, "Member 'CommonHudCountdown_C_SetMessage::Text' has a wrong offset!");

// Function CommonHudCountdown.CommonHudCountdown_C.SetCountdownValueInSeconds
// 0x00F0 (0x00F0 - 0x0000)
struct CommonHudCountdown_C_SetCountdownValueInSeconds final
{
public:
	float                                         Seconds;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
};
static_assert(alignof(CommonHudCountdown_C_SetCountdownValueInSeconds) == 0x000008, "Wrong alignment on CommonHudCountdown_C_SetCountdownValueInSeconds");
static_assert(sizeof(CommonHudCountdown_C_SetCountdownValueInSeconds) == 0x0000F0, "Wrong size on CommonHudCountdown_C_SetCountdownValueInSeconds");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, Seconds) == 0x000000, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::Seconds' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000004, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, CallFunc_FTrunc_ReturnValue_1) == 0x000010, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000030, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, K2Node_MakeArray_Array) == 0x0000C8, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetCountdownValueInSeconds, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'CommonHudCountdown_C_SetCountdownValueInSeconds::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function CommonHudCountdown.CommonHudCountdown_C.ShowCountdownText
// 0x0005 (0x0005 - 0x0000)
struct CommonHudCountdown_C_ShowCountdownText final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonHudCountdown_C_ShowCountdownText) == 0x000001, "Wrong alignment on CommonHudCountdown_C_ShowCountdownText");
static_assert(sizeof(CommonHudCountdown_C_ShowCountdownText) == 0x000005, "Wrong size on CommonHudCountdown_C_ShowCountdownText");
static_assert(offsetof(CommonHudCountdown_C_ShowCountdownText, Show) == 0x000000, "Member 'CommonHudCountdown_C_ShowCountdownText::Show' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_ShowCountdownText, Temp_bool_Variable) == 0x000001, "Member 'CommonHudCountdown_C_ShowCountdownText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_ShowCountdownText, Temp_byte_Variable) == 0x000002, "Member 'CommonHudCountdown_C_ShowCountdownText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_ShowCountdownText, Temp_byte_Variable_1) == 0x000003, "Member 'CommonHudCountdown_C_ShowCountdownText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_ShowCountdownText, K2Node_Select_Default) == 0x000004, "Member 'CommonHudCountdown_C_ShowCountdownText::K2Node_Select_Default' has a wrong offset!");

// Function CommonHudCountdown.CommonHudCountdown_C.SetIsRightAligned
// 0x0005 (0x0005 - 0x0000)
struct CommonHudCountdown_C_SetIsRightAligned final
{
public:
	bool                                          IsRightAligned;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextJustify                                  K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonHudCountdown_C_SetIsRightAligned) == 0x000001, "Wrong alignment on CommonHudCountdown_C_SetIsRightAligned");
static_assert(sizeof(CommonHudCountdown_C_SetIsRightAligned) == 0x000005, "Wrong size on CommonHudCountdown_C_SetIsRightAligned");
static_assert(offsetof(CommonHudCountdown_C_SetIsRightAligned, IsRightAligned) == 0x000000, "Member 'CommonHudCountdown_C_SetIsRightAligned::IsRightAligned' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetIsRightAligned, Temp_byte_Variable) == 0x000001, "Member 'CommonHudCountdown_C_SetIsRightAligned::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetIsRightAligned, Temp_byte_Variable_1) == 0x000002, "Member 'CommonHudCountdown_C_SetIsRightAligned::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetIsRightAligned, Temp_bool_Variable) == 0x000003, "Member 'CommonHudCountdown_C_SetIsRightAligned::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_SetIsRightAligned, K2Node_Select_Default) == 0x000004, "Member 'CommonHudCountdown_C_SetIsRightAligned::K2Node_Select_Default' has a wrong offset!");

// Function CommonHudCountdown.CommonHudCountdown_C.ShowSpinner
// 0x0006 (0x0006 - 0x0000)
struct CommonHudCountdown_C_ShowSpinner final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonHudCountdown_C_ShowSpinner) == 0x000001, "Wrong alignment on CommonHudCountdown_C_ShowSpinner");
static_assert(sizeof(CommonHudCountdown_C_ShowSpinner) == 0x000006, "Wrong size on CommonHudCountdown_C_ShowSpinner");
static_assert(offsetof(CommonHudCountdown_C_ShowSpinner, bShow) == 0x000000, "Member 'CommonHudCountdown_C_ShowSpinner::bShow' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_ShowSpinner, Temp_bool_Variable) == 0x000001, "Member 'CommonHudCountdown_C_ShowSpinner::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_ShowSpinner, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'CommonHudCountdown_C_ShowSpinner::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_ShowSpinner, Temp_byte_Variable) == 0x000003, "Member 'CommonHudCountdown_C_ShowSpinner::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_ShowSpinner, Temp_byte_Variable_1) == 0x000004, "Member 'CommonHudCountdown_C_ShowSpinner::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonHudCountdown_C_ShowSpinner, K2Node_Select_Default) == 0x000005, "Member 'CommonHudCountdown_C_ShowSpinner::K2Node_Select_Default' has a wrong offset!");

}

