#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArmWreslingPanel_GhostAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C
// 0x2B10 (0x2E00 - 0x02F0)
class UArmWreslingPanel_GhostAnimBP_C final : public URBGhostAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02F8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0328(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0350(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0378(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x03A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x03C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x03F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0418(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0468(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0490(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x04B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x04E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0508(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0530(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0558(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0580(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x05A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x05D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x05F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0620(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0648(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0670(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0698(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x06C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x06E8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x0710(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x0790(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_13;                  // 0x0810(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x08B8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x08E8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x0968(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x09E8(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0A90(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0AC0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x0AE8(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x0B68(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x0C10(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0C90(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x0CC0(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x0DA8(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x0E90(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0F38(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0F68(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x0FE8(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1090(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x1110(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x1140(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x11C0(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1268(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x12E8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1318(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1398(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x1418(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x14C0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x14F0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x1570(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1618(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1698(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x16C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x16F0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x1718(0x00A8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x17C0(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x18A8(0x00E8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1990(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1A58(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1AD8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1B08(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x1B88(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1C30(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1CB0(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x1D78(0x00A8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x1E20(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x1F08(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1FF0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2020(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x20D0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2100(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x2180(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x21B0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x2230(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x22D8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2358(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x2388(0x00A8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x2430(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x2518(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2600(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2630(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x26B0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2730(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x27D8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2808(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x28B8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2A10(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2A38(0x0020)()
	uint8                                         Pad_3C13[0x8];                                     // 0x2A58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x2A60(0x01E0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2C40(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2C60(0x0108)()
	class UArmWreslingPanelComponent_BP_C*        Panel;                                             // 0x2D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         ArmWrestleRatio;                                   // 0x2D70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGetUp;                                            // 0x2D74(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bReady;                                            // 0x2D75(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPlayer1;                                          // 0x2D76(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWon;                                              // 0x2D77(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStartRound;                                       // 0x2D78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGameTied;                                         // 0x2D79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEndRound;                                         // 0x2D7A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C14[0x1];                                     // 0x2D7B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LookPitch;                                         // 0x2D7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookYaw;                                           // 0x2D80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsTaunting;                                       // 0x2D84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C15[0x3];                                     // 0x2D85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TauntType;                                         // 0x2D88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InputLevel;                                        // 0x2D8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShouldMoveHandIKRoot;                              // 0x2D90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C16[0x4];                                     // 0x2D94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          P1_IKPlaySequence;                                 // 0x2D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IKHandLocation;                                    // 0x2DA0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HandRotation;                                      // 0x2DAC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                IKElbowLocation;                                   // 0x2DB8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C17[0x4];                                     // 0x2DC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          P2_IKPlaySequence;                                 // 0x2DC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseIK;                                            // 0x2DD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C18[0x3];                                     // 0x2DD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ArmWrestleRatio_Noised;                            // 0x2DD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerInput;                                       // 0x2DD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C19[0x7];                                     // 0x2DD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequence*>                  WhichAnim;                                         // 0x2DE0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TauntCount;                                        // 0x2DF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ManageIK(float DeltaTime);
	void ManageLookAt();
	void SetHandIK();
	void Reset();
	void SetPlayerAnimations(bool bIsPlayer1);
	bool FinishGhost(EGhostFinishReason FinishReason, int32 GhostFinishCustomReason);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_SequencePlayer_49FDCC6F440E8712CF216B8D1040F437();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_FD0D0ED04331C45CB35AC89C9066AE62();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_D3D2BF7B49D8777ECDBB9FB0A0B5DD80();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_4820FF68437F2448BDA9B292F9C8C7DD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_B26CF11746F0F7BDD1549CBC94C1C5DB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_A017D85848E5073D8C0318B99E98F72A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_594318CE497332BFA7F188AD1C565ED9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_A75D093A43F1F7799A195FB3E081F384();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_28D838744C8B9940614C8D9119861579();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_BD36665241C8F0E0CFD4ABA99E607B3D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP_AnimGraphNode_TransitionResult_7FB016654647242235D6FA93E7C58A3E();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BP_InitializeGhost();
	void AnimNotify_EntryDone();
	void AnimNotify_Finished();
	void AnimNotify_RandomTaunt();
	void SetPlayerInput(int32 Param_PlayerInput);
	void AnimNotify_ReadyForOpponent();
	void AnimNotify_EndRound();
	void AnimNotify_EnteredInputEvent();
	void ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ArmWreslingPanel_GhostAnimBP_C">();
	}
	static class UArmWreslingPanel_GhostAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArmWreslingPanel_GhostAnimBP_C>();
	}
};
static_assert(alignof(UArmWreslingPanel_GhostAnimBP_C) == 0x000010, "Wrong alignment on UArmWreslingPanel_GhostAnimBP_C");
static_assert(sizeof(UArmWreslingPanel_GhostAnimBP_C) == 0x002E00, "Wrong size on UArmWreslingPanel_GhostAnimBP_C");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, UberGraphFrame) == 0x0002F0, "Member 'UArmWreslingPanel_GhostAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_Root) == 0x0002F8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_27) == 0x000328, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_26) == 0x000350, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_25) == 0x000378, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_24) == 0x0003A0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_23) == 0x0003C8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_22) == 0x0003F0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_21) == 0x000418, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_20) == 0x000440, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_19) == 0x000468, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_18) == 0x000490, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_17) == 0x0004B8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_16) == 0x0004E0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_15) == 0x000508, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_14) == 0x000530, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_13) == 0x000558, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_12) == 0x000580, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_11) == 0x0005A8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_10) == 0x0005D0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_9) == 0x0005F8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000620, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000648, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000670, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000698, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0006C0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0006E8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_21) == 0x000710, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_20) == 0x000790, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_13) == 0x000810, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_13' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_14) == 0x0008B8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_19) == 0x0008E8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_18) == 0x000968, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_12) == 0x0009E8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_13) == 0x000A90, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000AC0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_17) == 0x000AE8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_11) == 0x000B68, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_16) == 0x000C10, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_12) == 0x000C90, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_7) == 0x000CC0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x000DA8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_10) == 0x000E90, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_11) == 0x000F38, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_15) == 0x000F68, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_9) == 0x000FE8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_14) == 0x001090, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_10) == 0x001110, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_13) == 0x001140, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_8) == 0x0011C0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_12) == 0x001268, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_9) == 0x0012E8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x001318, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x001398, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_7) == 0x001418, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_8) == 0x0014C0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x0014F0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_6) == 0x001570, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x001618, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_7) == 0x001698, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x0016C8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult) == 0x0016F0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_5) == 0x001718, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x0017C0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x0018A8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_ApplyAdditive_1) == 0x001990, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x001A58, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_6) == 0x001AD8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x001B08, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_4) == 0x001B88, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x001C30, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_ApplyAdditive) == 0x001CB0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x001D78, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x001E20, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x001F08, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_5) == 0x001FF0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateMachine_1) == 0x002020, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_4) == 0x0020D0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x002100, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_3) == 0x002180, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0021B0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x002230, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0022D8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_2) == 0x002358, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x002388, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x002430, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x002518, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult_1) == 0x002600, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x002630, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer) == 0x0026B0, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool) == 0x002730, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateResult) == 0x0027D8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_StateMachine) == 0x002808, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x0028B8, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_UseCachedPose) == 0x002A10, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x002A38, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_TwoBoneIK) == 0x002A60, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x002C40, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, AnimGraphNode_ModifyBone) == 0x002C60, "Member 'UArmWreslingPanel_GhostAnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, Panel) == 0x002D68, "Member 'UArmWreslingPanel_GhostAnimBP_C::Panel' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, ArmWrestleRatio) == 0x002D70, "Member 'UArmWreslingPanel_GhostAnimBP_C::ArmWrestleRatio' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, bGetUp) == 0x002D74, "Member 'UArmWreslingPanel_GhostAnimBP_C::bGetUp' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, bReady) == 0x002D75, "Member 'UArmWreslingPanel_GhostAnimBP_C::bReady' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, bPlayer1) == 0x002D76, "Member 'UArmWreslingPanel_GhostAnimBP_C::bPlayer1' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, bWon) == 0x002D77, "Member 'UArmWreslingPanel_GhostAnimBP_C::bWon' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, bStartRound) == 0x002D78, "Member 'UArmWreslingPanel_GhostAnimBP_C::bStartRound' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, bGameTied) == 0x002D79, "Member 'UArmWreslingPanel_GhostAnimBP_C::bGameTied' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, bEndRound) == 0x002D7A, "Member 'UArmWreslingPanel_GhostAnimBP_C::bEndRound' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, LookPitch) == 0x002D7C, "Member 'UArmWreslingPanel_GhostAnimBP_C::LookPitch' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, LookYaw) == 0x002D80, "Member 'UArmWreslingPanel_GhostAnimBP_C::LookYaw' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, bIsTaunting) == 0x002D84, "Member 'UArmWreslingPanel_GhostAnimBP_C::bIsTaunting' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, TauntType) == 0x002D88, "Member 'UArmWreslingPanel_GhostAnimBP_C::TauntType' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, InputLevel) == 0x002D8C, "Member 'UArmWreslingPanel_GhostAnimBP_C::InputLevel' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, ShouldMoveHandIKRoot) == 0x002D90, "Member 'UArmWreslingPanel_GhostAnimBP_C::ShouldMoveHandIKRoot' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, P1_IKPlaySequence) == 0x002D98, "Member 'UArmWreslingPanel_GhostAnimBP_C::P1_IKPlaySequence' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, IKHandLocation) == 0x002DA0, "Member 'UArmWreslingPanel_GhostAnimBP_C::IKHandLocation' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, HandRotation) == 0x002DAC, "Member 'UArmWreslingPanel_GhostAnimBP_C::HandRotation' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, IKElbowLocation) == 0x002DB8, "Member 'UArmWreslingPanel_GhostAnimBP_C::IKElbowLocation' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, P2_IKPlaySequence) == 0x002DC8, "Member 'UArmWreslingPanel_GhostAnimBP_C::P2_IKPlaySequence' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, bUseIK) == 0x002DD0, "Member 'UArmWreslingPanel_GhostAnimBP_C::bUseIK' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, ArmWrestleRatio_Noised) == 0x002DD4, "Member 'UArmWreslingPanel_GhostAnimBP_C::ArmWrestleRatio_Noised' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, PlayerInput) == 0x002DD8, "Member 'UArmWreslingPanel_GhostAnimBP_C::PlayerInput' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, WhichAnim) == 0x002DE0, "Member 'UArmWreslingPanel_GhostAnimBP_C::WhichAnim' has a wrong offset!");
static_assert(offsetof(UArmWreslingPanel_GhostAnimBP_C, TauntCount) == 0x002DF0, "Member 'UArmWreslingPanel_GhostAnimBP_C::TauntCount' has a wrong offset!");

}

