#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchStartCountdownWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MatchStartCountdownWidget.MatchStartCountdownWidget_C
// 0x0030 (0x0318 - 0x02E8)
class UMatchStartCountdownWidget_C final : public URBHUDElementWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonHudCountdown_C*                  CommonHudCountdown;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         MatchStartServerTime;                              // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MatchCountdownActive;                              // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsStartingSoon;                                    // 0x02FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MatchCountdownStartServerTime;                     // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReadyToTravelToMatch;                              // 0x0304(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FindPartyActive;                                   // 0x0305(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFindPartyTicketState                         FindPartyTicketState;                              // 0x0306(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRelease;                                        // 0x0307(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   ProgramId;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgramDifficulty                            ProgramDifficulty;                                 // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MatchStartCountdownWidget(int32 EntryPoint);
	void OnFindPartyTicketStateUpdatedEvent(EFindPartyTicketState FindPartyTicketState_0);
	void OnFindPartyStateUpdatedEvent(class ARBLobbyPlayerState* RBLobbyPlayerState, const struct FFindPartyState& FindPartyState);
	void OnMatchStateUpdatedEvent(class ARBLobbyPlayerState* RBLobbyPlayerState, const struct FMatchState& MatchState);
	void Destruct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void StartMatchCountdown(float MatchCancelationGracePeriodServerTime, float MatchStartServerTime_0, bool bReadyToTravelToMatch);
	void CancelMatchCountdown();
	void SetIsRightAligned(bool IsRightAligned);
	void OnMatchStateUpdated(const struct FMatchState& MatchState);
	void UpdateText();
	void OnFindPartyStateUpdated(const struct FFindPartyState& FindPartyState);
	void OnFindPartyTicketStateUpdated(EFindPartyTicketState FindPartyTicketState_0);
	void UpdateCountdownText();
	class FText GetFindPartySearchingText();

	bool ShouldShow() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MatchStartCountdownWidget_C">();
	}
	static class UMatchStartCountdownWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchStartCountdownWidget_C>();
	}
};
static_assert(alignof(UMatchStartCountdownWidget_C) == 0x000008, "Wrong alignment on UMatchStartCountdownWidget_C");
static_assert(sizeof(UMatchStartCountdownWidget_C) == 0x000318, "Wrong size on UMatchStartCountdownWidget_C");
static_assert(offsetof(UMatchStartCountdownWidget_C, UberGraphFrame) == 0x0002E8, "Member 'UMatchStartCountdownWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, CommonHudCountdown) == 0x0002F0, "Member 'UMatchStartCountdownWidget_C::CommonHudCountdown' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, MatchStartServerTime) == 0x0002F8, "Member 'UMatchStartCountdownWidget_C::MatchStartServerTime' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, MatchCountdownActive) == 0x0002FC, "Member 'UMatchStartCountdownWidget_C::MatchCountdownActive' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, IsStartingSoon) == 0x0002FD, "Member 'UMatchStartCountdownWidget_C::IsStartingSoon' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, MatchCountdownStartServerTime) == 0x000300, "Member 'UMatchStartCountdownWidget_C::MatchCountdownStartServerTime' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, ReadyToTravelToMatch) == 0x000304, "Member 'UMatchStartCountdownWidget_C::ReadyToTravelToMatch' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, FindPartyActive) == 0x000305, "Member 'UMatchStartCountdownWidget_C::FindPartyActive' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, FindPartyTicketState) == 0x000306, "Member 'UMatchStartCountdownWidget_C::FindPartyTicketState' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, bIsRelease) == 0x000307, "Member 'UMatchStartCountdownWidget_C::bIsRelease' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, ProgramId) == 0x000308, "Member 'UMatchStartCountdownWidget_C::ProgramId' has a wrong offset!");
static_assert(offsetof(UMatchStartCountdownWidget_C, ProgramDifficulty) == 0x000310, "Member 'UMatchStartCountdownWidget_C::ProgramDifficulty' has a wrong offset!");

}

