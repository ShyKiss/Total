#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TextCanvas_FL

#include "Basic.hpp"

#include "IconBox_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TextBox_structs.hpp"


namespace SDK::Params
{

// Function TextCanvas_FL.TextCanvas_FL_C.Draw Icons Material
// 0x00E8 (0x00E8 - 0x0000)
struct TextCanvas_FL_C_Draw_Icons_Material final
{
public:
	class UCanvas*                                Canvas;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenSize;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               IconMaterial;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScaleFactor;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FIconBox>                       Icon;                                              // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIconBox                               NewLocalVar_1;                                     // 0x0038(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F1[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F2[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIconBox                               CallFunc_Array_Get_Item;                           // 0x0088(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F3[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_2;  // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextCanvas_FL_C_Draw_Icons_Material) == 0x000008, "Wrong alignment on TextCanvas_FL_C_Draw_Icons_Material");
static_assert(sizeof(TextCanvas_FL_C_Draw_Icons_Material) == 0x0000E8, "Wrong size on TextCanvas_FL_C_Draw_Icons_Material");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, Canvas) == 0x000000, "Member 'TextCanvas_FL_C_Draw_Icons_Material::Canvas' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, ScreenSize) == 0x000008, "Member 'TextCanvas_FL_C_Draw_Icons_Material::ScreenSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, IconMaterial) == 0x000010, "Member 'TextCanvas_FL_C_Draw_Icons_Material::IconMaterial' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, ScaleFactor) == 0x000018, "Member 'TextCanvas_FL_C_Draw_Icons_Material::ScaleFactor' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, Icon) == 0x000020, "Member 'TextCanvas_FL_C_Draw_Icons_Material::Icon' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, __WorldContext) == 0x000030, "Member 'TextCanvas_FL_C_Draw_Icons_Material::__WorldContext' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, NewLocalVar_1) == 0x000038, "Member 'TextCanvas_FL_C_Draw_Icons_Material::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000068, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'TextCanvas_FL_C_Draw_Icons_Material::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, Temp_int_Array_Index_Variable) == 0x000084, "Member 'TextCanvas_FL_C_Draw_Icons_Material::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_Array_Get_Item) == 0x000088, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000B8, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0000C0, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x0000CC, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_Multiply_Vector2DVector2D_ReturnValue_2) == 0x0000D4, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_Multiply_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons_Material, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000DC, "Member 'TextCanvas_FL_C_Draw_Icons_Material::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function TextCanvas_FL.TextCanvas_FL_C.Add Item to Mimic
// 0x0030 (0x0030 - 0x0000)
struct TextCanvas_FL_C_Add_Item_to_Mimic final
{
public:
	TArray<class AActor*>                         Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F4[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextCanvas_FL_C_Add_Item_to_Mimic) == 0x000008, "Wrong alignment on TextCanvas_FL_C_Add_Item_to_Mimic");
static_assert(sizeof(TextCanvas_FL_C_Add_Item_to_Mimic) == 0x000030, "Wrong size on TextCanvas_FL_C_Add_Item_to_Mimic");
static_assert(offsetof(TextCanvas_FL_C_Add_Item_to_Mimic, Array) == 0x000000, "Member 'TextCanvas_FL_C_Add_Item_to_Mimic::Array' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Add_Item_to_Mimic, __WorldContext) == 0x000010, "Member 'TextCanvas_FL_C_Add_Item_to_Mimic::__WorldContext' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Add_Item_to_Mimic, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'TextCanvas_FL_C_Add_Item_to_Mimic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Add_Item_to_Mimic, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'TextCanvas_FL_C_Add_Item_to_Mimic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Add_Item_to_Mimic, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'TextCanvas_FL_C_Add_Item_to_Mimic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Add_Item_to_Mimic, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'TextCanvas_FL_C_Add_Item_to_Mimic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Add_Item_to_Mimic, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'TextCanvas_FL_C_Add_Item_to_Mimic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function TextCanvas_FL.TextCanvas_FL_C.SetMimicMaterial
// 0x0018 (0x0018 - 0x0000)
struct TextCanvas_FL_C_SetMimicMaterial final
{
public:
	class UPrimitiveComponent*                    MeshTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextCanvas_FL_C_SetMimicMaterial) == 0x000008, "Wrong alignment on TextCanvas_FL_C_SetMimicMaterial");
static_assert(sizeof(TextCanvas_FL_C_SetMimicMaterial) == 0x000018, "Wrong size on TextCanvas_FL_C_SetMimicMaterial");
static_assert(offsetof(TextCanvas_FL_C_SetMimicMaterial, MeshTarget) == 0x000000, "Member 'TextCanvas_FL_C_SetMimicMaterial::MeshTarget' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_SetMimicMaterial, Material) == 0x000008, "Member 'TextCanvas_FL_C_SetMimicMaterial::Material' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_SetMimicMaterial, __WorldContext) == 0x000010, "Member 'TextCanvas_FL_C_SetMimicMaterial::__WorldContext' has a wrong offset!");

// Function TextCanvas_FL.TextCanvas_FL_C.Update Mimic
// 0x0048 (0x0048 - 0x0000)
struct TextCanvas_FL_C_Update_Mimic final
{
public:
	TArray<class AActor*>                         Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UPrimitiveComponent*                    MeshTarget;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F5[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F6[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextCanvas_FL_C_Update_Mimic) == 0x000008, "Wrong alignment on TextCanvas_FL_C_Update_Mimic");
static_assert(sizeof(TextCanvas_FL_C_Update_Mimic) == 0x000048, "Wrong size on TextCanvas_FL_C_Update_Mimic");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, Array) == 0x000000, "Member 'TextCanvas_FL_C_Update_Mimic::Array' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, MeshTarget) == 0x000010, "Member 'TextCanvas_FL_C_Update_Mimic::MeshTarget' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, Material) == 0x000018, "Member 'TextCanvas_FL_C_Update_Mimic::Material' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, __WorldContext) == 0x000020, "Member 'TextCanvas_FL_C_Update_Mimic::__WorldContext' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'TextCanvas_FL_C_Update_Mimic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'TextCanvas_FL_C_Update_Mimic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'TextCanvas_FL_C_Update_Mimic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, CallFunc_Array_Get_Item) == 0x000038, "Member 'TextCanvas_FL_C_Update_Mimic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'TextCanvas_FL_C_Update_Mimic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Update_Mimic, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'TextCanvas_FL_C_Update_Mimic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function TextCanvas_FL.TextCanvas_FL_C.DrawTextBox
// 0x0230 (0x0230 - 0x0000)
struct TextCanvas_FL_C_DrawTextBox final
{
public:
	struct FVector2D                              ScaleFactor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RenderTextureSize;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenSize;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KerningJustifyMax;                                 // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KerningJustifyMin;                                 // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F7[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBox                               TextBox;                                           // 0x0030(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _ScreenPosition;                                   // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F8[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W;                           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F9[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustText_ScaleFont;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FA[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_AdjustText__AdjustedLines1;               // 0x0160(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_AdjustText__KerningScale1;                // 0x0170(0x0010)(ReferenceParm)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30FB[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30FC[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_6;                        // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_6;                        // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x021C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextCanvas_FL_C_DrawTextBox) == 0x000010, "Wrong alignment on TextCanvas_FL_C_DrawTextBox");
static_assert(sizeof(TextCanvas_FL_C_DrawTextBox) == 0x000230, "Wrong size on TextCanvas_FL_C_DrawTextBox");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, ScaleFactor) == 0x000000, "Member 'TextCanvas_FL_C_DrawTextBox::ScaleFactor' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, RenderTextureSize) == 0x000008, "Member 'TextCanvas_FL_C_DrawTextBox::RenderTextureSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, Canvas) == 0x000010, "Member 'TextCanvas_FL_C_DrawTextBox::Canvas' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, ScreenSize) == 0x000018, "Member 'TextCanvas_FL_C_DrawTextBox::ScreenSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, KerningJustifyMax) == 0x000020, "Member 'TextCanvas_FL_C_DrawTextBox::KerningJustifyMax' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, KerningJustifyMin) == 0x000024, "Member 'TextCanvas_FL_C_DrawTextBox::KerningJustifyMin' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, TextBox) == 0x000030, "Member 'TextCanvas_FL_C_DrawTextBox::TextBox' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, __WorldContext) == 0x0000C0, "Member 'TextCanvas_FL_C_DrawTextBox::__WorldContext' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, _ScreenPosition) == 0x0000C8, "Member 'TextCanvas_FL_C_DrawTextBox::_ScreenPosition' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, Temp_bool_Variable) == 0x0000D0, "Member 'TextCanvas_FL_C_DrawTextBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, Temp_float_Variable) == 0x0000D4, "Member 'TextCanvas_FL_C_DrawTextBox::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'TextCanvas_FL_C_DrawTextBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector4_X) == 0x0000DC, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector4_Y) == 0x0000E0, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector4_Z) == 0x0000E4, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector4_W) == 0x0000E8, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F0, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_FloatFloat_ReturnValue) == 0x000100, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000104, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_X) == 0x000108, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_Y) == 0x00010C, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000110, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000114, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_X_1) == 0x000118, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_Y_1) == 0x00011C, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_X_2) == 0x000120, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_Y_2) == 0x000124, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000128, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00012C, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000130, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000134, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000138, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_X_3) == 0x00013C, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_Y_3) == 0x000140, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_MakeVector2D_ReturnValue) == 0x000144, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00014C, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000150, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_AdjustText_ScaleFont) == 0x000158, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_AdjustText_ScaleFont' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_AdjustText__AdjustedLines1) == 0x000160, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_AdjustText__AdjustedLines1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_AdjustText__KerningScale1) == 0x000170, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_AdjustText__KerningScale1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_X_4) == 0x000180, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_Y_4) == 0x000184, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Array_Get_Item) == 0x000188, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, K2Node_Select_Default) == 0x00018C, "Member 'TextCanvas_FL_C_DrawTextBox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000190, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000194, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Array_Get_Item_1) == 0x000198, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Array_Length_ReturnValue_1) == 0x0001AC, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001B0, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_X_5) == 0x0001B4, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_Y_5) == 0x0001B8, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0001BC, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0001C4, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0001C8, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0001D0, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, Temp_float_Variable_1) == 0x0001D4, "Member 'TextCanvas_FL_C_DrawTextBox::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001D8, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001E0, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, Temp_bool_Variable_1) == 0x0001E4, "Member 'TextCanvas_FL_C_DrawTextBox::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001E8, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0001EC, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, Temp_int_Loop_Counter_Variable) == 0x0001F0, "Member 'TextCanvas_FL_C_DrawTextBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, K2Node_Select_Default_1) == 0x0001F4, "Member 'TextCanvas_FL_C_DrawTextBox::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Less_IntInt_ReturnValue) == 0x0001F8, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_IntInt_ReturnValue) == 0x0001FC, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000200, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_X_6) == 0x000208, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_BreakVector2D_Y_6) == 0x00020C, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000210, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x000214, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000218, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBox, CallFunc_MakeVector2D_ReturnValue_2) == 0x00021C, "Member 'TextCanvas_FL_C_DrawTextBox::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

// Function TextCanvas_FL.TextCanvas_FL_C.FindFontSize
// 0x00F8 (0x00F8 - 0x0000)
struct TextCanvas_FL_C_FindFontSize final
{
public:
	TArray<class FString>                         String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UFont*                                  RenderFont;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BoxSize;                                           // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Kerning;                                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FontScale;                                         // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FD[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _BiggestWord;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         _MaxSize;                                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30FE[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FF[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0080(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_K2_TextSize_ReturnValue;                  // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3100[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3101[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextCanvas_FL_C_FindFontSize) == 0x000008, "Wrong alignment on TextCanvas_FL_C_FindFontSize");
static_assert(sizeof(TextCanvas_FL_C_FindFontSize) == 0x0000F8, "Wrong size on TextCanvas_FL_C_FindFontSize");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, String) == 0x000000, "Member 'TextCanvas_FL_C_FindFontSize::String' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, RenderFont) == 0x000010, "Member 'TextCanvas_FL_C_FindFontSize::RenderFont' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, Scale) == 0x000018, "Member 'TextCanvas_FL_C_FindFontSize::Scale' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, BoxSize) == 0x00001C, "Member 'TextCanvas_FL_C_FindFontSize::BoxSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, Kerning) == 0x000024, "Member 'TextCanvas_FL_C_FindFontSize::Kerning' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, Canvas) == 0x000028, "Member 'TextCanvas_FL_C_FindFontSize::Canvas' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, __WorldContext) == 0x000030, "Member 'TextCanvas_FL_C_FindFontSize::__WorldContext' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, FontScale) == 0x000038, "Member 'TextCanvas_FL_C_FindFontSize::FontScale' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, _BiggestWord) == 0x000040, "Member 'TextCanvas_FL_C_FindFontSize::_BiggestWord' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, _MaxSize) == 0x000050, "Member 'TextCanvas_FL_C_FindFontSize::_MaxSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, Temp_int_Array_Index_Variable) == 0x000054, "Member 'TextCanvas_FL_C_FindFontSize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'TextCanvas_FL_C_FindFontSize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'TextCanvas_FL_C_FindFontSize::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Array_Get_Item) == 0x000070, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_ParseIntoArray_ReturnValue) == 0x000080, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_BreakVector2D_X) == 0x0000A4, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_MakeVector2D_ReturnValue) == 0x0000AC, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_K2_TextSize_ReturnValue) == 0x0000B4, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_K2_TextSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000BC, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_BreakVector2D_X_1) == 0x0000C0, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_BreakVector2D_Y_1) == 0x0000C4, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Len_ReturnValue) == 0x0000C8, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000CC, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D0, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000D4, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000D8, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, Temp_int_Loop_Counter_Variable_1) == 0x0000DC, "Member 'TextCanvas_FL_C_FindFontSize::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000E0, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_FMax_ReturnValue) == 0x0000E4, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000EC, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_FMin_ReturnValue) == 0x0000F0, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_FindFontSize, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F4, "Member 'TextCanvas_FL_C_FindFontSize::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function TextCanvas_FL.TextCanvas_FL_C.AdjustText
// 0x0288 (0x0288 - 0x0000)
struct TextCanvas_FL_C_AdjustText final
{
public:
	class UFont*                                  RenderFont;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FontScale;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BoxSize;                                           // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Kerning;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Text;                                              // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         KerningJustifyMax;                                 // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KerningJustifyMin;                                 // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineScale;                                         // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3102[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleFont;                                         // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3103[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         _AdjustedLines1;                                   // 0x0050(0x0010)(Parm, OutParm)
	TArray<float>                                 _KerningScale1;                                    // 0x0060(0x0010)(Parm, OutParm)
	int32                                         Number;                                            // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _FinalFontScale;                                   // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _newLS;                                            // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _newFS;                                            // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _LS_L;                                             // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _CurrentKerningScale;                              // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _KerningJustifyMin_L;                              // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _KerningJustifyMax_L;                              // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 _CurrentLine;                                      // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UCanvas*                                _Canvas_L;                                         // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 _KerningScale;                                     // 0x00A8(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         _AdjustedLines;                                    // 0x00B8(0x0010)(Edit, BlueprintVisible)
	float                                         _Kerning_L;                                        // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _FS_L;                                             // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFont*                                  _RenderFontL;                                      // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _BoxSizeL;                                         // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseTVChannelTextIntoLines_ReturnValue;  // 0x00E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3104[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3105[0x2];                                     // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0118(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3106[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0130(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3107[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindFontSize_FontScale;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3108[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3109[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310A[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310B[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_K2_TextSize_ReturnValue;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310C[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_K2_TextSize_ReturnValue_1;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextCanvas_FL_C_AdjustText) == 0x000008, "Wrong alignment on TextCanvas_FL_C_AdjustText");
static_assert(sizeof(TextCanvas_FL_C_AdjustText) == 0x000288, "Wrong size on TextCanvas_FL_C_AdjustText");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, RenderFont) == 0x000000, "Member 'TextCanvas_FL_C_AdjustText::RenderFont' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, FontScale) == 0x000008, "Member 'TextCanvas_FL_C_AdjustText::FontScale' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, BoxSize) == 0x00000C, "Member 'TextCanvas_FL_C_AdjustText::BoxSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Kerning) == 0x000014, "Member 'TextCanvas_FL_C_AdjustText::Kerning' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Canvas) == 0x000018, "Member 'TextCanvas_FL_C_AdjustText::Canvas' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Text) == 0x000020, "Member 'TextCanvas_FL_C_AdjustText::Text' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, KerningJustifyMax) == 0x000030, "Member 'TextCanvas_FL_C_AdjustText::KerningJustifyMax' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, KerningJustifyMin) == 0x000034, "Member 'TextCanvas_FL_C_AdjustText::KerningJustifyMin' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, LineScale) == 0x000038, "Member 'TextCanvas_FL_C_AdjustText::LineScale' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, __WorldContext) == 0x000040, "Member 'TextCanvas_FL_C_AdjustText::__WorldContext' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, ScaleFont) == 0x000048, "Member 'TextCanvas_FL_C_AdjustText::ScaleFont' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _AdjustedLines1) == 0x000050, "Member 'TextCanvas_FL_C_AdjustText::_AdjustedLines1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _KerningScale1) == 0x000060, "Member 'TextCanvas_FL_C_AdjustText::_KerningScale1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Number) == 0x000070, "Member 'TextCanvas_FL_C_AdjustText::Number' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _FinalFontScale) == 0x000074, "Member 'TextCanvas_FL_C_AdjustText::_FinalFontScale' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _newLS) == 0x000078, "Member 'TextCanvas_FL_C_AdjustText::_newLS' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _newFS) == 0x00007C, "Member 'TextCanvas_FL_C_AdjustText::_newFS' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _LS_L) == 0x000080, "Member 'TextCanvas_FL_C_AdjustText::_LS_L' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _CurrentKerningScale) == 0x000084, "Member 'TextCanvas_FL_C_AdjustText::_CurrentKerningScale' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _KerningJustifyMin_L) == 0x000088, "Member 'TextCanvas_FL_C_AdjustText::_KerningJustifyMin_L' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _KerningJustifyMax_L) == 0x00008C, "Member 'TextCanvas_FL_C_AdjustText::_KerningJustifyMax_L' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _CurrentLine) == 0x000090, "Member 'TextCanvas_FL_C_AdjustText::_CurrentLine' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _Canvas_L) == 0x0000A0, "Member 'TextCanvas_FL_C_AdjustText::_Canvas_L' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _KerningScale) == 0x0000A8, "Member 'TextCanvas_FL_C_AdjustText::_KerningScale' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _AdjustedLines) == 0x0000B8, "Member 'TextCanvas_FL_C_AdjustText::_AdjustedLines' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _Kerning_L) == 0x0000C8, "Member 'TextCanvas_FL_C_AdjustText::_Kerning_L' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _FS_L) == 0x0000CC, "Member 'TextCanvas_FL_C_AdjustText::_FS_L' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _RenderFontL) == 0x0000D0, "Member 'TextCanvas_FL_C_AdjustText::_RenderFontL' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, _BoxSizeL) == 0x0000D8, "Member 'TextCanvas_FL_C_AdjustText::_BoxSizeL' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_ParseTVChannelTextIntoLines_ReturnValue) == 0x0000E0, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_ParseTVChannelTextIntoLines_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Temp_int_Array_Index_Variable) == 0x0000F4, "Member 'TextCanvas_FL_C_AdjustText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'TextCanvas_FL_C_AdjustText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000FC, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Temp_int_Variable) == 0x000104, "Member 'TextCanvas_FL_C_AdjustText::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Temp_int_Loop_Counter_Variable_1) == 0x000108, "Member 'TextCanvas_FL_C_AdjustText::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Greater_IntInt_ReturnValue) == 0x00010C, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Less_IntInt_ReturnValue) == 0x00010D, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Temp_int_Array_Index_Variable_1) == 0x000114, "Member 'TextCanvas_FL_C_AdjustText::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Temp_float_Variable) == 0x000118, "Member 'TextCanvas_FL_C_AdjustText::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Array_Get_Item) == 0x000120, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_ParseIntoArray_ReturnValue) == 0x000130, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Less_IntInt_ReturnValue_1) == 0x000154, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_X) == 0x000158, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_Y) == 0x00015C, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_X_1) == 0x000160, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_Y_1) == 0x000164, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_X_2) == 0x000168, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_Y_2) == 0x00016C, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_FindFontSize_FontScale) == 0x000170, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_FindFontSize_FontScale' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Temp_string_Variable) == 0x000178, "Member 'TextCanvas_FL_C_AdjustText::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Temp_string_Variable_1) == 0x000188, "Member 'TextCanvas_FL_C_AdjustText::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_MakeVector2D_ReturnValue) == 0x000198, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001A0, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001A8, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001AC, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001B0, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001B4, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001B8, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Array_Length_ReturnValue_2) == 0x0001BC, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001C0, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001C4, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0001C8, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001CC, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Array_Add_ReturnValue) == 0x0001D0, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Array_Add_ReturnValue_1) == 0x0001D4, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0001D8, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Len_ReturnValue) == 0x0001DC, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_K2_TextSize_ReturnValue) == 0x0001E0, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_K2_TextSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001E8, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_X_3) == 0x0001EC, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_Y_3) == 0x0001F0, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0001F4, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_FMax_ReturnValue) == 0x0001F8, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_FMax_ReturnValue_1) == 0x0001FC, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000200, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000204, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Array_Add_ReturnValue_2) == 0x000208, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Add_FloatFloat_ReturnValue) == 0x00020C, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000210, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000214, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Array_Add_ReturnValue_3) == 0x000218, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00021C, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_FMin_ReturnValue) == 0x000220, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_FMax_ReturnValue_2) == 0x000224, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, Temp_bool_Variable) == 0x000228, "Member 'TextCanvas_FL_C_AdjustText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, K2Node_Select_Default) == 0x000230, "Member 'TextCanvas_FL_C_AdjustText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Concat_StrStr_ReturnValue) == 0x000240, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000250, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_K2_TextSize_ReturnValue_1) == 0x000260, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_K2_TextSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_X_4) == 0x000268, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_BreakVector2D_Y_4) == 0x00026C, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Len_ReturnValue_1) == 0x000270, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000274, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000278, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x00027C, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000280, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_AdjustText, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000284, "Member 'TextCanvas_FL_C_AdjustText::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function TextCanvas_FL.TextCanvas_FL_C.DrawTextBoxArray
// 0x0130 (0x0130 - 0x0000)
struct TextCanvas_FL_C_DrawTextBoxArray final
{
public:
	struct FVector2D                              ScaleFactor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RenderTextureSize;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenSize;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KerningJustifyMax;                                 // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KerningJustifyMin;                                 // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTextBox>                       TextBox;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _KerningJustifyMin;                                // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _KerningJustifyMax;                                // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFont*                                  _RenderFont;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                _Canvas;                                           // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _ScreenPosition;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _ScreenSize;                                       // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _RenderTextureSize;                                // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _ScaleFactor;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_310D[0xC];                                     // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextBox                               CallFunc_Array_Get_Item;                           // 0x0090(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310E[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextCanvas_FL_C_DrawTextBoxArray) == 0x000010, "Wrong alignment on TextCanvas_FL_C_DrawTextBoxArray");
static_assert(sizeof(TextCanvas_FL_C_DrawTextBoxArray) == 0x000130, "Wrong size on TextCanvas_FL_C_DrawTextBoxArray");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, ScaleFactor) == 0x000000, "Member 'TextCanvas_FL_C_DrawTextBoxArray::ScaleFactor' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, RenderTextureSize) == 0x000008, "Member 'TextCanvas_FL_C_DrawTextBoxArray::RenderTextureSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, ScreenSize) == 0x000010, "Member 'TextCanvas_FL_C_DrawTextBoxArray::ScreenSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, Canvas) == 0x000018, "Member 'TextCanvas_FL_C_DrawTextBoxArray::Canvas' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, KerningJustifyMax) == 0x000020, "Member 'TextCanvas_FL_C_DrawTextBoxArray::KerningJustifyMax' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, KerningJustifyMin) == 0x000024, "Member 'TextCanvas_FL_C_DrawTextBoxArray::KerningJustifyMin' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, TextBox) == 0x000028, "Member 'TextCanvas_FL_C_DrawTextBoxArray::TextBox' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, __WorldContext) == 0x000038, "Member 'TextCanvas_FL_C_DrawTextBoxArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, _KerningJustifyMin) == 0x000040, "Member 'TextCanvas_FL_C_DrawTextBoxArray::_KerningJustifyMin' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, _KerningJustifyMax) == 0x000044, "Member 'TextCanvas_FL_C_DrawTextBoxArray::_KerningJustifyMax' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, _RenderFont) == 0x000048, "Member 'TextCanvas_FL_C_DrawTextBoxArray::_RenderFont' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, _Canvas) == 0x000050, "Member 'TextCanvas_FL_C_DrawTextBoxArray::_Canvas' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, _ScreenPosition) == 0x000058, "Member 'TextCanvas_FL_C_DrawTextBoxArray::_ScreenPosition' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, _ScreenSize) == 0x000060, "Member 'TextCanvas_FL_C_DrawTextBoxArray::_ScreenSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, _RenderTextureSize) == 0x000068, "Member 'TextCanvas_FL_C_DrawTextBoxArray::_RenderTextureSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, _ScaleFactor) == 0x000070, "Member 'TextCanvas_FL_C_DrawTextBoxArray::_ScaleFactor' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'TextCanvas_FL_C_DrawTextBoxArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'TextCanvas_FL_C_DrawTextBoxArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'TextCanvas_FL_C_DrawTextBoxArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, CallFunc_Array_Get_Item) == 0x000090, "Member 'TextCanvas_FL_C_DrawTextBoxArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'TextCanvas_FL_C_DrawTextBoxArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_DrawTextBoxArray, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'TextCanvas_FL_C_DrawTextBoxArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function TextCanvas_FL.TextCanvas_FL_C.Draw Icons
// 0x00C8 (0x00C8 - 0x0000)
struct TextCanvas_FL_C_Draw_Icons final
{
public:
	TArray<struct FIconBox>                       Icons;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UCanvas*                                Canvas;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenSize;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UVSize;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Ratio;                                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_310F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIconBox                               CallFunc_Array_Get_Item;                           // 0x0048(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3110[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3111[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_2;  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_3;  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextCanvas_FL_C_Draw_Icons) == 0x000008, "Wrong alignment on TextCanvas_FL_C_Draw_Icons");
static_assert(sizeof(TextCanvas_FL_C_Draw_Icons) == 0x0000C8, "Wrong size on TextCanvas_FL_C_Draw_Icons");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, Icons) == 0x000000, "Member 'TextCanvas_FL_C_Draw_Icons::Icons' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, Canvas) == 0x000010, "Member 'TextCanvas_FL_C_Draw_Icons::Canvas' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, ScreenSize) == 0x000018, "Member 'TextCanvas_FL_C_Draw_Icons::ScreenSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, UVSize) == 0x000020, "Member 'TextCanvas_FL_C_Draw_Icons::UVSize' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, Ratio) == 0x000028, "Member 'TextCanvas_FL_C_Draw_Icons::Ratio' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, __WorldContext) == 0x000030, "Member 'TextCanvas_FL_C_Draw_Icons::__WorldContext' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, Temp_int_Array_Index_Variable) == 0x000040, "Member 'TextCanvas_FL_C_Draw_Icons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'TextCanvas_FL_C_Draw_Icons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Array_Get_Item) == 0x000048, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x00007C, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000084, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00008C, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x000098, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000A0, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Multiply_Vector2DVector2D_ReturnValue_2) == 0x0000A8, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Multiply_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Multiply_Vector2DVector2D_ReturnValue_3) == 0x0000B0, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Multiply_Vector2DVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextCanvas_FL_C_Draw_Icons, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000BC, "Member 'TextCanvas_FL_C_Draw_Icons::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");

}

