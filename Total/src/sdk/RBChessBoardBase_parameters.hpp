#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RBChessBoardBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RBChessBoardBase.RBChessBoardBase_C.DrawGrid
// 0x0110 (0x0110 - 0x0000)
struct RBChessBoardBase_C_DrawGrid final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3430[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3431[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3432[0xC];                                     // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_2;          // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_3;          // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3433[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBChessBoardBase_C_DrawGrid) == 0x000010, "Wrong alignment on RBChessBoardBase_C_DrawGrid");
static_assert(sizeof(RBChessBoardBase_C_DrawGrid) == 0x000110, "Wrong size on RBChessBoardBase_C_DrawGrid");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, Temp_int_Variable) == 0x000000, "Member 'RBChessBoardBase_C_DrawGrid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000040, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_GetTransform_ReturnValue_1) == 0x000050, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, K2Node_MakeArray_Array) == 0x000080, "Member 'RBChessBoardBase_C_DrawGrid::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, Temp_int_Variable_1) == 0x000090, "Member 'RBChessBoardBase_C_DrawGrid::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_Array_Get_Item) == 0x000094, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_MakeVector_ReturnValue) == 0x00009C, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_MakeVector_ReturnValue_1) == 0x0000A8, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_TransformLocation_ReturnValue) == 0x0000B4, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_TransformLocation_ReturnValue_1) == 0x0000C0, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_MakeVector_ReturnValue_2) == 0x0000CC, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_MakeVector_ReturnValue_3) == 0x0000D8, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_TransformLocation_ReturnValue_2) == 0x0000E4, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_TransformLocation_ReturnValue_3) == 0x0000F0, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_TransformLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000FC, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_DrawGrid, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'RBChessBoardBase_C_DrawGrid::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function RBChessBoardBase.RBChessBoardBase_C.GetPromotingPieceRelativeLocation
// 0x00B0 (0x00B0 - 0x0000)
struct RBChessBoardBase_C_GetPromotingPieceRelativeLocation final
{
public:
	struct FIntPoint                              Param_Coord;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SquareSize;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3434[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation) == 0x000010, "Wrong alignment on RBChessBoardBase_C_GetPromotingPieceRelativeLocation");
static_assert(sizeof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation) == 0x0000B0, "Wrong size on RBChessBoardBase_C_GetPromotingPieceRelativeLocation");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, Param_Coord) == 0x000000, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::Param_Coord' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, Location) == 0x000008, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::Location' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, SquareSize) == 0x000014, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::SquareSize' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_GetRelativeTransform_ReturnValue) == 0x000020, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000054, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000058, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Multiply_IntInt_ReturnValue) == 0x00005C, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000060, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00006C, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000074, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000078, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_MakeVector_ReturnValue) == 0x000084, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_BreakVector_X) == 0x000090, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_BreakVector_Y) == 0x000094, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_BreakVector_Z) == 0x000098, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_TransformLocation_ReturnValue) == 0x00009C, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_GetPromotingPieceRelativeLocation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000A8, "Member 'RBChessBoardBase_C_GetPromotingPieceRelativeLocation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function RBChessBoardBase.RBChessBoardBase_C.SetDisplayPromotingPieces
// 0x0118 (0x0118 - 0x0000)
struct RBChessBoardBase_C_SetDisplayPromotingPieces final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EChessTeam                                    Team;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3435[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChessTeam                                    Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3436[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3437[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntPoint>                      CallFunc_GetPromotingCoords_ReturnValue;           // 0x0058(0x0010)(ReferenceParm)
	struct FIntPoint                              CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPromotingPieceRelativeLocation_location; // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3438[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RBChessBoardBase_C_SetDisplayPromotingPieces) == 0x000008, "Wrong alignment on RBChessBoardBase_C_SetDisplayPromotingPieces");
static_assert(sizeof(RBChessBoardBase_C_SetDisplayPromotingPieces) == 0x000118, "Wrong size on RBChessBoardBase_C_SetDisplayPromotingPieces");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, bDisplay) == 0x000000, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::bDisplay' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, Team) == 0x000001, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::Team' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, Temp_float_Variable) == 0x000004, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, Temp_float_Variable_1) == 0x000008, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, Temp_float_Variable_2) == 0x00000C, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, Temp_int_Array_Index_Variable) == 0x000018, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, Temp_byte_Variable) == 0x00001C, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, K2Node_Select_Default) == 0x000028, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, K2Node_MakeArray_Array) == 0x000030, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Array_Get_Item) == 0x000040, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_GetPromotingCoords_ReturnValue) == 0x000058, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_GetPromotingCoords_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_GetPromotingPieceRelativeLocation_location) == 0x000074, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_GetPromotingPieceRelativeLocation_location' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_Add_VectorVector_ReturnValue) == 0x000084, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_SetDisplayPromotingPieces, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000090, "Member 'RBChessBoardBase_C_SetDisplayPromotingPieces::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function RBChessBoardBase.RBChessBoardBase_C.ExecuteUbergraph_RBChessBoardBase
// 0x0018 (0x0018 - 0x0000)
struct RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3439[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AChessClock_BP_C*                       K2Node_DynamicCast_AsChess_Clock_BP;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase) == 0x000008, "Wrong alignment on RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase");
static_assert(sizeof(RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase) == 0x000018, "Wrong size on RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase");
static_assert(offsetof(RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase, EntryPoint) == 0x000000, "Member 'RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase, K2Node_DynamicCast_AsChess_Clock_BP) == 0x000008, "Member 'RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase::K2Node_DynamicCast_AsChess_Clock_BP' has a wrong offset!");
static_assert(offsetof(RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'RBChessBoardBase_C_ExecuteUbergraph_RBChessBoardBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

