#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrialBoardTab

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "OPP_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TrialBoardTab.TrialBoardTab_C.CanFocusEntry
// 0x0010 (0x0010 - 0x0000)
struct TrialBoardTab_C_CanFocusEntry final
{
public:
	class URBSocialMenuEntry*                     Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSendPartyInvite_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasFlag_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_CanFocusEntry) == 0x000008, "Wrong alignment on TrialBoardTab_C_CanFocusEntry");
static_assert(sizeof(TrialBoardTab_C_CanFocusEntry) == 0x000010, "Wrong size on TrialBoardTab_C_CanFocusEntry");
static_assert(offsetof(TrialBoardTab_C_CanFocusEntry, Entry) == 0x000000, "Member 'TrialBoardTab_C_CanFocusEntry::Entry' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_CanFocusEntry, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_CanFocusEntry::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_CanFocusEntry, CallFunc_CanSendPartyInvite_ReturnValue) == 0x000009, "Member 'TrialBoardTab_C_CanFocusEntry::CallFunc_CanSendPartyInvite_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_CanFocusEntry, CallFunc_HasFlag_ReturnValue) == 0x00000A, "Member 'TrialBoardTab_C_CanFocusEntry::CallFunc_HasFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_CanFocusEntry, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'TrialBoardTab_C_CanFocusEntry::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetPosterTextureForTrial
// 0x02E8 (0x02E8 - 0x0000)
struct TrialBoardTab_C_GetPosterTextureForTrial final
{
public:
	class FName                                   TrialId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBTrialInfoRow                        CallFunc_GetTrialInfo_ReturnValue;                 // 0x0018(0x0158)(ConstParm)
	struct FRBProgramInfoRow                      CallFunc_GetProgramInfo_ReturnValue;               // 0x0170(0x0148)(ConstParm)
	class UObject*                                CallFunc_TryLoadSyncSoftRef_NewParam;              // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3577[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_TryLoadSyncSoftRef_NewParam_1;            // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GetPosterTextureForTrial) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetPosterTextureForTrial");
static_assert(sizeof(TrialBoardTab_C_GetPosterTextureForTrial) == 0x0002E8, "Wrong size on TrialBoardTab_C_GetPosterTextureForTrial");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, TrialId) == 0x000000, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::TrialId' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, Texture) == 0x000008, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::Texture' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, CallFunc_GetTrialInfo_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::CallFunc_GetTrialInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, CallFunc_GetProgramInfo_ReturnValue) == 0x000170, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::CallFunc_GetProgramInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, CallFunc_TryLoadSyncSoftRef_NewParam) == 0x0002B8, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::CallFunc_TryLoadSyncSoftRef_NewParam' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, K2Node_DynamicCast_AsTexture_2D) == 0x0002C0, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, K2Node_DynamicCast_bSuccess) == 0x0002C8, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, CallFunc_TryLoadSyncSoftRef_NewParam_1) == 0x0002D0, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::CallFunc_TryLoadSyncSoftRef_NewParam_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, K2Node_DynamicCast_AsTexture_2D_1) == 0x0002D8, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, K2Node_DynamicCast_bSuccess_1) == 0x0002E0, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPosterTextureForTrial, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0002E1, "Member 'TrialBoardTab_C_GetPosterTextureForTrial::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.SetupCanvasEntryNavigationRules
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_SetupCanvasEntryNavigationRules final
{
public:
	class UWidget*                                Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_SetupCanvasEntryNavigationRules) == 0x000008, "Wrong alignment on TrialBoardTab_C_SetupCanvasEntryNavigationRules");
static_assert(sizeof(TrialBoardTab_C_SetupCanvasEntryNavigationRules) == 0x000018, "Wrong size on TrialBoardTab_C_SetupCanvasEntryNavigationRules");
static_assert(offsetof(TrialBoardTab_C_SetupCanvasEntryNavigationRules, Entry) == 0x000000, "Member 'TrialBoardTab_C_SetupCanvasEntryNavigationRules::Entry' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SetupCanvasEntryNavigationRules, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'TrialBoardTab_C_SetupCanvasEntryNavigationRules::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.StartGroupFinder
// 0x0198 (0x0198 - 0x0000)
struct TrialBoardTab_C_StartGroupFinder final
{
public:
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchSettings                         CallFunc_GetMatchSettings_ReturnValue;             // 0x0010(0x0024)(ConstParm, NoDestructor)
	uint8                                         Pad_3578[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBTrialInfoRow                        CallFunc_GetTrialInfo_ReturnValue;                 // 0x0038(0x0158)(ConstParm)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_StartGroupFinder) == 0x000008, "Wrong alignment on TrialBoardTab_C_StartGroupFinder");
static_assert(sizeof(TrialBoardTab_C_StartGroupFinder) == 0x000198, "Wrong size on TrialBoardTab_C_StartGroupFinder");
static_assert(offsetof(TrialBoardTab_C_StartGroupFinder, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_StartGroupFinder::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_StartGroupFinder, CallFunc_MakeLiteralName_ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_StartGroupFinder::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_StartGroupFinder, CallFunc_GetMatchSettings_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_StartGroupFinder::CallFunc_GetMatchSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_StartGroupFinder, CallFunc_GetTrialInfo_ReturnValue) == 0x000038, "Member 'TrialBoardTab_C_StartGroupFinder::CallFunc_GetTrialInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_StartGroupFinder, K2Node_SwitchInteger_CmpSuccess) == 0x000190, "Member 'TrialBoardTab_C_StartGroupFinder::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetFindAGroupButtonNavigation
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_GetFindAGroupButtonNavigation final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3579[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GetFindAGroupButtonNavigation) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetFindAGroupButtonNavigation");
static_assert(sizeof(TrialBoardTab_C_GetFindAGroupButtonNavigation) == 0x000018, "Wrong size on TrialBoardTab_C_GetFindAGroupButtonNavigation");
static_assert(offsetof(TrialBoardTab_C_GetFindAGroupButtonNavigation, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GetFindAGroupButtonNavigation::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetFindAGroupButtonNavigation, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GetFindAGroupButtonNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetFindAGroupButtonNavigation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'TrialBoardTab_C_GetFindAGroupButtonNavigation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetSelectedTrialNavigation
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_GetSelectedTrialNavigation final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GetSelectedTrialNavigation) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetSelectedTrialNavigation");
static_assert(sizeof(TrialBoardTab_C_GetSelectedTrialNavigation) == 0x000018, "Wrong size on TrialBoardTab_C_GetSelectedTrialNavigation");
static_assert(offsetof(TrialBoardTab_C_GetSelectedTrialNavigation, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GetSelectedTrialNavigation::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetSelectedTrialNavigation, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GetSelectedTrialNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetSelectedTrialNavigation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'TrialBoardTab_C_GetSelectedTrialNavigation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetSelectedProgramNavigation
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_GetSelectedProgramNavigation final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GetSelectedProgramNavigation) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetSelectedProgramNavigation");
static_assert(sizeof(TrialBoardTab_C_GetSelectedProgramNavigation) == 0x000018, "Wrong size on TrialBoardTab_C_GetSelectedProgramNavigation");
static_assert(offsetof(TrialBoardTab_C_GetSelectedProgramNavigation, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GetSelectedProgramNavigation::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetSelectedProgramNavigation, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GetSelectedProgramNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetSelectedProgramNavigation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'TrialBoardTab_C_GetSelectedProgramNavigation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetAnyTrialNavigation
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_GetAnyTrialNavigation final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GetAnyTrialNavigation) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetAnyTrialNavigation");
static_assert(sizeof(TrialBoardTab_C_GetAnyTrialNavigation) == 0x000018, "Wrong size on TrialBoardTab_C_GetAnyTrialNavigation");
static_assert(offsetof(TrialBoardTab_C_GetAnyTrialNavigation, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GetAnyTrialNavigation::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetAnyTrialNavigation, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GetAnyTrialNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetAnyTrialNavigation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'TrialBoardTab_C_GetAnyTrialNavigation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ChangeFilter
// 0x0040 (0x0040 - 0x0000)
struct TrialBoardTab_C_ChangeFilter final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	ERBSocialMenuEntryFilter                      Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERBSocialMenuEntryFilter                      Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERBSocialMenuEntryFilter                      Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357D[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMenuFocused_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERBSocialMenuEntryFilter                      CallFunc_GetFilter_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERBSocialMenuEntryFilter                      K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_ChangeFilter) == 0x000008, "Wrong alignment on TrialBoardTab_C_ChangeFilter");
static_assert(sizeof(TrialBoardTab_C_ChangeFilter) == 0x000040, "Wrong size on TrialBoardTab_C_ChangeFilter");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, Temp_delegate_Variable) == 0x000000, "Member 'TrialBoardTab_C_ChangeFilter::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, Temp_byte_Variable) == 0x000010, "Member 'TrialBoardTab_C_ChangeFilter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, Temp_byte_Variable_1) == 0x000011, "Member 'TrialBoardTab_C_ChangeFilter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, Temp_byte_Variable_2) == 0x000012, "Member 'TrialBoardTab_C_ChangeFilter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, CallFunc_GetMenuWithTabsParent_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_ChangeFilter::CallFunc_GetMenuWithTabsParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, CallFunc_IsMenuFocused_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_ChangeFilter::CallFunc_IsMenuFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_ChangeFilter::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'TrialBoardTab_C_ChangeFilter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, CallFunc_PostEventGlobal_ReturnValue) == 0x000034, "Member 'TrialBoardTab_C_ChangeFilter::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, CallFunc_GetFilter_ReturnValue) == 0x000038, "Member 'TrialBoardTab_C_ChangeFilter::CallFunc_GetFilter_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ChangeFilter, K2Node_Select_Default) == 0x000039, "Member 'TrialBoardTab_C_ChangeFilter::K2Node_Select_Default' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.OnFilterButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_OnFilterButtonClicked final
{
public:
	class URBMenuButton_C*                        Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_OnFilterButtonClicked) == 0x000008, "Wrong alignment on TrialBoardTab_C_OnFilterButtonClicked");
static_assert(sizeof(TrialBoardTab_C_OnFilterButtonClicked) == 0x000008, "Wrong size on TrialBoardTab_C_OnFilterButtonClicked");
static_assert(offsetof(TrialBoardTab_C_OnFilterButtonClicked, Button) == 0x000000, "Member 'TrialBoardTab_C_OnFilterButtonClicked::Button' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.UpdateDisplayedTrialOptions
// 0x01D8 (0x01D8 - 0x0000)
struct TrialBoardTab_C_UpdateDisplayedTrialOptions final
{
public:
	class UProgramTrialBlockWidget_C*             CurrentProgramBlockWidget;                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3580[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchOwner_ReturnValue;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMatchOwner_ReturnValue_1;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3581[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBTrialInfoRow                        CallFunc_GetTrialInfo_ReturnValue;                 // 0x0058(0x0158)(ConstParm)
	bool                                          CallFunc_IsTrialUnlocked_ReturnValue;              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3582[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x01B8(0x0018)()
	bool                                          CallFunc_CanSelectTrial_ReturnValue;               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_UpdateDisplayedTrialOptions) == 0x000008, "Wrong alignment on TrialBoardTab_C_UpdateDisplayedTrialOptions");
static_assert(sizeof(TrialBoardTab_C_UpdateDisplayedTrialOptions) == 0x0001D8, "Wrong size on TrialBoardTab_C_UpdateDisplayedTrialOptions");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, CurrentProgramBlockWidget) == 0x000000, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::CurrentProgramBlockWidget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_bool_Variable) == 0x000008, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_byte_Variable) == 0x000009, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_byte_Variable_1) == 0x00000A, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_bool_Variable_1) == 0x00000B, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_byte_Variable_2) == 0x00000C, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_byte_Variable_3) == 0x00000D, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_bool_Variable_2) == 0x00000E, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_byte_Variable_4) == 0x00000F, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_byte_Variable_5) == 0x000010, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_bool_Variable_3) == 0x000011, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_text_Variable) == 0x000018, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_text_Variable_1) == 0x000030, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_bool_Variable_4) == 0x000048, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_byte_Variable_6) == 0x000049, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, Temp_byte_Variable_7) == 0x00004A, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, CallFunc_IsMatchOwner_ReturnValue) == 0x00004B, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::CallFunc_IsMatchOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, CallFunc_IsMatchOwner_ReturnValue_1) == 0x00004C, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::CallFunc_IsMatchOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, K2Node_Select_Default) == 0x00004D, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000050, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, CallFunc_GetTrialInfo_ReturnValue) == 0x000058, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::CallFunc_GetTrialInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, CallFunc_IsTrialUnlocked_ReturnValue) == 0x0001B0, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::CallFunc_IsTrialUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B1, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, K2Node_Select_Default_1) == 0x0001B2, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, K2Node_Select_Default_2) == 0x0001B3, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, K2Node_Select_Default_3) == 0x0001B8, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, CallFunc_CanSelectTrial_ReturnValue) == 0x0001D0, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::CallFunc_CanSelectTrial_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, CallFunc_BooleanAND_ReturnValue) == 0x0001D1, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateDisplayedTrialOptions, K2Node_Select_Default_4) == 0x0001D2, "Member 'TrialBoardTab_C_UpdateDisplayedTrialOptions::K2Node_Select_Default_4' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ToggleGroupFinder
// 0x0038 (0x0038 - 0x0000)
struct TrialBoardTab_C_ToggleGroupFinder final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShowingMenuTutorial_isShowingTutorial;  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMenuFocused_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3583[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3584[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanFindParty_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCancelFindParty_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ToggleGroupFinder) == 0x000008, "Wrong alignment on TrialBoardTab_C_ToggleGroupFinder");
static_assert(sizeof(TrialBoardTab_C_ToggleGroupFinder) == 0x000038, "Wrong size on TrialBoardTab_C_ToggleGroupFinder");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, Temp_delegate_Variable) == 0x000000, "Member 'TrialBoardTab_C_ToggleGroupFinder::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, CallFunc_GetMenuWithTabsParent_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_ToggleGroupFinder::CallFunc_GetMenuWithTabsParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, CallFunc_IsShowingMenuTutorial_isShowingTutorial) == 0x000018, "Member 'TrialBoardTab_C_ToggleGroupFinder::CallFunc_IsShowingMenuTutorial_isShowingTutorial' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, CallFunc_IsMenuFocused_ReturnValue) == 0x000019, "Member 'TrialBoardTab_C_ToggleGroupFinder::CallFunc_IsMenuFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'TrialBoardTab_C_ToggleGroupFinder::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_ToggleGroupFinder::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_ToggleGroupFinder::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, CallFunc_PostEventGlobal_ReturnValue) == 0x00002C, "Member 'TrialBoardTab_C_ToggleGroupFinder::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, CallFunc_CanFindParty_ReturnValue) == 0x000030, "Member 'TrialBoardTab_C_ToggleGroupFinder::CallFunc_CanFindParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ToggleGroupFinder, CallFunc_CanCancelFindParty_ReturnValue) == 0x000031, "Member 'TrialBoardTab_C_ToggleGroupFinder::CallFunc_CanCancelFindParty_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.OnAddAFriendButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_OnAddAFriendButtonClicked final
{
public:
	class URBMenuButton_C*                        Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_OnAddAFriendButtonClicked) == 0x000008, "Wrong alignment on TrialBoardTab_C_OnAddAFriendButtonClicked");
static_assert(sizeof(TrialBoardTab_C_OnAddAFriendButtonClicked) == 0x000008, "Wrong size on TrialBoardTab_C_OnAddAFriendButtonClicked");
static_assert(offsetof(TrialBoardTab_C_OnAddAFriendButtonClicked, Button) == 0x000000, "Member 'TrialBoardTab_C_OnAddAFriendButtonClicked::Button' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShowAddAFriend
// 0x0050 (0x0050 - 0x0000)
struct TrialBoardTab_C_ShowAddAFriend final
{
public:
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMenuFocused_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3585[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CanAddFriend_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3586[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3587[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterSheet_C*                      K2Node_DynamicCast_AsCharacter_Sheet;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ShowAddAFriend) == 0x000008, "Wrong alignment on TrialBoardTab_C_ShowAddAFriend");
static_assert(sizeof(TrialBoardTab_C_ShowAddAFriend) == 0x000050, "Wrong size on TrialBoardTab_C_ShowAddAFriend");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, CallFunc_GetMenuWithTabsParent_ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_ShowAddAFriend::CallFunc_GetMenuWithTabsParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, CallFunc_IsMenuFocused_ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_ShowAddAFriend::CallFunc_IsMenuFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_ShowAddAFriend::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, Temp_delegate_Variable) == 0x000018, "Member 'TrialBoardTab_C_ShowAddAFriend::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, CallFunc_CanAddFriend_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_ShowAddAFriend::CallFunc_CanAddFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, CallFunc_PostEventGlobal_ReturnValue) == 0x00002C, "Member 'TrialBoardTab_C_ShowAddAFriend::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'TrialBoardTab_C_ShowAddAFriend::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, CallFunc_BooleanAND_ReturnValue_1) == 0x000031, "Member 'TrialBoardTab_C_ShowAddAFriend::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, CallFunc_GetMenuWithTabsParent_ReturnValue_1) == 0x000038, "Member 'TrialBoardTab_C_ShowAddAFriend::CallFunc_GetMenuWithTabsParent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, K2Node_DynamicCast_AsCharacter_Sheet) == 0x000040, "Member 'TrialBoardTab_C_ShowAddAFriend::K2Node_DynamicCast_AsCharacter_Sheet' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowAddAFriend, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'TrialBoardTab_C_ShowAddAFriend::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.OnInputSourceChanged
// 0x00C0 (0x00C0 - 0x0000)
struct TrialBoardTab_C_OnInputSourceChanged final
{
public:
	bool                                          bIsGamepad;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3588[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3589[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358A[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialVariatorWidget_C*          K2Node_DynamicCast_AsProgram_Trial_Variator_Widget; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358B[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358C[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358D[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialBlockWidget_C*             K2Node_DynamicCast_AsProgram_Trial_Block_Widget;   // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358E[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358F[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_2;             // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3590[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialEntryContentWidget_C*      K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3591[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_OnInputSourceChanged) == 0x000008, "Wrong alignment on TrialBoardTab_C_OnInputSourceChanged");
static_assert(sizeof(TrialBoardTab_C_OnInputSourceChanged) == 0x0000C0, "Wrong size on TrialBoardTab_C_OnInputSourceChanged");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, bIsGamepad) == 0x000000, "Member 'TrialBoardTab_C_OnInputSourceChanged::bIsGamepad' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, Temp_int_Array_Index_Variable) == 0x000004, "Member 'TrialBoardTab_C_OnInputSourceChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, Temp_int_Array_Index_Variable_1) == 0x000008, "Member 'TrialBoardTab_C_OnInputSourceChanged::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'TrialBoardTab_C_OnInputSourceChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, Temp_int_Array_Index_Variable_2) == 0x000014, "Member 'TrialBoardTab_C_OnInputSourceChanged::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'TrialBoardTab_C_OnInputSourceChanged::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Array_Get_Item) == 0x000038, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, K2Node_DynamicCast_AsProgram_Trial_Variator_Widget) == 0x000040, "Member 'TrialBoardTab_C_OnInputSourceChanged::K2Node_DynamicCast_AsProgram_Trial_Variator_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'TrialBoardTab_C_OnInputSourceChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, Temp_int_Loop_Counter_Variable_2) == 0x000050, "Member 'TrialBoardTab_C_OnInputSourceChanged::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_GetAllChildren_ReturnValue_1) == 0x000058, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, K2Node_DynamicCast_AsProgram_Trial_Block_Widget) == 0x000078, "Member 'TrialBoardTab_C_OnInputSourceChanged::K2Node_DynamicCast_AsProgram_Trial_Block_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'TrialBoardTab_C_OnInputSourceChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_GetAllChildren_ReturnValue_2) == 0x000090, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_GetAllChildren_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget) == 0x0000B0, "Member 'TrialBoardTab_C_OnInputSourceChanged::K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'TrialBoardTab_C_OnInputSourceChanged::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B9, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000BA, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnInputSourceChanged, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000BC, "Member 'TrialBoardTab_C_OnInputSourceChanged::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetFocusSelectTrialButton
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_GetFocusSelectTrialButton final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3592[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_GetFocusSelectTrialButton) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetFocusSelectTrialButton");
static_assert(sizeof(TrialBoardTab_C_GetFocusSelectTrialButton) == 0x000018, "Wrong size on TrialBoardTab_C_GetFocusSelectTrialButton");
static_assert(offsetof(TrialBoardTab_C_GetFocusSelectTrialButton, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_GetFocusSelectTrialButton::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetFocusSelectTrialButton, Temp_bool_Variable) == 0x000008, "Member 'TrialBoardTab_C_GetFocusSelectTrialButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetFocusSelectTrialButton, CallFunc_GetVisibility_ReturnValue) == 0x000009, "Member 'TrialBoardTab_C_GetFocusSelectTrialButton::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetFocusSelectTrialButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'TrialBoardTab_C_GetFocusSelectTrialButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetFocusSelectTrialButton, K2Node_Select_Default) == 0x000010, "Member 'TrialBoardTab_C_GetFocusSelectTrialButton::K2Node_Select_Default' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.FocusNextVariator
// 0x00A0 (0x00A0 - 0x0000)
struct TrialBoardTab_C_FocusNextVariator final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3593[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedVariatorIndex;                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentVariatorIndex;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        VariatorWidgets;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3594[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetFocusSelectTrialButton_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3595[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialVariatorWidget_C*          K2Node_DynamicCast_AsProgram_Trial_Variator_Widget; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3596[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3597[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialVariatorWidget_C*          K2Node_DynamicCast_AsProgram_Trial_Variator_Widget_1; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_FocusNextVariator) == 0x000008, "Wrong alignment on TrialBoardTab_C_FocusNextVariator");
static_assert(sizeof(TrialBoardTab_C_FocusNextVariator) == 0x0000A0, "Wrong size on TrialBoardTab_C_FocusNextVariator");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_FocusNextVariator::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_FocusNextVariator::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, SelectedVariatorIndex) == 0x000010, "Member 'TrialBoardTab_C_FocusNextVariator::SelectedVariatorIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CurrentVariatorIndex) == 0x000014, "Member 'TrialBoardTab_C_FocusNextVariator::CurrentVariatorIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, VariatorWidgets) == 0x000018, "Member 'TrialBoardTab_C_FocusNextVariator::VariatorWidgets' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'TrialBoardTab_C_FocusNextVariator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, Temp_int_Array_Index_Variable) == 0x000030, "Member 'TrialBoardTab_C_FocusNextVariator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_GetFocusSelectTrialButton_ReturnValue) == 0x000038, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_GetFocusSelectTrialButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Array_Get_Item) == 0x000050, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, K2Node_DynamicCast_AsProgram_Trial_Variator_Widget) == 0x000060, "Member 'TrialBoardTab_C_FocusNextVariator::K2Node_DynamicCast_AsProgram_Trial_Variator_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'TrialBoardTab_C_FocusNextVariator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, Temp_int_Variable) == 0x00006C, "Member 'TrialBoardTab_C_FocusNextVariator::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Min_ReturnValue) == 0x000080, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'TrialBoardTab_C_FocusNextVariator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, K2Node_DynamicCast_AsProgram_Trial_Variator_Widget_1) == 0x000090, "Member 'TrialBoardTab_C_FocusNextVariator::K2Node_DynamicCast_AsProgram_Trial_Variator_Widget_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextVariator, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'TrialBoardTab_C_FocusNextVariator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.FocusPreviousVariator
// 0x0098 (0x0098 - 0x0000)
struct TrialBoardTab_C_FocusPreviousVariator final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3598[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedVariatorIndex;                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentVariatorIndex;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        VariatorWidgets;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3599[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetFocusSelectTrialButton_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359A[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialVariatorWidget_C*          K2Node_DynamicCast_AsProgram_Trial_Variator_Widget; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359B[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialVariatorWidget_C*          K2Node_DynamicCast_AsProgram_Trial_Variator_Widget_1; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_FocusPreviousVariator) == 0x000008, "Wrong alignment on TrialBoardTab_C_FocusPreviousVariator");
static_assert(sizeof(TrialBoardTab_C_FocusPreviousVariator) == 0x000098, "Wrong size on TrialBoardTab_C_FocusPreviousVariator");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_FocusPreviousVariator::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_FocusPreviousVariator::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, SelectedVariatorIndex) == 0x000010, "Member 'TrialBoardTab_C_FocusPreviousVariator::SelectedVariatorIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CurrentVariatorIndex) == 0x000014, "Member 'TrialBoardTab_C_FocusPreviousVariator::CurrentVariatorIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, VariatorWidgets) == 0x000018, "Member 'TrialBoardTab_C_FocusPreviousVariator::VariatorWidgets' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'TrialBoardTab_C_FocusPreviousVariator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, Temp_int_Array_Index_Variable) == 0x000030, "Member 'TrialBoardTab_C_FocusPreviousVariator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_GetFocusSelectTrialButton_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_GetFocusSelectTrialButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_GetAllChildren_ReturnValue) == 0x000048, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_Array_Get_Item) == 0x000058, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, K2Node_DynamicCast_AsProgram_Trial_Variator_Widget) == 0x000068, "Member 'TrialBoardTab_C_FocusPreviousVariator::K2Node_DynamicCast_AsProgram_Trial_Variator_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'TrialBoardTab_C_FocusPreviousVariator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_Max_ReturnValue) == 0x000074, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, Temp_int_Variable) == 0x000078, "Member 'TrialBoardTab_C_FocusPreviousVariator::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'TrialBoardTab_C_FocusPreviousVariator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, K2Node_DynamicCast_AsProgram_Trial_Variator_Widget_1) == 0x000088, "Member 'TrialBoardTab_C_FocusPreviousVariator::K2Node_DynamicCast_AsProgram_Trial_Variator_Widget_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousVariator, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'TrialBoardTab_C_FocusPreviousVariator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.FocusFirstVariator
// 0x0028 (0x0028 - 0x0000)
struct TrialBoardTab_C_FocusFirstVariator final
{
public:
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialVariatorWidget_C*          K2Node_DynamicCast_AsProgram_Trial_Variator_Widget; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_FocusFirstVariator) == 0x000008, "Wrong alignment on TrialBoardTab_C_FocusFirstVariator");
static_assert(sizeof(TrialBoardTab_C_FocusFirstVariator) == 0x000028, "Wrong size on TrialBoardTab_C_FocusFirstVariator");
static_assert(offsetof(TrialBoardTab_C_FocusFirstVariator, CallFunc_GetChildrenCount_ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_FocusFirstVariator::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusFirstVariator, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_FocusFirstVariator::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusFirstVariator, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_FocusFirstVariator::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusFirstVariator, K2Node_DynamicCast_AsProgram_Trial_Variator_Widget) == 0x000018, "Member 'TrialBoardTab_C_FocusFirstVariator::K2Node_DynamicCast_AsProgram_Trial_Variator_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusFirstVariator, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TrialBoardTab_C_FocusFirstVariator::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.FocusNextTrial
// 0x00E8 (0x00E8 - 0x0000)
struct TrialBoardTab_C_FocusNextTrial final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedTrialIndex;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTrialIndex;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        TrialWidgets;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359F[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetFocusSelectTrialButton_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A0[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A1[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialBlockWidget_C*             K2Node_DynamicCast_AsProgram_Trial_Block_Widget;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A2[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialEntryContentWidget_C*      K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A3[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A4[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialEntryContentWidget_C*      K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget_1; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A5[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_FocusNextTrial) == 0x000008, "Wrong alignment on TrialBoardTab_C_FocusNextTrial");
static_assert(sizeof(TrialBoardTab_C_FocusNextTrial) == 0x0000E8, "Wrong size on TrialBoardTab_C_FocusNextTrial");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_FocusNextTrial::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_FocusNextTrial::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, SelectedTrialIndex) == 0x000010, "Member 'TrialBoardTab_C_FocusNextTrial::SelectedTrialIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CurrentTrialIndex) == 0x000014, "Member 'TrialBoardTab_C_FocusNextTrial::CurrentTrialIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, TrialWidgets) == 0x000018, "Member 'TrialBoardTab_C_FocusNextTrial::TrialWidgets' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, Temp_int_Array_Index_Variable) == 0x000028, "Member 'TrialBoardTab_C_FocusNextTrial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, Temp_int_Variable) == 0x00002C, "Member 'TrialBoardTab_C_FocusNextTrial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'TrialBoardTab_C_FocusNextTrial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'TrialBoardTab_C_FocusNextTrial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_GetFocusSelectTrialButton_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_GetFocusSelectTrialButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'TrialBoardTab_C_FocusNextTrial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_GetAllChildren_ReturnValue) == 0x000058, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Array_Get_Item) == 0x000070, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Min_ReturnValue) == 0x000078, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, K2Node_DynamicCast_AsProgram_Trial_Block_Widget) == 0x000080, "Member 'TrialBoardTab_C_FocusNextTrial::K2Node_DynamicCast_AsProgram_Trial_Block_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'TrialBoardTab_C_FocusNextTrial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget) == 0x000098, "Member 'TrialBoardTab_C_FocusNextTrial::K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'TrialBoardTab_C_FocusNextTrial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_GetAllChildren_ReturnValue_1) == 0x0000A8, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget_1) == 0x0000D0, "Member 'TrialBoardTab_C_FocusNextTrial::K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'TrialBoardTab_C_FocusNextTrial::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Array_Length_ReturnValue_2) == 0x0000DC, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusNextTrial, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'TrialBoardTab_C_FocusNextTrial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.FocusPreviousTrial
// 0x00E8 (0x00E8 - 0x0000)
struct TrialBoardTab_C_FocusPreviousTrial final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedTrialIndex;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTrialIndex;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        TrialWidgets;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A7[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetFocusSelectTrialButton_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A8[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialEntryContentWidget_C*      K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A9[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AA[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AB[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AC[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialBlockWidget_C*             K2Node_DynamicCast_AsProgram_Trial_Block_Widget;   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AD[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AE[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AF[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialEntryContentWidget_C*      K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget_1; // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_FocusPreviousTrial) == 0x000008, "Wrong alignment on TrialBoardTab_C_FocusPreviousTrial");
static_assert(sizeof(TrialBoardTab_C_FocusPreviousTrial) == 0x0000E8, "Wrong size on TrialBoardTab_C_FocusPreviousTrial");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_FocusPreviousTrial::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_FocusPreviousTrial::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, SelectedTrialIndex) == 0x000010, "Member 'TrialBoardTab_C_FocusPreviousTrial::SelectedTrialIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CurrentTrialIndex) == 0x000014, "Member 'TrialBoardTab_C_FocusPreviousTrial::CurrentTrialIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, TrialWidgets) == 0x000018, "Member 'TrialBoardTab_C_FocusPreviousTrial::TrialWidgets' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, Temp_int_Array_Index_Variable) == 0x000028, "Member 'TrialBoardTab_C_FocusPreviousTrial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, Temp_int_Variable) == 0x00002C, "Member 'TrialBoardTab_C_FocusPreviousTrial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'TrialBoardTab_C_FocusPreviousTrial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'TrialBoardTab_C_FocusPreviousTrial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_GetFocusSelectTrialButton_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_GetFocusSelectTrialButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Max_ReturnValue) == 0x000050, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Array_Get_Item) == 0x000058, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget) == 0x000060, "Member 'TrialBoardTab_C_FocusPreviousTrial::K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'TrialBoardTab_C_FocusPreviousTrial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'TrialBoardTab_C_FocusPreviousTrial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_GetAllChildren_ReturnValue) == 0x000078, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, K2Node_DynamicCast_AsProgram_Trial_Block_Widget) == 0x0000A0, "Member 'TrialBoardTab_C_FocusPreviousTrial::K2Node_DynamicCast_AsProgram_Trial_Block_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'TrialBoardTab_C_FocusPreviousTrial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_GetAllChildren_ReturnValue_1) == 0x0000B0, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'TrialBoardTab_C_FocusPreviousTrial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget_1) == 0x0000D8, "Member 'TrialBoardTab_C_FocusPreviousTrial::K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusPreviousTrial, K2Node_DynamicCast_bSuccess_2) == 0x0000E0, "Member 'TrialBoardTab_C_FocusPreviousTrial::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.FocusInitialTrial
// 0x00A8 (0x00A8 - 0x0000)
struct TrialBoardTab_C_FocusInitialTrial final
{
public:
	int32                                         SelectedTrialIndex;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTrialIndex;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        TrialWidgets;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusSelectTrialButton_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBMenuManager*                         CallFunc_GetMenuManager_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B0[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B1[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialBlockWidget_C*             K2Node_DynamicCast_AsProgram_Trial_Block_Widget;   // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B2[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B3[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B4[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialEntryContentWidget_C*      K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_FocusInitialTrial) == 0x000008, "Wrong alignment on TrialBoardTab_C_FocusInitialTrial");
static_assert(sizeof(TrialBoardTab_C_FocusInitialTrial) == 0x0000A8, "Wrong size on TrialBoardTab_C_FocusInitialTrial");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, SelectedTrialIndex) == 0x000000, "Member 'TrialBoardTab_C_FocusInitialTrial::SelectedTrialIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CurrentTrialIndex) == 0x000004, "Member 'TrialBoardTab_C_FocusInitialTrial::CurrentTrialIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, TrialWidgets) == 0x000008, "Member 'TrialBoardTab_C_FocusInitialTrial::TrialWidgets' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'TrialBoardTab_C_FocusInitialTrial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, Temp_int_Array_Index_Variable) == 0x000020, "Member 'TrialBoardTab_C_FocusInitialTrial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'TrialBoardTab_C_FocusInitialTrial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_GetFocusSelectTrialButton_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_GetFocusSelectTrialButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_GetMenuManager_ReturnValue) == 0x000030, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'TrialBoardTab_C_FocusInitialTrial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_Array_Get_Item) == 0x000058, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, K2Node_DynamicCast_AsProgram_Trial_Block_Widget) == 0x000060, "Member 'TrialBoardTab_C_FocusInitialTrial::K2Node_DynamicCast_AsProgram_Trial_Block_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'TrialBoardTab_C_FocusInitialTrial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_GetAllChildren_ReturnValue_1) == 0x000078, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget) == 0x000098, "Member 'TrialBoardTab_C_FocusInitialTrial::K2Node_DynamicCast_AsProgram_Trial_Entry_Content_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'TrialBoardTab_C_FocusInitialTrial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A1, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_FocusInitialTrial, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000A2, "Member 'TrialBoardTab_C_FocusInitialTrial::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.IsTrialListScrollButtonDownEnabled
// 0x0010 (0x0010 - 0x0000)
struct TrialBoardTab_C_IsTrialListScrollButtonDownEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffsetOfEnd_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_IsTrialListScrollButtonDownEnabled) == 0x000004, "Wrong alignment on TrialBoardTab_C_IsTrialListScrollButtonDownEnabled");
static_assert(sizeof(TrialBoardTab_C_IsTrialListScrollButtonDownEnabled) == 0x000010, "Wrong size on TrialBoardTab_C_IsTrialListScrollButtonDownEnabled");
static_assert(offsetof(TrialBoardTab_C_IsTrialListScrollButtonDownEnabled, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_IsTrialListScrollButtonDownEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsTrialListScrollButtonDownEnabled, CallFunc_GetScrollOffset_ReturnValue) == 0x000004, "Member 'TrialBoardTab_C_IsTrialListScrollButtonDownEnabled::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsTrialListScrollButtonDownEnabled, CallFunc_GetScrollOffsetOfEnd_ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_IsTrialListScrollButtonDownEnabled::CallFunc_GetScrollOffsetOfEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsTrialListScrollButtonDownEnabled, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'TrialBoardTab_C_IsTrialListScrollButtonDownEnabled::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.IsTrialListScrollButtonTopEnabled
// 0x000C (0x000C - 0x0000)
struct TrialBoardTab_C_IsTrialListScrollButtonTopEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_IsTrialListScrollButtonTopEnabled) == 0x000004, "Wrong alignment on TrialBoardTab_C_IsTrialListScrollButtonTopEnabled");
static_assert(sizeof(TrialBoardTab_C_IsTrialListScrollButtonTopEnabled) == 0x00000C, "Wrong size on TrialBoardTab_C_IsTrialListScrollButtonTopEnabled");
static_assert(offsetof(TrialBoardTab_C_IsTrialListScrollButtonTopEnabled, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_IsTrialListScrollButtonTopEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsTrialListScrollButtonTopEnabled, CallFunc_GetScrollOffset_ReturnValue) == 0x000004, "Member 'TrialBoardTab_C_IsTrialListScrollButtonTopEnabled::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsTrialListScrollButtonTopEnabled, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_IsTrialListScrollButtonTopEnabled::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetTrialBlockNumber
// 0x0300 (0x0300 - 0x0000)
struct TrialBoardTab_C_GetTrialBlockNumber final
{
public:
	class FName                                   TrialId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockNumber;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLastWasMajor;                                     // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35B7[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentBlockNumber;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBTrialInfoRow                        CallFunc_GetTrialInfo_ReturnValue;                 // 0x0030(0x0158)(ConstParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B9[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRBTrialInfoRow>                CallFunc_GetProgramTrials_ReturnValue;             // 0x0190(0x0010)(ReferenceParm)
	struct FRBTrialInfoRow                        CallFunc_Array_Get_Item;                           // 0x01A0(0x0158)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x02FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GetTrialBlockNumber) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetTrialBlockNumber");
static_assert(sizeof(TrialBoardTab_C_GetTrialBlockNumber) == 0x000300, "Wrong size on TrialBoardTab_C_GetTrialBlockNumber");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, TrialId) == 0x000000, "Member 'TrialBoardTab_C_GetTrialBlockNumber::TrialId' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, BlockNumber) == 0x000008, "Member 'TrialBoardTab_C_GetTrialBlockNumber::BlockNumber' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, bLastWasMajor) == 0x00000C, "Member 'TrialBoardTab_C_GetTrialBlockNumber::bLastWasMajor' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CurrentBlockNumber) == 0x000010, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CurrentBlockNumber' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'TrialBoardTab_C_GetTrialBlockNumber::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'TrialBoardTab_C_GetTrialBlockNumber::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, Temp_int_Variable) == 0x000020, "Member 'TrialBoardTab_C_GetTrialBlockNumber::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_GetTrialInfo_ReturnValue) == 0x000030, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_GetTrialInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_Add_IntInt_ReturnValue_1) == 0x000188, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_GetProgramTrials_ReturnValue) == 0x000190, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_GetProgramTrials_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_Array_Length_ReturnValue) == 0x0002F8, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_Less_IntInt_ReturnValue) == 0x0002FC, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002FD, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0002FE, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialBlockNumber, CallFunc_BooleanOR_ReturnValue) == 0x0002FF, "Member 'TrialBoardTab_C_GetTrialBlockNumber::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.OnTrialSelected
// 0x0050 (0x0050 - 0x0000)
struct TrialBoardTab_C_OnTrialSelected final
{
public:
	class FName                                   TrialId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35BA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35BB[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialBlockWidget_C*             K2Node_DynamicCast_AsProgram_Trial_Block_Widget;   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_OnTrialSelected) == 0x000008, "Wrong alignment on TrialBoardTab_C_OnTrialSelected");
static_assert(sizeof(TrialBoardTab_C_OnTrialSelected) == 0x000050, "Wrong size on TrialBoardTab_C_OnTrialSelected");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, TrialId) == 0x000000, "Member 'TrialBoardTab_C_OnTrialSelected::TrialId' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TrialBoardTab_C_OnTrialSelected::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'TrialBoardTab_C_OnTrialSelected::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_OnTrialSelected::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_OnTrialSelected::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_OnTrialSelected::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, CallFunc_Array_Get_Item) == 0x000030, "Member 'TrialBoardTab_C_OnTrialSelected::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'TrialBoardTab_C_OnTrialSelected::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, K2Node_DynamicCast_AsProgram_Trial_Block_Widget) == 0x000040, "Member 'TrialBoardTab_C_OnTrialSelected::K2Node_DynamicCast_AsProgram_Trial_Block_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnTrialSelected, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'TrialBoardTab_C_OnTrialSelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetTrioNavigation
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_GetTrioNavigation final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35BD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GetTrioNavigation) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetTrioNavigation");
static_assert(sizeof(TrialBoardTab_C_GetTrioNavigation) == 0x000018, "Wrong size on TrialBoardTab_C_GetTrioNavigation");
static_assert(offsetof(TrialBoardTab_C_GetTrioNavigation, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GetTrioNavigation::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrioNavigation, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GetTrioNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrioNavigation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'TrialBoardTab_C_GetTrioNavigation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetQuadNavigation
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_GetQuadNavigation final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35BE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GetQuadNavigation) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetQuadNavigation");
static_assert(sizeof(TrialBoardTab_C_GetQuadNavigation) == 0x000018, "Wrong size on TrialBoardTab_C_GetQuadNavigation");
static_assert(offsetof(TrialBoardTab_C_GetQuadNavigation, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GetQuadNavigation::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetQuadNavigation, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GetQuadNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetQuadNavigation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'TrialBoardTab_C_GetQuadNavigation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetGroupFinderBtnVisibility
// 0x0068 (0x0068 - 0x0000)
struct TrialBoardTab_C_GetGroupFinderBtnVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35BF[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSoloMode_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanFindParty_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCancelFindParty_ReturnValue;           // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C0[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_GetGroupFinderBtnVisibility) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetGroupFinderBtnVisibility");
static_assert(sizeof(TrialBoardTab_C_GetGroupFinderBtnVisibility) == 0x000068, "Wrong size on TrialBoardTab_C_GetGroupFinderBtnVisibility");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, Temp_bool_Variable) == 0x000001, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, Temp_text_Variable) == 0x000008, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, Temp_text_Variable_1) == 0x000020, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, Temp_bool_Variable_1) == 0x000038, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, Temp_byte_Variable) == 0x000039, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, Temp_byte_Variable_1) == 0x00003A, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, CallFunc_IsSoloMode_ReturnValue) == 0x00003B, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::CallFunc_IsSoloMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, CallFunc_CanFindParty_ReturnValue) == 0x00003C, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::CallFunc_CanFindParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00003D, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, CallFunc_CanCancelFindParty_ReturnValue) == 0x00003E, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::CallFunc_CanCancelFindParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00003F, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, K2Node_Select_Default) == 0x000048, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetGroupFinderBtnVisibility, K2Node_Select_Default_1) == 0x000060, "Member 'TrialBoardTab_C_GetGroupFinderBtnVisibility::K2Node_Select_Default_1' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.UpdateGroupFinderOptions
// 0x0428 (0x0428 - 0x0000)
struct TrialBoardTab_C_UpdateGroupFinderOptions final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C2[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchSettings                         CallFunc_GetMatchSettings_ReturnValue;             // 0x002C(0x0024)(ConstParm, NoDestructor)
	struct FRBTrialInfoRow                        CallFunc_GetTrialInfo_ReturnValue;                 // 0x0050(0x0158)(ConstParm)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C3[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x01B0(0x0018)()
	struct FRBProgramInfoRow                      CallFunc_GetProgramInfo_ReturnValue;               // 0x01C8(0x0148)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0310(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0350(0x0010)(ReferenceParm)
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0360(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0378(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0390(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03E0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x03F8(0x0018)()
	int32                                         CallFunc_GetMatchCurrentPlayerCount_ReturnValue;   // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0416(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C4[0x1];                                     // 0x0417(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_UpdateGroupFinderOptions) == 0x000008, "Wrong alignment on TrialBoardTab_C_UpdateGroupFinderOptions");
static_assert(sizeof(TrialBoardTab_C_UpdateGroupFinderOptions) == 0x000428, "Wrong size on TrialBoardTab_C_UpdateGroupFinderOptions");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, Temp_int_Variable) == 0x000000, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, Temp_text_Variable) == 0x000008, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000029, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00002A, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_GetMatchSettings_ReturnValue) == 0x00002C, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_GetMatchSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_GetTrialInfo_ReturnValue) == 0x000050, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_GetTrialInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001A8, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_TextToUpper_ReturnValue) == 0x0001B0, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_GetProgramInfo_ReturnValue) == 0x0001C8, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_GetProgramInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, K2Node_MakeStruct_FormatArgumentData) == 0x000310, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, K2Node_MakeArray_Array) == 0x000350, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_TextToUpper_ReturnValue_1) == 0x000360, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_Format_ReturnValue) == 0x000378, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, K2Node_MakeStruct_FormatArgumentData_1) == 0x000390, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, K2Node_MakeArray_Array_1) == 0x0003D0, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_Format_ReturnValue_1) == 0x0003E0, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, K2Node_Select_Default) == 0x0003F8, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_GetMatchCurrentPlayerCount_ReturnValue) == 0x000410, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_GetMatchCurrentPlayerCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000414, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_Less_IntInt_ReturnValue) == 0x000415, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_Less_IntInt_ReturnValue_1) == 0x000416, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_Add_IntInt_ReturnValue) == 0x000418, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_Max_ReturnValue) == 0x00041C, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000420, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_UpdateGroupFinderOptions, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000421, "Member 'TrialBoardTab_C_UpdateGroupFinderOptions::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShowGroupFinder
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_ShowGroupFinder final
{
public:
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterSheet_C*                      K2Node_DynamicCast_AsCharacter_Sheet;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ShowGroupFinder) == 0x000008, "Wrong alignment on TrialBoardTab_C_ShowGroupFinder");
static_assert(sizeof(TrialBoardTab_C_ShowGroupFinder) == 0x000018, "Wrong size on TrialBoardTab_C_ShowGroupFinder");
static_assert(offsetof(TrialBoardTab_C_ShowGroupFinder, CallFunc_GetMenuWithTabsParent_ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_ShowGroupFinder::CallFunc_GetMenuWithTabsParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowGroupFinder, K2Node_DynamicCast_AsCharacter_Sheet) == 0x000008, "Member 'TrialBoardTab_C_ShowGroupFinder::K2Node_DynamicCast_AsCharacter_Sheet' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowGroupFinder, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'TrialBoardTab_C_ShowGroupFinder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowGroupFinder, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'TrialBoardTab_C_ShowGroupFinder::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowGroupFinder, CallFunc_BooleanOR_ReturnValue_1) == 0x000012, "Member 'TrialBoardTab_C_ShowGroupFinder::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowGroupFinder, CallFunc_BooleanOR_ReturnValue_2) == 0x000013, "Member 'TrialBoardTab_C_ShowGroupFinder::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowGroupFinder, CallFunc_BooleanOR_ReturnValue_3) == 0x000014, "Member 'TrialBoardTab_C_ShowGroupFinder::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GamepadNav_NavRightFromGroupFinderButton
// 0x0048 (0x0048 - 0x0000)
struct TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C6[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GamepadNav_NavToTrialBoardSocialEntries_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C7[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton) == 0x000008, "Wrong alignment on TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton");
static_assert(sizeof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton) == 0x000048, "Wrong size on TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, Temp_bool_Variable) == 0x000010, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, CallFunc_GamepadNav_NavToTrialBoardSocialEntries_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::CallFunc_GamepadNav_NavToTrialBoardSocialEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, Temp_object_Variable) == 0x000020, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, Temp_bool_Variable_1) == 0x000028, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, CallFunc_IsVisible_ReturnValue) == 0x000029, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, CallFunc_IsVisible_ReturnValue_1) == 0x00002A, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, K2Node_Select_Default) == 0x000030, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, K2Node_Select_Default_1) == 0x000038, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_GamepadNav_NavRightFromGroupFinderButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GamepadNav_CycleTrialBoardSocialEntries
// 0x0058 (0x0058 - 0x0000)
struct TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CheckedIndex;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35C9[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          CallFunc_GetFocusedChild_ReturnValue;              // 0x0018(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CA[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidget*                          CallFunc_GetFocusedChild_ReturnValue_1;            // 0x0030(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSocialMenuEntry*                     K2Node_DynamicCast_AsRB_Social_Menu_Entry;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CB[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBSocialMenuEntry*                     CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanFocusEntry_ReturnValue;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries) == 0x000008, "Wrong alignment on TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries");
static_assert(sizeof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries) == 0x000058, "Wrong size on TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CheckedIndex) == 0x000010, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CheckedIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_GetFocusedChild_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_GetFocusedChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_GetFocusedChild_ReturnValue_1) == 0x000030, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_GetFocusedChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, K2Node_DynamicCast_AsRB_Social_Menu_Entry) == 0x000038, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::K2Node_DynamicCast_AsRB_Social_Menu_Entry' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_Array_Get_Item) == 0x000048, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_Array_Find_ReturnValue) == 0x000050, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_CanFocusEntry_ReturnValue) == 0x000054, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_CanFocusEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000055, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000056, "Member 'TrialBoardTab_C_GamepadNav_CycleTrialBoardSocialEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GamepadNav_NavToTrialBoardSocialEntries
// 0x0030 (0x0030 - 0x0000)
struct TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSocialMenuEntry*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanFocusEntry_ReturnValue;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries) == 0x000008, "Wrong alignment on TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries");
static_assert(sizeof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries) == 0x000030, "Wrong size on TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries, Temp_int_Array_Index_Variable) == 0x000010, "Member 'TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries, CallFunc_Array_Get_Item) == 0x000020, "Member 'TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries, CallFunc_CanFocusEntry_ReturnValue) == 0x000029, "Member 'TrialBoardTab_C_GamepadNav_NavToTrialBoardSocialEntries::CallFunc_CanFocusEntry_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.SortTrialBoardSocialEntries
// 0x0068 (0x0068 - 0x0000)
struct TrialBoardTab_C_SortTrialBoardSocialEntries final
{
public:
	class URBSocialMenuEntry*                     Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                CallFunc_GetOffsets_ReturnValue;                   // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35CD[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CE[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBSocialMenuEntry*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CF[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D0[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                CallFunc_GetOffsets_ReturnValue_1;                 // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_SortTrialBoardSocialEntries) == 0x000008, "Wrong alignment on TrialBoardTab_C_SortTrialBoardSocialEntries");
static_assert(sizeof(TrialBoardTab_C_SortTrialBoardSocialEntries) == 0x000068, "Wrong size on TrialBoardTab_C_SortTrialBoardSocialEntries");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, Entry) == 0x000000, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::Entry' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, Temp_int_Array_Index_Variable) == 0x000010, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_GetOffsets_ReturnValue) == 0x000014, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_GetOffsets_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_Array_AddUnique_ReturnValue) == 0x000030, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_Array_Get_Item) == 0x000038, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000048, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_GetOffsets_ReturnValue_1) == 0x000054, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_GetOffsets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_SortTrialBoardSocialEntries, CallFunc_Less_FloatFloat_ReturnValue) == 0x000064, "Member 'TrialBoardTab_C_SortTrialBoardSocialEntries::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GamepadNav_NavToMMButtons
// 0x0020 (0x0020 - 0x0000)
struct TrialBoardTab_C_GamepadNav_NavToMMButtons final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D2[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_GamepadNav_NavToMMButtons) == 0x000008, "Wrong alignment on TrialBoardTab_C_GamepadNav_NavToMMButtons");
static_assert(sizeof(TrialBoardTab_C_GamepadNav_NavToMMButtons) == 0x000020, "Wrong size on TrialBoardTab_C_GamepadNav_NavToMMButtons");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToMMButtons, Param_Navigation) == 0x000000, "Member 'TrialBoardTab_C_GamepadNav_NavToMMButtons::Param_Navigation' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToMMButtons, ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_GamepadNav_NavToMMButtons::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToMMButtons, Temp_bool_Variable) == 0x000010, "Member 'TrialBoardTab_C_GamepadNav_NavToMMButtons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToMMButtons, CallFunc_IsVisible_ReturnValue) == 0x000011, "Member 'TrialBoardTab_C_GamepadNav_NavToMMButtons::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GamepadNav_NavToMMButtons, K2Node_Select_Default) == 0x000018, "Member 'TrialBoardTab_C_GamepadNav_NavToMMButtons::K2Node_Select_Default' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.OnFocusReceived
// 0x01F8 (0x01F8 - 0x0000)
struct TrialBoardTab_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D3[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FocusNavTestCheck_FocusCheck;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D4[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_2;                           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0128(0x00B8)()
	class UWidget*                                CallFunc_GetFocusSelectTrialButton_ReturnValue;    // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_3;                           // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_4;                           // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_OnFocusReceived) == 0x000008, "Wrong alignment on TrialBoardTab_C_OnFocusReceived");
static_assert(sizeof(TrialBoardTab_C_OnFocusReceived) == 0x0001F8, "Wrong size on TrialBoardTab_C_OnFocusReceived");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'TrialBoardTab_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'TrialBoardTab_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, Temp_bool_Variable) == 0x0000F8, "Member 'TrialBoardTab_C_OnFocusReceived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, Temp_bool_Variable_1) == 0x0000F9, "Member 'TrialBoardTab_C_OnFocusReceived::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, Temp_bool_Variable_2) == 0x0000FA, "Member 'TrialBoardTab_C_OnFocusReceived::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, Temp_bool_Variable_3) == 0x0000FB, "Member 'TrialBoardTab_C_OnFocusReceived::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, Temp_bool_Variable_4) == 0x0000FC, "Member 'TrialBoardTab_C_OnFocusReceived::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, CallFunc_GetActiveWidget_ReturnValue) == 0x000100, "Member 'TrialBoardTab_C_OnFocusReceived::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, K2Node_Select_Default) == 0x000108, "Member 'TrialBoardTab_C_OnFocusReceived::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, CallFunc_FocusNavTestCheck_FocusCheck) == 0x000110, "Member 'TrialBoardTab_C_OnFocusReceived::CallFunc_FocusNavTestCheck_FocusCheck' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, K2Node_Select_Default_1) == 0x000118, "Member 'TrialBoardTab_C_OnFocusReceived::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, K2Node_Select_Default_2) == 0x000120, "Member 'TrialBoardTab_C_OnFocusReceived::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000128, "Member 'TrialBoardTab_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, CallFunc_GetFocusSelectTrialButton_ReturnValue) == 0x0001E0, "Member 'TrialBoardTab_C_OnFocusReceived::CallFunc_GetFocusSelectTrialButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, K2Node_Select_Default_3) == 0x0001E8, "Member 'TrialBoardTab_C_OnFocusReceived::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnFocusReceived, K2Node_Select_Default_4) == 0x0001F0, "Member 'TrialBoardTab_C_OnFocusReceived::K2Node_Select_Default_4' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetCancelButtonVisibility
// 0x0007 (0x0007 - 0x0000)
struct TrialBoardTab_C_GetCancelButtonVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCancelMatch_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_GetCancelButtonVisibility) == 0x000001, "Wrong alignment on TrialBoardTab_C_GetCancelButtonVisibility");
static_assert(sizeof(TrialBoardTab_C_GetCancelButtonVisibility) == 0x000007, "Wrong size on TrialBoardTab_C_GetCancelButtonVisibility");
static_assert(offsetof(TrialBoardTab_C_GetCancelButtonVisibility, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_GetCancelButtonVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetCancelButtonVisibility, Temp_bool_Variable) == 0x000001, "Member 'TrialBoardTab_C_GetCancelButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetCancelButtonVisibility, Temp_byte_Variable) == 0x000002, "Member 'TrialBoardTab_C_GetCancelButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetCancelButtonVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'TrialBoardTab_C_GetCancelButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetCancelButtonVisibility, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000004, "Member 'TrialBoardTab_C_GetCancelButtonVisibility::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetCancelButtonVisibility, CallFunc_CanCancelMatch_ReturnValue) == 0x000005, "Member 'TrialBoardTab_C_GetCancelButtonVisibility::CallFunc_CanCancelMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetCancelButtonVisibility, K2Node_Select_Default) == 0x000006, "Member 'TrialBoardTab_C_GetCancelButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetStartButtonVisibility
// 0x0006 (0x0006 - 0x0000)
struct TrialBoardTab_C_GetStartButtonVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartMatch_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_GetStartButtonVisibility) == 0x000001, "Wrong alignment on TrialBoardTab_C_GetStartButtonVisibility");
static_assert(sizeof(TrialBoardTab_C_GetStartButtonVisibility) == 0x000006, "Wrong size on TrialBoardTab_C_GetStartButtonVisibility");
static_assert(offsetof(TrialBoardTab_C_GetStartButtonVisibility, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_GetStartButtonVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetStartButtonVisibility, Temp_bool_Variable) == 0x000001, "Member 'TrialBoardTab_C_GetStartButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetStartButtonVisibility, Temp_byte_Variable) == 0x000002, "Member 'TrialBoardTab_C_GetStartButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetStartButtonVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'TrialBoardTab_C_GetStartButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetStartButtonVisibility, CallFunc_CanStartMatch_ReturnValue) == 0x000004, "Member 'TrialBoardTab_C_GetStartButtonVisibility::CallFunc_CanStartMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetStartButtonVisibility, K2Node_Select_Default) == 0x000005, "Member 'TrialBoardTab_C_GetStartButtonVisibility::K2Node_Select_Default' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.IsInTrialBoardPage
// 0x0006 (0x0006 - 0x0000)
struct TrialBoardTab_C_IsInTrialBoardPage final
{
public:
	bool                                          bIntrialBoardPage;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_IsInTrialBoardPage) == 0x000001, "Wrong alignment on TrialBoardTab_C_IsInTrialBoardPage");
static_assert(sizeof(TrialBoardTab_C_IsInTrialBoardPage) == 0x000006, "Wrong size on TrialBoardTab_C_IsInTrialBoardPage");
static_assert(offsetof(TrialBoardTab_C_IsInTrialBoardPage, bIntrialBoardPage) == 0x000000, "Member 'TrialBoardTab_C_IsInTrialBoardPage::bIntrialBoardPage' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsInTrialBoardPage, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'TrialBoardTab_C_IsInTrialBoardPage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsInTrialBoardPage, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'TrialBoardTab_C_IsInTrialBoardPage::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsInTrialBoardPage, CallFunc_BooleanOR_ReturnValue_2) == 0x000003, "Member 'TrialBoardTab_C_IsInTrialBoardPage::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsInTrialBoardPage, CallFunc_BooleanOR_ReturnValue_3) == 0x000004, "Member 'TrialBoardTab_C_IsInTrialBoardPage::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsInTrialBoardPage, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'TrialBoardTab_C_IsInTrialBoardPage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.Get_PosterButton_ToolTipWidget_0
// 0x0028 (0x0028 - 0x0000)
struct TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0 final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class USimpleActionTooltip_C*                 CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0) == 0x000008, "Wrong alignment on TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0");
static_assert(sizeof(TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0) == 0x000028, "Wrong size on TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0");
static_assert(offsetof(TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0, Temp_text_Variable) == 0x000008, "Member 'TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0, CallFunc_Create_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_Get_PosterButton_ToolTipWidget_0::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.HandleMenuTabRight
// 0x0010 (0x0010 - 0x0000)
struct TrialBoardTab_C_HandleMenuTabRight final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_HandleMenuTabRight) == 0x000004, "Wrong alignment on TrialBoardTab_C_HandleMenuTabRight");
static_assert(sizeof(TrialBoardTab_C_HandleMenuTabRight) == 0x000010, "Wrong size on TrialBoardTab_C_HandleMenuTabRight");
static_assert(offsetof(TrialBoardTab_C_HandleMenuTabRight, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_HandleMenuTabRight::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_HandleMenuTabRight, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'TrialBoardTab_C_HandleMenuTabRight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_HandleMenuTabRight, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_HandleMenuTabRight::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_HandleMenuTabRight, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'TrialBoardTab_C_HandleMenuTabRight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.HandleMenuTabLeft
// 0x0010 (0x0010 - 0x0000)
struct TrialBoardTab_C_HandleMenuTabLeft final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_HandleMenuTabLeft) == 0x000004, "Wrong alignment on TrialBoardTab_C_HandleMenuTabLeft");
static_assert(sizeof(TrialBoardTab_C_HandleMenuTabLeft) == 0x000010, "Wrong size on TrialBoardTab_C_HandleMenuTabLeft");
static_assert(offsetof(TrialBoardTab_C_HandleMenuTabLeft, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_HandleMenuTabLeft::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_HandleMenuTabLeft, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'TrialBoardTab_C_HandleMenuTabLeft::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_HandleMenuTabLeft, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_HandleMenuTabLeft::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_HandleMenuTabLeft, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'TrialBoardTab_C_HandleMenuTabLeft::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.RefreshProgramList
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_RefreshProgramList final
{
public:
	TArray<class UProgramPosterCarrouselEntry_C*> CarrouselEntries;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          bFound;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMatchOwner_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_RefreshProgramList) == 0x000008, "Wrong alignment on TrialBoardTab_C_RefreshProgramList");
static_assert(sizeof(TrialBoardTab_C_RefreshProgramList) == 0x000018, "Wrong size on TrialBoardTab_C_RefreshProgramList");
static_assert(offsetof(TrialBoardTab_C_RefreshProgramList, CarrouselEntries) == 0x000000, "Member 'TrialBoardTab_C_RefreshProgramList::CarrouselEntries' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshProgramList, bFound) == 0x000010, "Member 'TrialBoardTab_C_RefreshProgramList::bFound' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshProgramList, CallFunc_IsMatchOwner_ReturnValue) == 0x000011, "Member 'TrialBoardTab_C_RefreshProgramList::CallFunc_IsMatchOwner_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.BuildProgramList
// 0x01A8 (0x01A8 - 0x0000)
struct TrialBoardTab_C_BuildProgramList final
{
public:
	TArray<class UProgramPosterCarrouselEntry_C*> CarrouselEntries;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          bFound;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D7[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramPosterCarrouselEntry_C*         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchOwner_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35D8[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetProgramId_ReturnValue;                 // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D9[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRBProgramInfoRow>              CallFunc_GetPrograms_ReturnValue;                  // 0x0040(0x0010)(ReferenceParm)
	struct FRBProgramInfoRow                      CallFunc_Array_Get_Item;                           // 0x0050(0x0148)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProgramVisible_ReturnValue;             // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProgramUnlocked_ReturnValue;            // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DA[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_BuildProgramList) == 0x000008, "Wrong alignment on TrialBoardTab_C_BuildProgramList");
static_assert(sizeof(TrialBoardTab_C_BuildProgramList) == 0x0001A8, "Wrong size on TrialBoardTab_C_BuildProgramList");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CarrouselEntries) == 0x000000, "Member 'TrialBoardTab_C_BuildProgramList::CarrouselEntries' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, bFound) == 0x000010, "Member 'TrialBoardTab_C_BuildProgramList::bFound' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, Temp_int_Array_Index_Variable) == 0x000014, "Member 'TrialBoardTab_C_BuildProgramList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'TrialBoardTab_C_BuildProgramList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_Create_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_IsMatchOwner_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_IsMatchOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_GetProgramId_ReturnValue) == 0x00002C, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_GetProgramId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000038, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_GetPrograms_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_GetPrograms_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_Array_Get_Item) == 0x000050, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_IsProgramVisible_ReturnValue) == 0x00019C, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_IsProgramVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_Less_IntInt_ReturnValue) == 0x00019D, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00019E, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_IsProgramUnlocked_ReturnValue) == 0x00019F, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_IsProgramUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_Not_PreBool_ReturnValue) == 0x0001A0, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildProgramList, CallFunc_Array_Add_ReturnValue) == 0x0001A4, "Member 'TrialBoardTab_C_BuildProgramList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetTrialOptionsBtnVisibility
// 0x0005 (0x0005 - 0x0000)
struct TrialBoardTab_C_GetTrialOptionsBtnVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_GetTrialOptionsBtnVisibility) == 0x000001, "Wrong alignment on TrialBoardTab_C_GetTrialOptionsBtnVisibility");
static_assert(sizeof(TrialBoardTab_C_GetTrialOptionsBtnVisibility) == 0x000005, "Wrong size on TrialBoardTab_C_GetTrialOptionsBtnVisibility");
static_assert(offsetof(TrialBoardTab_C_GetTrialOptionsBtnVisibility, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_GetTrialOptionsBtnVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialOptionsBtnVisibility, Temp_bool_Variable) == 0x000001, "Member 'TrialBoardTab_C_GetTrialOptionsBtnVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialOptionsBtnVisibility, Temp_byte_Variable) == 0x000002, "Member 'TrialBoardTab_C_GetTrialOptionsBtnVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialOptionsBtnVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'TrialBoardTab_C_GetTrialOptionsBtnVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetTrialOptionsBtnVisibility, K2Node_Select_Default) == 0x000004, "Member 'TrialBoardTab_C_GetTrialOptionsBtnVisibility::K2Node_Select_Default' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.HideVariatorDetails
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_HideVariatorDetails final
{
public:
	class UProgramTrialVariatorWidget_C*          Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_HideVariatorDetails) == 0x000008, "Wrong alignment on TrialBoardTab_C_HideVariatorDetails");
static_assert(sizeof(TrialBoardTab_C_HideVariatorDetails) == 0x000008, "Wrong size on TrialBoardTab_C_HideVariatorDetails");
static_assert(offsetof(TrialBoardTab_C_HideVariatorDetails, Widget) == 0x000000, "Member 'TrialBoardTab_C_HideVariatorDetails::Widget' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShowVariatorDetails
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_ShowVariatorDetails final
{
public:
	class UProgramTrialVariatorWidget_C*          Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialBlockWidget_C*             CurrentProgramBlockWidget;                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ShowVariatorDetails) == 0x000008, "Wrong alignment on TrialBoardTab_C_ShowVariatorDetails");
static_assert(sizeof(TrialBoardTab_C_ShowVariatorDetails) == 0x000018, "Wrong size on TrialBoardTab_C_ShowVariatorDetails");
static_assert(offsetof(TrialBoardTab_C_ShowVariatorDetails, Widget) == 0x000000, "Member 'TrialBoardTab_C_ShowVariatorDetails::Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowVariatorDetails, CurrentProgramBlockWidget) == 0x000008, "Member 'TrialBoardTab_C_ShowVariatorDetails::CurrentProgramBlockWidget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowVariatorDetails, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_ShowVariatorDetails::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowVariatorDetails, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'TrialBoardTab_C_ShowVariatorDetails::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.AddProgramUnlockReward
// 0x0058 (0x0058 - 0x0000)
struct TrialBoardTab_C_AddProgramUnlockReward final
{
public:
	class FName                                   TrialId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialBlockWidget_C*             CurrentProgramBlockWidget;                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialRewardWidget_C*            CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_WouldTrialCompletionUnlockProgram_outProgramId; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WouldTrialCompletionUnlockProgram_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
};
static_assert(alignof(TrialBoardTab_C_AddProgramUnlockReward) == 0x000008, "Wrong alignment on TrialBoardTab_C_AddProgramUnlockReward");
static_assert(sizeof(TrialBoardTab_C_AddProgramUnlockReward) == 0x000058, "Wrong size on TrialBoardTab_C_AddProgramUnlockReward");
static_assert(offsetof(TrialBoardTab_C_AddProgramUnlockReward, TrialId) == 0x000000, "Member 'TrialBoardTab_C_AddProgramUnlockReward::TrialId' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_AddProgramUnlockReward, CurrentProgramBlockWidget) == 0x000008, "Member 'TrialBoardTab_C_AddProgramUnlockReward::CurrentProgramBlockWidget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_AddProgramUnlockReward, CallFunc_Create_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_AddProgramUnlockReward::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_AddProgramUnlockReward, CallFunc_WouldTrialCompletionUnlockProgram_outProgramId) == 0x000018, "Member 'TrialBoardTab_C_AddProgramUnlockReward::CallFunc_WouldTrialCompletionUnlockProgram_outProgramId' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_AddProgramUnlockReward, CallFunc_WouldTrialCompletionUnlockProgram_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_AddProgramUnlockReward::CallFunc_WouldTrialCompletionUnlockProgram_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_AddProgramUnlockReward, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_AddProgramUnlockReward::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_AddProgramUnlockReward, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'TrialBoardTab_C_AddProgramUnlockReward::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.BuildTrialRewards
// 0x0110 (0x0110 - 0x0000)
struct TrialBoardTab_C_BuildTrialRewards final
{
public:
	class FName                                   RewardDataId;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPerfect;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAcquired;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DC[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialBlockWidget_C*             CurrentProgramBlockWidget;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DD[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialRewardWidget_C*            CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayerState*                         CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBPlayerProgressionData*               CallFunc_GetLocalPlayerProgressionData_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBRewardData                          CallFunc_GetRewardData_ReturnValue;                // 0x0048(0x0088)(ConstParm)
	TArray<struct FRewardUIData>                  CallFunc_GetRewardUIDataFromRewards_ReturnValue;   // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DE[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRewardUIData                          CallFunc_Array_Get_Item;                           // 0x00E8(0x0020)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_BuildTrialRewards) == 0x000008, "Wrong alignment on TrialBoardTab_C_BuildTrialRewards");
static_assert(sizeof(TrialBoardTab_C_BuildTrialRewards) == 0x000110, "Wrong size on TrialBoardTab_C_BuildTrialRewards");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, RewardDataId) == 0x000000, "Member 'TrialBoardTab_C_BuildTrialRewards::RewardDataId' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, bPerfect) == 0x000008, "Member 'TrialBoardTab_C_BuildTrialRewards::bPerfect' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, bAcquired) == 0x000009, "Member 'TrialBoardTab_C_BuildTrialRewards::bAcquired' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CurrentProgramBlockWidget) == 0x000010, "Member 'TrialBoardTab_C_BuildTrialRewards::CurrentProgramBlockWidget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, Temp_int_Array_Index_Variable) == 0x000018, "Member 'TrialBoardTab_C_BuildTrialRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'TrialBoardTab_C_BuildTrialRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_Create_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000030, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000038, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_GetLocalPlayerProgressionData_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_GetLocalPlayerProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_GetRewardData_ReturnValue) == 0x000048, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_GetRewardData_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_GetRewardUIDataFromRewards_ReturnValue) == 0x0000D0, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_GetRewardUIDataFromRewards_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_BuildTrialRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'TrialBoardTab_C_BuildTrialRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShowTrialDetails
// 0x0240 (0x0240 - 0x0000)
struct TrialBoardTab_C_ShowTrialDetails final
{
public:
	class UProgramTrialBlockWidget_C*             CurrentProgramBlockWidget;                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DF[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E0[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialVariatorWidget_C*          CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E1[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrialCompleted_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrialCompleted_ReturnValue_1;           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E2[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E3[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialVariatorWidget_C*          K2Node_DynamicCast_AsProgram_Trial_Variator_Widget; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E4[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UProgramTrialVariatorWidget_C* Widget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UProgramTrialVariatorWidget_C* Widget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue_1;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBTrialInfoRow                        CallFunc_GetTrialInfo_ReturnValue;                 // 0x0098(0x0158)(ConstParm)
	bool                                          CallFunc_IsTrialEnabled_ReturnValue;               // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E5[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E6[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBVariatorInfo*                        CallFunc_GetVariatorInfo_ReturnValue;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E7[0x2];                                     // 0x020E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E8[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_TryLoadSyncSoftRef_NewParam;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E9[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetPosterTextureForTrial_texture;         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_ShowTrialDetails) == 0x000008, "Wrong alignment on TrialBoardTab_C_ShowTrialDetails");
static_assert(sizeof(TrialBoardTab_C_ShowTrialDetails) == 0x000240, "Wrong size on TrialBoardTab_C_ShowTrialDetails");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CurrentProgramBlockWidget) == 0x000000, "Member 'TrialBoardTab_C_ShowTrialDetails::CurrentProgramBlockWidget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'TrialBoardTab_C_ShowTrialDetails::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, Temp_bool_Variable) == 0x00000C, "Member 'TrialBoardTab_C_ShowTrialDetails::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Create_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, Temp_int_Array_Index_Variable) == 0x000020, "Member 'TrialBoardTab_C_ShowTrialDetails::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'TrialBoardTab_C_ShowTrialDetails::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'TrialBoardTab_C_ShowTrialDetails::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, Temp_byte_Variable) == 0x000030, "Member 'TrialBoardTab_C_ShowTrialDetails::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, Temp_byte_Variable_1) == 0x000031, "Member 'TrialBoardTab_C_ShowTrialDetails::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_GetChildrenCount_ReturnValue) == 0x000034, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_IsTrialCompleted_ReturnValue) == 0x000039, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_IsTrialCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_IsTrialCompleted_ReturnValue_1) == 0x00003A, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_IsTrialCompleted_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, K2Node_Select_Default) == 0x00003B, "Member 'TrialBoardTab_C_ShowTrialDetails::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_GetChildAt_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, K2Node_DynamicCast_AsProgram_Trial_Variator_Widget) == 0x000050, "Member 'TrialBoardTab_C_ShowTrialDetails::K2Node_DynamicCast_AsProgram_Trial_Variator_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'TrialBoardTab_C_ShowTrialDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000060, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'TrialBoardTab_C_ShowTrialDetails::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, K2Node_CreateDelegate_OutputDelegate_1) == 0x000078, "Member 'TrialBoardTab_C_ShowTrialDetails::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_GetGameStructureConfig_ReturnValue_1) == 0x000088, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_GetGameStructureConfig_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000090, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_GetTrialInfo_ReturnValue) == 0x000098, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_GetTrialInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_IsTrialEnabled_ReturnValue) == 0x0001F0, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_IsTrialEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Array_Get_Item) == 0x0001F4, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_GetVariatorInfo_ReturnValue) == 0x000200, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_GetVariatorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_IsValid_ReturnValue_1) == 0x00020C, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Less_IntInt_ReturnValue) == 0x00020D, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Array_Get_Item_1) == 0x000210, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Array_Length_ReturnValue_1) == 0x000218, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_Less_IntInt_ReturnValue_1) == 0x00021C, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_TryLoadSyncSoftRef_NewParam) == 0x000220, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_TryLoadSyncSoftRef_NewParam' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, K2Node_DynamicCast_AsTexture_2D) == 0x000228, "Member 'TrialBoardTab_C_ShowTrialDetails::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'TrialBoardTab_C_ShowTrialDetails::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialDetails, CallFunc_GetPosterTextureForTrial_texture) == 0x000238, "Member 'TrialBoardTab_C_ShowTrialDetails::CallFunc_GetPosterTextureForTrial_texture' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShowProgram
// 0x0658 (0x0658 - 0x0000)
struct TrialBoardTab_C_ShowProgram final
{
public:
	class FName                                   ProgramId;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockNumber;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialBlockWidget_C*             CurrentProgramBlockWidget;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgramTrialBlockWidget_C*             CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EB[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchOwner_ReturnValue;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EC[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0038(0x0018)()
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35ED[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayerState*                         CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EE[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInmateId_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0070(0x0018)()
	float                                         CallFunc_GetProgramTQ_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EF[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_NormalizedScoreToText_ReturnValue;        // 0x00D0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	bool                                          CallFunc_HasCompletedProgram_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F0[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue_1;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0120(0x0018)()
	bool                                          CallFunc_IsMatchOwner_ReturnValue_1;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F1[0x5];                                     // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URBLocalProfile*                        CallFunc_GetProfile_ReturnValue;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F2[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBTrialInfoRow                        CallFunc_GetTrialInfo_ReturnValue;                 // 0x0150(0x0158)(ConstParm)
	struct FMatchSettings                         CallFunc_GetMatchSettings_ReturnValue;             // 0x02A8(0x0024)(ConstParm, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F3[0x2];                                     // 0x02CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayerState*                         CallFunc_GetLocalPlayerState_ReturnValue_1;        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatPlayerName_ReturnValue;             // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0300(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F4[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue_2;     // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName TrialId)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0328(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F5[0x3];                                     // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRBTrialInfoRow>                CallFunc_GetProgramTrials_ReturnValue;             // 0x0340(0x0010)(ReferenceParm)
	struct FRBTrialInfoRow                        CallFunc_Array_Get_Item;                           // 0x0350(0x0158)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x04AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrialUnlocked_ReturnValue;              // 0x04AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x04AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrialCompleted_ReturnValue;             // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F6[0x2];                                     // 0x04B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBestTrialPersonalTQ_ReturnValue;       // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTrialEnabled_ReturnValue;               // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F7[0x3];                                     // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x04BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x04C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F8[0x2];                                     // 0x04C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBProgramInfoRow                      CallFunc_GetProgramInfo_ReturnValue;               // 0x04C8(0x0148)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0610(0x0028)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProgramEnabled_ReturnValue;             // 0x063A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F9[0x5];                                     // 0x063B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue;        // 0x0640(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterSheet_C*                      K2Node_DynamicCast_AsCharacter_Sheet;              // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ShowProgram) == 0x000008, "Wrong alignment on TrialBoardTab_C_ShowProgram");
static_assert(sizeof(TrialBoardTab_C_ShowProgram) == 0x000658, "Wrong size on TrialBoardTab_C_ShowProgram");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, ProgramId) == 0x000000, "Member 'TrialBoardTab_C_ShowProgram::ProgramId' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, BlockNumber) == 0x000008, "Member 'TrialBoardTab_C_ShowProgram::BlockNumber' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CurrentProgramBlockWidget) == 0x000010, "Member 'TrialBoardTab_C_ShowProgram::CurrentProgramBlockWidget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Create_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, Temp_int_Variable) == 0x000020, "Member 'TrialBoardTab_C_ShowProgram::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, Temp_bool_Variable) == 0x000024, "Member 'TrialBoardTab_C_ShowProgram::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'TrialBoardTab_C_ShowProgram::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, Temp_int_Array_Index_Variable) == 0x000030, "Member 'TrialBoardTab_C_ShowProgram::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_IsMatchOwner_ReturnValue) == 0x000034, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_IsMatchOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, Temp_text_Variable) == 0x000038, "Member 'TrialBoardTab_C_ShowProgram::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000050, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, Temp_bool_Variable_1) == 0x000058, "Member 'TrialBoardTab_C_ShowProgram::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000060, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, Temp_bool_Variable_2) == 0x000068, "Member 'TrialBoardTab_C_ShowProgram::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetInmateId_ReturnValue) == 0x00006C, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetInmateId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Conv_IntToText_ReturnValue) == 0x000070, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetProgramTQ_ReturnValue) == 0x000088, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetProgramTQ_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'TrialBoardTab_C_ShowProgram::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_NormalizedScoreToText_ReturnValue) == 0x0000D0, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_NormalizedScoreToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, K2Node_MakeArray_Array) == 0x0000E8, "Member 'TrialBoardTab_C_ShowProgram::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_HasCompletedProgram_ReturnValue) == 0x000110, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_HasCompletedProgram_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetGameStructureConfig_ReturnValue_1) == 0x000118, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetGameStructureConfig_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, K2Node_Select_Default) == 0x000120, "Member 'TrialBoardTab_C_ShowProgram::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_IsMatchOwner_ReturnValue_1) == 0x000138, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_IsMatchOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_BooleanOR_ReturnValue) == 0x000139, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_BooleanOR_ReturnValue_1) == 0x00013A, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetProfile_ReturnValue) == 0x000140, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, Temp_byte_Variable) == 0x000148, "Member 'TrialBoardTab_C_ShowProgram::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetTrialInfo_ReturnValue) == 0x000150, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetTrialInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetMatchSettings_ReturnValue) == 0x0002A8, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetMatchSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_NotEqual_NameName_ReturnValue) == 0x0002CC, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002CD, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_AddChild_ReturnValue) == 0x0002D0, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetLocalPlayerState_ReturnValue_1) == 0x0002D8, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetLocalPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetPlayerName_ReturnValue) == 0x0002E0, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_FormatPlayerName_ReturnValue) == 0x0002F0, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_FormatPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Conv_StringToText_ReturnValue) == 0x000300, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, Temp_byte_Variable_1) == 0x000318, "Member 'TrialBoardTab_C_ShowProgram::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetGameStructureConfig_ReturnValue_2) == 0x000320, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetGameStructureConfig_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, K2Node_CreateDelegate_OutputDelegate) == 0x000328, "Member 'TrialBoardTab_C_ShowProgram::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Add_IntInt_ReturnValue_1) == 0x000338, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_IsValid_ReturnValue) == 0x00033C, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetProgramTrials_ReturnValue) == 0x000340, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetProgramTrials_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Array_Get_Item) == 0x000350, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Array_Length_ReturnValue) == 0x0004A8, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Less_IntInt_ReturnValue) == 0x0004AC, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0004AD, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_IsTrialUnlocked_ReturnValue) == 0x0004AE, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_IsTrialUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0004AF, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_Not_PreBool_ReturnValue) == 0x0004B0, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_IsTrialCompleted_ReturnValue) == 0x0004B1, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_IsTrialCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetBestTrialPersonalTQ_ReturnValue) == 0x0004B4, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetBestTrialPersonalTQ_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_IsTrialEnabled_ReturnValue) == 0x0004B8, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_IsTrialEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, K2Node_Select_Default_1) == 0x0004BC, "Member 'TrialBoardTab_C_ShowProgram::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0004C4, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_BooleanOR_ReturnValue_2) == 0x0004C5, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetProgramInfo_ReturnValue) == 0x0004C8, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetProgramInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, K2Node_MakeStruct_SlateColor) == 0x000610, "Member 'TrialBoardTab_C_ShowProgram::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_TextIsEmpty_ReturnValue) == 0x000638, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, K2Node_Select_Default_2) == 0x000639, "Member 'TrialBoardTab_C_ShowProgram::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_IsProgramEnabled_ReturnValue) == 0x00063A, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_IsProgramEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, CallFunc_GetMenuWithTabsParent_ReturnValue) == 0x000640, "Member 'TrialBoardTab_C_ShowProgram::CallFunc_GetMenuWithTabsParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, K2Node_DynamicCast_AsCharacter_Sheet) == 0x000648, "Member 'TrialBoardTab_C_ShowProgram::K2Node_DynamicCast_AsCharacter_Sheet' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgram, K2Node_DynamicCast_bSuccess) == 0x000650, "Member 'TrialBoardTab_C_ShowProgram::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShowProgramSelection
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_ShowProgramSelection final
{
public:
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterSheet_C*                      K2Node_DynamicCast_AsCharacter_Sheet;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ShowProgramSelection) == 0x000008, "Wrong alignment on TrialBoardTab_C_ShowProgramSelection");
static_assert(sizeof(TrialBoardTab_C_ShowProgramSelection) == 0x000018, "Wrong size on TrialBoardTab_C_ShowProgramSelection");
static_assert(offsetof(TrialBoardTab_C_ShowProgramSelection, CallFunc_GetMenuWithTabsParent_ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_ShowProgramSelection::CallFunc_GetMenuWithTabsParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgramSelection, K2Node_DynamicCast_AsCharacter_Sheet) == 0x000008, "Member 'TrialBoardTab_C_ShowProgramSelection::K2Node_DynamicCast_AsCharacter_Sheet' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgramSelection, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'TrialBoardTab_C_ShowProgramSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgramSelection, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'TrialBoardTab_C_ShowProgramSelection::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgramSelection, CallFunc_BooleanOR_ReturnValue_1) == 0x000012, "Member 'TrialBoardTab_C_ShowProgramSelection::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowProgramSelection, CallFunc_BooleanOR_ReturnValue_2) == 0x000013, "Member 'TrialBoardTab_C_ShowProgramSelection::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShowTrialBoard
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_ShowTrialBoard final
{
public:
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterSheet_C*                      K2Node_DynamicCast_AsCharacter_Sheet;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ShowTrialBoard) == 0x000008, "Wrong alignment on TrialBoardTab_C_ShowTrialBoard");
static_assert(sizeof(TrialBoardTab_C_ShowTrialBoard) == 0x000018, "Wrong size on TrialBoardTab_C_ShowTrialBoard");
static_assert(offsetof(TrialBoardTab_C_ShowTrialBoard, CallFunc_GetMenuWithTabsParent_ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_ShowTrialBoard::CallFunc_GetMenuWithTabsParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialBoard, K2Node_DynamicCast_AsCharacter_Sheet) == 0x000008, "Member 'TrialBoardTab_C_ShowTrialBoard::K2Node_DynamicCast_AsCharacter_Sheet' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowTrialBoard, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'TrialBoardTab_C_ShowTrialBoard::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShowSocial
// 0x0038 (0x0038 - 0x0000)
struct TrialBoardTab_C_ShowSocial final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35FA[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterSheet_C*                      K2Node_DynamicCast_AsCharacter_Sheet;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ShowSocial) == 0x000008, "Wrong alignment on TrialBoardTab_C_ShowSocial");
static_assert(sizeof(TrialBoardTab_C_ShowSocial) == 0x000038, "Wrong size on TrialBoardTab_C_ShowSocial");
static_assert(offsetof(TrialBoardTab_C_ShowSocial, Temp_delegate_Variable) == 0x000000, "Member 'TrialBoardTab_C_ShowSocial::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowSocial, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_ShowSocial::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowSocial, CallFunc_PostEventGlobal_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_ShowSocial::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowSocial, CallFunc_GetMenuWithTabsParent_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_ShowSocial::CallFunc_GetMenuWithTabsParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowSocial, K2Node_DynamicCast_AsCharacter_Sheet) == 0x000028, "Member 'TrialBoardTab_C_ShowSocial::K2Node_DynamicCast_AsCharacter_Sheet' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShowSocial, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'TrialBoardTab_C_ShowSocial::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.RefreshCurrentTrialDetails
// 0x0428 (0x0428 - 0x0000)
struct TrialBoardTab_C_RefreshCurrentTrialDetails final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FB[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FD[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0090(0x0018)()
	bool                                          CallFunc_CanCancelMatch_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanStartMatch_ReturnValue;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMatchOwner_ReturnValue;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMatchOwner_ReturnValue_1;               // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMatchOwner_ReturnValue_2;               // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35FE[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00B8(0x0018)()
	bool                                          CallFunc_IsMatchOwner_ReturnValue_3;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35FF[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x00D8(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3600[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3601[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchSettings                         CallFunc_GetMatchSettings_ReturnValue;             // 0x0108(0x0024)(ConstParm, NoDestructor)
	int32                                         CallFunc_GetTrialBlockNumber_blockNumber;          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetPosterTextureForTrial_texture;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBTrialInfoRow                        CallFunc_GetTrialInfo_ReturnValue;                 // 0x0138(0x0158)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3602[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_TryLoadSyncSoftRef_NewParam;              // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3603[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3604[0x4];                                     // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_5;                           // 0x02B8(0x0018)()
	bool                                          CallFunc_IsTrialEnabled_ReturnValue;               // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3605[0x6];                                     // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRBProgramInfoRow                      CallFunc_GetProgramInfo_ReturnValue;               // 0x02D8(0x0148)(ConstParm)
	bool                                          CallFunc_IsProgramEnabled_ReturnValue;             // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_RefreshCurrentTrialDetails) == 0x000008, "Wrong alignment on TrialBoardTab_C_RefreshCurrentTrialDetails");
static_assert(sizeof(TrialBoardTab_C_RefreshCurrentTrialDetails) == 0x000428, "Wrong size on TrialBoardTab_C_RefreshCurrentTrialDetails");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_byte_Variable) == 0x000000, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_byte_Variable_1) == 0x000001, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_bool_Variable) == 0x000002, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_byte_Variable_2) == 0x000003, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_byte_Variable_3) == 0x000004, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_bool_Variable_1) == 0x000005, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_text_Variable) == 0x000008, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_text_Variable_1) == 0x000020, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_bool_Variable_2) == 0x000038, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_text_Variable_2) == 0x000040, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_text_Variable_3) == 0x000058, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_bool_Variable_3) == 0x000070, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_byte_Variable_4) == 0x000071, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_byte_Variable_5) == 0x000072, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_bool_Variable_4) == 0x000073, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_text_Variable_4) == 0x000078, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_text_Variable_5) == 0x000090, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_CanCancelMatch_ReturnValue) == 0x0000A8, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_CanCancelMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_CanStartMatch_ReturnValue) == 0x0000A9, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_CanStartMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_Not_PreBool_ReturnValue) == 0x0000AA, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000AB, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_IsMatchOwner_ReturnValue) == 0x0000AC, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_IsMatchOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, Temp_bool_Variable_5) == 0x0000AD, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_IsMatchOwner_ReturnValue_1) == 0x0000AE, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_IsMatchOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_IsMatchOwner_ReturnValue_2) == 0x0000AF, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_IsMatchOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, K2Node_Select_Default) == 0x0000B0, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, K2Node_Select_Default_1) == 0x0000B8, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_IsMatchOwner_ReturnValue_3) == 0x0000D0, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_IsMatchOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, K2Node_Select_Default_2) == 0x0000D8, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, K2Node_Select_Default_3) == 0x0000F0, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_SelectFloat_ReturnValue) == 0x0000F4, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_SelectFloat_ReturnValue_1) == 0x0000F8, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000100, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_GetMatchSettings_ReturnValue) == 0x000108, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_GetMatchSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_GetTrialBlockNumber_blockNumber) == 0x00012C, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_GetTrialBlockNumber_blockNumber' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_GetPosterTextureForTrial_texture) == 0x000130, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_GetPosterTextureForTrial_texture' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_GetTrialInfo_ReturnValue) == 0x000138, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_GetTrialInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_Greater_IntInt_ReturnValue) == 0x000290, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_TryLoadSyncSoftRef_NewParam) == 0x000298, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_TryLoadSyncSoftRef_NewParam' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_BooleanAND_ReturnValue) == 0x0002A0, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, K2Node_DynamicCast_AsTexture_2D) == 0x0002A8, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_BooleanAND_ReturnValue_1) == 0x0002B1, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_BooleanAND_ReturnValue_2) == 0x0002B2, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, K2Node_Select_Default_4) == 0x0002B3, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, K2Node_Select_Default_5) == 0x0002B8, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_IsTrialEnabled_ReturnValue) == 0x0002D0, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_IsTrialEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002D1, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_GetProgramInfo_ReturnValue) == 0x0002D8, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_GetProgramInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_RefreshCurrentTrialDetails, CallFunc_IsProgramEnabled_ReturnValue) == 0x000420, "Member 'TrialBoardTab_C_RefreshCurrentTrialDetails::CallFunc_IsProgramEnabled_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.Refresh
// 0x00E0 (0x00E0 - 0x0000)
struct TrialBoardTab_C_Refresh final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3606[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchOwner_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3607[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3608[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProgramTrialBlockWidget_C*             K2Node_DynamicCast_AsProgram_Trial_Block_Widget;   // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3609[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetProgramId_ReturnValue;                 // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchSettings                         CallFunc_GetMatchSettings_ReturnValue;             // 0x0074(0x0024)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreTrialsFromSameProgram_ReturnValue;     // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMatchOwner_ReturnValue_1;               // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360A[0x1];                                     // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanFindParty_ReturnValue;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360B[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360C[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00C0(0x0018)()
	bool                                          CallFunc_CanSendPartyInvite_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_Refresh) == 0x000008, "Wrong alignment on TrialBoardTab_C_Refresh");
static_assert(sizeof(TrialBoardTab_C_Refresh) == 0x0000E0, "Wrong size on TrialBoardTab_C_Refresh");
static_assert(offsetof(TrialBoardTab_C_Refresh, Temp_bool_Variable) == 0x000000, "Member 'TrialBoardTab_C_Refresh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, Temp_text_Variable) == 0x000008, "Member 'TrialBoardTab_C_Refresh::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, Temp_text_Variable_1) == 0x000020, "Member 'TrialBoardTab_C_Refresh::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, Temp_int_Array_Index_Variable) == 0x000038, "Member 'TrialBoardTab_C_Refresh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_IsMatchOwner_ReturnValue) == 0x00003C, "Member 'TrialBoardTab_C_Refresh::CallFunc_IsMatchOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_Refresh::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_Array_Get_Item) == 0x000050, "Member 'TrialBoardTab_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'TrialBoardTab_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, K2Node_DynamicCast_AsProgram_Trial_Block_Widget) == 0x000060, "Member 'TrialBoardTab_C_Refresh::K2Node_DynamicCast_AsProgram_Trial_Block_Widget' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'TrialBoardTab_C_Refresh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_GetProgramId_ReturnValue) == 0x00006C, "Member 'TrialBoardTab_C_Refresh::CallFunc_GetProgramId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_GetMatchSettings_ReturnValue) == 0x000074, "Member 'TrialBoardTab_C_Refresh::CallFunc_GetMatchSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000098, "Member 'TrialBoardTab_C_Refresh::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_AreTrialsFromSameProgram_ReturnValue) == 0x000099, "Member 'TrialBoardTab_C_Refresh::CallFunc_AreTrialsFromSameProgram_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_IsMatchOwner_ReturnValue_1) == 0x00009A, "Member 'TrialBoardTab_C_Refresh::CallFunc_IsMatchOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'TrialBoardTab_C_Refresh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'TrialBoardTab_C_Refresh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'TrialBoardTab_C_Refresh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_Less_IntInt_ReturnValue) == 0x0000A2, "Member 'TrialBoardTab_C_Refresh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A3, "Member 'TrialBoardTab_C_Refresh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'TrialBoardTab_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_CanFindParty_ReturnValue) == 0x0000A8, "Member 'TrialBoardTab_C_Refresh::CallFunc_CanFindParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A9, "Member 'TrialBoardTab_C_Refresh::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x0000B0, "Member 'TrialBoardTab_C_Refresh::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_BooleanAND_ReturnValue_2) == 0x0000B8, "Member 'TrialBoardTab_C_Refresh::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'TrialBoardTab_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, K2Node_Select_Default) == 0x0000C0, "Member 'TrialBoardTab_C_Refresh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Refresh, CallFunc_CanSendPartyInvite_ReturnValue) == 0x0000D8, "Member 'TrialBoardTab_C_Refresh::CallFunc_CanSendPartyInvite_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct TrialBoardTab_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0160(0x00B8)()
	class URBSocialMenuManager*                   CallFunc_GetSocialMenuManager_ReturnValue;         // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on TrialBoardTab_C_OnMouseButtonDown");
static_assert(sizeof(TrialBoardTab_C_OnMouseButtonDown) == 0x000220, "Wrong size on TrialBoardTab_C_OnMouseButtonDown");
static_assert(offsetof(TrialBoardTab_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'TrialBoardTab_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'TrialBoardTab_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'TrialBoardTab_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000160, "Member 'TrialBoardTab_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_OnMouseButtonDown, CallFunc_GetSocialMenuManager_ReturnValue) == 0x000218, "Member 'TrialBoardTab_C_OnMouseButtonDown::CallFunc_GetSocialMenuManager_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.DeactivateCurrentSection
// 0x000C (0x000C - 0x0000)
struct TrialBoardTab_C_DeactivateCurrentSection final
{
public:
	int32                                         PreviousIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_DeactivateCurrentSection) == 0x000004, "Wrong alignment on TrialBoardTab_C_DeactivateCurrentSection");
static_assert(sizeof(TrialBoardTab_C_DeactivateCurrentSection) == 0x00000C, "Wrong size on TrialBoardTab_C_DeactivateCurrentSection");
static_assert(offsetof(TrialBoardTab_C_DeactivateCurrentSection, PreviousIndex) == 0x000000, "Member 'TrialBoardTab_C_DeactivateCurrentSection::PreviousIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_DeactivateCurrentSection, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'TrialBoardTab_C_DeactivateCurrentSection::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_DeactivateCurrentSection, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'TrialBoardTab_C_DeactivateCurrentSection::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ActivateSocialTab
// 0x0048 (0x0048 - 0x0000)
struct TrialBoardTab_C_ActivateSocialTab final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousIndex;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360D[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URBGlobalUIConfig*                      CallFunc_GetGlobalUIConfig_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSocialMenuManager*                   CallFunc_GetSocialMenuManager_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360E[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_ActivateSocialTab) == 0x000008, "Wrong alignment on TrialBoardTab_C_ActivateSocialTab");
static_assert(sizeof(TrialBoardTab_C_ActivateSocialTab) == 0x000048, "Wrong size on TrialBoardTab_C_ActivateSocialTab");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, Param_Index) == 0x000000, "Member 'TrialBoardTab_C_ActivateSocialTab::Param_Index' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, PreviousIndex) == 0x000004, "Member 'TrialBoardTab_C_ActivateSocialTab::PreviousIndex' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, Temp_delegate_Variable) == 0x000008, "Member 'TrialBoardTab_C_ActivateSocialTab::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'TrialBoardTab_C_ActivateSocialTab::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'TrialBoardTab_C_ActivateSocialTab::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, CallFunc_GetGlobalUIConfig_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_ActivateSocialTab::CallFunc_GetGlobalUIConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, CallFunc_GetSocialMenuManager_ReturnValue) == 0x000028, "Member 'TrialBoardTab_C_ActivateSocialTab::CallFunc_GetSocialMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, CallFunc_PostEventGlobal_ReturnValue) == 0x000030, "Member 'TrialBoardTab_C_ActivateSocialTab::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, K2Node_SwitchInteger_CmpSuccess_1) == 0x000034, "Member 'TrialBoardTab_C_ActivateSocialTab::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, CallFunc_GetActiveWidget_ReturnValue) == 0x000038, "Member 'TrialBoardTab_C_ActivateSocialTab::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ActivateSocialTab, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000040, "Member 'TrialBoardTab_C_ActivateSocialTab::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.IsReadyToClose
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_IsReadyToClose final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_360F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBSocialMenuManager*                   CallFunc_GetSocialMenuManager_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasContextualMenuOpen_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_IsReadyToClose) == 0x000008, "Wrong alignment on TrialBoardTab_C_IsReadyToClose");
static_assert(sizeof(TrialBoardTab_C_IsReadyToClose) == 0x000018, "Wrong size on TrialBoardTab_C_IsReadyToClose");
static_assert(offsetof(TrialBoardTab_C_IsReadyToClose, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_IsReadyToClose::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsReadyToClose, CallFunc_GetSocialMenuManager_ReturnValue) == 0x000008, "Member 'TrialBoardTab_C_IsReadyToClose::CallFunc_GetSocialMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsReadyToClose, CallFunc_HasContextualMenuOpen_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_IsReadyToClose::CallFunc_HasContextualMenuOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsReadyToClose, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'TrialBoardTab_C_IsReadyToClose::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsReadyToClose, CallFunc_BooleanOR_ReturnValue_1) == 0x000012, "Member 'TrialBoardTab_C_IsReadyToClose::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsReadyToClose, CallFunc_BooleanOR_ReturnValue_2) == 0x000013, "Member 'TrialBoardTab_C_IsReadyToClose::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsReadyToClose, CallFunc_BooleanOR_ReturnValue_3) == 0x000014, "Member 'TrialBoardTab_C_IsReadyToClose::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsReadyToClose, CallFunc_BooleanOR_ReturnValue_4) == 0x000015, "Member 'TrialBoardTab_C_IsReadyToClose::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_IsReadyToClose, CallFunc_Not_PreBool_ReturnValue) == 0x000016, "Member 'TrialBoardTab_C_IsReadyToClose::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetPageSpecificButtons
// 0x0170 (0x0170 - 0x0000)
struct TrialBoardTab_C_GetPageSpecificButtons final
{
public:
	TArray<class UUserWidget*>                    OutButtons;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UUserWidget*>                    OutPageSpecificButtons;                            // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	EProfilePlatform                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3610[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A0(0x0018)()
	ERBSocialMenuEntryFilter                      Temp_byte_Variable_1;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3611[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x00C0(0x0018)()
	class URBMenuButton_C*                        CallFunc_Create_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBMenuButton_C*                        CallFunc_Create_ReturnValue_1;                     // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProfilePlatform                              CallFunc_GetPlatform_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERBSocialMenuEntryFilter                      CallFunc_GetFilter_ReturnValue;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3612[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00F0(0x0018)()
	bool                                          CallFunc_ShowFilter_ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3613[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0110(0x0018)()
	TDelegate<void(class URBMenuButton_C* Button)> K2Node_CreateDelegate_OutputDelegate;              // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   Temp_text_Variable_7;                              // 0x0138(0x0018)(ConstParm)
	bool                                          CallFunc_CanAddFriend_ReturnValue;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3614[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class URBMenuButton_C* Button)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3615[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_GetPageSpecificButtons) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetPageSpecificButtons");
static_assert(sizeof(TrialBoardTab_C_GetPageSpecificButtons) == 0x000170, "Wrong size on TrialBoardTab_C_GetPageSpecificButtons");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, OutButtons) == 0x000000, "Member 'TrialBoardTab_C_GetPageSpecificButtons::OutButtons' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, OutPageSpecificButtons) == 0x000010, "Member 'TrialBoardTab_C_GetPageSpecificButtons::OutPageSpecificButtons' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_byte_Variable) == 0x000020, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_text_Variable) == 0x000028, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_text_Variable_1) == 0x000040, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_text_Variable_2) == 0x000058, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_text_Variable_3) == 0x000070, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_text_Variable_4) == 0x000088, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_text_Variable_5) == 0x0000A0, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_byte_Variable_1) == 0x0000B8, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_text_Variable_6) == 0x0000C0, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, CallFunc_Create_ReturnValue) == 0x0000D8, "Member 'TrialBoardTab_C_GetPageSpecificButtons::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, CallFunc_Create_ReturnValue_1) == 0x0000E0, "Member 'TrialBoardTab_C_GetPageSpecificButtons::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, CallFunc_GetPlatform_ReturnValue) == 0x0000E8, "Member 'TrialBoardTab_C_GetPageSpecificButtons::CallFunc_GetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, CallFunc_GetFilter_ReturnValue) == 0x0000E9, "Member 'TrialBoardTab_C_GetPageSpecificButtons::CallFunc_GetFilter_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, K2Node_Select_Default) == 0x0000F0, "Member 'TrialBoardTab_C_GetPageSpecificButtons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, CallFunc_ShowFilter_ReturnValue) == 0x000108, "Member 'TrialBoardTab_C_GetPageSpecificButtons::CallFunc_ShowFilter_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, K2Node_Select_Default_1) == 0x000110, "Member 'TrialBoardTab_C_GetPageSpecificButtons::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, K2Node_CreateDelegate_OutputDelegate) == 0x000128, "Member 'TrialBoardTab_C_GetPageSpecificButtons::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, Temp_text_Variable_7) == 0x000138, "Member 'TrialBoardTab_C_GetPageSpecificButtons::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, CallFunc_CanAddFriend_ReturnValue) == 0x000150, "Member 'TrialBoardTab_C_GetPageSpecificButtons::CallFunc_CanAddFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, K2Node_CreateDelegate_OutputDelegate_1) == 0x000154, "Member 'TrialBoardTab_C_GetPageSpecificButtons::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, CallFunc_BooleanAND_ReturnValue) == 0x000164, "Member 'TrialBoardTab_C_GetPageSpecificButtons::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, CallFunc_Array_Add_ReturnValue) == 0x000168, "Member 'TrialBoardTab_C_GetPageSpecificButtons::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSpecificButtons, CallFunc_Array_Add_ReturnValue_1) == 0x00016C, "Member 'TrialBoardTab_C_GetPageSpecificButtons::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.BndEvt__TrialBoardTab_SleepRoomButton_K2Node_ComponentBoundEvent_1_OnMenuTabButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_BndEvt__TrialBoardTab_SleepRoomButton_K2Node_ComponentBoundEvent_1_OnMenuTabButtonClicked__DelegateSignature final
{
public:
	class URBMenuTabButton*                       Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_BndEvt__TrialBoardTab_SleepRoomButton_K2Node_ComponentBoundEvent_1_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TrialBoardTab_C_BndEvt__TrialBoardTab_SleepRoomButton_K2Node_ComponentBoundEvent_1_OnMenuTabButtonClicked__DelegateSignature");
static_assert(sizeof(TrialBoardTab_C_BndEvt__TrialBoardTab_SleepRoomButton_K2Node_ComponentBoundEvent_1_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TrialBoardTab_C_BndEvt__TrialBoardTab_SleepRoomButton_K2Node_ComponentBoundEvent_1_OnMenuTabButtonClicked__DelegateSignature");
static_assert(offsetof(TrialBoardTab_C_BndEvt__TrialBoardTab_SleepRoomButton_K2Node_ComponentBoundEvent_1_OnMenuTabButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TrialBoardTab_C_BndEvt__TrialBoardTab_SleepRoomButton_K2Node_ComponentBoundEvent_1_OnMenuTabButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.BndEvt__TrialBoardTab_RecentButton_K2Node_ComponentBoundEvent_2_OnMenuTabButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_BndEvt__TrialBoardTab_RecentButton_K2Node_ComponentBoundEvent_2_OnMenuTabButtonClicked__DelegateSignature final
{
public:
	class URBMenuTabButton*                       Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_BndEvt__TrialBoardTab_RecentButton_K2Node_ComponentBoundEvent_2_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TrialBoardTab_C_BndEvt__TrialBoardTab_RecentButton_K2Node_ComponentBoundEvent_2_OnMenuTabButtonClicked__DelegateSignature");
static_assert(sizeof(TrialBoardTab_C_BndEvt__TrialBoardTab_RecentButton_K2Node_ComponentBoundEvent_2_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TrialBoardTab_C_BndEvt__TrialBoardTab_RecentButton_K2Node_ComponentBoundEvent_2_OnMenuTabButtonClicked__DelegateSignature");
static_assert(offsetof(TrialBoardTab_C_BndEvt__TrialBoardTab_RecentButton_K2Node_ComponentBoundEvent_2_OnMenuTabButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TrialBoardTab_C_BndEvt__TrialBoardTab_RecentButton_K2Node_ComponentBoundEvent_2_OnMenuTabButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.BndEvt__TrialBoardTab_BlockedButton_K2Node_ComponentBoundEvent_3_OnMenuTabButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_BndEvt__TrialBoardTab_BlockedButton_K2Node_ComponentBoundEvent_3_OnMenuTabButtonClicked__DelegateSignature final
{
public:
	class URBMenuTabButton*                       Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_BndEvt__TrialBoardTab_BlockedButton_K2Node_ComponentBoundEvent_3_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TrialBoardTab_C_BndEvt__TrialBoardTab_BlockedButton_K2Node_ComponentBoundEvent_3_OnMenuTabButtonClicked__DelegateSignature");
static_assert(sizeof(TrialBoardTab_C_BndEvt__TrialBoardTab_BlockedButton_K2Node_ComponentBoundEvent_3_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TrialBoardTab_C_BndEvt__TrialBoardTab_BlockedButton_K2Node_ComponentBoundEvent_3_OnMenuTabButtonClicked__DelegateSignature");
static_assert(offsetof(TrialBoardTab_C_BndEvt__TrialBoardTab_BlockedButton_K2Node_ComponentBoundEvent_3_OnMenuTabButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TrialBoardTab_C_BndEvt__TrialBoardTab_BlockedButton_K2Node_ComponentBoundEvent_3_OnMenuTabButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.Event_AddEntry
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_Event_AddEntry final
{
public:
	class URBSocialMenuEntry*                     Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_Event_AddEntry) == 0x000008, "Wrong alignment on TrialBoardTab_C_Event_AddEntry");
static_assert(sizeof(TrialBoardTab_C_Event_AddEntry) == 0x000008, "Wrong size on TrialBoardTab_C_Event_AddEntry");
static_assert(offsetof(TrialBoardTab_C_Event_AddEntry, Entry) == 0x000000, "Member 'TrialBoardTab_C_Event_AddEntry::Entry' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.Event_RemoveEntry
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_Event_RemoveEntry final
{
public:
	class URBSocialMenuEntry*                     Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_Event_RemoveEntry) == 0x000008, "Wrong alignment on TrialBoardTab_C_Event_RemoveEntry");
static_assert(sizeof(TrialBoardTab_C_Event_RemoveEntry) == 0x000008, "Wrong size on TrialBoardTab_C_Event_RemoveEntry");
static_assert(offsetof(TrialBoardTab_C_Event_RemoveEntry, Entry) == 0x000000, "Member 'TrialBoardTab_C_Event_RemoveEntry::Entry' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.Event_SetEntryPosition
// 0x0010 (0x0010 - 0x0000)
struct TrialBoardTab_C_Event_SetEntryPosition final
{
public:
	class URBSocialMenuEntry*                     Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Position;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_Event_SetEntryPosition) == 0x000008, "Wrong alignment on TrialBoardTab_C_Event_SetEntryPosition");
static_assert(sizeof(TrialBoardTab_C_Event_SetEntryPosition) == 0x000010, "Wrong size on TrialBoardTab_C_Event_SetEntryPosition");
static_assert(offsetof(TrialBoardTab_C_Event_SetEntryPosition, Entry) == 0x000000, "Member 'TrialBoardTab_C_Event_SetEntryPosition::Entry' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_Event_SetEntryPosition, Position) == 0x000008, "Member 'TrialBoardTab_C_Event_SetEntryPosition::Position' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.BndEvt__TrialBoardTab_PartyButton_K2Node_ComponentBoundEvent_4_OnMenuTabButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_BndEvt__TrialBoardTab_PartyButton_K2Node_ComponentBoundEvent_4_OnMenuTabButtonClicked__DelegateSignature final
{
public:
	class URBMenuTabButton*                       Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_BndEvt__TrialBoardTab_PartyButton_K2Node_ComponentBoundEvent_4_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TrialBoardTab_C_BndEvt__TrialBoardTab_PartyButton_K2Node_ComponentBoundEvent_4_OnMenuTabButtonClicked__DelegateSignature");
static_assert(sizeof(TrialBoardTab_C_BndEvt__TrialBoardTab_PartyButton_K2Node_ComponentBoundEvent_4_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TrialBoardTab_C_BndEvt__TrialBoardTab_PartyButton_K2Node_ComponentBoundEvent_4_OnMenuTabButtonClicked__DelegateSignature");
static_assert(offsetof(TrialBoardTab_C_BndEvt__TrialBoardTab_PartyButton_K2Node_ComponentBoundEvent_4_OnMenuTabButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TrialBoardTab_C_BndEvt__TrialBoardTab_PartyButton_K2Node_ComponentBoundEvent_4_OnMenuTabButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.BndEvt__TrialBoardTab_ProgramPosterCarrousel_K2Node_ComponentBoundEvent_12_OnPosterClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_BndEvt__TrialBoardTab_ProgramPosterCarrousel_K2Node_ComponentBoundEvent_12_OnPosterClicked__DelegateSignature final
{
public:
	class FName                                   ProgramId;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_BndEvt__TrialBoardTab_ProgramPosterCarrousel_K2Node_ComponentBoundEvent_12_OnPosterClicked__DelegateSignature) == 0x000004, "Wrong alignment on TrialBoardTab_C_BndEvt__TrialBoardTab_ProgramPosterCarrousel_K2Node_ComponentBoundEvent_12_OnPosterClicked__DelegateSignature");
static_assert(sizeof(TrialBoardTab_C_BndEvt__TrialBoardTab_ProgramPosterCarrousel_K2Node_ComponentBoundEvent_12_OnPosterClicked__DelegateSignature) == 0x000008, "Wrong size on TrialBoardTab_C_BndEvt__TrialBoardTab_ProgramPosterCarrousel_K2Node_ComponentBoundEvent_12_OnPosterClicked__DelegateSignature");
static_assert(offsetof(TrialBoardTab_C_BndEvt__TrialBoardTab_ProgramPosterCarrousel_K2Node_ComponentBoundEvent_12_OnPosterClicked__DelegateSignature, ProgramId) == 0x000000, "Member 'TrialBoardTab_C_BndEvt__TrialBoardTab_ProgramPosterCarrousel_K2Node_ComponentBoundEvent_12_OnPosterClicked__DelegateSignature::ProgramId' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.BndEvt__TrialBoardTab_FriendsButton_K2Node_ComponentBoundEvent_0_OnMenuTabButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_BndEvt__TrialBoardTab_FriendsButton_K2Node_ComponentBoundEvent_0_OnMenuTabButtonClicked__DelegateSignature final
{
public:
	class URBMenuTabButton*                       Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_BndEvt__TrialBoardTab_FriendsButton_K2Node_ComponentBoundEvent_0_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on TrialBoardTab_C_BndEvt__TrialBoardTab_FriendsButton_K2Node_ComponentBoundEvent_0_OnMenuTabButtonClicked__DelegateSignature");
static_assert(sizeof(TrialBoardTab_C_BndEvt__TrialBoardTab_FriendsButton_K2Node_ComponentBoundEvent_0_OnMenuTabButtonClicked__DelegateSignature) == 0x000008, "Wrong size on TrialBoardTab_C_BndEvt__TrialBoardTab_FriendsButton_K2Node_ComponentBoundEvent_0_OnMenuTabButtonClicked__DelegateSignature");
static_assert(offsetof(TrialBoardTab_C_BndEvt__TrialBoardTab_FriendsButton_K2Node_ComponentBoundEvent_0_OnMenuTabButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'TrialBoardTab_C_BndEvt__TrialBoardTab_FriendsButton_K2Node_ComponentBoundEvent_0_OnMenuTabButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct TrialBoardTab_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_PreConstruct) == 0x000001, "Wrong alignment on TrialBoardTab_C_PreConstruct");
static_assert(sizeof(TrialBoardTab_C_PreConstruct) == 0x000001, "Wrong size on TrialBoardTab_C_PreConstruct");
static_assert(offsetof(TrialBoardTab_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'TrialBoardTab_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.Event_InputSourceChanged
// 0x0001 (0x0001 - 0x0000)
struct TrialBoardTab_C_Event_InputSourceChanged final
{
public:
	bool                                          bIsGamepad;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_Event_InputSourceChanged) == 0x000001, "Wrong alignment on TrialBoardTab_C_Event_InputSourceChanged");
static_assert(sizeof(TrialBoardTab_C_Event_InputSourceChanged) == 0x000001, "Wrong size on TrialBoardTab_C_Event_InputSourceChanged");
static_assert(offsetof(TrialBoardTab_C_Event_InputSourceChanged, bIsGamepad) == 0x000000, "Member 'TrialBoardTab_C_Event_InputSourceChanged::bIsGamepad' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.Event_OnFilterChanged
// 0x0001 (0x0001 - 0x0000)
struct TrialBoardTab_C_Event_OnFilterChanged final
{
public:
	ERBSocialMenuEntryFilter                      Filter;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_Event_OnFilterChanged) == 0x000001, "Wrong alignment on TrialBoardTab_C_Event_OnFilterChanged");
static_assert(sizeof(TrialBoardTab_C_Event_OnFilterChanged) == 0x000001, "Wrong size on TrialBoardTab_C_Event_OnFilterChanged");
static_assert(offsetof(TrialBoardTab_C_Event_OnFilterChanged, Filter) == 0x000000, "Member 'TrialBoardTab_C_Event_OnFilterChanged::Filter' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.Event_RestoreEntryFocus
// 0x0008 (0x0008 - 0x0000)
struct TrialBoardTab_C_Event_RestoreEntryFocus final
{
public:
	class URBSocialMenuEntry*                     Entry;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrialBoardTab_C_Event_RestoreEntryFocus) == 0x000008, "Wrong alignment on TrialBoardTab_C_Event_RestoreEntryFocus");
static_assert(sizeof(TrialBoardTab_C_Event_RestoreEntryFocus) == 0x000008, "Wrong size on TrialBoardTab_C_Event_RestoreEntryFocus");
static_assert(offsetof(TrialBoardTab_C_Event_RestoreEntryFocus, Entry) == 0x000000, "Member 'TrialBoardTab_C_Event_RestoreEntryFocus::Entry' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ExecuteUbergraph_TrialBoardTab
// 0x0178 (0x0178 - 0x0000)
struct TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3616[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBSocialMenuEntry*                     K2Node_Event_entry;                                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanFocusEntry_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3617[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3618[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuTabButton*                       K2Node_ComponentBoundEvent_Button_4;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBMenuTabButton*                       K2Node_ComponentBoundEvent_Button_3;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBMenuTabButton*                       K2Node_ComponentBoundEvent_Button_2;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSocialMenuEntry*                     K2Node_Event_entry_3;                              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSocialMenuEntry*                     K2Node_Event_entry_2;                              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBSocialMenuEntry*                     K2Node_Event_entry_1;                              // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_position;                             // 0x0060(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3619[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361A[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361B[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361C[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuTabButton*                       K2Node_ComponentBoundEvent_Button_1;               // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterSheet_C*                      K2Node_DynamicCast_AsCharacter_Sheet;              // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCancelMatch_ReturnValue;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361D[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_ProgramId;              // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361E[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuTabButton*                       K2Node_ComponentBoundEvent_Button;                 // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361F[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBMenuWithTabsWidget*                  CallFunc_GetMenuWithTabsParent_ReturnValue_1;      // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterSheet_C*                      K2Node_DynamicCast_AsCharacter_Sheet_1;            // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsGamepad;                           // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3620[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URBSocialMenuManager*                   CallFunc_GetSocialMenuManager_ReturnValue;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasContextualMenuOpen_ReturnValue;        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3621[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0114(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3622[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0140(0x0018)()
	class FName                                   CallFunc_GetProgramId_ReturnValue;                 // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3623[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor)
	ERBSocialMenuEntryFilter                      K2Node_Event_filter;                               // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSoloMode_ReturnValue;                   // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab) == 0x000008, "Wrong alignment on TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab");
static_assert(sizeof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab) == 0x000178, "Wrong size on TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, EntryPoint) == 0x000000, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::EntryPoint' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_Event_entry) == 0x000008, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_Event_entry' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_CanFocusEntry_ReturnValue) == 0x000010, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_CanFocusEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, Temp_bool_Variable) == 0x000011, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, Temp_struct_Variable) == 0x000014, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, Temp_struct_Variable_1) == 0x00001C, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_ComponentBoundEvent_Button_4) == 0x000028, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_ComponentBoundEvent_Button_3) == 0x000030, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_ComponentBoundEvent_Button_2) == 0x000038, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_Event_entry_3) == 0x000040, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_Event_entry_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_AddChildToCanvas_ReturnValue) == 0x000048, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_Event_entry_2) == 0x000050, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_Event_entry_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_Event_entry_1) == 0x000058, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_Event_entry_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_Event_position) == 0x000060, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_Event_position' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000068, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_BreakVector2D_X) == 0x00006C, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_MakeStruct_Margin) == 0x000074, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_GetObjectClass_ReturnValue) == 0x000088, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_GetChildIndex_ReturnValue) == 0x000090, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000094, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_GetChildAt_ReturnValue) == 0x000098, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000A0, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_Select_Default) == 0x0000A8, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_RemoveChild_ReturnValue) == 0x0000B0, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_ComponentBoundEvent_Button_1) == 0x0000B8, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_GetMenuWithTabsParent_ReturnValue) == 0x0000C0, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_GetMenuWithTabsParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_DynamicCast_AsCharacter_Sheet) == 0x0000C8, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_DynamicCast_AsCharacter_Sheet' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_CanCancelMatch_ReturnValue) == 0x0000D1, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_CanCancelMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_ComponentBoundEvent_ProgramId) == 0x0000D4, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_ComponentBoundEvent_ProgramId' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_ComponentBoundEvent_Button) == 0x0000E0, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_Event_IsDesignTime) == 0x0000E8, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_GetMenuWithTabsParent_ReturnValue_1) == 0x0000F0, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_GetMenuWithTabsParent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_DynamicCast_AsCharacter_Sheet_1) == 0x0000F8, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_DynamicCast_AsCharacter_Sheet_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_Event_bIsGamepad) == 0x000101, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_Event_bIsGamepad' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_GetSocialMenuManager_ReturnValue) == 0x000108, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_GetSocialMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_HasContextualMenuOpen_ReturnValue) == 0x000110, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_HasContextualMenuOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_CreateDelegate_OutputDelegate) == 0x000114, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_CreateDelegate_OutputDelegate_1) == 0x000124, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_MakeLiteralName_ReturnValue) == 0x000134, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_MakeLiteralText_ReturnValue) == 0x000140, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_GetProgramId_ReturnValue) == 0x000158, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_GetProgramId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000160, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_CreateDelegate_OutputDelegate_2) == 0x000164, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, K2Node_Event_filter) == 0x000174, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::K2Node_Event_filter' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab, CallFunc_IsSoloMode_ReturnValue) == 0x000175, "Member 'TrialBoardTab_C_ExecuteUbergraph_TrialBoardTab::CallFunc_IsSoloMode_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetPageSubtitle
// 0x0168 (0x0168 - 0x0000)
struct TrialBoardTab_C_GetPageSubtitle final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class URBGameStructureConfig*                 CallFunc_GetGameStructureConfig_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBProgramInfoRow                      CallFunc_GetProgramInfo_ReturnValue;               // 0x0020(0x0148)(ConstParm)
};
static_assert(alignof(TrialBoardTab_C_GetPageSubtitle) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetPageSubtitle");
static_assert(sizeof(TrialBoardTab_C_GetPageSubtitle) == 0x000168, "Wrong size on TrialBoardTab_C_GetPageSubtitle");
static_assert(offsetof(TrialBoardTab_C_GetPageSubtitle, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_GetPageSubtitle::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSubtitle, CallFunc_GetGameStructureConfig_ReturnValue) == 0x000018, "Member 'TrialBoardTab_C_GetPageSubtitle::CallFunc_GetGameStructureConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_GetPageSubtitle, CallFunc_GetProgramInfo_ReturnValue) == 0x000020, "Member 'TrialBoardTab_C_GetPageSubtitle::CallFunc_GetProgramInfo_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShouldShowNavigation
// 0x0006 (0x0006 - 0x0000)
struct TrialBoardTab_C_ShouldShowNavigation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ShouldShowNavigation) == 0x000001, "Wrong alignment on TrialBoardTab_C_ShouldShowNavigation");
static_assert(sizeof(TrialBoardTab_C_ShouldShowNavigation) == 0x000006, "Wrong size on TrialBoardTab_C_ShouldShowNavigation");
static_assert(offsetof(TrialBoardTab_C_ShouldShowNavigation, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_ShouldShowNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShouldShowNavigation, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'TrialBoardTab_C_ShouldShowNavigation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShouldShowNavigation, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'TrialBoardTab_C_ShouldShowNavigation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShouldShowNavigation, CallFunc_BooleanOR_ReturnValue_2) == 0x000003, "Member 'TrialBoardTab_C_ShouldShowNavigation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShouldShowNavigation, CallFunc_BooleanOR_ReturnValue_3) == 0x000004, "Member 'TrialBoardTab_C_ShouldShowNavigation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShouldShowNavigation, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'TrialBoardTab_C_ShouldShowNavigation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.ShouldShowPageTitle
// 0x0002 (0x0002 - 0x0000)
struct TrialBoardTab_C_ShouldShowPageTitle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TrialBoardTab_C_ShouldShowPageTitle) == 0x000001, "Wrong alignment on TrialBoardTab_C_ShouldShowPageTitle");
static_assert(sizeof(TrialBoardTab_C_ShouldShowPageTitle) == 0x000002, "Wrong size on TrialBoardTab_C_ShouldShowPageTitle");
static_assert(offsetof(TrialBoardTab_C_ShouldShowPageTitle, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_ShouldShowPageTitle::ReturnValue' has a wrong offset!");
static_assert(offsetof(TrialBoardTab_C_ShouldShowPageTitle, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'TrialBoardTab_C_ShouldShowPageTitle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TrialBoardTab.TrialBoardTab_C.GetPageTitle
// 0x0018 (0x0018 - 0x0000)
struct TrialBoardTab_C_GetPageTitle final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(TrialBoardTab_C_GetPageTitle) == 0x000008, "Wrong alignment on TrialBoardTab_C_GetPageTitle");
static_assert(sizeof(TrialBoardTab_C_GetPageTitle) == 0x000018, "Wrong size on TrialBoardTab_C_GetPageTitle");
static_assert(offsetof(TrialBoardTab_C_GetPageTitle, ReturnValue) == 0x000000, "Member 'TrialBoardTab_C_GetPageTitle::ReturnValue' has a wrong offset!");

}

