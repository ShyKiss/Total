#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WaitingForPlayersCountdownWidget

#include "Basic.hpp"

#include "WaitingForPlayersCountdownWidget_classes.hpp"
#include "WaitingForPlayersCountdownWidget_parameters.hpp"


namespace SDK
{

// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.ExecuteUbergraph_WaitingForPlayersCountdownWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWaitingForPlayersCountdownWidget_C::ExecuteUbergraph_WaitingForPlayersCountdownWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "ExecuteUbergraph_WaitingForPlayersCountdownWidget");

	Params::WaitingForPlayersCountdownWidget_C_ExecuteUbergraph_WaitingForPlayersCountdownWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.OnDrugSequenceCompleted
// (BlueprintCallable, BlueprintEvent)

void UWaitingForPlayersCountdownWidget_C::OnDrugSequenceCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "OnDrugSequenceCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWaitingForPlayersCountdownWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWaitingForPlayersCountdownWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "Tick");

	Params::WaitingForPlayersCountdownWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWaitingForPlayersCountdownWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "PreConstruct");

	Params::WaitingForPlayersCountdownWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWaitingForPlayersCountdownWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.OnGamePhaseUpdatedEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGamePhase                              GamePhase                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWaitingForPlayersCountdownWidget_C::OnGamePhaseUpdatedEvent(EGamePhase GamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "OnGamePhaseUpdatedEvent");

	Params::WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdatedEvent Parms{};

	Parms.GamePhase = GamePhase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.StartCountdown
// (Public, BlueprintCallable, BlueprintEvent)

void UWaitingForPlayersCountdownWidget_C::StartCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "StartCountdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.HideCountdown
// (Public, BlueprintCallable, BlueprintEvent)

void UWaitingForPlayersCountdownWidget_C::HideCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "HideCountdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.OnGamePhaseUpdated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGamePhase                              GamePhase                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDrugSequenceCompleted                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWaitingForPlayersCountdownWidget_C::OnGamePhaseUpdated(EGamePhase GamePhase, bool bDrugSequenceCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "OnGamePhaseUpdated");

	Params::WaitingForPlayersCountdownWidget_C_OnGamePhaseUpdated Parms{};

	Parms.GamePhase = GamePhase;
	Parms.bDrugSequenceCompleted = bDrugSequenceCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.UpdateGameInstallText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWaitingForPlayersCountdownWidget_C::UpdateGameInstallText(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "UpdateGameInstallText");

	Params::WaitingForPlayersCountdownWidget_C_UpdateGameInstallText Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.ShouldShowWaitingForInstall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ShouldShow_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DownloadPercent                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWaitingForPlayersCountdownWidget_C::ShouldShowWaitingForInstall(bool* ShouldShow_0, float* DownloadPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "ShouldShowWaitingForInstall");

	Params::WaitingForPlayersCountdownWidget_C_ShouldShowWaitingForInstall Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldShow_0 != nullptr)
		*ShouldShow_0 = Parms.ShouldShow_0;

	if (DownloadPercent != nullptr)
		*DownloadPercent = Parms.DownloadPercent;
}


// Function WaitingForPlayersCountdownWidget.WaitingForPlayersCountdownWidget_C.ShouldShow
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWaitingForPlayersCountdownWidget_C::ShouldShow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingForPlayersCountdownWidget_C", "ShouldShow");

	Params::WaitingForPlayersCountdownWidget_C_ShouldShow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

