#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlSchemeEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ControlSchemeEntry.ControlSchemeEntry_C.ExecuteUbergraph_ControlSchemeEntry
// 0x0078 (0x0078 - 0x0000)
struct ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_newValue;                             // 0x0008(0x0018)(ConstParm)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0020(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry) == 0x000008, "Wrong alignment on ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry");
static_assert(sizeof(ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry) == 0x000078, "Wrong size on ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry");
static_assert(offsetof(ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry, EntryPoint) == 0x000000, "Member 'ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry, K2Node_Event_newValue) == 0x000008, "Member 'ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry::K2Node_Event_newValue' has a wrong offset!");
static_assert(offsetof(ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry, K2Node_MakeStruct_SlateFontInfo) == 0x000020, "Member 'ControlSchemeEntry_C_ExecuteUbergraph_ControlSchemeEntry::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function ControlSchemeEntry.ControlSchemeEntry_C.Event_UpdateTextValue
// 0x0018 (0x0018 - 0x0000)
struct ControlSchemeEntry_C_Event_UpdateTextValue final
{
public:
	class FText                                   NewValue;                                          // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ControlSchemeEntry_C_Event_UpdateTextValue) == 0x000008, "Wrong alignment on ControlSchemeEntry_C_Event_UpdateTextValue");
static_assert(sizeof(ControlSchemeEntry_C_Event_UpdateTextValue) == 0x000018, "Wrong size on ControlSchemeEntry_C_Event_UpdateTextValue");
static_assert(offsetof(ControlSchemeEntry_C_Event_UpdateTextValue, NewValue) == 0x000000, "Member 'ControlSchemeEntry_C_Event_UpdateTextValue::NewValue' has a wrong offset!");

// Function ControlSchemeEntry.ControlSchemeEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ControlSchemeEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ControlSchemeEntry_C_PreConstruct) == 0x000001, "Wrong alignment on ControlSchemeEntry_C_PreConstruct");
static_assert(sizeof(ControlSchemeEntry_C_PreConstruct) == 0x000001, "Wrong size on ControlSchemeEntry_C_PreConstruct");
static_assert(offsetof(ControlSchemeEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ControlSchemeEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ControlSchemeEntry.ControlSchemeEntry_C.RefreshCounter
// 0x0004 (0x0004 - 0x0000)
struct ControlSchemeEntry_C_RefreshCounter final
{
public:
	int32                                         CallFunc_GetCurrentIndexOfOption_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlSchemeEntry_C_RefreshCounter) == 0x000004, "Wrong alignment on ControlSchemeEntry_C_RefreshCounter");
static_assert(sizeof(ControlSchemeEntry_C_RefreshCounter) == 0x000004, "Wrong size on ControlSchemeEntry_C_RefreshCounter");
static_assert(offsetof(ControlSchemeEntry_C_RefreshCounter, CallFunc_GetCurrentIndexOfOption_ReturnValue) == 0x000000, "Member 'ControlSchemeEntry_C_RefreshCounter::CallFunc_GetCurrentIndexOfOption_ReturnValue' has a wrong offset!");

// Function ControlSchemeEntry.ControlSchemeEntry_C.SetupCounter
// 0x0004 (0x0004 - 0x0000)
struct ControlSchemeEntry_C_SetupCounter final
{
public:
	int32                                         CallFunc_GetMaxCountForOption_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlSchemeEntry_C_SetupCounter) == 0x000004, "Wrong alignment on ControlSchemeEntry_C_SetupCounter");
static_assert(sizeof(ControlSchemeEntry_C_SetupCounter) == 0x000004, "Wrong size on ControlSchemeEntry_C_SetupCounter");
static_assert(offsetof(ControlSchemeEntry_C_SetupCounter, CallFunc_GetMaxCountForOption_ReturnValue) == 0x000000, "Member 'ControlSchemeEntry_C_SetupCounter::CallFunc_GetMaxCountForOption_ReturnValue' has a wrong offset!");

// Function ControlSchemeEntry.ControlSchemeEntry_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct ControlSchemeEntry_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
};
static_assert(alignof(ControlSchemeEntry_C_OnFocusReceived) == 0x000008, "Wrong alignment on ControlSchemeEntry_C_OnFocusReceived");
static_assert(sizeof(ControlSchemeEntry_C_OnFocusReceived) == 0x0001B0, "Wrong size on ControlSchemeEntry_C_OnFocusReceived");
static_assert(offsetof(ControlSchemeEntry_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'ControlSchemeEntry_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(ControlSchemeEntry_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'ControlSchemeEntry_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(ControlSchemeEntry_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'ControlSchemeEntry_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(ControlSchemeEntry_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'ControlSchemeEntry_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function ControlSchemeEntry.ControlSchemeEntry_C.GetArrowBtn
// 0x0020 (0x0020 - 0x0000)
struct ControlSchemeEntry_C_GetArrowBtn final
{
public:
	bool                                          Left;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowButton_C*                         ArrowButton;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowButton_C*                         K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ControlSchemeEntry_C_GetArrowBtn) == 0x000008, "Wrong alignment on ControlSchemeEntry_C_GetArrowBtn");
static_assert(sizeof(ControlSchemeEntry_C_GetArrowBtn) == 0x000020, "Wrong size on ControlSchemeEntry_C_GetArrowBtn");
static_assert(offsetof(ControlSchemeEntry_C_GetArrowBtn, Left) == 0x000000, "Member 'ControlSchemeEntry_C_GetArrowBtn::Left' has a wrong offset!");
static_assert(offsetof(ControlSchemeEntry_C_GetArrowBtn, ArrowButton) == 0x000008, "Member 'ControlSchemeEntry_C_GetArrowBtn::ArrowButton' has a wrong offset!");
static_assert(offsetof(ControlSchemeEntry_C_GetArrowBtn, Temp_bool_Variable) == 0x000010, "Member 'ControlSchemeEntry_C_GetArrowBtn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ControlSchemeEntry_C_GetArrowBtn, K2Node_Select_Default) == 0x000018, "Member 'ControlSchemeEntry_C_GetArrowBtn::K2Node_Select_Default' has a wrong offset!");

}

