#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LobbySASCollision

#include "Basic.hpp"


namespace SDK::Params
{

// Function LobbySASCollision.LobbySASCollision_C.RespawnPlayerIfNeeded
// 0x0038 (0x0038 - 0x0000)
struct LobbySASCollision_C_RespawnPlayerIfNeeded final
{
public:
	const class ARBPlayer*                        RBPlayer;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBController*                          K2Node_DynamicCast_AsRB_Controller;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260B[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameModeLobby*                       CallFunc_GetRBGameModeLobby_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RespawnPlayer_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbySASCollision_C_RespawnPlayerIfNeeded) == 0x000008, "Wrong alignment on LobbySASCollision_C_RespawnPlayerIfNeeded");
static_assert(sizeof(LobbySASCollision_C_RespawnPlayerIfNeeded) == 0x000038, "Wrong size on LobbySASCollision_C_RespawnPlayerIfNeeded");
static_assert(offsetof(LobbySASCollision_C_RespawnPlayerIfNeeded, RBPlayer) == 0x000000, "Member 'LobbySASCollision_C_RespawnPlayerIfNeeded::RBPlayer' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_RespawnPlayerIfNeeded, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'LobbySASCollision_C_RespawnPlayerIfNeeded::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_RespawnPlayerIfNeeded, CallFunc_IsOverlappingActor_ReturnValue) == 0x000010, "Member 'LobbySASCollision_C_RespawnPlayerIfNeeded::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_RespawnPlayerIfNeeded, K2Node_DynamicCast_AsRB_Controller) == 0x000018, "Member 'LobbySASCollision_C_RespawnPlayerIfNeeded::K2Node_DynamicCast_AsRB_Controller' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_RespawnPlayerIfNeeded, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LobbySASCollision_C_RespawnPlayerIfNeeded::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_RespawnPlayerIfNeeded, CallFunc_IsDedicatedServer_ReturnValue) == 0x000021, "Member 'LobbySASCollision_C_RespawnPlayerIfNeeded::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_RespawnPlayerIfNeeded, CallFunc_GetRBGameModeLobby_ReturnValue) == 0x000028, "Member 'LobbySASCollision_C_RespawnPlayerIfNeeded::CallFunc_GetRBGameModeLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_RespawnPlayerIfNeeded, CallFunc_RespawnPlayer_ReturnValue) == 0x000030, "Member 'LobbySASCollision_C_RespawnPlayerIfNeeded::CallFunc_RespawnPlayer_ReturnValue' has a wrong offset!");

// Function LobbySASCollision.LobbySASCollision_C.SetIgnoreActor
// 0x0010 (0x0010 - 0x0000)
struct LobbySASCollision_C_SetIgnoreActor final
{
public:
	class ARBPlayer*                              Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ignore;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbySASCollision_C_SetIgnoreActor) == 0x000008, "Wrong alignment on LobbySASCollision_C_SetIgnoreActor");
static_assert(sizeof(LobbySASCollision_C_SetIgnoreActor) == 0x000010, "Wrong size on LobbySASCollision_C_SetIgnoreActor");
static_assert(offsetof(LobbySASCollision_C_SetIgnoreActor, Actor) == 0x000000, "Member 'LobbySASCollision_C_SetIgnoreActor::Actor' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_SetIgnoreActor, Ignore) == 0x000008, "Member 'LobbySASCollision_C_SetIgnoreActor::Ignore' has a wrong offset!");

// Function LobbySASCollision.LobbySASCollision_C.UpdateAllowedPlayers
// 0x0100 (0x0100 - 0x0000)
struct LobbySASCollision_C_UpdateAllowedPlayers final
{
public:
	TArray<class ARBPlayer*>                      Tmp;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ARBPlayer*>                      PlayerThatShouldBeAllowed;                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ARBPlayer*                        Temp_object_Variable;                              // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260C[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_260D[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLobbyPlayerState*                    CallFunc_GetPlayerReleasePlayerState_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_260E[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260F[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2610[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ARBPlayer*                              CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2611[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2612[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARBPlayerState*>                 CallFunc_GetAllPlayerStates_ReturnValue;           // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2613[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayerState*                         CallFunc_Array_Get_Item_3;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2614[0x5];                                     // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBLobbyPlayerState*                    K2Node_DynamicCast_AsRB_Lobby_Player_State;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReadyToTravelToMatch_ReturnValue;       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2615[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2616[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbySASCollision_C_UpdateAllowedPlayers) == 0x000008, "Wrong alignment on LobbySASCollision_C_UpdateAllowedPlayers");
static_assert(sizeof(LobbySASCollision_C_UpdateAllowedPlayers) == 0x000100, "Wrong size on LobbySASCollision_C_UpdateAllowedPlayers");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Tmp) == 0x000000, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Tmp' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, PlayerThatShouldBeAllowed) == 0x000010, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::PlayerThatShouldBeAllowed' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Temp_int_Array_Index_Variable) == 0x000020, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Temp_object_Variable) == 0x000028, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Temp_int_Array_Index_Variable_3) == 0x00004C, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x000058, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, Temp_int_Loop_Counter_Variable_3) == 0x000060, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_GetPlayerReleasePlayerState_ReturnValue) == 0x000068, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_GetPlayerReleasePlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Add_IntInt_ReturnValue_3) == 0x000070, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Get_Item) == 0x000078, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Contains_ReturnValue) == 0x00008C, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_IsValid_ReturnValue_1) == 0x00009C, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009D, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_RemoveItem_ReturnValue) == 0x00009E, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00009F, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_IsValid_ReturnValue_2) == 0x0000AC, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000AD, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Contains_ReturnValue_1) == 0x0000B4, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_GetAllPlayerStates_ReturnValue) == 0x0000B8, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_GetAllPlayerStates_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Length_ReturnValue_3) == 0x0000C8, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Get_Item_3) == 0x0000D0, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000D8, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D9, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_BooleanAND_ReturnValue) == 0x0000DA, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, K2Node_DynamicCast_AsRB_Lobby_Player_State) == 0x0000E0, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::K2Node_DynamicCast_AsRB_Lobby_Player_State' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_IsReadyToTravelToMatch_ReturnValue) == 0x0000E9, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_IsReadyToTravelToMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, K2Node_DynamicCast_AsRB_Player) == 0x0000F0, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_UpdateAllowedPlayers, CallFunc_Array_Add_ReturnValue_2) == 0x0000FC, "Member 'LobbySASCollision_C_UpdateAllowedPlayers::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function LobbySASCollision.LobbySASCollision_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct LobbySASCollision_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbySASCollision_C_ReceiveTick) == 0x000004, "Wrong alignment on LobbySASCollision_C_ReceiveTick");
static_assert(sizeof(LobbySASCollision_C_ReceiveTick) == 0x000004, "Wrong size on LobbySASCollision_C_ReceiveTick");
static_assert(offsetof(LobbySASCollision_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'LobbySASCollision_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function LobbySASCollision.LobbySASCollision_C.ExecuteUbergraph_LobbySASCollision
// 0x0008 (0x0008 - 0x0000)
struct LobbySASCollision_C_ExecuteUbergraph_LobbySASCollision final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbySASCollision_C_ExecuteUbergraph_LobbySASCollision) == 0x000004, "Wrong alignment on LobbySASCollision_C_ExecuteUbergraph_LobbySASCollision");
static_assert(sizeof(LobbySASCollision_C_ExecuteUbergraph_LobbySASCollision) == 0x000008, "Wrong size on LobbySASCollision_C_ExecuteUbergraph_LobbySASCollision");
static_assert(offsetof(LobbySASCollision_C_ExecuteUbergraph_LobbySASCollision, EntryPoint) == 0x000000, "Member 'LobbySASCollision_C_ExecuteUbergraph_LobbySASCollision::EntryPoint' has a wrong offset!");
static_assert(offsetof(LobbySASCollision_C_ExecuteUbergraph_LobbySASCollision, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'LobbySASCollision_C_ExecuteUbergraph_LobbySASCollision::K2Node_Event_DeltaSeconds' has a wrong offset!");

}

