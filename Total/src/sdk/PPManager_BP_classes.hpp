#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PPManager_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PPManager_BP.PPManager_BP_C
// 0x0180 (0x03B0 - 0x0230)
class APPManager_BP_C final : public ARBPostProcessUpdateManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FX_Hit_TL_NewTrack_0_B57CAFE54A8B999E18CC5DA1AAB74DB1; // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FX_Hit_TL__Direction_B57CAFE54A8B999E18CC5DA1AAB74DB1; // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FX_Hit_TL;                                         // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FX_WakeUp_TL_NewTrack_0_2212E6434646E7D0E5FB40A24C17E1E2; // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FX_WakeUp_TL__Direction_2212E6434646E7D0E5FB40A24C17E1E2; // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FX_WakeUp_TL;                                      // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_inFocus_NewTrack_0_ACB905814E0B0B7B864472BC02D3CA55; // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_inFocus_Blend_ACB905814E0B0B7B864472BC02D3CA55; // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_inFocus__Direction_ACB905814E0B0B7B864472BC02D3CA55; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_inFocus;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvExit_TL_UV_C77ACCC546F2A7F1CE0A3DAFBDE18CEE;     // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvExit_TL_FocalDistance_C77ACCC546F2A7F1CE0A3DAFBDE18CEE; // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvExit_TL_Black_C77ACCC546F2A7F1CE0A3DAFBDE18CEE;  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvExit_TL_Blur_C77ACCC546F2A7F1CE0A3DAFBDE18CEE;   // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvExit_TL_DoubleVision_C77ACCC546F2A7F1CE0A3DAFBDE18CEE; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            NvExit_TL__Direction_C77ACCC546F2A7F1CE0A3DAFBDE18CEE; // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     NvExit_TL;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvEnter_TL_White_D0C479F54AFB3F9F5915F18D719266F7; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvEnter_TL_NV_Flash_D0C479F54AFB3F9F5915F18D719266F7; // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvEnter_TL_FocalDistance_D0C479F54AFB3F9F5915F18D719266F7; // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvEnter_TL_Exposition_D0C479F54AFB3F9F5915F18D719266F7; // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvEnter_TL_Blur_D0C479F54AFB3F9F5915F18D719266F7;  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvEnter_TL_DoubleVision_D0C479F54AFB3F9F5915F18D719266F7; // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            NvEnter_TL__Direction_D0C479F54AFB3F9F5915F18D719266F7; // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     NvEnter_TL;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Density_754EF43147DE172C96E7C49DB7B7D5B6; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_754EF43147DE172C96E7C49DB7B7D5B6; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Spook01_Blend_E7E483AF40D2178EA14504A6D0309303; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Spook01__Direction_E7E483AF40D2178EA14504A6D0309303; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Spook01;                                        // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_WhiteFadeOut_Blend_5A85C2A143557A30588EA087FA49DDA1; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_WhiteFadeOut__Direction_5A85C2A143557A30588EA087FA49DDA1; // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_WhiteFadeOut;                                   // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_WhiteFadeIn_Blend_2CF0231D4859F6655484A8AD69175B7F; // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_WhiteFadeIn__Direction_2CF0231D4859F6655484A8AD69175B7F; // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_WhiteFadeIn;                                    // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                CA;                                                // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          FX_FlashWhite_On;                                  // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FX_FadeWhite_On;                                   // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FX_PsySpook_On;                                    // 0x031A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FX_GetGased_On;                                    // 0x031B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FX_nv_On;                                          // 0x031C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     FX_PsySpook_Mat;                                   // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FWeightedBlendable                     FX_GetGas_Mat;                                     // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FWeightedBlendable                     FX_Double_Vision_Mat;                              // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         FX_FadeWhiteExpComp;                               // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeightedBlendable>             Material;                                          // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         PsySpookFOVScale;                                  // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PsySpookFarBlurSize;                               // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PsyFocalDistance;                                  // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvFlashExpComp;                                    // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvFlashDistance;                                   // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvFlashFOVScale;                                   // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NvFlashNearBlurSize;                               // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FX_InFocus_On;                                     // 0x0384(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InFocusNearBlurSize;                               // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFocusFOVScale;                                   // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFocusFocalDistance;                              // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFocusFarBlurSize;                                // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFocusFocalRegion;                                // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMansionIntroOn;                                   // 0x039C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FarTransitionRegion;                               // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFX_Hit;                                           // 0x03A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitExpComp;                                        // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PPManager_BP(int32 EntryPoint);
	void FX_SetMansionDOFDisabled();
	void FX_Hit(float MaxExp);
	void FX_PlayMansionDOFEaseOut();
	void FX_SetMansionDOFEnabled();
	void FX_InFocus(float Delay, float blendTime, float MinFocalDistance, float MaxFocalDistance, float MinFOVScale, float MaxFOVScale, float NearBlurSize, float FarBlurSize, float MinFocalRegion, float MaxFocalRegion);
	void OnEnterNightVision();
	void OnExitNightVision();
	void FX_WhiteFlash(float MaxExp, float TimeFadeIn, float TimeFadeOut, float DelayTimeOut);
	void ReceiveTick(float DeltaSeconds);
	void FX_GetGas();
	void FX_PsySpook(float SpookTime, class UObject* PP_Material);
	void FX_FadeWhiteIn(float MinExp, float MaxExp, float TimeFadeIn);
	void FX_FadeWhiteOut(float MinExp, float MaxExp, float TimeFadeOut);
	void FX_Hit_TL__UpdateFunc();
	void FX_Hit_TL__FinishedFunc();
	void FX_WakeUp_TL__UpdateFunc();
	void FX_WakeUp_TL__FinishedFunc();
	void TL_inFocus__UpdateFunc();
	void TL_inFocus__FinishedFunc();
	void NvExit_TL__UpdateFunc();
	void NvExit_TL__FinishedFunc();
	void NvEnter_TL__UpdateFunc();
	void NvEnter_TL__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void TL_Spook01__UpdateFunc();
	void TL_Spook01__FinishedFunc();
	void TL_WhiteFadeOut__UpdateFunc();
	void TL_WhiteFadeOut__FinishedFunc();
	void TL_WhiteFadeIn__UpdateFunc();
	void TL_WhiteFadeIn__FinishedFunc();
	void OverridePP(struct FPostProcessSettings& PP);
	void Remove_PP_Override();
	void Debug();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PPManager_BP_C">();
	}
	static class APPManager_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APPManager_BP_C>();
	}
};
static_assert(alignof(APPManager_BP_C) == 0x000008, "Wrong alignment on APPManager_BP_C");
static_assert(sizeof(APPManager_BP_C) == 0x0003B0, "Wrong size on APPManager_BP_C");
static_assert(offsetof(APPManager_BP_C, UberGraphFrame) == 0x000230, "Member 'APPManager_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, Billboard) == 0x000238, "Member 'APPManager_BP_C::Billboard' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, DefaultSceneRoot) == 0x000240, "Member 'APPManager_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_Hit_TL_NewTrack_0_B57CAFE54A8B999E18CC5DA1AAB74DB1) == 0x000248, "Member 'APPManager_BP_C::FX_Hit_TL_NewTrack_0_B57CAFE54A8B999E18CC5DA1AAB74DB1' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_Hit_TL__Direction_B57CAFE54A8B999E18CC5DA1AAB74DB1) == 0x00024C, "Member 'APPManager_BP_C::FX_Hit_TL__Direction_B57CAFE54A8B999E18CC5DA1AAB74DB1' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_Hit_TL) == 0x000250, "Member 'APPManager_BP_C::FX_Hit_TL' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_WakeUp_TL_NewTrack_0_2212E6434646E7D0E5FB40A24C17E1E2) == 0x000258, "Member 'APPManager_BP_C::FX_WakeUp_TL_NewTrack_0_2212E6434646E7D0E5FB40A24C17E1E2' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_WakeUp_TL__Direction_2212E6434646E7D0E5FB40A24C17E1E2) == 0x00025C, "Member 'APPManager_BP_C::FX_WakeUp_TL__Direction_2212E6434646E7D0E5FB40A24C17E1E2' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_WakeUp_TL) == 0x000260, "Member 'APPManager_BP_C::FX_WakeUp_TL' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_inFocus_NewTrack_0_ACB905814E0B0B7B864472BC02D3CA55) == 0x000268, "Member 'APPManager_BP_C::TL_inFocus_NewTrack_0_ACB905814E0B0B7B864472BC02D3CA55' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_inFocus_Blend_ACB905814E0B0B7B864472BC02D3CA55) == 0x00026C, "Member 'APPManager_BP_C::TL_inFocus_Blend_ACB905814E0B0B7B864472BC02D3CA55' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_inFocus__Direction_ACB905814E0B0B7B864472BC02D3CA55) == 0x000270, "Member 'APPManager_BP_C::TL_inFocus__Direction_ACB905814E0B0B7B864472BC02D3CA55' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_inFocus) == 0x000278, "Member 'APPManager_BP_C::TL_inFocus' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvExit_TL_UV_C77ACCC546F2A7F1CE0A3DAFBDE18CEE) == 0x000280, "Member 'APPManager_BP_C::NvExit_TL_UV_C77ACCC546F2A7F1CE0A3DAFBDE18CEE' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvExit_TL_FocalDistance_C77ACCC546F2A7F1CE0A3DAFBDE18CEE) == 0x000284, "Member 'APPManager_BP_C::NvExit_TL_FocalDistance_C77ACCC546F2A7F1CE0A3DAFBDE18CEE' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvExit_TL_Black_C77ACCC546F2A7F1CE0A3DAFBDE18CEE) == 0x000288, "Member 'APPManager_BP_C::NvExit_TL_Black_C77ACCC546F2A7F1CE0A3DAFBDE18CEE' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvExit_TL_Blur_C77ACCC546F2A7F1CE0A3DAFBDE18CEE) == 0x00028C, "Member 'APPManager_BP_C::NvExit_TL_Blur_C77ACCC546F2A7F1CE0A3DAFBDE18CEE' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvExit_TL_DoubleVision_C77ACCC546F2A7F1CE0A3DAFBDE18CEE) == 0x000290, "Member 'APPManager_BP_C::NvExit_TL_DoubleVision_C77ACCC546F2A7F1CE0A3DAFBDE18CEE' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvExit_TL__Direction_C77ACCC546F2A7F1CE0A3DAFBDE18CEE) == 0x000294, "Member 'APPManager_BP_C::NvExit_TL__Direction_C77ACCC546F2A7F1CE0A3DAFBDE18CEE' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvExit_TL) == 0x000298, "Member 'APPManager_BP_C::NvExit_TL' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvEnter_TL_White_D0C479F54AFB3F9F5915F18D719266F7) == 0x0002A0, "Member 'APPManager_BP_C::NvEnter_TL_White_D0C479F54AFB3F9F5915F18D719266F7' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvEnter_TL_NV_Flash_D0C479F54AFB3F9F5915F18D719266F7) == 0x0002A4, "Member 'APPManager_BP_C::NvEnter_TL_NV_Flash_D0C479F54AFB3F9F5915F18D719266F7' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvEnter_TL_FocalDistance_D0C479F54AFB3F9F5915F18D719266F7) == 0x0002A8, "Member 'APPManager_BP_C::NvEnter_TL_FocalDistance_D0C479F54AFB3F9F5915F18D719266F7' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvEnter_TL_Exposition_D0C479F54AFB3F9F5915F18D719266F7) == 0x0002AC, "Member 'APPManager_BP_C::NvEnter_TL_Exposition_D0C479F54AFB3F9F5915F18D719266F7' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvEnter_TL_Blur_D0C479F54AFB3F9F5915F18D719266F7) == 0x0002B0, "Member 'APPManager_BP_C::NvEnter_TL_Blur_D0C479F54AFB3F9F5915F18D719266F7' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvEnter_TL_DoubleVision_D0C479F54AFB3F9F5915F18D719266F7) == 0x0002B4, "Member 'APPManager_BP_C::NvEnter_TL_DoubleVision_D0C479F54AFB3F9F5915F18D719266F7' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvEnter_TL__Direction_D0C479F54AFB3F9F5915F18D719266F7) == 0x0002B8, "Member 'APPManager_BP_C::NvEnter_TL__Direction_D0C479F54AFB3F9F5915F18D719266F7' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvEnter_TL) == 0x0002C0, "Member 'APPManager_BP_C::NvEnter_TL' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, Timeline_0_Density_754EF43147DE172C96E7C49DB7B7D5B6) == 0x0002C8, "Member 'APPManager_BP_C::Timeline_0_Density_754EF43147DE172C96E7C49DB7B7D5B6' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, Timeline_0__Direction_754EF43147DE172C96E7C49DB7B7D5B6) == 0x0002CC, "Member 'APPManager_BP_C::Timeline_0__Direction_754EF43147DE172C96E7C49DB7B7D5B6' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, Timeline_0) == 0x0002D0, "Member 'APPManager_BP_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_Spook01_Blend_E7E483AF40D2178EA14504A6D0309303) == 0x0002D8, "Member 'APPManager_BP_C::TL_Spook01_Blend_E7E483AF40D2178EA14504A6D0309303' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_Spook01__Direction_E7E483AF40D2178EA14504A6D0309303) == 0x0002DC, "Member 'APPManager_BP_C::TL_Spook01__Direction_E7E483AF40D2178EA14504A6D0309303' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_Spook01) == 0x0002E0, "Member 'APPManager_BP_C::TL_Spook01' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_WhiteFadeOut_Blend_5A85C2A143557A30588EA087FA49DDA1) == 0x0002E8, "Member 'APPManager_BP_C::TL_WhiteFadeOut_Blend_5A85C2A143557A30588EA087FA49DDA1' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_WhiteFadeOut__Direction_5A85C2A143557A30588EA087FA49DDA1) == 0x0002EC, "Member 'APPManager_BP_C::TL_WhiteFadeOut__Direction_5A85C2A143557A30588EA087FA49DDA1' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_WhiteFadeOut) == 0x0002F0, "Member 'APPManager_BP_C::TL_WhiteFadeOut' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_WhiteFadeIn_Blend_2CF0231D4859F6655484A8AD69175B7F) == 0x0002F8, "Member 'APPManager_BP_C::TL_WhiteFadeIn_Blend_2CF0231D4859F6655484A8AD69175B7F' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_WhiteFadeIn__Direction_2CF0231D4859F6655484A8AD69175B7F) == 0x0002FC, "Member 'APPManager_BP_C::TL_WhiteFadeIn__Direction_2CF0231D4859F6655484A8AD69175B7F' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, TL_WhiteFadeIn) == 0x000300, "Member 'APPManager_BP_C::TL_WhiteFadeIn' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, CA) == 0x000308, "Member 'APPManager_BP_C::CA' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_FlashWhite_On) == 0x000318, "Member 'APPManager_BP_C::FX_FlashWhite_On' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_FadeWhite_On) == 0x000319, "Member 'APPManager_BP_C::FX_FadeWhite_On' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_PsySpook_On) == 0x00031A, "Member 'APPManager_BP_C::FX_PsySpook_On' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_GetGased_On) == 0x00031B, "Member 'APPManager_BP_C::FX_GetGased_On' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_nv_On) == 0x00031C, "Member 'APPManager_BP_C::FX_nv_On' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_PsySpook_Mat) == 0x000320, "Member 'APPManager_BP_C::FX_PsySpook_Mat' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_GetGas_Mat) == 0x000330, "Member 'APPManager_BP_C::FX_GetGas_Mat' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_Double_Vision_Mat) == 0x000340, "Member 'APPManager_BP_C::FX_Double_Vision_Mat' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_FadeWhiteExpComp) == 0x000350, "Member 'APPManager_BP_C::FX_FadeWhiteExpComp' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, Material) == 0x000358, "Member 'APPManager_BP_C::Material' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, PsySpookFOVScale) == 0x000368, "Member 'APPManager_BP_C::PsySpookFOVScale' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, PsySpookFarBlurSize) == 0x00036C, "Member 'APPManager_BP_C::PsySpookFarBlurSize' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, PsyFocalDistance) == 0x000370, "Member 'APPManager_BP_C::PsyFocalDistance' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvFlashExpComp) == 0x000374, "Member 'APPManager_BP_C::NvFlashExpComp' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvFlashDistance) == 0x000378, "Member 'APPManager_BP_C::NvFlashDistance' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvFlashFOVScale) == 0x00037C, "Member 'APPManager_BP_C::NvFlashFOVScale' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, NvFlashNearBlurSize) == 0x000380, "Member 'APPManager_BP_C::NvFlashNearBlurSize' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FX_InFocus_On) == 0x000384, "Member 'APPManager_BP_C::FX_InFocus_On' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, InFocusNearBlurSize) == 0x000388, "Member 'APPManager_BP_C::InFocusNearBlurSize' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, InFocusFOVScale) == 0x00038C, "Member 'APPManager_BP_C::InFocusFOVScale' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, InFocusFocalDistance) == 0x000390, "Member 'APPManager_BP_C::InFocusFocalDistance' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, InFocusFarBlurSize) == 0x000394, "Member 'APPManager_BP_C::InFocusFarBlurSize' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, InFocusFocalRegion) == 0x000398, "Member 'APPManager_BP_C::InFocusFocalRegion' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, bMansionIntroOn) == 0x00039C, "Member 'APPManager_BP_C::bMansionIntroOn' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, FarTransitionRegion) == 0x0003A0, "Member 'APPManager_BP_C::FarTransitionRegion' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, bFX_Hit) == 0x0003A4, "Member 'APPManager_BP_C::bFX_Hit' has a wrong offset!");
static_assert(offsetof(APPManager_BP_C, HitExpComp) == 0x0003A8, "Member 'APPManager_BP_C::HitExpComp' has a wrong offset!");

}

