#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LobbyReleasedPlayerCounterMinus01_BP

#include "Basic.hpp"


namespace SDK::Params
{

// Function LobbyReleasedPlayerCounter-01_BP.LobbyReleasedPlayerCounter-01_BP_C.OnWorldPopulateFinishedTimeSliced
// 0x0001 (0x0001 - 0x0000)
struct LobbyReleasedPlayerCounterMinus01_BP_C_OnWorldPopulateFinishedTimeSliced final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyReleasedPlayerCounterMinus01_BP_C_OnWorldPopulateFinishedTimeSliced) == 0x000001, "Wrong alignment on LobbyReleasedPlayerCounterMinus01_BP_C_OnWorldPopulateFinishedTimeSliced");
static_assert(sizeof(LobbyReleasedPlayerCounterMinus01_BP_C_OnWorldPopulateFinishedTimeSliced) == 0x000001, "Wrong size on LobbyReleasedPlayerCounterMinus01_BP_C_OnWorldPopulateFinishedTimeSliced");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_OnWorldPopulateFinishedTimeSliced, ReturnValue) == 0x000000, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_OnWorldPopulateFinishedTimeSliced::ReturnValue' has a wrong offset!");

// Function LobbyReleasedPlayerCounter-01_BP.LobbyReleasedPlayerCounter-01_BP_C.IsCelebrationNumber
// 0x0018 (0x0018 - 0x0000)
struct LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber) == 0x000004, "Wrong alignment on LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber");
static_assert(sizeof(LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber) == 0x000018, "Wrong size on LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber, Num) == 0x000000, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber::Num' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber, ReturnValue) == 0x000004, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber::ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000010, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_IsCelebrationNumber::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function LobbyReleasedPlayerCounter-01_BP.LobbyReleasedPlayerCounter-01_BP_C.UpdateDigitFlap
// 0x0078 (0x0078 - 0x0000)
struct LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlipNumberSingleDigitMinus01_BP_C*     K2Node_DynamicCast_AsFlip_Number_Single_Digit_01_BP; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CAB[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap) == 0x000008, "Wrong alignment on LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap");
static_assert(sizeof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap) == 0x000078, "Wrong size on LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, Param_Index) == 0x000000, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::Param_Index' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Array_Get_Item) == 0x000018, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Len_ReturnValue) == 0x000020, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, K2Node_DynamicCast_AsFlip_Number_Single_Digit_01_BP) == 0x000028, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::K2Node_DynamicCast_AsFlip_Number_Single_Digit_01_BP' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000034, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000038, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000048, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_GetSubstring_ReturnValue) == 0x000058, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Len_ReturnValue_1) == 0x000068, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Conv_StringToInt_ReturnValue) == 0x00006C, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000070, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap, CallFunc_Greater_IntInt_ReturnValue) == 0x000074, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateDigitFlap::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function LobbyReleasedPlayerCounter-01_BP.LobbyReleasedPlayerCounter-01_BP_C.OnRep_NumReleasedPlayers
// 0x0001 (0x0001 - 0x0000)
struct LobbyReleasedPlayerCounterMinus01_BP_C_OnRep_NumReleasedPlayers final
{
public:
	bool                                          CallFunc_IsCelebrationNumber_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyReleasedPlayerCounterMinus01_BP_C_OnRep_NumReleasedPlayers) == 0x000001, "Wrong alignment on LobbyReleasedPlayerCounterMinus01_BP_C_OnRep_NumReleasedPlayers");
static_assert(sizeof(LobbyReleasedPlayerCounterMinus01_BP_C_OnRep_NumReleasedPlayers) == 0x000001, "Wrong size on LobbyReleasedPlayerCounterMinus01_BP_C_OnRep_NumReleasedPlayers");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_OnRep_NumReleasedPlayers, CallFunc_IsCelebrationNumber_ReturnValue) == 0x000000, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_OnRep_NumReleasedPlayers::CallFunc_IsCelebrationNumber_ReturnValue' has a wrong offset!");

// Function LobbyReleasedPlayerCounter-01_BP.LobbyReleasedPlayerCounter-01_BP_C.UpdateAllDigitFlaps
// 0x0090 (0x0090 - 0x0000)
struct LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFlipNumberSingleDigitMinus01_BP_C*     K2Node_DynamicCast_AsFlip_Number_Single_Digit_01_BP; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CAD[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CAE[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAF[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps) == 0x000008, "Wrong alignment on LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps");
static_assert(sizeof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps) == 0x000090, "Wrong size on LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, Temp_int_Array_Index_Variable) == 0x000000, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Array_Get_Item) == 0x000020, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Len_ReturnValue) == 0x000028, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, K2Node_DynamicCast_AsFlip_Number_Single_Digit_01_BP) == 0x000030, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::K2Node_DynamicCast_AsFlip_Number_Single_Digit_01_BP' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00003C, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000048, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_GetSubstring_ReturnValue) == 0x000058, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Conv_StringToInt_ReturnValue) == 0x000068, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000070, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Len_ReturnValue_1) == 0x000080, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000084, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UpdateAllDigitFlaps::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function LobbyReleasedPlayerCounter-01_BP.LobbyReleasedPlayerCounter-01_BP_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct LobbyReleasedPlayerCounterMinus01_BP_C_UserConstructionScript final
{
public:
	TArray<class UChildActorComponent*>           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(LobbyReleasedPlayerCounterMinus01_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on LobbyReleasedPlayerCounterMinus01_BP_C_UserConstructionScript");
static_assert(sizeof(LobbyReleasedPlayerCounterMinus01_BP_C_UserConstructionScript) == 0x000010, "Wrong size on LobbyReleasedPlayerCounterMinus01_BP_C_UserConstructionScript");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function LobbyReleasedPlayerCounter-01_BP.LobbyReleasedPlayerCounter-01_BP_C.OnCharacterReleaseCountUpdated_Event_0
// 0x0004 (0x0004 - 0x0000)
struct LobbyReleasedPlayerCounterMinus01_BP_C_OnCharacterReleaseCountUpdated_Event_0 final
{
public:
	int32                                         CharacterReleaseCount;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyReleasedPlayerCounterMinus01_BP_C_OnCharacterReleaseCountUpdated_Event_0) == 0x000004, "Wrong alignment on LobbyReleasedPlayerCounterMinus01_BP_C_OnCharacterReleaseCountUpdated_Event_0");
static_assert(sizeof(LobbyReleasedPlayerCounterMinus01_BP_C_OnCharacterReleaseCountUpdated_Event_0) == 0x000004, "Wrong size on LobbyReleasedPlayerCounterMinus01_BP_C_OnCharacterReleaseCountUpdated_Event_0");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_OnCharacterReleaseCountUpdated_Event_0, CharacterReleaseCount) == 0x000000, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_OnCharacterReleaseCountUpdated_Event_0::CharacterReleaseCount' has a wrong offset!");

// Function LobbyReleasedPlayerCounter-01_BP.LobbyReleasedPlayerCounter-01_BP_C.ExecuteUbergraph_LobbyReleasedPlayerCounter-01_BP
// 0x0058 (0x0058 - 0x0000)
struct LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 CharacterReleaseCount)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class ARBGameStateLobby*                      CallFunc_GetRBGameStateLobby_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB0[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCharacterReleaseCount_ReturnValue;     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_characterReleaseCount;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB1[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB2[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFlipNumberSingleDigitMinus01_BP_C*     K2Node_DynamicCast_AsFlip_Number_Single_Digit_01_BP; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP) == 0x000008, "Wrong alignment on LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP");
static_assert(sizeof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP) == 0x000058, "Wrong size on LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, EntryPoint) == 0x000000, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, CallFunc_GetRBGameStateLobby_ReturnValue) == 0x000020, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::CallFunc_GetRBGameStateLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, CallFunc_GetCharacterReleaseCount_ReturnValue) == 0x00002C, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::CallFunc_GetCharacterReleaseCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, K2Node_CustomEvent_characterReleaseCount) == 0x000030, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::K2Node_CustomEvent_characterReleaseCount' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, CallFunc_Array_Get_Item) == 0x000038, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, K2Node_DynamicCast_AsFlip_Number_Single_Digit_01_BP) == 0x000048, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::K2Node_DynamicCast_AsFlip_Number_Single_Digit_01_BP' has a wrong offset!");
static_assert(offsetof(LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'LobbyReleasedPlayerCounterMinus01_BP_C_ExecuteUbergraph_LobbyReleasedPlayerCounterMinus01_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

