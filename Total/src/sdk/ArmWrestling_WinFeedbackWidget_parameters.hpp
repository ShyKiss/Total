#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArmWrestling_WinFeedbackWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ArmWrestling_WinFeedbackWidget.ArmWrestling_WinFeedbackWidget_C.ApplyColor
// 0x00C0 (0x00C0 - 0x0000)
struct ArmWrestling_WinFeedbackWidget_C_ApplyColor final
{
public:
	int32                                         InputIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0028)()
};
static_assert(alignof(ArmWrestling_WinFeedbackWidget_C_ApplyColor) == 0x000008, "Wrong alignment on ArmWrestling_WinFeedbackWidget_C_ApplyColor");
static_assert(sizeof(ArmWrestling_WinFeedbackWidget_C_ApplyColor) == 0x0000C0, "Wrong size on ArmWrestling_WinFeedbackWidget_C_ApplyColor");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, InputIndex) == 0x000000, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::InputIndex' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, Temp_int_Variable) == 0x000004, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, Temp_struct_Variable) == 0x000008, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, Temp_struct_Variable_1) == 0x000018, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, Temp_struct_Variable_2) == 0x000028, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, Temp_struct_Variable_3) == 0x000038, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, Temp_struct_Variable_4) == 0x000048, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, Temp_struct_Variable_5) == 0x000058, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, Temp_struct_Variable_6) == 0x000068, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, Temp_struct_Variable_7) == 0x000078, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, K2Node_Select_Default) == 0x000088, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ApplyColor, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'ArmWrestling_WinFeedbackWidget_C_ApplyColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function ArmWrestling_WinFeedbackWidget.ArmWrestling_WinFeedbackWidget_C.ExecuteUbergraph_ArmWrestling_WinFeedbackWidget
// 0x0004 (0x0004 - 0x0000)
struct ArmWrestling_WinFeedbackWidget_C_ExecuteUbergraph_ArmWrestling_WinFeedbackWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArmWrestling_WinFeedbackWidget_C_ExecuteUbergraph_ArmWrestling_WinFeedbackWidget) == 0x000004, "Wrong alignment on ArmWrestling_WinFeedbackWidget_C_ExecuteUbergraph_ArmWrestling_WinFeedbackWidget");
static_assert(sizeof(ArmWrestling_WinFeedbackWidget_C_ExecuteUbergraph_ArmWrestling_WinFeedbackWidget) == 0x000004, "Wrong size on ArmWrestling_WinFeedbackWidget_C_ExecuteUbergraph_ArmWrestling_WinFeedbackWidget");
static_assert(offsetof(ArmWrestling_WinFeedbackWidget_C_ExecuteUbergraph_ArmWrestling_WinFeedbackWidget, EntryPoint) == 0x000000, "Member 'ArmWrestling_WinFeedbackWidget_C_ExecuteUbergraph_ArmWrestling_WinFeedbackWidget::EntryPoint' has a wrong offset!");

}

