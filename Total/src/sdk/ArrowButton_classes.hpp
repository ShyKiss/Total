#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArrowButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ArrowButton.ArrowButton_C
// 0x00B8 (0x0318 - 0x0260)
class UArrowButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Pulse_Left_Stop;                                   // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pulse_Left_Start;                                  // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pulse_Right_Stop;                                  // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pulse_Right_Start;                                 // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               Arrow_SizeBox;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ArrowButton;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ArrowImage;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          PointingLeft;                                      // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DesiredImageArrowSize;                             // 0x02A4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                LeftPressedPadding;                                // 0x02AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FMargin                                RightPressedPadding;                               // 0x02BC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             LeftArrow;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             RightArrow;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Highlighted;                                       // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnClicked__DelegateSignature();
	void OnHovered__DelegateSignature();
	void OnUnhovered__DelegateSignature();
	void ExecuteUbergraph_ArrowButton(int32 EntryPoint);
	void BndEvt__ArrowButton_ArrowButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ArrowButton_ArrowButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ArrowButton_ArrowButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Pulse_Start_Ended();
	void PreConstruct(bool IsDesignTime);
	void SetPressedPadding(const struct FMargin& NewPressedPadding);
	void Highlight();
	void Downplay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ArrowButton_C">();
	}
	static class UArrowButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArrowButton_C>();
	}
};
static_assert(alignof(UArrowButton_C) == 0x000008, "Wrong alignment on UArrowButton_C");
static_assert(sizeof(UArrowButton_C) == 0x000318, "Wrong size on UArrowButton_C");
static_assert(offsetof(UArrowButton_C, UberGraphFrame) == 0x000260, "Member 'UArrowButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, Pulse_Left_Stop) == 0x000268, "Member 'UArrowButton_C::Pulse_Left_Stop' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, Pulse_Left_Start) == 0x000270, "Member 'UArrowButton_C::Pulse_Left_Start' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, Pulse_Right_Stop) == 0x000278, "Member 'UArrowButton_C::Pulse_Right_Stop' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, Pulse_Right_Start) == 0x000280, "Member 'UArrowButton_C::Pulse_Right_Start' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, Arrow_SizeBox) == 0x000288, "Member 'UArrowButton_C::Arrow_SizeBox' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, ArrowButton) == 0x000290, "Member 'UArrowButton_C::ArrowButton' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, ArrowImage) == 0x000298, "Member 'UArrowButton_C::ArrowImage' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, PointingLeft) == 0x0002A0, "Member 'UArrowButton_C::PointingLeft' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, DesiredImageArrowSize) == 0x0002A4, "Member 'UArrowButton_C::DesiredImageArrowSize' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, LeftPressedPadding) == 0x0002AC, "Member 'UArrowButton_C::LeftPressedPadding' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, RightPressedPadding) == 0x0002BC, "Member 'UArrowButton_C::RightPressedPadding' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, LeftArrow) == 0x0002D0, "Member 'UArrowButton_C::LeftArrow' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, RightArrow) == 0x0002D8, "Member 'UArrowButton_C::RightArrow' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, Highlighted) == 0x0002E0, "Member 'UArrowButton_C::Highlighted' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, OnClicked) == 0x0002E8, "Member 'UArrowButton_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, OnHovered) == 0x0002F8, "Member 'UArrowButton_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UArrowButton_C, OnUnhovered) == 0x000308, "Member 'UArrowButton_C::OnUnhovered' has a wrong offset!");

}

