#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LobbyCell_NamePlate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_classes.hpp"
#include "TextBox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass LobbyCell_NamePlate.LobbyCell_NamePlate_C
// 0x0150 (0x03A0 - 0x0250)
class ALobbyCell_NamePlate_C final : public ARBPlayerCellItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Side_B;                                            // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Side_A;                                            // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight;                                         // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RollStaticMesh;                                    // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RollTimeline_NewTrack_0_D6D388BE478E183448458EAE22ACD91F; // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RollTimeline__Direction_D6D388BE478E183448458EAE22ACD91F; // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B0[0x3];                                     // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RollTimeline;                                      // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SideA;                                             // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B1[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InitialRot;                                        // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdateInProgress;                                 // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPendingUpdate;                                    // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B2[0x6];                                     // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PendingDisplayName;                                // 0x02A8(0x0018)(Edit, BlueprintVisible)
	class ULobbyCell_NamePlateWidget_C*           WidgetPlayerName1;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULobbyCell_NamePlateWidget_C*           WidgetPlayerName2;                                 // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasRenderTarget2D*                  CanvasRender;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               NewMaterial;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScaleRatio;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas;                                            // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTextBox                               Text_Box;                                          // 0x02F0(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         ScaleX;                                            // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleY;                                            // 0x0384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Resolution;                                        // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetX;                                           // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetY;                                           // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFont*                                  Text_Box_Font;                                     // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CreateDynMaterial();
	void SetTexture(class UTexture* PrintTexture);
	void UpdateNamePlate(const class FText& PlayerName);
	void UserConstructionScript();
	void RollTimeline__FinishedFunc();
	void RollTimeline__UpdateFunc();
	void RollTimeline__ChangeName__EventFunc();
	void Roll();
	void Event_AssignToPlayer(class ARBLobbyPlayerState* RBLobbyPlayerState);
	void Event_UnassignedFromPlayer();
	void RedrawText();
	void DrawRenderTarget();
	void DrawText(const class FText& PlayerName);
	void ExecuteUbergraph_LobbyCell_NamePlate(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LobbyCell_NamePlate_C">();
	}
	static class ALobbyCell_NamePlate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobbyCell_NamePlate_C>();
	}
};
static_assert(alignof(ALobbyCell_NamePlate_C) == 0x000010, "Wrong alignment on ALobbyCell_NamePlate_C");
static_assert(sizeof(ALobbyCell_NamePlate_C) == 0x0003A0, "Wrong size on ALobbyCell_NamePlate_C");
static_assert(offsetof(ALobbyCell_NamePlate_C, UberGraphFrame) == 0x000250, "Member 'ALobbyCell_NamePlate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, Side_B) == 0x000258, "Member 'ALobbyCell_NamePlate_C::Side_B' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, Side_A) == 0x000260, "Member 'ALobbyCell_NamePlate_C::Side_A' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, RectLight) == 0x000268, "Member 'ALobbyCell_NamePlate_C::RectLight' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, StaticMesh1) == 0x000270, "Member 'ALobbyCell_NamePlate_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, StaticMesh) == 0x000278, "Member 'ALobbyCell_NamePlate_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, RollStaticMesh) == 0x000280, "Member 'ALobbyCell_NamePlate_C::RollStaticMesh' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, RollTimeline_NewTrack_0_D6D388BE478E183448458EAE22ACD91F) == 0x000288, "Member 'ALobbyCell_NamePlate_C::RollTimeline_NewTrack_0_D6D388BE478E183448458EAE22ACD91F' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, RollTimeline__Direction_D6D388BE478E183448458EAE22ACD91F) == 0x00028C, "Member 'ALobbyCell_NamePlate_C::RollTimeline__Direction_D6D388BE478E183448458EAE22ACD91F' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, RollTimeline) == 0x000290, "Member 'ALobbyCell_NamePlate_C::RollTimeline' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, SideA) == 0x000298, "Member 'ALobbyCell_NamePlate_C::SideA' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, InitialRot) == 0x00029C, "Member 'ALobbyCell_NamePlate_C::InitialRot' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, bUpdateInProgress) == 0x0002A0, "Member 'ALobbyCell_NamePlate_C::bUpdateInProgress' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, bPendingUpdate) == 0x0002A1, "Member 'ALobbyCell_NamePlate_C::bPendingUpdate' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, PendingDisplayName) == 0x0002A8, "Member 'ALobbyCell_NamePlate_C::PendingDisplayName' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, WidgetPlayerName1) == 0x0002C0, "Member 'ALobbyCell_NamePlate_C::WidgetPlayerName1' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, WidgetPlayerName2) == 0x0002C8, "Member 'ALobbyCell_NamePlate_C::WidgetPlayerName2' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, CanvasRender) == 0x0002D0, "Member 'ALobbyCell_NamePlate_C::CanvasRender' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, NewMaterial) == 0x0002D8, "Member 'ALobbyCell_NamePlate_C::NewMaterial' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, ScaleRatio) == 0x0002E0, "Member 'ALobbyCell_NamePlate_C::ScaleRatio' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, Canvas) == 0x0002E8, "Member 'ALobbyCell_NamePlate_C::Canvas' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, Text_Box) == 0x0002F0, "Member 'ALobbyCell_NamePlate_C::Text_Box' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, ScaleX) == 0x000380, "Member 'ALobbyCell_NamePlate_C::ScaleX' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, ScaleY) == 0x000384, "Member 'ALobbyCell_NamePlate_C::ScaleY' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, Resolution) == 0x000388, "Member 'ALobbyCell_NamePlate_C::Resolution' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, OffsetX) == 0x000390, "Member 'ALobbyCell_NamePlate_C::OffsetX' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, OffsetY) == 0x000394, "Member 'ALobbyCell_NamePlate_C::OffsetY' has a wrong offset!");
static_assert(offsetof(ALobbyCell_NamePlate_C, Text_Box_Font) == 0x000398, "Member 'ALobbyCell_NamePlate_C::Text_Box_Font' has a wrong offset!");

}

