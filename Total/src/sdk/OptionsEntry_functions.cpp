#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsEntry

#include "Basic.hpp"

#include "OptionsEntry_classes.hpp"
#include "OptionsEntry_parameters.hpp"


namespace SDK
{

// Function OptionsEntry.OptionsEntry_C.ExecuteUbergraph_OptionsEntry
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsEntry_C::ExecuteUbergraph_OptionsEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "ExecuteUbergraph_OptionsEntry");

	Params::OptionsEntry_C_ExecuteUbergraph_OptionsEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UOptionsEntry_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "OnRemovedFromFocusPath");

	Params::OptionsEntry_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UOptionsEntry_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_Slider_LeftArrowBtn_K2Node_ComponentBoundEvent_13_OnHovered__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_Slider_LeftArrowBtn_K2Node_ComponentBoundEvent_13_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_Slider_LeftArrowBtn_K2Node_ComponentBoundEvent_13_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_VS_LeftArrowBtn_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_VS_LeftArrowBtn_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_VS_LeftArrowBtn_K2Node_ComponentBoundEvent_10_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_VS_RightArrowBtn_K2Node_ComponentBoundEvent_1_OnHovered__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_VS_RightArrowBtn_K2Node_ComponentBoundEvent_1_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_VS_RightArrowBtn_K2Node_ComponentBoundEvent_1_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_VS_LeftArrowBtn_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_VS_LeftArrowBtn_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_VS_LeftArrowBtn_K2Node_ComponentBoundEvent_9_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_VS_RightArrowBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_VS_RightArrowBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_VS_RightArrowBtn_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_Slider_LeftArrowBtn_K2Node_ComponentBoundEvent_14_OnUnhovered__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_Slider_LeftArrowBtn_K2Node_ComponentBoundEvent_14_OnUnhovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_Slider_LeftArrowBtn_K2Node_ComponentBoundEvent_14_OnUnhovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_VS_LeftArrowBtn_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_VS_LeftArrowBtn_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_VS_LeftArrowBtn_K2Node_ComponentBoundEvent_11_OnUnhovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_VS_RightArrowBtn_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_VS_RightArrowBtn_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_VS_RightArrowBtn_K2Node_ComponentBoundEvent_4_OnUnhovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_Slider_LeftArrowBtn_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_Slider_LeftArrowBtn_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_Slider_LeftArrowBtn_K2Node_ComponentBoundEvent_12_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_Slider_RightArrowBtn_K2Node_ComponentBoundEvent_16_OnUnhovered__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_Slider_RightArrowBtn_K2Node_ComponentBoundEvent_16_OnUnhovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_Slider_RightArrowBtn_K2Node_ComponentBoundEvent_16_OnUnhovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_Slider_RightArrowBtn_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_Slider_RightArrowBtn_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_Slider_RightArrowBtn_K2Node_ComponentBoundEvent_8_OnHovered__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__OptionsEntry_Slider_RightArrowBtn_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__OptionsEntry_Slider_RightArrowBtn_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__OptionsEntry_Slider_RightArrowBtn_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsEntry_C::BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature");

	Params::OptionsEntry_C_BndEvt__SliderElement_K2Node_ComponentBoundEvent_5_OnFloatValueChangedEvent__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsEntry_C::BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature");

	Params::OptionsEntry_C_BndEvt__SliderValue_K2Node_ComponentBoundEvent_6_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__Button_112_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__Button_112_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__Button_112_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.BndEvt__SubEntryBtn_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UOptionsEntry_C::BndEvt__SubEntryBtn_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "BndEvt__SubEntryBtn_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOptionsEntry_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "PreConstruct");

	Params::OptionsEntry_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.SetValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             OptionValue_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UOptionsEntry_C::SetValue(const class FText& OptionValue_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "SetValue");

	Params::OptionsEntry_C_SetValue Parms{};

	Parms.OptionValue_0 = std::move(OptionValue_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.Set Button Type
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSubEntry                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             _Optionnal_SubEntryTitle                               (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsSlider_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOptionsEntry_C::Set_Button_Type(bool IsSubEntry, const class FText& _Optionnal_SubEntryTitle, bool IsSlider_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "Set Button Type");

	Params::OptionsEntry_C_Set_Button_Type Parms{};

	Parms.IsSubEntry = IsSubEntry;
	Parms._Optionnal_SubEntryTitle = std::move(_Optionnal_SubEntryTitle);
	Parms.IsSlider_0 = IsSlider_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.SetSliderButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSliderEntry                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOptionsEntry_C::SetSliderButton(bool IsSliderEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "SetSliderButton");

	Params::OptionsEntry_C_SetSliderButton Parms{};

	Parms.IsSliderEntry = IsSliderEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.HighlightEntry
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::HighlightEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "HighlightEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.DownplayEntry
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::DownplayEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "DownplayEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.Event_UpdateSliderValue
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             TextOverride                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UOptionsEntry_C::Event_UpdateSliderValue(float Value, const class FText& TextOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "Event_UpdateSliderValue");

	Params::OptionsEntry_C_Event_UpdateSliderValue Parms{};

	Parms.Value = Value;
	Parms.TextOverride = std::move(TextOverride);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.Event_UpdateTextValue
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewValue                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UOptionsEntry_C::Event_UpdateTextValue(const class FText& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "Event_UpdateTextValue");

	Params::OptionsEntry_C_Event_UpdateTextValue Parms{};

	Parms.NewValue = std::move(NewValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.UpdateValueFont
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::UpdateValueFont()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "UpdateValueFont");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.UpdateSliderBar
// (Public, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::UpdateSliderBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "UpdateSliderBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.RefreshEntry
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::RefreshEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "RefreshEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.RefreshCounter
// (Public, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::RefreshCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "RefreshCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.ColorChangedEntries
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::ColorChangedEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "ColorChangedEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.RefreshDisplay
// (Public, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::RefreshDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "RefreshDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.UpdateEnableStatus
// (Public, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::UpdateEnableStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "UpdateEnableStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.SetupCounter
// (Public, BlueprintCallable, BlueprintEvent)

void UOptionsEntry_C::SetupCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "SetupCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OptionsEntry.OptionsEntry_C.GetArrowBtn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Left                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UArrowButton_C*                   ArrowButton                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsEntry_C::GetArrowBtn(bool Left, class UArrowButton_C** ArrowButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "GetArrowBtn");

	Params::OptionsEntry_C_GetArrowBtn Parms{};

	Parms.Left = Left;

	UObject::ProcessEvent(Func, &Parms);

	if (ArrowButton != nullptr)
		*ArrowButton = Parms.ArrowButton;
}


// Function OptionsEntry.OptionsEntry_C.HandleSliderOnInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLeftPressed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   TimeBasedMultiplier                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOptionsEntry_C::HandleSliderOnInput(bool bLeftPressed, int32 TimeBasedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "HandleSliderOnInput");

	Params::OptionsEntry_C_HandleSliderOnInput Parms{};

	Parms.bLeftPressed = bLeftPressed;
	Parms.TimeBasedMultiplier = TimeBasedMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OptionsEntry.OptionsEntry_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UOptionsEntry_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OptionsEntry_C", "OnFocusReceived");

	Params::OptionsEntry_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

