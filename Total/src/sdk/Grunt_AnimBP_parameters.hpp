#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grunt_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "NPC_HandPoseOverrideCondition_structs.hpp"


namespace SDK::Params
{

// Function grunt_AnimBP.grunt_AnimBP_C.ExecuteUbergraph_grunt_AnimBP
// 0x0068 (0x0068 - 0x0000)
struct Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue_1;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBNPC*                                 K2Node_DynamicCast_AsRB_NPC;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldReactToLight_ShouldReactToLight;    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldAimWeapon_AimWeapon;                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP) == 0x000008, "Wrong alignment on Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP");
static_assert(sizeof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP) == 0x000068, "Wrong size on Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, EntryPoint) == 0x000000, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000008, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_NormalizeToRange_ReturnValue) == 0x000010, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, K2Node_Event_DeltaTimeX) == 0x000018, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000020, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_NormalizeToRange_ReturnValue_1) == 0x000028, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, K2Node_DynamicCast_AsRB_NPC) == 0x000030, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::K2Node_DynamicCast_AsRB_NPC' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000049, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_ShouldReactToLight_ShouldReactToLight) == 0x00004A, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_ShouldReactToLight_ShouldReactToLight' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_ShouldAimWeapon_AimWeapon) == 0x00004B, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_ShouldAimWeapon_AimWeapon' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00004C, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000050, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000054, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_FInterpTo_ReturnValue) == 0x000058, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_FInterpTo_ReturnValue_1) == 0x00005C, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'Grunt_AnimBP_C_ExecuteUbergraph_grunt_AnimBP::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function grunt_AnimBP.grunt_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Grunt_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Grunt_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Grunt_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(Grunt_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Grunt_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(Grunt_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Grunt_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function grunt_AnimBP.grunt_AnimBP_C.ShouldReactToLight
// 0x0007 (0x0007 - 0x0000)
struct Grunt_AnimBP_C_ShouldReactToLight final
{
public:
	bool                                          ShouldReactToLight_0;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Grunt_AnimBP_C_ShouldReactToLight) == 0x000001, "Wrong alignment on Grunt_AnimBP_C_ShouldReactToLight");
static_assert(sizeof(Grunt_AnimBP_C_ShouldReactToLight) == 0x000007, "Wrong size on Grunt_AnimBP_C_ShouldReactToLight");
static_assert(offsetof(Grunt_AnimBP_C_ShouldReactToLight, ShouldReactToLight_0) == 0x000000, "Member 'Grunt_AnimBP_C_ShouldReactToLight::ShouldReactToLight_0' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ShouldReactToLight, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'Grunt_AnimBP_C_ShouldReactToLight::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ShouldReactToLight, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000002, "Member 'Grunt_AnimBP_C_ShouldReactToLight::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ShouldReactToLight, CallFunc_BooleanNOR_ReturnValue) == 0x000003, "Member 'Grunt_AnimBP_C_ShouldReactToLight::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ShouldReactToLight, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'Grunt_AnimBP_C_ShouldReactToLight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ShouldReactToLight, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'Grunt_AnimBP_C_ShouldReactToLight::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ShouldReactToLight, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'Grunt_AnimBP_C_ShouldReactToLight::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function grunt_AnimBP.grunt_AnimBP_C.ShouldAimWeapon
// 0x0003 (0x0003 - 0x0000)
struct Grunt_AnimBP_C_ShouldAimWeapon final
{
public:
	bool                                          AimWeapon;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Grunt_AnimBP_C_ShouldAimWeapon) == 0x000001, "Wrong alignment on Grunt_AnimBP_C_ShouldAimWeapon");
static_assert(sizeof(Grunt_AnimBP_C_ShouldAimWeapon) == 0x000003, "Wrong size on Grunt_AnimBP_C_ShouldAimWeapon");
static_assert(offsetof(Grunt_AnimBP_C_ShouldAimWeapon, AimWeapon) == 0x000000, "Member 'Grunt_AnimBP_C_ShouldAimWeapon::AimWeapon' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ShouldAimWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Grunt_AnimBP_C_ShouldAimWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_ShouldAimWeapon, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Grunt_AnimBP_C_ShouldAimWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function grunt_AnimBP.grunt_AnimBP_C.Update Right Hand Pose Override
// 0x0024 (0x0024 - 0x0000)
struct Grunt_AnimBP_C_Update_Right_Hand_Pose_Override final
{
public:
	class FName                                   RightHandPose_WeightCurve;                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_RightHandPoseOverride_Conditions_ConditionsFulfilled; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override) == 0x000004, "Wrong alignment on Grunt_AnimBP_C_Update_Right_Hand_Pose_Override");
static_assert(sizeof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override) == 0x000024, "Wrong size on Grunt_AnimBP_C_Update_Right_Hand_Pose_Override");
static_assert(offsetof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override, RightHandPose_WeightCurve) == 0x000000, "Member 'Grunt_AnimBP_C_Update_Right_Hand_Pose_Override::RightHandPose_WeightCurve' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Grunt_AnimBP_C_Update_Right_Hand_Pose_Override::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override, CallFunc_Check_RightHandPoseOverride_Conditions_ConditionsFulfilled) == 0x00000C, "Member 'Grunt_AnimBP_C_Update_Right_Hand_Pose_Override::CallFunc_Check_RightHandPoseOverride_Conditions_ConditionsFulfilled' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'Grunt_AnimBP_C_Update_Right_Hand_Pose_Override::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override, CallFunc_GetCurveValue_ReturnValue) == 0x000014, "Member 'Grunt_AnimBP_C_Update_Right_Hand_Pose_Override::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Grunt_AnimBP_C_Update_Right_Hand_Pose_Override::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'Grunt_AnimBP_C_Update_Right_Hand_Pose_Override::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Update_Right_Hand_Pose_Override, CallFunc_FInterpTo_ReturnValue) == 0x000020, "Member 'Grunt_AnimBP_C_Update_Right_Hand_Pose_Override::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function grunt_AnimBP.grunt_AnimBP_C.Check_RightHandPoseOverride_Conditions
// 0x0034 (0x0034 - 0x0000)
struct Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions final
{
public:
	bool                                          ConditionsFulfilled;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConditionsFulfilledInt;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPC_HandPoseOverrideCondition                Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENPC_HandPoseOverrideCondition                CallFunc_Array_Get_Item;                           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions) == 0x000004, "Wrong alignment on Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions");
static_assert(sizeof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions) == 0x000034, "Wrong size on Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, ConditionsFulfilled) == 0x000000, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::ConditionsFulfilled' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, ConditionsFulfilledInt) == 0x000004, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::ConditionsFulfilledInt' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, Temp_bool_Variable) == 0x000008, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, Temp_byte_Variable) == 0x000018, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Array_IsEmpty_ReturnValue) == 0x00001B, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Not_PreBool_ReturnValue_1) == 0x000021, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Not_PreBool_ReturnValue_2) == 0x000022, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Array_Get_Item) == 0x000023, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, K2Node_Select_Default) == 0x000029, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Conv_BoolToInt_ReturnValue) == 0x00002C, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'Grunt_AnimBP_C_Check_RightHandPoseOverride_Conditions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function grunt_AnimBP.grunt_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Grunt_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Grunt_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on Grunt_AnimBP_C_AnimGraph");
static_assert(sizeof(Grunt_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on Grunt_AnimBP_C_AnimGraph");
static_assert(offsetof(Grunt_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Grunt_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function grunt_AnimBP.grunt_AnimBP_C.NightHunter_InLight
// 0x0020 (0x0020 - 0x0000)
struct Grunt_AnimBP_C_NightHunter_InLight final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              NightHunter_InLight_0;                             // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Grunt_AnimBP_C_NightHunter_InLight) == 0x000008, "Wrong alignment on Grunt_AnimBP_C_NightHunter_InLight");
static_assert(sizeof(Grunt_AnimBP_C_NightHunter_InLight) == 0x000020, "Wrong size on Grunt_AnimBP_C_NightHunter_InLight");
static_assert(offsetof(Grunt_AnimBP_C_NightHunter_InLight, InPose) == 0x000000, "Member 'Grunt_AnimBP_C_NightHunter_InLight::InPose' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_NightHunter_InLight, NightHunter_InLight_0) == 0x000010, "Member 'Grunt_AnimBP_C_NightHunter_InLight::NightHunter_InLight_0' has a wrong offset!");

// Function grunt_AnimBP.grunt_AnimBP_C.NightHunter_EnterLight
// 0x0020 (0x0020 - 0x0000)
struct Grunt_AnimBP_C_NightHunter_EnterLight final
{
public:
	struct FPoseLink                              Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              NightHunter_EnterLight_0;                          // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Grunt_AnimBP_C_NightHunter_EnterLight) == 0x000008, "Wrong alignment on Grunt_AnimBP_C_NightHunter_EnterLight");
static_assert(sizeof(Grunt_AnimBP_C_NightHunter_EnterLight) == 0x000020, "Wrong size on Grunt_AnimBP_C_NightHunter_EnterLight");
static_assert(offsetof(Grunt_AnimBP_C_NightHunter_EnterLight, Input) == 0x000000, "Member 'Grunt_AnimBP_C_NightHunter_EnterLight::Input' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_NightHunter_EnterLight, NightHunter_EnterLight_0) == 0x000010, "Member 'Grunt_AnimBP_C_NightHunter_EnterLight::NightHunter_EnterLight_0' has a wrong offset!");

// Function grunt_AnimBP.grunt_AnimBP_C.RangedWeaponLayer
// 0x0020 (0x0020 - 0x0000)
struct Grunt_AnimBP_C_RangedWeaponLayer final
{
public:
	struct FPoseLink                              Base_Locomotion;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RangedWeaponLayer_0;                               // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Grunt_AnimBP_C_RangedWeaponLayer) == 0x000008, "Wrong alignment on Grunt_AnimBP_C_RangedWeaponLayer");
static_assert(sizeof(Grunt_AnimBP_C_RangedWeaponLayer) == 0x000020, "Wrong size on Grunt_AnimBP_C_RangedWeaponLayer");
static_assert(offsetof(Grunt_AnimBP_C_RangedWeaponLayer, Base_Locomotion) == 0x000000, "Member 'Grunt_AnimBP_C_RangedWeaponLayer::Base_Locomotion' has a wrong offset!");
static_assert(offsetof(Grunt_AnimBP_C_RangedWeaponLayer, RangedWeaponLayer_0) == 0x000010, "Member 'Grunt_AnimBP_C_RangedWeaponLayer::RangedWeaponLayer_0' has a wrong offset!");

}

