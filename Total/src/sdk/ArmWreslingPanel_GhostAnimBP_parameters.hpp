#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArmWreslingPanel_GhostAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ArmWreslingPanel_GhostAnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ArmWreslingPanel_GhostAnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on ArmWreslingPanel_GhostAnimBP_C_AnimGraph");
static_assert(sizeof(ArmWreslingPanel_GhostAnimBP_C_AnimGraph) == 0x000010, "Wrong size on ArmWreslingPanel_GhostAnimBP_C_AnimGraph");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ArmWreslingPanel_GhostAnimBP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C.ManageIK
// 0x0028 (0x0028 - 0x0000)
struct ArmWreslingPanel_GhostAnimBP_C_ManageIK final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1B[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArmWreslingPanel_GhostAnimBP_C_ManageIK) == 0x000004, "Wrong alignment on ArmWreslingPanel_GhostAnimBP_C_ManageIK");
static_assert(sizeof(ArmWreslingPanel_GhostAnimBP_C_ManageIK) == 0x000028, "Wrong size on ArmWreslingPanel_GhostAnimBP_C_ManageIK");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, DeltaTime) == 0x000000, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::DeltaTime' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, Temp_bool_Variable) == 0x000004, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, Temp_float_Variable) == 0x000008, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, Temp_float_Variable_1) == 0x00000C, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, Temp_bool_Variable_1) == 0x000010, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, Temp_float_Variable_2) == 0x000014, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, Temp_float_Variable_3) == 0x000018, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, K2Node_Select_Default) == 0x00001C, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, K2Node_Select_Default_1) == 0x000020, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageIK, CallFunc_FInterpTo_ReturnValue) == 0x000024, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageIK::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C.ManageLookAt
// 0x0038 (0x0038 - 0x0000)
struct ArmWreslingPanel_GhostAnimBP_C_ManageLookAt final
{
public:
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeRotationAngle_ReturnValue;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt) == 0x000008, "Wrong alignment on ArmWreslingPanel_GhostAnimBP_C_ManageLookAt");
static_assert(sizeof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt) == 0x000038, "Wrong size on ArmWreslingPanel_GhostAnimBP_C_ManageLookAt");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, K2Node_DynamicCast_AsRB_Player) == 0x000000, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Roll) == 0x00000C, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Pitch) == 0x000010, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Yaw) == 0x000014, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Roll_1) == 0x000018, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Pitch_1) == 0x00001C, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Yaw_1) == 0x000020, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Roll_2) == 0x000024, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Pitch_2) == 0x000028, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_BreakRotator_Yaw_2) == 0x00002C, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ManageLookAt, CallFunc_NormalizeRotationAngle_ReturnValue) == 0x000034, "Member 'ArmWreslingPanel_GhostAnimBP_C_ManageLookAt::CallFunc_NormalizeRotationAngle_ReturnValue' has a wrong offset!");

// Function ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C.SetHandIK
// 0x0120 (0x0120 - 0x0000)
struct ArmWreslingPanel_GhostAnimBP_C_SetHandIK final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBoneTransformForAnimation_ReturnValue; // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetBoneTransformForAnimation_ReturnValue_1; // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK) == 0x000010, "Wrong alignment on ArmWreslingPanel_GhostAnimBP_C_SetHandIK");
static_assert(sizeof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK) == 0x000120, "Wrong size on ArmWreslingPanel_GhostAnimBP_C_SetHandIK");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, Temp_bool_Variable) == 0x000000, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, K2Node_Select_Default) == 0x000008, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_GetBoneTransformForAnimation_ReturnValue) == 0x000020, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_GetBoneTransformForAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_GetBoneTransformForAnimation_ReturnValue_1) == 0x000050, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_GetBoneTransformForAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakTransform_Location) == 0x000080, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakTransform_Location_1) == 0x0000A4, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakTransform_Rotation_1) == 0x0000B0, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakTransform_Scale_1) == 0x0000BC, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000C8, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakRotator_Roll) == 0x0000D4, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakRotator_Pitch) == 0x0000D8, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakRotator_Yaw) == 0x0000DC, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_MakeRotator_ReturnValue_1) == 0x0000E0, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_MakeRotator_ReturnValue_2) == 0x0000EC, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0000F8, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector_X) == 0x000104, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector_Y) == 0x000108, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_BreakVector_Z) == 0x00010C, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetHandIK, CallFunc_MakeVector_ReturnValue) == 0x000110, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetHandIK::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C.SetPlayerAnimations
// 0x0001 (0x0001 - 0x0000)
struct ArmWreslingPanel_GhostAnimBP_C_SetPlayerAnimations final
{
public:
	bool                                          bIsPlayer1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ArmWreslingPanel_GhostAnimBP_C_SetPlayerAnimations) == 0x000001, "Wrong alignment on ArmWreslingPanel_GhostAnimBP_C_SetPlayerAnimations");
static_assert(sizeof(ArmWreslingPanel_GhostAnimBP_C_SetPlayerAnimations) == 0x000001, "Wrong size on ArmWreslingPanel_GhostAnimBP_C_SetPlayerAnimations");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetPlayerAnimations, bIsPlayer1) == 0x000000, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetPlayerAnimations::bIsPlayer1' has a wrong offset!");

// Function ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C.FinishGhost
// 0x000C (0x000C - 0x0000)
struct ArmWreslingPanel_GhostAnimBP_C_FinishGhost final
{
public:
	EGhostFinishReason                            FinishReason;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GhostFinishCustomReason;                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ArmWreslingPanel_GhostAnimBP_C_FinishGhost) == 0x000004, "Wrong alignment on ArmWreslingPanel_GhostAnimBP_C_FinishGhost");
static_assert(sizeof(ArmWreslingPanel_GhostAnimBP_C_FinishGhost) == 0x00000C, "Wrong size on ArmWreslingPanel_GhostAnimBP_C_FinishGhost");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_FinishGhost, FinishReason) == 0x000000, "Member 'ArmWreslingPanel_GhostAnimBP_C_FinishGhost::FinishReason' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_FinishGhost, GhostFinishCustomReason) == 0x000004, "Member 'ArmWreslingPanel_GhostAnimBP_C_FinishGhost::GhostFinishCustomReason' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_FinishGhost, ReturnValue) == 0x000008, "Member 'ArmWreslingPanel_GhostAnimBP_C_FinishGhost::ReturnValue' has a wrong offset!");

// Function ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ArmWreslingPanel_GhostAnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArmWreslingPanel_GhostAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ArmWreslingPanel_GhostAnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(ArmWreslingPanel_GhostAnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ArmWreslingPanel_GhostAnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ArmWreslingPanel_GhostAnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C.SetPlayerInput
// 0x0004 (0x0004 - 0x0000)
struct ArmWreslingPanel_GhostAnimBP_C_SetPlayerInput final
{
public:
	int32                                         Param_PlayerInput;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArmWreslingPanel_GhostAnimBP_C_SetPlayerInput) == 0x000004, "Wrong alignment on ArmWreslingPanel_GhostAnimBP_C_SetPlayerInput");
static_assert(sizeof(ArmWreslingPanel_GhostAnimBP_C_SetPlayerInput) == 0x000004, "Wrong size on ArmWreslingPanel_GhostAnimBP_C_SetPlayerInput");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_SetPlayerInput, Param_PlayerInput) == 0x000000, "Member 'ArmWreslingPanel_GhostAnimBP_C_SetPlayerInput::Param_PlayerInput' has a wrong offset!");

// Function ArmWreslingPanel_GhostAnimBP.ArmWreslingPanel_GhostAnimBP_C.ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP
// 0x0070 (0x0070 - 0x0000)
struct ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C20[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C21[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C22[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C23[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UArmWreslingPanelComponent_BP_C*        K2Node_DynamicCast_AsArm_Wresling_Panel_Component_BP; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GhostAnimTransition_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayer1_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GhostAnimTransition_ReturnValue_1;        // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_PlayerInput;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C24[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BP_GetRandomSelector_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LevelRandomInt_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP) == 0x000008, "Wrong alignment on ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP");
static_assert(sizeof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP) == 0x000070, "Wrong size on ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, EntryPoint) == 0x000000, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, Temp_int_Variable) == 0x000004, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000B, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Not_PreBool_ReturnValue_3) == 0x00000C, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x00000D, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_2) == 0x00000E, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Array_Get_Item) == 0x000010, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_3) == 0x000018, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_4) == 0x000019, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Not_PreBool_ReturnValue_4) == 0x00001A, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_5) == 0x00001B, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_6) == 0x00001C, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000020, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue) == 0x000024, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000029, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_1) == 0x00002C, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000030, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Not_PreBool_ReturnValue_5) == 0x000031, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_7) == 0x000032, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_8) == 0x000033, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, K2Node_Event_DeltaTimeX) == 0x000034, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Not_PreBool_ReturnValue_6) == 0x000038, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_9) == 0x000039, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue) == 0x000040, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_GetCurrentValue_ScheduledUObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, K2Node_DynamicCast_AsArm_Wresling_Panel_Component_BP) == 0x000048, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::K2Node_DynamicCast_AsArm_Wresling_Panel_Component_BP' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_GhostAnimTransition_ReturnValue) == 0x000051, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_GhostAnimTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_IsPlayer1_ReturnValue) == 0x000052, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_IsPlayer1_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_GhostAnimTransition_ReturnValue_1) == 0x000053, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_GhostAnimTransition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, K2Node_CustomEvent_PlayerInput) == 0x000054, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::K2Node_CustomEvent_PlayerInput' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Not_PreBool_ReturnValue_7) == 0x000058, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BooleanAND_ReturnValue_10) == 0x000059, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_BP_GetRandomSelector_ReturnValue) == 0x00005C, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_BP_GetRandomSelector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP, CallFunc_LevelRandomInt_ReturnValue) == 0x000068, "Member 'ArmWreslingPanel_GhostAnimBP_C_ExecuteUbergraph_ArmWreslingPanel_GhostAnimBP::CallFunc_LevelRandomInt_ReturnValue' has a wrong offset!");

}

