#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoadingVideoWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LoadingVideoWidget.LoadingVideoWidget_C.ExecuteUbergraph_LoadingVideoWidget
// 0x00A8 (0x00A8 - 0x0000)
struct LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Approach_ReturnValue;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0058(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget) == 0x000008, "Wrong alignment on LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget");
static_assert(sizeof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget) == 0x0000A8, "Wrong size on LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, EntryPoint) == 0x000000, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, K2Node_Event_MyGeometry) == 0x000008, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, K2Node_Event_InDeltaTime) == 0x000040, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000048, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_Approach_ReturnValue) == 0x000050, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_Approach_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_Less_FloatFloat_ReturnValue) == 0x000054, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_GetCachedGeometry_ReturnValue) == 0x000058, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_GetAbsoluteSize_ReturnValue) == 0x000090, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_BreakVector2D_X) == 0x000098, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_BreakVector2D_Y) == 0x00009C, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A0, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A4, "Member 'LoadingVideoWidget_C_ExecuteUbergraph_LoadingVideoWidget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function LoadingVideoWidget.LoadingVideoWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct LoadingVideoWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoadingVideoWidget_C_PreConstruct) == 0x000001, "Wrong alignment on LoadingVideoWidget_C_PreConstruct");
static_assert(sizeof(LoadingVideoWidget_C_PreConstruct) == 0x000001, "Wrong size on LoadingVideoWidget_C_PreConstruct");
static_assert(offsetof(LoadingVideoWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'LoadingVideoWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function LoadingVideoWidget.LoadingVideoWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct LoadingVideoWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoadingVideoWidget_C_Tick) == 0x000004, "Wrong alignment on LoadingVideoWidget_C_Tick");
static_assert(sizeof(LoadingVideoWidget_C_Tick) == 0x00003C, "Wrong size on LoadingVideoWidget_C_Tick");
static_assert(offsetof(LoadingVideoWidget_C_Tick, MyGeometry) == 0x000000, "Member 'LoadingVideoWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(LoadingVideoWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'LoadingVideoWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function LoadingVideoWidget.LoadingVideoWidget_C.Hide
// 0x0001 (0x0001 - 0x0000)
struct LoadingVideoWidget_C_Hide final
{
public:
	bool                                          WithAnim;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoadingVideoWidget_C_Hide) == 0x000001, "Wrong alignment on LoadingVideoWidget_C_Hide");
static_assert(sizeof(LoadingVideoWidget_C_Hide) == 0x000001, "Wrong size on LoadingVideoWidget_C_Hide");
static_assert(offsetof(LoadingVideoWidget_C_Hide, WithAnim) == 0x000000, "Member 'LoadingVideoWidget_C_Hide::WithAnim' has a wrong offset!");

// Function LoadingVideoWidget.LoadingVideoWidget_C.UpdateFade
// 0x0004 (0x0004 - 0x0000)
struct LoadingVideoWidget_C_UpdateFade final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LoadingVideoWidget_C_UpdateFade) == 0x000004, "Wrong alignment on LoadingVideoWidget_C_UpdateFade");
static_assert(sizeof(LoadingVideoWidget_C_UpdateFade) == 0x000004, "Wrong size on LoadingVideoWidget_C_UpdateFade");
static_assert(offsetof(LoadingVideoWidget_C_UpdateFade, Value) == 0x000000, "Member 'LoadingVideoWidget_C_UpdateFade::Value' has a wrong offset!");

}

