#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChessPanel_GhostAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OPP_structs.hpp"
#include "OPP_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ChessPanel_GhostAnimBP.ChessPanel_GhostAnimBP_C
// 0x3160 (0x3450 - 0x02F0)
class UChessPanel_GhostAnimBP_C final : public URBGhostAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02F8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0328(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0350(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0378(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x03A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x03C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x03F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0418(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0468(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0490(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x04B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x04E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0508(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0530(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0558(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0580(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x05A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x05D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x05F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0620(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0648(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0670(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0698(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x06C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x06E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0710(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x07B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x07D8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x0800(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_19;                  // 0x0880(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x0928(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_18;                  // 0x09A8(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_17;                  // 0x0A50(0x00A8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x0AF8(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x0BE0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0CC8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x0CF8(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_16;                  // 0x0D78(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x0E20(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0EA0(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0ED0(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x0EF8(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x0FE0(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_15;                  // 0x10C8(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1170(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_14;                  // 0x11A0(0x00A8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x1248(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x1330(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x1418(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x1448(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_13;                  // 0x14C8(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x1570(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x15F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x1620(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x16A0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x1720(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x17C8(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1870(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x18F0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x1970(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1A18(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1A48(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x1AC8(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1B70(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1BF0(0x00B8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1CA8(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x1D28(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1DD0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1E50(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x1ED0(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1F78(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1FF8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x2028(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x20A8(0x00A8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x2150(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x21F8(0x0080)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x2278(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x2360(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x2448(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x24F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2520(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x25A0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x25D0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x2650(0x00A8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x26F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2778(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x27A8(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x2890(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x2978(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2A20(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2A50(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2AD0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x2B50(0x00A8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2BF8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2C28(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2CD8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2E30(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x2E58(0x0020)()
	uint8                                         Pad_2C47[0x8];                                     // 0x2E78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x2E80(0x01E0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x3060(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x3080(0x00A8)()
	uint8                                         Pad_2C48[0x8];                                     // 0x3128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x3130(0x01E0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x3310(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x3330(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x3350(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x3370(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x3398(0x0020)()
	class URBChessBoardPanelComponentBase_C*      Panel;                                             // 0x33B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          bPlayer1;                                          // 0x33C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWon;                                              // 0x33C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGameTied;                                         // 0x33C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C49[0x1];                                     // 0x33C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LookPitch;                                         // 0x33C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookYaw;                                           // 0x33C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsTaunting;                                       // 0x33CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4A[0x3];                                     // 0x33CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TauntType;                                         // 0x33D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TauntCount;                                        // 0x33D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBChessBoard*                          ChessBoard;                                        // 0x33D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseIK;                                            // 0x33E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C4B[0x3];                                     // 0x33E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShouldMoveHandIKRoot;                              // 0x33E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IKHandLocationWS;                                  // 0x33E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Player1HandRotation;                               // 0x33F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Player1IKElbowLocation;                            // 0x3400(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Player2HandRotation;                               // 0x340C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Player2IKElbowLocation;                            // 0x3418(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlled;                              // 0x3424(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EChessGamePlayerAnimState                     PlayerAnimState;                                   // 0x3425(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGetUp;                                            // 0x3426(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bResetMove;                                        // 0x3427(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                ResetMoveTargetLocalPos;                           // 0x3428(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResetMoveLocationWS;                               // 0x3434(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BS_FocusedPos;                                     // 0x3440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFullyBlendedMovePiece;                            // 0x3448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bBothPlayersValid;                                 // 0x3449(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ValidateBothPlayers();
	void UpdateResetMove(float DeltaTime);
	void InitPanelData();
	void SetHandIK(float DeltaTime);
	void ManageIK(float DeltaTime);
	void ManageLookAt();
	void Reset();
	bool FinishGhost(EGhostFinishReason FinishReason, int32 GhostFinishCustomReason);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_BlendSpacePlayer_AD494F0644E31E08041F17AD085DAAAC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_BlendSpacePlayer_59F4F9784B5F8694C8614BAC294CBF8E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_BlendSpacePlayer_E1B7D4014AFA5C34E625D7A7DBF9D51A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_BlendSpacePlayer_F4B9CD8A45F0344DDE1CECA00B9AD300();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_4C33560A4AAFC6A5A42B12B5193043E1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_BE298DF941A558CF0083B88E33B9D279();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_77FB5F334FC8E8D599A045A258FBA151();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_39CAA8F04E0434359EF16B8A82F833BE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_C9EBFC75468806B14911D49EE2295D6F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_B6D70405436D8EFBE67F00B9807B4D62();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_76F6CBA34D57ED3DD6DFBEAEE55CB37D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_8D2CFEC946FEB7288E179D9F58BA2FFD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_D5D8BF244510D5CE0BDBBFB3DDB999E2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_7C247B9C4F3274E175CBD68F0C751193();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_F9D509EB42025585F723D18A7073B0BE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_92B7E6C246CF2AEB021B29A9872A68EF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_255CE84D4A61A87BBF29018177C50B57();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_625E10DD424F05D1CC7C8B8B6F9E134A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_A23CE4EB417B01905D1DA38AEB297B56();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_07303B3F465FE270B3C642B69EF090B4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_2FAD0A5342380D899375A0900E7EE358();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_F358446647921990ECA0BEB6DAB864E7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ChessPanel_GhostAnimBP_AnimGraphNode_TransitionResult_012879E54B7C38C0AC54A582DD040312();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BP_InitializeGhost();
	void AnimNotify_EntryDone();
	void AnimNotify_Finished();
	void AnimNotify_RandomTaunt();
	void AnimNotify_ExitState();
	void AnimNotify_WaitForOpponent();
	void AnimNotify_EndRound();
	void AnimNotify_EnteredMovePiece();
	void AnimNotify_EnteredRevertMove();
	void AnimNotify_RevertMoveFullyBlended();
	void AnimNotify_EnteredWaitForTurn();
	void AnimNotify_DoneMovingEvent();
	void AnimNotify_FullyBlendedMovePiece();
	void AnimNotify_LeftMovePiece();
	void ExecuteUbergraph_ChessPanel_GhostAnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChessPanel_GhostAnimBP_C">();
	}
	static class UChessPanel_GhostAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChessPanel_GhostAnimBP_C>();
	}
};
static_assert(alignof(UChessPanel_GhostAnimBP_C) == 0x000010, "Wrong alignment on UChessPanel_GhostAnimBP_C");
static_assert(sizeof(UChessPanel_GhostAnimBP_C) == 0x003450, "Wrong size on UChessPanel_GhostAnimBP_C");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, UberGraphFrame) == 0x0002F0, "Member 'UChessPanel_GhostAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_Root) == 0x0002F8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_31) == 0x000328, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_30) == 0x000350, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_29) == 0x000378, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_28) == 0x0003A0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_27) == 0x0003C8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_26) == 0x0003F0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_25) == 0x000418, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_24) == 0x000440, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_23) == 0x000468, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_22) == 0x000490, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_21) == 0x0004B8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_20) == 0x0004E0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_19) == 0x000508, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_18) == 0x000530, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_17) == 0x000558, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_16) == 0x000580, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_15) == 0x0005A8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_14) == 0x0005D0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_13) == 0x0005F8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_12) == 0x000620, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_11) == 0x000648, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000670, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000698, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_8) == 0x0006C0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x0006E8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000710, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000738, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000760, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000788, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x0007B0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x0007D8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_22) == 0x000800, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_19) == 0x000880, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_19' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_21) == 0x000928, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_18) == 0x0009A8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_18' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_17) == 0x000A50, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_17' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_9) == 0x000AF8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_8) == 0x000BE0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_11) == 0x000CC8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_20) == 0x000CF8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_16) == 0x000D78, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_16' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_19) == 0x000E20, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_10) == 0x000EA0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TransitionResult) == 0x000ED0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_7) == 0x000EF8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x000FE0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_15) == 0x0010C8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_15' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_9) == 0x001170, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_14) == 0x0011A0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_14' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x001248, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x001330, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_8) == 0x001418, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_18) == 0x001448, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_13) == 0x0014C8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_13' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_17) == 0x001570, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_7) == 0x0015F0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_16) == 0x001620, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_15) == 0x0016A0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_12) == 0x001720, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_11) == 0x0017C8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_14) == 0x001870, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_13) == 0x0018F0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_10) == 0x001970, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_6) == 0x001A18, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_12) == 0x001A48, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_9) == 0x001AC8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x001B70, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByEnum) == 0x001BF0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x001CA8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_8) == 0x001D28, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x001DD0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x001E50, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_7) == 0x001ED0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x001F78, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_5) == 0x001FF8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x002028, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_6) == 0x0020A8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_5) == 0x002150, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x0021F8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x002278, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x002360, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_4) == 0x002448, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_4) == 0x0024F0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x002520, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_3) == 0x0025A0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0025D0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x002650, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0026F8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_2) == 0x002778, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0027A8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x002890, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x002978, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult_1) == 0x002A20, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x002A50, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SequencePlayer) == 0x002AD0, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x002B50, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateResult) == 0x002BF8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_StateMachine) == 0x002C28, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x002CD8, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x002E30, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_LocalToComponentSpace_2) == 0x002E58, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TwoBoneIK_1) == 0x002E80, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x003060, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_BlendListByBool) == 0x003080, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_TwoBoneIK) == 0x003130, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x003310, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x003330, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x003350, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_UseCachedPose) == 0x003370, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x003398, "Member 'UChessPanel_GhostAnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, Panel) == 0x0033B8, "Member 'UChessPanel_GhostAnimBP_C::Panel' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bPlayer1) == 0x0033C0, "Member 'UChessPanel_GhostAnimBP_C::bPlayer1' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bWon) == 0x0033C1, "Member 'UChessPanel_GhostAnimBP_C::bWon' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bGameTied) == 0x0033C2, "Member 'UChessPanel_GhostAnimBP_C::bGameTied' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, LookPitch) == 0x0033C4, "Member 'UChessPanel_GhostAnimBP_C::LookPitch' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, LookYaw) == 0x0033C8, "Member 'UChessPanel_GhostAnimBP_C::LookYaw' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bIsTaunting) == 0x0033CC, "Member 'UChessPanel_GhostAnimBP_C::bIsTaunting' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, TauntType) == 0x0033D0, "Member 'UChessPanel_GhostAnimBP_C::TauntType' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, TauntCount) == 0x0033D4, "Member 'UChessPanel_GhostAnimBP_C::TauntCount' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, ChessBoard) == 0x0033D8, "Member 'UChessPanel_GhostAnimBP_C::ChessBoard' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bUseIK) == 0x0033E0, "Member 'UChessPanel_GhostAnimBP_C::bUseIK' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, ShouldMoveHandIKRoot) == 0x0033E4, "Member 'UChessPanel_GhostAnimBP_C::ShouldMoveHandIKRoot' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, IKHandLocationWS) == 0x0033E8, "Member 'UChessPanel_GhostAnimBP_C::IKHandLocationWS' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, Player1HandRotation) == 0x0033F4, "Member 'UChessPanel_GhostAnimBP_C::Player1HandRotation' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, Player1IKElbowLocation) == 0x003400, "Member 'UChessPanel_GhostAnimBP_C::Player1IKElbowLocation' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, Player2HandRotation) == 0x00340C, "Member 'UChessPanel_GhostAnimBP_C::Player2HandRotation' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, Player2IKElbowLocation) == 0x003418, "Member 'UChessPanel_GhostAnimBP_C::Player2IKElbowLocation' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bIsLocallyControlled) == 0x003424, "Member 'UChessPanel_GhostAnimBP_C::bIsLocallyControlled' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, PlayerAnimState) == 0x003425, "Member 'UChessPanel_GhostAnimBP_C::PlayerAnimState' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bGetUp) == 0x003426, "Member 'UChessPanel_GhostAnimBP_C::bGetUp' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bResetMove) == 0x003427, "Member 'UChessPanel_GhostAnimBP_C::bResetMove' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, ResetMoveTargetLocalPos) == 0x003428, "Member 'UChessPanel_GhostAnimBP_C::ResetMoveTargetLocalPos' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, ResetMoveLocationWS) == 0x003434, "Member 'UChessPanel_GhostAnimBP_C::ResetMoveLocationWS' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, BS_FocusedPos) == 0x003440, "Member 'UChessPanel_GhostAnimBP_C::BS_FocusedPos' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bFullyBlendedMovePiece) == 0x003448, "Member 'UChessPanel_GhostAnimBP_C::bFullyBlendedMovePiece' has a wrong offset!");
static_assert(offsetof(UChessPanel_GhostAnimBP_C, bBothPlayersValid) == 0x003449, "Member 'UChessPanel_GhostAnimBP_C::bBothPlayersValid' has a wrong offset!");

}

