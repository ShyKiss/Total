#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgramTrialEntryContentWidget

#include "Basic.hpp"

#include "OPP_structs.hpp"
#include "AkAudio_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ProgramTrialEntryContentWidget.ProgramTrialEntryContentWidget_C.SetFocused
// 0x001C (0x001C - 0x0000)
struct ProgramTrialEntryContentWidget_C_SetFocused final
{
public:
	bool                                          bInFocused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialEntryContentWidget_C_SetFocused) == 0x000004, "Wrong alignment on ProgramTrialEntryContentWidget_C_SetFocused");
static_assert(sizeof(ProgramTrialEntryContentWidget_C_SetFocused) == 0x00001C, "Wrong size on ProgramTrialEntryContentWidget_C_SetFocused");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetFocused, bInFocused) == 0x000000, "Member 'ProgramTrialEntryContentWidget_C_SetFocused::bInFocused' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetFocused, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'ProgramTrialEntryContentWidget_C_SetFocused::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetFocused, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'ProgramTrialEntryContentWidget_C_SetFocused::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetFocused, Temp_delegate_Variable) == 0x000004, "Member 'ProgramTrialEntryContentWidget_C_SetFocused::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetFocused, CallFunc_PostEventGlobal_ReturnValue) == 0x000014, "Member 'ProgramTrialEntryContentWidget_C_SetFocused::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetFocused, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ProgramTrialEntryContentWidget_C_SetFocused::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ProgramTrialEntryContentWidget.ProgramTrialEntryContentWidget_C.SetHovered
// 0x001C (0x001C - 0x0000)
struct ProgramTrialEntryContentWidget_C_SetHovered final
{
public:
	bool                                          bInHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialEntryContentWidget_C_SetHovered) == 0x000004, "Wrong alignment on ProgramTrialEntryContentWidget_C_SetHovered");
static_assert(sizeof(ProgramTrialEntryContentWidget_C_SetHovered) == 0x00001C, "Wrong size on ProgramTrialEntryContentWidget_C_SetHovered");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetHovered, bInHovered) == 0x000000, "Member 'ProgramTrialEntryContentWidget_C_SetHovered::bInHovered' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetHovered, Temp_delegate_Variable) == 0x000004, "Member 'ProgramTrialEntryContentWidget_C_SetHovered::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetHovered, CallFunc_PostEventGlobal_ReturnValue) == 0x000014, "Member 'ProgramTrialEntryContentWidget_C_SetHovered::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetHovered, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'ProgramTrialEntryContentWidget_C_SetHovered::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetHovered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000019, "Member 'ProgramTrialEntryContentWidget_C_SetHovered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ProgramTrialEntryContentWidget.ProgramTrialEntryContentWidget_C.SetSelected
// 0x0002 (0x0002 - 0x0000)
struct ProgramTrialEntryContentWidget_C_SetSelected final
{
public:
	bool                                          bInSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialEntryContentWidget_C_SetSelected) == 0x000001, "Wrong alignment on ProgramTrialEntryContentWidget_C_SetSelected");
static_assert(sizeof(ProgramTrialEntryContentWidget_C_SetSelected) == 0x000002, "Wrong size on ProgramTrialEntryContentWidget_C_SetSelected");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetSelected, bInSelected) == 0x000000, "Member 'ProgramTrialEntryContentWidget_C_SetSelected::bInSelected' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetSelected, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'ProgramTrialEntryContentWidget_C_SetSelected::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ProgramTrialEntryContentWidget.ProgramTrialEntryContentWidget_C.SetIsMatchOwner
// 0x0001 (0x0001 - 0x0000)
struct ProgramTrialEntryContentWidget_C_SetIsMatchOwner final
{
public:
	bool                                          bIsMatchOwner;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialEntryContentWidget_C_SetIsMatchOwner) == 0x000001, "Wrong alignment on ProgramTrialEntryContentWidget_C_SetIsMatchOwner");
static_assert(sizeof(ProgramTrialEntryContentWidget_C_SetIsMatchOwner) == 0x000001, "Wrong size on ProgramTrialEntryContentWidget_C_SetIsMatchOwner");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_SetIsMatchOwner, bIsMatchOwner) == 0x000000, "Member 'ProgramTrialEntryContentWidget_C_SetIsMatchOwner::bIsMatchOwner' has a wrong offset!");

// Function ProgramTrialEntryContentWidget.ProgramTrialEntryContentWidget_C.Init
// 0x01B8 (0x01B8 - 0x0000)
struct ProgramTrialEntryContentWidget_C_Init final
{
public:
	class UProgramTrialBlockWidget_C*             Param_ParentBlock;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRBTrialInfoRow                        TrialInfo;                                         // 0x0008(0x0158)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Param_bLocked;                                     // 0x0160(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_bCompleted;                                  // 0x0161(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_BestScore;                                   // 0x0164(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bSelected;                                   // 0x0168(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsMatchOwner;                                     // 0x0169(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0188(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x01A0(0x0018)()
};
static_assert(alignof(ProgramTrialEntryContentWidget_C_Init) == 0x000008, "Wrong alignment on ProgramTrialEntryContentWidget_C_Init");
static_assert(sizeof(ProgramTrialEntryContentWidget_C_Init) == 0x0001B8, "Wrong size on ProgramTrialEntryContentWidget_C_Init");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, Param_ParentBlock) == 0x000000, "Member 'ProgramTrialEntryContentWidget_C_Init::Param_ParentBlock' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, TrialInfo) == 0x000008, "Member 'ProgramTrialEntryContentWidget_C_Init::TrialInfo' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, Param_bLocked) == 0x000160, "Member 'ProgramTrialEntryContentWidget_C_Init::Param_bLocked' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, Param_bCompleted) == 0x000161, "Member 'ProgramTrialEntryContentWidget_C_Init::Param_bCompleted' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, Param_BestScore) == 0x000164, "Member 'ProgramTrialEntryContentWidget_C_Init::Param_BestScore' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, Param_bSelected) == 0x000168, "Member 'ProgramTrialEntryContentWidget_C_Init::Param_bSelected' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, bIsMatchOwner) == 0x000169, "Member 'ProgramTrialEntryContentWidget_C_Init::bIsMatchOwner' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, Temp_bool_Variable) == 0x00016A, "Member 'ProgramTrialEntryContentWidget_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, Temp_text_Variable) == 0x000170, "Member 'ProgramTrialEntryContentWidget_C_Init::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, Temp_text_Variable_1) == 0x000188, "Member 'ProgramTrialEntryContentWidget_C_Init::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Init, K2Node_Select_Default) == 0x0001A0, "Member 'ProgramTrialEntryContentWidget_C_Init::K2Node_Select_Default' has a wrong offset!");

// Function ProgramTrialEntryContentWidget.ProgramTrialEntryContentWidget_C.Setup
// 0x0068 (0x0068 - 0x0000)
struct ProgramTrialEntryContentWidget_C_Setup final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x2];                                        // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x3];                                        // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x7];                                        // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_NormalizedScoreToText_ReturnValue;        // 0x0048(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialEntryContentWidget_C_Setup) == 0x000008, "Wrong alignment on ProgramTrialEntryContentWidget_C_Setup");
static_assert(sizeof(ProgramTrialEntryContentWidget_C_Setup) == 0x000068, "Wrong size on ProgramTrialEntryContentWidget_C_Setup");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, Temp_bool_Variable) == 0x000000, "Member 'ProgramTrialEntryContentWidget_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, Temp_float_Variable) == 0x000004, "Member 'ProgramTrialEntryContentWidget_C_Setup::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, Temp_float_Variable_1) == 0x000008, "Member 'ProgramTrialEntryContentWidget_C_Setup::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, Temp_bool_Variable_1) == 0x00000C, "Member 'ProgramTrialEntryContentWidget_C_Setup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, Temp_byte_Variable) == 0x00000D, "Member 'ProgramTrialEntryContentWidget_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, Temp_byte_Variable_1) == 0x00000E, "Member 'ProgramTrialEntryContentWidget_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, Temp_bool_Variable_2) == 0x00000F, "Member 'ProgramTrialEntryContentWidget_C_Setup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, Temp_byte_Variable_2) == 0x000010, "Member 'ProgramTrialEntryContentWidget_C_Setup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, Temp_byte_Variable_3) == 0x000011, "Member 'ProgramTrialEntryContentWidget_C_Setup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_BooleanOR_ReturnValue_1) == 0x000015, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, K2Node_Select_Default) == 0x000018, "Member 'ProgramTrialEntryContentWidget_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_BooleanOR_ReturnValue_2) == 0x00001C, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000030, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_NormalizedScoreToText_ReturnValue) == 0x000048, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_NormalizedScoreToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_Not_PreBool_ReturnValue_1) == 0x000060, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, K2Node_Select_Default_1) == 0x000061, "Member 'ProgramTrialEntryContentWidget_C_Setup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, CallFunc_BooleanAND_ReturnValue_1) == 0x000062, "Member 'ProgramTrialEntryContentWidget_C_Setup::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_Setup, K2Node_Select_Default_2) == 0x000063, "Member 'ProgramTrialEntryContentWidget_C_Setup::K2Node_Select_Default_2' has a wrong offset!");

// Function ProgramTrialEntryContentWidget.ProgramTrialEntryContentWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ProgramTrialEntryContentWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialEntryContentWidget_C_PreConstruct) == 0x000001, "Wrong alignment on ProgramTrialEntryContentWidget_C_PreConstruct");
static_assert(sizeof(ProgramTrialEntryContentWidget_C_PreConstruct) == 0x000001, "Wrong size on ProgramTrialEntryContentWidget_C_PreConstruct");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ProgramTrialEntryContentWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ProgramTrialEntryContentWidget.ProgramTrialEntryContentWidget_C.ExecuteUbergraph_ProgramTrialEntryContentWidget
// 0x001C (0x001C - 0x0000)
struct ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEventGlobal_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget) == 0x000004, "Wrong alignment on ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget");
static_assert(sizeof(ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget) == 0x00001C, "Wrong size on ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget, EntryPoint) == 0x000000, "Member 'ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget, Temp_delegate_Variable) == 0x000004, "Member 'ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget, CallFunc_PostEventGlobal_ReturnValue) == 0x000014, "Member 'ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget::CallFunc_PostEventGlobal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget, K2Node_Event_IsDesignTime) == 0x000018, "Member 'ProgramTrialEntryContentWidget_C_ExecuteUbergraph_ProgramTrialEntryContentWidget::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ProgramTrialEntryContentWidget.ProgramTrialEntryContentWidget_C.OnTrialSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ProgramTrialEntryContentWidget_C_OnTrialSelected__DelegateSignature final
{
public:
	class FName                                   Param_TrialId;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgramTrialEntryContentWidget_C_OnTrialSelected__DelegateSignature) == 0x000004, "Wrong alignment on ProgramTrialEntryContentWidget_C_OnTrialSelected__DelegateSignature");
static_assert(sizeof(ProgramTrialEntryContentWidget_C_OnTrialSelected__DelegateSignature) == 0x000008, "Wrong size on ProgramTrialEntryContentWidget_C_OnTrialSelected__DelegateSignature");
static_assert(offsetof(ProgramTrialEntryContentWidget_C_OnTrialSelected__DelegateSignature, Param_TrialId) == 0x000000, "Member 'ProgramTrialEntryContentWidget_C_OnTrialSelected__DelegateSignature::Param_TrialId' has a wrong offset!");

}

