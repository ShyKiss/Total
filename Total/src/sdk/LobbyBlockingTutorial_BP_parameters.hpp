#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LobbyBlockingTutorial_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LobbyBlockingTutorial_BP.LobbyBlockingTutorial_BP_C.IsOverlappingLocalPlayer
// 0x0028 (0x0028 - 0x0000)
struct LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer final
{
public:
	bool                                          bValue;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetLocalPawn_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer) == 0x000008, "Wrong alignment on LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer");
static_assert(sizeof(LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer) == 0x000028, "Wrong size on LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer, bValue) == 0x000000, "Member 'LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer::bValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer, CallFunc_GetLocalPawn_ReturnValue) == 0x000008, "Member 'LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer::CallFunc_GetLocalPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000010, "Member 'LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'LobbyBlockingTutorial_BP_C_IsOverlappingLocalPlayer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function LobbyBlockingTutorial_BP.LobbyBlockingTutorial_BP_C.OnOverlapp
// 0x00A8 (0x00A8 - 0x0000)
struct LobbyBlockingTutorial_BP_C_OnOverlapp final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DE[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LobbyBlockingTutorial_BP_C_OnOverlapp) == 0x000008, "Wrong alignment on LobbyBlockingTutorial_BP_C_OnOverlapp");
static_assert(sizeof(LobbyBlockingTutorial_BP_C_OnOverlapp) == 0x0000A8, "Wrong size on LobbyBlockingTutorial_BP_C_OnOverlapp");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_OnOverlapp, OverlappedComponent) == 0x000000, "Member 'LobbyBlockingTutorial_BP_C_OnOverlapp::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_OnOverlapp, OtherActor) == 0x000008, "Member 'LobbyBlockingTutorial_BP_C_OnOverlapp::OtherActor' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_OnOverlapp, OtherComp) == 0x000010, "Member 'LobbyBlockingTutorial_BP_C_OnOverlapp::OtherComp' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_OnOverlapp, OtherBodyIndex) == 0x000018, "Member 'LobbyBlockingTutorial_BP_C_OnOverlapp::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_OnOverlapp, bFromSweep) == 0x00001C, "Member 'LobbyBlockingTutorial_BP_C_OnOverlapp::bFromSweep' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_OnOverlapp, SweepResult) == 0x000020, "Member 'LobbyBlockingTutorial_BP_C_OnOverlapp::SweepResult' has a wrong offset!");

// Function LobbyBlockingTutorial_BP.LobbyBlockingTutorial_BP_C.OnPlayerInitReplicated
// 0x0008 (0x0008 - 0x0000)
struct LobbyBlockingTutorial_BP_C_OnPlayerInitReplicated final
{
public:
	class ARBPlayer*                              Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyBlockingTutorial_BP_C_OnPlayerInitReplicated) == 0x000008, "Wrong alignment on LobbyBlockingTutorial_BP_C_OnPlayerInitReplicated");
static_assert(sizeof(LobbyBlockingTutorial_BP_C_OnPlayerInitReplicated) == 0x000008, "Wrong size on LobbyBlockingTutorial_BP_C_OnPlayerInitReplicated");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_OnPlayerInitReplicated, Player) == 0x000000, "Member 'LobbyBlockingTutorial_BP_C_OnPlayerInitReplicated::Player' has a wrong offset!");

// Function LobbyBlockingTutorial_BP.LobbyBlockingTutorial_BP_C.ExecuteUbergraph_LobbyBlockingTutorial_BP
// 0x0128 (0x0128 - 0x0000)
struct LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetNarrator_ClientOnly_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E0[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ARBPlayer* Player)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasPlayedTutorial_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E1[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E2[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0048(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ARBPlayer*                              CallFunc_GetLocalPawn_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverlappingLocalPlayer_bValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShowingLoadingScreen_ReturnValue;       // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E3[0x1];                                     // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_33E4[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameStateBase*                       CallFunc_GetRBGameStateBase_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E5[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBGameStateBase*                       CallFunc_GetRBGameStateBase_ReturnValue_1;         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_CustomEvent_player;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E6[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPlayer*                              CallFunc_GetLocalPawn_ReturnValue_1;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP) == 0x000008, "Wrong alignment on LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP");
static_assert(sizeof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP) == 0x000128, "Wrong size on LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, EntryPoint) == 0x000000, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_GetNarrator_ClientOnly_ReturnValue) == 0x000008, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_GetNarrator_ClientOnly_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_HasPlayedTutorial_ReturnValue) == 0x000024, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_HasPlayedTutorial_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, K2Node_CustomEvent_OverlappedComponent) == 0x000028, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, K2Node_CustomEvent_OtherActor) == 0x000030, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, K2Node_CustomEvent_OtherComp) == 0x000038, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, K2Node_CustomEvent_OtherBodyIndex) == 0x000040, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, K2Node_CustomEvent_bFromSweep) == 0x000044, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, K2Node_CustomEvent_SweepResult) == 0x000048, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_GetLocalPawn_ReturnValue) == 0x0000D0, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_GetLocalPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D8, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_IsOverlappingLocalPlayer_bValue) == 0x0000D9, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_IsOverlappingLocalPlayer_bValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_IsShowingLoadingScreen_ReturnValue) == 0x0000DA, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_IsShowingLoadingScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000DC, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_GetRBGameStateBase_ReturnValue) == 0x0000F0, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_GetRBGameStateBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_GetRBGameStateBase_ReturnValue_1) == 0x000100, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_GetRBGameStateBase_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, K2Node_CustomEvent_player) == 0x000108, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::K2Node_CustomEvent_player' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_GetLocalPawn_ReturnValue_1) == 0x000118, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_GetLocalPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000120, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP, CallFunc_BooleanOR_ReturnValue) == 0x000121, "Member 'LobbyBlockingTutorial_BP_C_ExecuteUbergraph_LobbyBlockingTutorial_BP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

