#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrialDetailsNotificationHudWidget

#include "Basic.hpp"

#include "TrialDetailsNotificationHudWidget_classes.hpp"
#include "TrialDetailsNotificationHudWidget_parameters.hpp"


namespace SDK
{

// Function TrialDetailsNotificationHudWidget.TrialDetailsNotificationHudWidget_C.ExecuteUbergraph_TrialDetailsNotificationHudWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTrialDetailsNotificationHudWidget_C::ExecuteUbergraph_TrialDetailsNotificationHudWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialDetailsNotificationHudWidget_C", "ExecuteUbergraph_TrialDetailsNotificationHudWidget");

	Params::TrialDetailsNotificationHudWidget_C_ExecuteUbergraph_TrialDetailsNotificationHudWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrialDetailsNotificationHudWidget.TrialDetailsNotificationHudWidget_C.Event_Show
// (Event, Public, BlueprintEvent)

void UTrialDetailsNotificationHudWidget_C::Event_Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialDetailsNotificationHudWidget_C", "Event_Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrialDetailsNotificationHudWidget.TrialDetailsNotificationHudWidget_C.Event_Hide
// (Event, Public, BlueprintEvent)

void UTrialDetailsNotificationHudWidget_C::Event_Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialDetailsNotificationHudWidget_C", "Event_Hide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TrialDetailsNotificationHudWidget.TrialDetailsNotificationHudWidget_C.Show
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRBTrialHudNotificationDetails   Details                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UTrialDetailsNotificationHudWidget_C::Show(const struct FRBTrialHudNotificationDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialDetailsNotificationHudWidget_C", "Show");

	Params::TrialDetailsNotificationHudWidget_C_Show Parms{};

	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrialDetailsNotificationHudWidget.TrialDetailsNotificationHudWidget_C.OnLoaded_76A8266E46F538C023072980EA257A98
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTrialDetailsNotificationHudWidget_C::OnLoaded_76A8266E46F538C023072980EA257A98(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialDetailsNotificationHudWidget_C", "OnLoaded_76A8266E46F538C023072980EA257A98");

	Params::TrialDetailsNotificationHudWidget_C_OnLoaded_76A8266E46F538C023072980EA257A98 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TrialDetailsNotificationHudWidget.TrialDetailsNotificationHudWidget_C.Hide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPlayTransition                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTrialDetailsNotificationHudWidget_C::Hide(bool bPlayTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrialDetailsNotificationHudWidget_C", "Hide");

	Params::TrialDetailsNotificationHudWidget_C_Hide Parms{};

	Parms.bPlayTransition = bPlayTransition;

	UObject::ProcessEvent(Func, &Parms);
}

}

