#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUDObjectives

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function HUDObjectives.HUDObjectives_C.ExecuteUbergraph_HUDObjectives
// 0x00C8 (0x00C8 - 0x0000)
struct HUDObjectives_C_ExecuteUbergraph_HUDObjectives final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URBObjectiveManager*                    CallFunc_GetRBObjectiveManager_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBBaseObjectiveCoordinator*            K2Node_CustomEvent_coordinator_4;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectiveCoordinatorState                    K2Node_CustomEvent_state;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBBaseObjectiveCoordinator*            K2Node_CustomEvent_coordinator_3;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isProgressionInProgress;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_isCompletedByLocalPlayer;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBBaseObjectiveCoordinator*            K2Node_CustomEvent_coordinator_2;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_progressRatio;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isPositiveProgress;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_objectiveText;                  // 0x0058(0x0018)(ConstParm)
	bool                                          K2Node_CustomEvent_bForceShow;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBBaseObjectiveCoordinator*            K2Node_CustomEvent_coordinator_1;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_player;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_objective_1;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBBaseObjectiveCoordinator*            K2Node_CustomEvent_coordinator;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_objective;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInValidHudMode_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ARBBaseObjectiveCoordinator* Coordinator, EObjectiveCoordinatorState State)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBHUD*                                 CallFunc_GetHUD_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives) == 0x000008, "Wrong alignment on HUDObjectives_C_ExecuteUbergraph_HUDObjectives");
static_assert(sizeof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives) == 0x0000C8, "Wrong size on HUDObjectives_C_ExecuteUbergraph_HUDObjectives");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, EntryPoint) == 0x000000, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, CallFunc_GetRBObjectiveManager_ReturnValue) == 0x000008, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::CallFunc_GetRBObjectiveManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_coordinator_4) == 0x000018, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_coordinator_4' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_state) == 0x000020, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_state' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_coordinator_3) == 0x000038, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_coordinator_3' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_isProgressionInProgress) == 0x000040, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_isProgressionInProgress' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_isCompletedByLocalPlayer) == 0x000041, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_isCompletedByLocalPlayer' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_coordinator_2) == 0x000048, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_coordinator_2' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_progressRatio) == 0x000050, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_progressRatio' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_isPositiveProgress) == 0x000054, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_isPositiveProgress' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_objectiveText) == 0x000058, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_objectiveText' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_bForceShow) == 0x000070, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_bForceShow' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_coordinator_1) == 0x000078, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_coordinator_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_player) == 0x000080, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_player' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_objective_1) == 0x000088, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_objective_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_coordinator) == 0x000090, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_coordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CustomEvent_objective) == 0x000098, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CustomEvent_objective' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, CallFunc_IsInValidHudMode_ReturnValue) == 0x0000A0, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::CallFunc_IsInValidHudMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A4, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, CallFunc_GetHUD_ReturnValue) == 0x0000B8, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ExecuteUbergraph_HUDObjectives, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'HUDObjectives_C_ExecuteUbergraph_HUDObjectives::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.OnSingleCompletedObjectiveReverted
// 0x0010 (0x0010 - 0x0000)
struct HUDObjectives_C_OnSingleCompletedObjectiveReverted final
{
public:
	class ARBBaseObjectiveCoordinator*            Coordinator;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Objective;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDObjectives_C_OnSingleCompletedObjectiveReverted) == 0x000008, "Wrong alignment on HUDObjectives_C_OnSingleCompletedObjectiveReverted");
static_assert(sizeof(HUDObjectives_C_OnSingleCompletedObjectiveReverted) == 0x000010, "Wrong size on HUDObjectives_C_OnSingleCompletedObjectiveReverted");
static_assert(offsetof(HUDObjectives_C_OnSingleCompletedObjectiveReverted, Coordinator) == 0x000000, "Member 'HUDObjectives_C_OnSingleCompletedObjectiveReverted::Coordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnSingleCompletedObjectiveReverted, Objective) == 0x000008, "Member 'HUDObjectives_C_OnSingleCompletedObjectiveReverted::Objective' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.OnSingleObjectiveCompleted
// 0x0018 (0x0018 - 0x0000)
struct HUDObjectives_C_OnSingleObjectiveCompleted final
{
public:
	class ARBBaseObjectiveCoordinator*            Coordinator;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Objective;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDObjectives_C_OnSingleObjectiveCompleted) == 0x000008, "Wrong alignment on HUDObjectives_C_OnSingleObjectiveCompleted");
static_assert(sizeof(HUDObjectives_C_OnSingleObjectiveCompleted) == 0x000018, "Wrong size on HUDObjectives_C_OnSingleObjectiveCompleted");
static_assert(offsetof(HUDObjectives_C_OnSingleObjectiveCompleted, Coordinator) == 0x000000, "Member 'HUDObjectives_C_OnSingleObjectiveCompleted::Coordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnSingleObjectiveCompleted, Player) == 0x000008, "Member 'HUDObjectives_C_OnSingleObjectiveCompleted::Player' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnSingleObjectiveCompleted, Objective) == 0x000010, "Member 'HUDObjectives_C_OnSingleObjectiveCompleted::Objective' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.OnProgressChanged
// 0x0030 (0x0030 - 0x0000)
struct HUDObjectives_C_OnProgressChanged final
{
public:
	class ARBBaseObjectiveCoordinator*            Coordinator;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProgressRatio;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPositiveProgress;                                // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ObjectiveText;                                     // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bForceShow;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDObjectives_C_OnProgressChanged) == 0x000008, "Wrong alignment on HUDObjectives_C_OnProgressChanged");
static_assert(sizeof(HUDObjectives_C_OnProgressChanged) == 0x000030, "Wrong size on HUDObjectives_C_OnProgressChanged");
static_assert(offsetof(HUDObjectives_C_OnProgressChanged, Coordinator) == 0x000000, "Member 'HUDObjectives_C_OnProgressChanged::Coordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnProgressChanged, ProgressRatio) == 0x000008, "Member 'HUDObjectives_C_OnProgressChanged::ProgressRatio' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnProgressChanged, IsPositiveProgress) == 0x00000C, "Member 'HUDObjectives_C_OnProgressChanged::IsPositiveProgress' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnProgressChanged, ObjectiveText) == 0x000010, "Member 'HUDObjectives_C_OnProgressChanged::ObjectiveText' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnProgressChanged, bForceShow) == 0x000028, "Member 'HUDObjectives_C_OnProgressChanged::bForceShow' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.OnCompletionInProgressChanged
// 0x0010 (0x0010 - 0x0000)
struct HUDObjectives_C_OnCompletionInProgressChanged final
{
public:
	class ARBBaseObjectiveCoordinator*            Coordinator;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsProgressionInProgress;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCompletedByLocalPlayer;                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDObjectives_C_OnCompletionInProgressChanged) == 0x000008, "Wrong alignment on HUDObjectives_C_OnCompletionInProgressChanged");
static_assert(sizeof(HUDObjectives_C_OnCompletionInProgressChanged) == 0x000010, "Wrong size on HUDObjectives_C_OnCompletionInProgressChanged");
static_assert(offsetof(HUDObjectives_C_OnCompletionInProgressChanged, Coordinator) == 0x000000, "Member 'HUDObjectives_C_OnCompletionInProgressChanged::Coordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnCompletionInProgressChanged, IsProgressionInProgress) == 0x000008, "Member 'HUDObjectives_C_OnCompletionInProgressChanged::IsProgressionInProgress' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnCompletionInProgressChanged, IsCompletedByLocalPlayer) == 0x000009, "Member 'HUDObjectives_C_OnCompletionInProgressChanged::IsCompletedByLocalPlayer' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.StateChanged
// 0x0010 (0x0010 - 0x0000)
struct HUDObjectives_C_StateChanged final
{
public:
	class ARBBaseObjectiveCoordinator*            Coordinator;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectiveCoordinatorState                    State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDObjectives_C_StateChanged) == 0x000008, "Wrong alignment on HUDObjectives_C_StateChanged");
static_assert(sizeof(HUDObjectives_C_StateChanged) == 0x000010, "Wrong size on HUDObjectives_C_StateChanged");
static_assert(offsetof(HUDObjectives_C_StateChanged, Coordinator) == 0x000000, "Member 'HUDObjectives_C_StateChanged::Coordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_StateChanged, State) == 0x000008, "Member 'HUDObjectives_C_StateChanged::State' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.OnObjectiveStarted
// 0x00E0 (0x00E0 - 0x0000)
struct HUDObjectives_C_OnObjectiveStarted final
{
public:
	class ARBBaseObjectiveCoordinator*            Coordinator;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsertIndex;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentUIIndex;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USecondaryObjectiveWidget_C*            CreatedSecondaryWidget;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBBaseObjectiveCoordinator*            CurrentCoordinator;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserFacing_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USecondaryObjectiveWidget_C*            CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USecondaryObjectiveWidget_C*            CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USecondaryObjectiveWidget_C*            CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_3;      // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class ARBBaseObjectiveCoordinator* Coordinator, bool IsProgressionInProgress, bool IsCompletedByLocalPlayer)> K2Node_CreateDelegate_OutputDelegate;              // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ARBBaseObjectiveCoordinator* Coordinator, class AActor* Objective)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ARBBaseObjectiveCoordinator* Coordinator, class AActor* Player, class AActor* Objective)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ARBBaseObjectiveCoordinator* Coordinator, float ProgressRatio, bool IsPositiveProgress, class FText& ObjectiveText, bool bForceShow)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(HUDObjectives_C_OnObjectiveStarted) == 0x000008, "Wrong alignment on HUDObjectives_C_OnObjectiveStarted");
static_assert(sizeof(HUDObjectives_C_OnObjectiveStarted) == 0x0000E0, "Wrong size on HUDObjectives_C_OnObjectiveStarted");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, Coordinator) == 0x000000, "Member 'HUDObjectives_C_OnObjectiveStarted::Coordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, InsertIndex) == 0x000008, "Member 'HUDObjectives_C_OnObjectiveStarted::InsertIndex' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CurrentUIIndex) == 0x00000C, "Member 'HUDObjectives_C_OnObjectiveStarted::CurrentUIIndex' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CreatedSecondaryWidget) == 0x000010, "Member 'HUDObjectives_C_OnObjectiveStarted::CreatedSecondaryWidget' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CurrentCoordinator) == 0x000018, "Member 'HUDObjectives_C_OnObjectiveStarted::CurrentCoordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_IsUserFacing_ReturnValue) == 0x000020, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_IsUserFacing_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'HUDObjectives_C_OnObjectiveStarted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'HUDObjectives_C_OnObjectiveStarted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'HUDObjectives_C_OnObjectiveStarted::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000034, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000038, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000040, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Create_ReturnValue) == 0x000048, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x000050, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Array_Get_Item) == 0x000058, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_AddChildToVerticalBox_ReturnValue_2) == 0x000068, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_AddChildToVerticalBox_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'HUDObjectives_C_OnObjectiveStarted::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_AddChildToVerticalBox_ReturnValue_3) == 0x000090, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_AddChildToVerticalBox_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Less_IntInt_ReturnValue_2) == 0x000099, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_Greater_IntInt_ReturnValue) == 0x00009A, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, CallFunc_BooleanOR_ReturnValue) == 0x00009B, "Member 'HUDObjectives_C_OnObjectiveStarted::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'HUDObjectives_C_OnObjectiveStarted::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000AC, "Member 'HUDObjectives_C_OnObjectiveStarted::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000BC, "Member 'HUDObjectives_C_OnObjectiveStarted::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_OnObjectiveStarted, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000CC, "Member 'HUDObjectives_C_OnObjectiveStarted::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.CanDisplayObjective
// 0x0010 (0x0010 - 0x0000)
struct HUDObjectives_C_CanDisplayObjective final
{
public:
	class ARBBaseObjectiveCoordinator*            Coordinator;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanDisplay;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDObjectives_C_CanDisplayObjective) == 0x000008, "Wrong alignment on HUDObjectives_C_CanDisplayObjective");
static_assert(sizeof(HUDObjectives_C_CanDisplayObjective) == 0x000010, "Wrong size on HUDObjectives_C_CanDisplayObjective");
static_assert(offsetof(HUDObjectives_C_CanDisplayObjective, Coordinator) == 0x000000, "Member 'HUDObjectives_C_CanDisplayObjective::Coordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_CanDisplayObjective, CanDisplay) == 0x000008, "Member 'HUDObjectives_C_CanDisplayObjective::CanDisplay' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_CanDisplayObjective, CallFunc_TextIsEmpty_ReturnValue) == 0x000009, "Member 'HUDObjectives_C_CanDisplayObjective::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_CanDisplayObjective, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'HUDObjectives_C_CanDisplayObjective::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.RefreshObjectivesTexts
// 0x0040 (0x0040 - 0x0000)
struct HUDObjectives_C_RefreshObjectivesTexts final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USecondaryObjectiveWidget_C*            K2Node_DynamicCast_AsSecondary_Objective_Widget;   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUDObjectives_C_RefreshObjectivesTexts) == 0x000008, "Wrong alignment on HUDObjectives_C_RefreshObjectivesTexts");
static_assert(sizeof(HUDObjectives_C_RefreshObjectivesTexts) == 0x000040, "Wrong size on HUDObjectives_C_RefreshObjectivesTexts");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, Temp_int_Array_Index_Variable) == 0x000000, "Member 'HUDObjectives_C_RefreshObjectivesTexts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'HUDObjectives_C_RefreshObjectivesTexts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'HUDObjectives_C_RefreshObjectivesTexts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'HUDObjectives_C_RefreshObjectivesTexts::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, CallFunc_Array_Get_Item) == 0x000020, "Member 'HUDObjectives_C_RefreshObjectivesTexts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'HUDObjectives_C_RefreshObjectivesTexts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, K2Node_DynamicCast_AsSecondary_Objective_Widget) == 0x000030, "Member 'HUDObjectives_C_RefreshObjectivesTexts::K2Node_DynamicCast_AsSecondary_Objective_Widget' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'HUDObjectives_C_RefreshObjectivesTexts::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'HUDObjectives_C_RefreshObjectivesTexts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_RefreshObjectivesTexts, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'HUDObjectives_C_RefreshObjectivesTexts::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.ForceShowObjectives
// 0x0090 (0x0090 - 0x0000)
struct HUDObjectives_C_ForceShowObjectives final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBBaseObjectiveCoordinator*            Coordinator;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USecondaryObjectiveWidget_C*            K2Node_DynamicCast_AsSecondary_Objective_Widget;   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USecondaryObjectiveWidget_C*            K2Node_DynamicCast_AsSecondary_Objective_Widget_1; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDObjectives_C_ForceShowObjectives) == 0x000008, "Wrong alignment on HUDObjectives_C_ForceShowObjectives");
static_assert(sizeof(HUDObjectives_C_ForceShowObjectives) == 0x000090, "Wrong size on HUDObjectives_C_ForceShowObjectives");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, Duration) == 0x000000, "Member 'HUDObjectives_C_ForceShowObjectives::Duration' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, Coordinator) == 0x000008, "Member 'HUDObjectives_C_ForceShowObjectives::Coordinator' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, Temp_int_Array_Index_Variable) == 0x000010, "Member 'HUDObjectives_C_ForceShowObjectives::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'HUDObjectives_C_ForceShowObjectives::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'HUDObjectives_C_ForceShowObjectives::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_Array_Get_Item) == 0x000038, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, K2Node_DynamicCast_AsSecondary_Objective_Widget) == 0x000040, "Member 'HUDObjectives_C_ForceShowObjectives::K2Node_DynamicCast_AsSecondary_Objective_Widget' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'HUDObjectives_C_ForceShowObjectives::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'HUDObjectives_C_ForceShowObjectives::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_GetAllChildren_ReturnValue_1) == 0x000058, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, K2Node_DynamicCast_AsSecondary_Objective_Widget_1) == 0x000078, "Member 'HUDObjectives_C_ForceShowObjectives::K2Node_DynamicCast_AsSecondary_Objective_Widget_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'HUDObjectives_C_ForceShowObjectives::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000089, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_ForceShowObjectives, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'HUDObjectives_C_ForceShowObjectives::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function HUDObjectives.HUDObjectives_C.Init
// 0x0180 (0x0180 - 0x0000)
struct HUDObjectives_C_Init final
{
public:
	TArray<class ARBBaseObjectiveCoordinator*>    Coordinators;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TSet<class ARBBaseObjectiveCoordinator*>      NonStartedObjCoord;                                // 0x0010(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URBObjectiveManager*                    CallFunc_GetRBObjectiveManager_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARBBaseObjectiveCoordinator*>    CallFunc_BP_GetAllObjectiveCoordinators_outCoordinators; // 0x0078(0x0010)(ReferenceParm)
	TArray<class ARBBaseObjectiveCoordinator*>    CallFunc_BP_GetStartedObjectiveCoordinators_outCoordinators; // 0x0088(0x0010)(ReferenceParm)
	class ARBBaseObjectiveCoordinator*            CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0040)(HasGetValueTypeHash)
	TArray<class ARBBaseObjectiveCoordinator*>    CallFunc_Set_ToArray_Result;                       // 0x0110(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class ARBBaseObjectiveCoordinator*            CallFunc_Array_Get_Item_1;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_173[0x1];                                      // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUDObjectives_C_Init) == 0x000008, "Wrong alignment on HUDObjectives_C_Init");
static_assert(sizeof(HUDObjectives_C_Init) == 0x000180, "Wrong size on HUDObjectives_C_Init");
static_assert(offsetof(HUDObjectives_C_Init, Coordinators) == 0x000000, "Member 'HUDObjectives_C_Init::Coordinators' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, NonStartedObjCoord) == 0x000010, "Member 'HUDObjectives_C_Init::NonStartedObjCoord' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, Temp_int_Array_Index_Variable) == 0x000060, "Member 'HUDObjectives_C_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'HUDObjectives_C_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'HUDObjectives_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'HUDObjectives_C_Init::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_GetRBObjectiveManager_ReturnValue) == 0x000070, "Member 'HUDObjectives_C_Init::CallFunc_GetRBObjectiveManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_BP_GetAllObjectiveCoordinators_outCoordinators) == 0x000078, "Member 'HUDObjectives_C_Init::CallFunc_BP_GetAllObjectiveCoordinators_outCoordinators' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_BP_GetStartedObjectiveCoordinators_outCoordinators) == 0x000088, "Member 'HUDObjectives_C_Init::CallFunc_BP_GetStartedObjectiveCoordinators_outCoordinators' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Array_Get_Item) == 0x000098, "Member 'HUDObjectives_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'HUDObjectives_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_GetDisplayName_ReturnValue) == 0x0000A8, "Member 'HUDObjectives_C_Init::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'HUDObjectives_C_Init::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'HUDObjectives_C_Init::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Set_ToArray_Result) == 0x000110, "Member 'HUDObjectives_C_Init::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, K2Node_MakeArray_Array) == 0x000120, "Member 'HUDObjectives_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'HUDObjectives_C_Init::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Format_ReturnValue) == 0x000138, "Member 'HUDObjectives_C_Init::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Array_AddUnique_ReturnValue) == 0x000150, "Member 'HUDObjectives_C_Init::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Conv_TextToString_ReturnValue) == 0x000158, "Member 'HUDObjectives_C_Init::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000168, "Member 'HUDObjectives_C_Init::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Array_Length_ReturnValue_1) == 0x00016C, "Member 'HUDObjectives_C_Init::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Not_PreBool_ReturnValue) == 0x000170, "Member 'HUDObjectives_C_Init::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x000171, "Member 'HUDObjectives_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_BooleanAND_ReturnValue) == 0x000172, "Member 'HUDObjectives_C_Init::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, Temp_int_Loop_Counter_Variable_1) == 0x000174, "Member 'HUDObjectives_C_Init::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Less_IntInt_ReturnValue_1) == 0x000178, "Member 'HUDObjectives_C_Init::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUDObjectives_C_Init, CallFunc_Add_IntInt_ReturnValue_1) == 0x00017C, "Member 'HUDObjectives_C_Init::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

