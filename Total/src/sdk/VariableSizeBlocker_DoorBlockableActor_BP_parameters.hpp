#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VariableSizeBlocker_DoorBlockableActor_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "OPP_structs.hpp"


namespace SDK::Params
{

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP
// 0x00B8 (0x00B8 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBDoorBlockerSkill*                    K2Node_DynamicCast_AsRB_Door_Blocker_Skill;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBDamageableComponent*                 K2Node_ComponentBoundEvent_DamageableComponent_1;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BP_GetRequiredNPCBashCount_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                K2Node_Event_owner;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_blockedActor;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBDoorBlockerSkillItem*                K2Node_Event_doorBlocker;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADoorBlocker_SkillItem_BP_C*            K2Node_DynamicCast_AsDoor_Blocker_Skill_Item_BP;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPawn*                                K2Node_Event_pawn_2;                               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UESOP_Barricade_AnimBP_C*               K2Node_DynamicCast_AsESOP_Barricade_Anim_BP;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBPawn*                                K2Node_Event_pawn_1;                               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPawn*                                K2Node_Event_pawn;                                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOnStartedBashing_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URBDamageableComponent*                 K2Node_ComponentBoundEvent_DamageableComponent;    // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_isDestroyed;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetDurabilityRatio_ReturnValue;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP) == 0x0000B8, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, EntryPoint) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_DynamicCast_AsRB_Door_Blocker_Skill) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_DynamicCast_AsRB_Door_Blocker_Skill' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_ComponentBoundEvent_DamageableComponent_1) == 0x000018, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_ComponentBoundEvent_DamageableComponent_1' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, CallFunc_BP_GetRequiredNPCBashCount_ReturnValue) == 0x000020, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::CallFunc_BP_GetRequiredNPCBashCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_Event_owner) == 0x000028, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_Event_owner' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_Event_blockedActor) == 0x000038, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_Event_blockedActor' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_DynamicCast_AsRB_Player) == 0x000040, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_Event_doorBlocker) == 0x000050, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_Event_doorBlocker' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_DynamicCast_AsDoor_Blocker_Skill_Item_BP) == 0x000058, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_DynamicCast_AsDoor_Blocker_Skill_Item_BP' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, CallFunc_GetAnimInstance_ReturnValue) == 0x000068, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_Event_pawn_2) == 0x000070, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_Event_pawn_2' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_DynamicCast_AsESOP_Barricade_Anim_BP) == 0x000078, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_DynamicCast_AsESOP_Barricade_Anim_BP' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_Event_pawn_1) == 0x000088, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_Event_pawn_1' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_Event_pawn) == 0x000090, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_Event_pawn' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, CallFunc_GetOnStartedBashing_ReturnValue) == 0x000098, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::CallFunc_GetOnStartedBashing_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_ComponentBoundEvent_DamageableComponent) == 0x0000A0, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_ComponentBoundEvent_DamageableComponent' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, K2Node_ComponentBoundEvent_isDestroyed) == 0x0000A8, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::K2Node_ComponentBoundEvent_isDestroyed' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, CallFunc_BP_GetDurabilityRatio_ReturnValue) == 0x0000AC, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::CallFunc_BP_GetDurabilityRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP, CallFunc_HasAuthority_ReturnValue) == 0x0000B0, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ExecuteUbergraph_VariableSizeBlocker_DoorBlockableActor_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature final
{
public:
	class URBDamageableComponent*                 DamageableComponent_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDestroyed;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature) == 0x000010, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature, DamageableComponent_0) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature::DamageableComponent_0' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature, IsDestroyed) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__VariableSizeBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_0_OnDamageableDamaged__DelegateSignature::IsDestroyed' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.OnBashCompleted
// 0x0008 (0x0008 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashCompleted final
{
public:
	class ARBPawn*                                Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashCompleted) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashCompleted");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashCompleted) == 0x000008, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashCompleted");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashCompleted, Pawn) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashCompleted::Pawn' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.OnBashDoAction
// 0x0008 (0x0008 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashDoAction final
{
public:
	class ARBPawn*                                Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashDoAction) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashDoAction");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashDoAction) == 0x000008, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashDoAction");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashDoAction, Pawn) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashDoAction::Pawn' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.OnBashStarting
// 0x0008 (0x0008 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashStarting final
{
public:
	class ARBPawn*                                Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashStarting) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashStarting");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashStarting) == 0x000008, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashStarting");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashStarting, Pawn) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_OnBashStarting::Pawn' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.AttachDoorBlockerSkillItem
// 0x0008 (0x0008 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_AttachDoorBlockerSkillItem final
{
public:
	class ARBDoorBlockerSkillItem*                DoorBlocker;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_AttachDoorBlockerSkillItem) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_AttachDoorBlockerSkillItem");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_AttachDoorBlockerSkillItem) == 0x000008, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_AttachDoorBlockerSkillItem");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_AttachDoorBlockerSkillItem, DoorBlocker) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_AttachDoorBlockerSkillItem::DoorBlocker' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.SetBlockedActor
// 0x0008 (0x0008 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_SetBlockedActor final
{
public:
	class AActor*                                 blockedActor_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_SetBlockedActor) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_SetBlockedActor");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_SetBlockedActor) == 0x000008, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_SetBlockedActor");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_SetBlockedActor, blockedActor_0) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_SetBlockedActor::blockedActor_0' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.SetDoorBlockableOwner
// 0x0008 (0x0008 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_SetDoorBlockableOwner final
{
public:
	class ARBPawn*                                Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_SetDoorBlockableOwner) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_SetDoorBlockableOwner");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_SetDoorBlockableOwner) == 0x000008, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_SetDoorBlockableOwner");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_SetDoorBlockableOwner, Owner_0) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_SetDoorBlockableOwner::Owner_0' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.BndEvt__DoorBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableDestroyed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__DoorBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableDestroyed__DelegateSignature final
{
public:
	class URBDamageableComponent*                 DamageableComponent_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__DoorBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableDestroyed__DelegateSignature) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__DoorBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableDestroyed__DelegateSignature");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__DoorBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableDestroyed__DelegateSignature) == 0x000008, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__DoorBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableDestroyed__DelegateSignature");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__DoorBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableDestroyed__DelegateSignature, DamageableComponent_0) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_BndEvt__DoorBlocker_DoorBlockableActor_BP_DamageableComponent_K2Node_ComponentBoundEvent_1_OnDamageableDestroyed__DelegateSignature::DamageableComponent_0' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.OnPreDestroyed
// 0x0020 (0x0020 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed final
{
public:
	class ARBPawn*                                K2Node_DynamicCast_AsRB_Pawn;                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBDoorBlockerSkill*                    K2Node_DynamicCast_AsRB_Door_Blocker_Skill;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed) == 0x000020, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed, K2Node_DynamicCast_AsRB_Pawn) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed::K2Node_DynamicCast_AsRB_Pawn' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed, K2Node_DynamicCast_AsRB_Door_Blocker_Skill) == 0x000010, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed::K2Node_DynamicCast_AsRB_Door_Blocker_Skill' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_OnPreDestroyed::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.RemoveFromBlockedActor
// 0x0020 (0x0020 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor final
{
public:
	class ARBDoorBlockerPlacementActor*           K2Node_DynamicCast_AsRB_Door_Blocker_Placement_Actor; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBDoor*                                K2Node_DynamicCast_AsRB_Door;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor) == 0x000020, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor, K2Node_DynamicCast_AsRB_Door_Blocker_Placement_Actor) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor::K2Node_DynamicCast_AsRB_Door_Blocker_Placement_Actor' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor, K2Node_DynamicCast_AsRB_Door) == 0x000010, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor::K2Node_DynamicCast_AsRB_Door' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromBlockedActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.RemoveFromWorld
// 0x0001 (0x0001 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromWorld final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromWorld) == 0x000001, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromWorld");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromWorld) == 0x000001, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromWorld");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromWorld, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_RemoveFromWorld::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.AllowSlidingLockInteraction
// 0x0030 (0x0030 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction final
{
public:
	const class ARBSlidingLock*                   SlidingLock;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction) == 0x000030, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction, SlidingLock) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction::SlidingLock' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction, ReturnValue) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction::ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction, CallFunc_GetActorForwardVector_ReturnValue) == 0x00000C, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000018, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction, CallFunc_Dot_VectorVector_ReturnValue) == 0x000024, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_AllowSlidingLockInteraction::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.GetModulatedBashDamage
// 0x0058 (0x0058 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage final
{
public:
	class ARBPawn*                                basher;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BashDamage;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBlockingDoorLockedWithBreakableSlidingLock_out; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBNPC_Big_BP_C*                        K2Node_DynamicCast_AsRB_NPC_Big_BP;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARBPlayer*                              K2Node_DynamicCast_AsRB_Player;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAdversarialRole                              CallFunc_GetAdversarialRole_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNPCRequiredBashCount_RequiredNPCBashCount; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage) == 0x000058, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, basher) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::basher' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, BashDamage) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::BashDamage' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_IsBlockingDoorLockedWithBreakableSlidingLock_out) == 0x00000C, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_IsBlockingDoorLockedWithBreakableSlidingLock_out' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, K2Node_DynamicCast_AsRB_NPC_Big_BP) == 0x000010, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::K2Node_DynamicCast_AsRB_NPC_Big_BP' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, K2Node_DynamicCast_AsRB_Player) == 0x000020, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::K2Node_DynamicCast_AsRB_Player' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_GetAdversarialRole_ReturnValue) == 0x000029, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_GetAdversarialRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_GetNPCRequiredBashCount_RequiredNPCBashCount) == 0x00002C, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_GetNPCRequiredBashCount_RequiredNPCBashCount' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_FCeil_ReturnValue) == 0x00003C, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000040, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000044, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_FMax_ReturnValue) == 0x00004C, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000050, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000054, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetModulatedBashDamage::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.GetPlayerPingWorldLocation
// 0x00B0 (0x00B0 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation final
{
public:
	class ARBPlayer*                              PingOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                OutLocation;                                       // 0x0090(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x009C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation) == 0x0000B0, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation, PingOwner) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation::PingOwner' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation, HitResult) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation::HitResult' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation, OutLocation) == 0x000090, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation::OutLocation' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation, ReturnValue) == 0x00009C, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A0, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetPlayerPingWorldLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.GetNPCRequiredBashCount
// 0x000C (0x000C - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount final
{
public:
	int32                                         RequiredNPCBashCount_0;                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBlockingDoorLockedWithBreakableSlidingLock_out; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount) == 0x000004, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount) == 0x00000C, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount, RequiredNPCBashCount_0) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount::RequiredNPCBashCount_0' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount, CallFunc_IsBlockingDoorLockedWithBreakableSlidingLock_out) == 0x000004, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount::CallFunc_IsBlockingDoorLockedWithBreakableSlidingLock_out' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetNPCRequiredBashCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.IsBlockingDoorLockedWithBreakableSlidingLock
// 0x0018 (0x0018 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock final
{
public:
	bool                                          Out;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARBDoor*                                K2Node_DynamicCast_AsRB_Door;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_IsLockedByBreakableSlidingLock_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock) == 0x000018, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock, Out) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock::Out' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock, K2Node_DynamicCast_AsRB_Door) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock::K2Node_DynamicCast_AsRB_Door' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock, CallFunc_BP_IsLockedByBreakableSlidingLock_ReturnValue) == 0x000011, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_IsBlockingDoorLockedWithBreakableSlidingLock::CallFunc_BP_IsLockedByBreakableSlidingLock_ReturnValue' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.ModulateBashDamage
// 0x0018 (0x0018 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage final
{
public:
	const class ARBPawn*                          Pawn;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         In_damage;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Out_damage;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetModulatedBashDamage_BashDamage;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage) == 0x000018, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage, Pawn) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage::Pawn' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage, In_damage) == 0x000008, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage::In_damage' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage, Out_damage) == 0x00000C, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage::Out_damage' has a wrong offset!");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage, CallFunc_GetModulatedBashDamage_BashDamage) == 0x000010, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_ModulateBashDamage::CallFunc_GetModulatedBashDamage_BashDamage' has a wrong offset!");

// Function VariableSizeBlocker_DoorBlockableActor_BP.VariableSizeBlocker_DoorBlockableActor_BP_C.GetBlockedActor
// 0x0008 (0x0008 - 0x0000)
struct VariableSizeBlocker_DoorBlockableActor_BP_C_GetBlockedActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetBlockedActor) == 0x000008, "Wrong alignment on VariableSizeBlocker_DoorBlockableActor_BP_C_GetBlockedActor");
static_assert(sizeof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetBlockedActor) == 0x000008, "Wrong size on VariableSizeBlocker_DoorBlockableActor_BP_C_GetBlockedActor");
static_assert(offsetof(VariableSizeBlocker_DoorBlockableActor_BP_C_GetBlockedActor, ReturnValue) == 0x000000, "Member 'VariableSizeBlocker_DoorBlockableActor_BP_C_GetBlockedActor::ReturnValue' has a wrong offset!");

}

