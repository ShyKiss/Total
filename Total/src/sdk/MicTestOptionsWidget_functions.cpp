#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MicTestOptionsWidget

#include "Basic.hpp"

#include "MicTestOptionsWidget_classes.hpp"
#include "MicTestOptionsWidget_parameters.hpp"


namespace SDK
{

// Function MicTestOptionsWidget.MicTestOptionsWidget_C.ExecuteUbergraph_MicTestOptionsWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMicTestOptionsWidget_C::ExecuteUbergraph_MicTestOptionsWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "ExecuteUbergraph_MicTestOptionsWidget");

	Params::MicTestOptionsWidget_C_ExecuteUbergraph_MicTestOptionsWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.RefreshValue
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceUpdateSlider                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMicTestOptionsWidget_C::RefreshValue(bool ForceUpdateSlider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "RefreshValue");

	Params::MicTestOptionsWidget_C_RefreshValue Parms{};

	Parms.ForceUpdateSlider = ForceUpdateSlider;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UMicTestOptionsWidget_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "OnRemovedFromFocusPath");

	Params::MicTestOptionsWidget_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.BndEvt__MicTestOptionsWidget_Button_1_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMicTestOptionsWidget_C::BndEvt__MicTestOptionsWidget_Button_1_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "BndEvt__MicTestOptionsWidget_Button_1_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.OnEchoChannelStateChanged
// (Event, Public, BlueprintEvent)

void UMicTestOptionsWidget_C::OnEchoChannelStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "OnEchoChannelStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.DownplayEntry
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMicTestOptionsWidget_C::DownplayEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "DownplayEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.HighlightEntry
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UMicTestOptionsWidget_C::HighlightEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "HighlightEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.BndEvt__MicTestOptionsWidget_Button_1_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UMicTestOptionsWidget_C::BndEvt__MicTestOptionsWidget_Button_1_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "BndEvt__MicTestOptionsWidget_Button_1_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMicTestOptionsWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "Tick");

	Params::MicTestOptionsWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.BndEvt__MicTestOptionsWidget_MicTestButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMicTestOptionsWidget_C::BndEvt__MicTestOptionsWidget_MicTestButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "BndEvt__MicTestOptionsWidget_MicTestButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.GetTestButtonText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UMicTestOptionsWidget_C::GetTestButtonText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "GetTestButtonText");

	Params::MicTestOptionsWidget_C_GetTestButtonText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MicTestOptionsWidget.MicTestOptionsWidget_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UMicTestOptionsWidget_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MicTestOptionsWidget_C", "OnFocusReceived");

	Params::MicTestOptionsWidget_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

